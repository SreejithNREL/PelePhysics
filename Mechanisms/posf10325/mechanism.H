#ifndef MECHANISM_H
#define MECHANISM_H

#include <AMReX_Gpu.H>
#include <AMReX_REAL.H>

/* Elements
0  O
1  H
2  C
3  N
4  Ar
5  He
*/

// Species
#define POSF10325_ID 0
#define C2H4_ID 1
#define CH4_ID 2
#define C3H6_ID 3
#define iC4H8_ID 4
#define C4H81_ID 5
#define H2_ID 6
#define C2H6_ID 7
#define CO_ID 8
#define C6H6_ID 9
#define C2H2_ID 10
#define C6H5CH3_ID 11
#define CH3_ID 12
#define O2_ID 13
#define O_ID 14
#define OH_ID 15
#define HO2_ID 16
#define H2O_ID 17
#define H2O2_ID 18
#define H_ID 19
#define CH2_ID 20
#define CH2D_ID 21
#define HCO_ID 22
#define CH2O_ID 23
#define CH3O_ID 24
#define CO2_ID 25
#define C2H3_ID 26
#define C2H5_ID 27
#define HCCO_ID 28
#define CH2CO_ID 29
#define CH2CHO_ID 30
#define C3H3_ID 31
#define aC3H5_ID 32
#define C5H4O_ID 33
#define C5H5_ID 34
#define C6H5_ID 35
#define C6H5CH2_ID 36
#define C6H5O_ID 37
#define C6H5CO_ID 38
#define C6H5CHO_ID 39
#define N2_ID 40

#define NUM_GAS_ELEMENTS 6    // Elements in the homogeneous phase
#define NUM_GAS_SPECIES 41    // Species in the homogeneous phase
#define NUM_GAS_REACTIONS 202 // Reactions in the homogeneous phase

#define SITE_DENSITY 0.000000E+00 // mol/cm^2

#define NUM_SURFACE_ELEMENTS 0  // Additional elements in heterogeneous phase
#define NUM_SURFACE_SPECIES 0   // Species in the heterogeneous phase
#define NUM_SURFACE_REACTIONS 0 // Reactions in the heterogeneous phase

#define NUM_ELEMENTS (NUM_GAS_ELEMENTS + NUM_SURFACE_ELEMENTS)
#define NUM_SPECIES (NUM_GAS_SPECIES + NUM_SURFACE_SPECIES)
#define NUM_REACTIONS (NUM_GAS_REACTIONS + NUM_SURFACE_REACTIONS)

#define NUM_IONS 0

#define NUM_FIT 4

//  ALWAYS on CPU stuff -- can have different def depending on if we are CPU or
//  GPU based. Defined in mechanism.cpp
void atomicWeight(amrex::Real* awt);
//  MISC
void CKAWT(amrex::Real* awt);
void CKNCF(int* ncf);
void CKSYME_STR(amrex::Vector<std::string>& ename);
void CKSYMS_STR(amrex::Vector<std::string>& kname);
void GET_RMAP(int* _rmap);
void CKINU(const int i, int& nspec, int* ki, int* nu);
void CKKFKR(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real* x,
  amrex::Real* q_f,
  amrex::Real* q_r);
void progressRateFR(
  amrex::Real* q_f, amrex::Real* q_r, amrex::Real* sc, amrex::Real T);
//  SPARSE INFORMATION
void SPARSITY_INFO(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST_SIMPLIFIED(int* nJdata, const int* consP);
void
SPARSITY_PREPROC_CSC(int* rowVals, int* colPtrs, const int* consP, int NCELLS);
void SPARSITY_PREPROC_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSC(
  int* rowVals, int* colPtrs, int* indx, const int* consP);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSR(
  int* colVals, int* rowPtr, const int* consP, int base);

// A few mechanism parameters
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKINDX(int& mm, int& kk, int& ii, int& nfit)
{
  mm = 6;
  kk = 41;
  ii = 202;
  nfit = -1; // Why do you need this anyway ?
}

//  inverse molecular weights
#ifdef AMREX_USE_GPU
AMREX_GPU_CONSTANT const amrex::Real global_imw[41] = {
  0.0064810074077915, // POSF10325
  0.0356455407428531, // C2H4
  0.0623324814560868, // CH4
  0.0237636938285687, // C3H6
  0.0178227703714265, // iC4H8
  0.0178227703714265, // C4H81
  0.4960317460317460, // H2
  0.0332557366145660, // C2H6
  0.0357015351660121, // CO
  0.0128018024937911, // C6H6
  0.0384054074813734, // C2H2
  0.0108529319195581, // C6H5CH3
  0.0665114732291320, // CH3
  0.0312519532470779, // O2
  0.0625039064941559, // O
  0.0587993179279120, // OH
  0.0302975216627280, // HO2
  0.0555092978073827, // H2O
  0.0293996589639560, // H2O2
  0.9920634920634921, // H
  0.0712910814857061, // CH2
  0.0712910814857061, // CH2*
  0.0344613688055690, // HCO
  0.0333044694598015, // CH2O
  0.0322227234645872, // CH3O
  0.0227226249176305, // CO2
  0.0369740442209569, // C2H3
  0.0344091941366733, // C2H5
  0.0243730044602598, // HCCO
  0.0237885672145967, // CH2CO
  0.0232315019165989, // CH2CHO
  0.0256036049875823, // C3H3
  0.0243468945535997, // aC3H5
  0.0124865769298005, // C5H4O
  0.0153621629925494, // C5H5
  0.0129691593390916, // C6H5
  0.0109729735661067, // C6H5CH2
  0.0107405617313786, // C6H5O
  0.0095132995928308, // C6H5CO
  0.0094229392031963, // C6H5CHO
  0.0356964374955379, // N2
};
#endif
const amrex::Real h_global_imw[41] = {
  0.0064810074077915, // POSF10325
  0.0356455407428531, // C2H4
  0.0623324814560868, // CH4
  0.0237636938285687, // C3H6
  0.0178227703714265, // iC4H8
  0.0178227703714265, // C4H81
  0.4960317460317460, // H2
  0.0332557366145660, // C2H6
  0.0357015351660121, // CO
  0.0128018024937911, // C6H6
  0.0384054074813734, // C2H2
  0.0108529319195581, // C6H5CH3
  0.0665114732291320, // CH3
  0.0312519532470779, // O2
  0.0625039064941559, // O
  0.0587993179279120, // OH
  0.0302975216627280, // HO2
  0.0555092978073827, // H2O
  0.0293996589639560, // H2O2
  0.9920634920634921, // H
  0.0712910814857061, // CH2
  0.0712910814857061, // CH2*
  0.0344613688055690, // HCO
  0.0333044694598015, // CH2O
  0.0322227234645872, // CH3O
  0.0227226249176305, // CO2
  0.0369740442209569, // C2H3
  0.0344091941366733, // C2H5
  0.0243730044602598, // HCCO
  0.0237885672145967, // CH2CO
  0.0232315019165989, // CH2CHO
  0.0256036049875823, // C3H3
  0.0243468945535997, // aC3H5
  0.0124865769298005, // C5H4O
  0.0153621629925494, // C5H5
  0.0129691593390916, // C6H5
  0.0109729735661067, // C6H5CH2
  0.0107405617313786, // C6H5O
  0.0095132995928308, // C6H5CO
  0.0094229392031963, // C6H5CHO
  0.0356964374955379, // N2
};

//  molecular weights
#ifdef AMREX_USE_GPU
AMREX_GPU_CONSTANT const amrex::Real global_mw[41] = {
  154.297000, // POSF10325
  28.054000,  // C2H4
  16.043000,  // CH4
  42.081000,  // C3H6
  56.108000,  // iC4H8
  56.108000,  // C4H81
  2.016000,   // H2
  30.070000,  // C2H6
  28.010000,  // CO
  78.114000,  // C6H6
  26.038000,  // C2H2
  92.141000,  // C6H5CH3
  15.035000,  // CH3
  31.998000,  // O2
  15.999000,  // O
  17.007000,  // OH
  33.006000,  // HO2
  18.015000,  // H2O
  34.014000,  // H2O2
  1.008000,   // H
  14.027000,  // CH2
  14.027000,  // CH2*
  29.018000,  // HCO
  30.026000,  // CH2O
  31.034000,  // CH3O
  44.009000,  // CO2
  27.046000,  // C2H3
  29.062000,  // C2H5
  41.029000,  // HCCO
  42.037000,  // CH2CO
  43.045000,  // CH2CHO
  39.057000,  // C3H3
  41.073000,  // aC3H5
  80.086000,  // C5H4O
  65.095000,  // C5H5
  77.106000,  // C6H5
  91.133000,  // C6H5CH2
  93.105000,  // C6H5O
  105.116000, // C6H5CO
  106.124000, // C6H5CHO
  28.014000,  // N2
};
#endif
const amrex::Real h_global_mw[41] = {
  154.297000, // POSF10325
  28.054000,  // C2H4
  16.043000,  // CH4
  42.081000,  // C3H6
  56.108000,  // iC4H8
  56.108000,  // C4H81
  2.016000,   // H2
  30.070000,  // C2H6
  28.010000,  // CO
  78.114000,  // C6H6
  26.038000,  // C2H2
  92.141000,  // C6H5CH3
  15.035000,  // CH3
  31.998000,  // O2
  15.999000,  // O
  17.007000,  // OH
  33.006000,  // HO2
  18.015000,  // H2O
  34.014000,  // H2O2
  1.008000,   // H
  14.027000,  // CH2
  14.027000,  // CH2*
  29.018000,  // HCO
  30.026000,  // CH2O
  31.034000,  // CH3O
  44.009000,  // CO2
  27.046000,  // C2H3
  29.062000,  // C2H5
  41.029000,  // HCCO
  42.037000,  // CH2CO
  43.045000,  // CH2CHO
  39.057000,  // C3H3
  41.073000,  // aC3H5
  80.086000,  // C5H4O
  65.095000,  // C5H5
  77.106000,  // C6H5
  91.133000,  // C6H5CH2
  93.105000,  // C6H5O
  105.116000, // C6H5CO
  106.124000, // C6H5CHO
  28.014000,  // N2
};

//  inverse molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_imw(amrex::Real* imw_new)
{
  imw_new[0] = 0.0064810074077915;  // POSF10325
  imw_new[1] = 0.0356455407428531;  // C2H4
  imw_new[2] = 0.0623324814560868;  // CH4
  imw_new[3] = 0.0237636938285687;  // C3H6
  imw_new[4] = 0.0178227703714265;  // iC4H8
  imw_new[5] = 0.0178227703714265;  // C4H81
  imw_new[6] = 0.4960317460317460;  // H2
  imw_new[7] = 0.0332557366145660;  // C2H6
  imw_new[8] = 0.0357015351660121;  // CO
  imw_new[9] = 0.0128018024937911;  // C6H6
  imw_new[10] = 0.0384054074813734; // C2H2
  imw_new[11] = 0.0108529319195581; // C6H5CH3
  imw_new[12] = 0.0665114732291320; // CH3
  imw_new[13] = 0.0312519532470779; // O2
  imw_new[14] = 0.0625039064941559; // O
  imw_new[15] = 0.0587993179279120; // OH
  imw_new[16] = 0.0302975216627280; // HO2
  imw_new[17] = 0.0555092978073827; // H2O
  imw_new[18] = 0.0293996589639560; // H2O2
  imw_new[19] = 0.9920634920634921; // H
  imw_new[20] = 0.0712910814857061; // CH2
  imw_new[21] = 0.0712910814857061; // CH2*
  imw_new[22] = 0.0344613688055690; // HCO
  imw_new[23] = 0.0333044694598015; // CH2O
  imw_new[24] = 0.0322227234645872; // CH3O
  imw_new[25] = 0.0227226249176305; // CO2
  imw_new[26] = 0.0369740442209569; // C2H3
  imw_new[27] = 0.0344091941366733; // C2H5
  imw_new[28] = 0.0243730044602598; // HCCO
  imw_new[29] = 0.0237885672145967; // CH2CO
  imw_new[30] = 0.0232315019165989; // CH2CHO
  imw_new[31] = 0.0256036049875823; // C3H3
  imw_new[32] = 0.0243468945535997; // aC3H5
  imw_new[33] = 0.0124865769298005; // C5H4O
  imw_new[34] = 0.0153621629925494; // C5H5
  imw_new[35] = 0.0129691593390916; // C6H5
  imw_new[36] = 0.0109729735661067; // C6H5CH2
  imw_new[37] = 0.0107405617313786; // C6H5O
  imw_new[38] = 0.0095132995928308; // C6H5CO
  imw_new[39] = 0.0094229392031963; // C6H5CHO
  imw_new[40] = 0.0356964374955379; // N2
}

//  inverse molecular weight
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::Real
imw(const int n)
{
#if AMREX_DEVICE_COMPILE
  return global_imw[n];
#else
  return h_global_imw[n];
#endif
}
//  molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_mw(amrex::Real* mw_new)
{
  mw_new[0] = 154.297000;  // POSF10325
  mw_new[1] = 28.054000;   // C2H4
  mw_new[2] = 16.043000;   // CH4
  mw_new[3] = 42.081000;   // C3H6
  mw_new[4] = 56.108000;   // iC4H8
  mw_new[5] = 56.108000;   // C4H81
  mw_new[6] = 2.016000;    // H2
  mw_new[7] = 30.070000;   // C2H6
  mw_new[8] = 28.010000;   // CO
  mw_new[9] = 78.114000;   // C6H6
  mw_new[10] = 26.038000;  // C2H2
  mw_new[11] = 92.141000;  // C6H5CH3
  mw_new[12] = 15.035000;  // CH3
  mw_new[13] = 31.998000;  // O2
  mw_new[14] = 15.999000;  // O
  mw_new[15] = 17.007000;  // OH
  mw_new[16] = 33.006000;  // HO2
  mw_new[17] = 18.015000;  // H2O
  mw_new[18] = 34.014000;  // H2O2
  mw_new[19] = 1.008000;   // H
  mw_new[20] = 14.027000;  // CH2
  mw_new[21] = 14.027000;  // CH2*
  mw_new[22] = 29.018000;  // HCO
  mw_new[23] = 30.026000;  // CH2O
  mw_new[24] = 31.034000;  // CH3O
  mw_new[25] = 44.009000;  // CO2
  mw_new[26] = 27.046000;  // C2H3
  mw_new[27] = 29.062000;  // C2H5
  mw_new[28] = 41.029000;  // HCCO
  mw_new[29] = 42.037000;  // CH2CO
  mw_new[30] = 43.045000;  // CH2CHO
  mw_new[31] = 39.057000;  // C3H3
  mw_new[32] = 41.073000;  // aC3H5
  mw_new[33] = 80.086000;  // C5H4O
  mw_new[34] = 65.095000;  // C5H5
  mw_new[35] = 77.106000;  // C6H5
  mw_new[36] = 91.133000;  // C6H5CH2
  mw_new[37] = 93.105000;  // C6H5O
  mw_new[38] = 105.116000; // C6H5CO
  mw_new[39] = 106.124000; // C6H5CHO
  mw_new[40] = 28.014000;  // N2
}

//  molecular weight
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::Real
mw(const int n)
{
#if AMREX_DEVICE_COMPILE
  return global_mw[n];
#else
  return h_global_mw[n];
#endif
}

//  Returns R, Rc, Patm
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRP(amrex::Real& ru, amrex::Real& ruc, amrex::Real& pa)
{
  ru = 8.31446261815324e+07;
  ruc = 1.98721558317399615845;
  pa = 1.01325e+06;
}

// compute Cv/R at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cv_R(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: POSF10325
    species[0] = +1.57855180e+00 + 7.26248320e-02 * T + 7.32363700e-05 * T2 -
                 1.51154440e-07 * T3 + 6.89355790e-11 * T4;
    // species 1: C2H4
    species[1] = +2.95920148e+00 - 7.57052247e-03 * T + 5.70990292e-05 * T2 -
                 6.91588753e-08 * T3 + 2.69884373e-11 * T4;
    // species 2: CH4
    species[2] = +4.14987613e+00 - 1.36709788e-02 * T + 4.91800599e-05 * T2 -
                 4.84743026e-08 * T3 + 1.66693956e-11 * T4;
    // species 3: C3H6
    species[3] = +4.93307000e-01 + 2.09251800e-02 * T + 4.48679400e-06 * T2 -
                 1.66891200e-08 * T3 + 7.15814600e-12 * T4;
    // species 4: iC4H8
    species[4] = +1.64714050e+00 + 2.59029570e-02 * T + 8.19853540e-06 * T2 -
                 2.21932590e-08 * T3 + 8.89585800e-12 * T4;
    // species 5: C4H81
    species[5] = +1.81138000e-01 + 3.08533800e-02 * T + 5.08652470e-06 * T2 -
                 2.46548880e-08 * T3 + 1.11101930e-11 * T4;
    // species 6: H2
    species[6] = +1.34433112e+00 + 7.98052075e-03 * T - 1.94781510e-05 * T2 +
                 2.01572094e-08 * T3 - 7.37611761e-12 * T4;
    // species 7: C2H6
    species[7] = +3.29142492e+00 - 5.50154270e-03 * T + 5.99438288e-05 * T2 -
                 7.08466285e-08 * T3 + 2.68685771e-11 * T4;
    // species 8: CO
    species[8] = +2.57953347e+00 - 6.10353680e-04 * T + 1.01681433e-06 * T2 +
                 9.07005884e-10 * T3 - 9.04424499e-13 * T4;
    // species 9: C6H6
    species[9] = -5.84377340e+00 + 5.84276130e-02 * T - 2.94858550e-05 * T2 -
                 6.93904400e-09 * T3 + 8.21252530e-12 * T4;
    // species 10: C2H2
    species[10] = -1.91318906e-01 + 2.33615629e-02 * T - 3.55171815e-05 * T2 +
                  2.80152437e-08 * T3 - 8.50072974e-12 * T4;
    // species 11: C6H5CH3
    species[11] = +6.15266300e-01 + 2.10994380e-02 * T + 8.53660180e-05 * T2 -
                  1.32610660e-07 * T3 + 5.59566040e-11 * T4;
    // species 12: CH3
    species[12] = +2.67359040e+00 + 2.01095175e-03 * T + 5.73021856e-06 * T2 -
                  6.87117425e-09 * T3 + 2.54385734e-12 * T4;
    // species 13: O2
    species[13] = +2.78245636e+00 - 2.99673416e-03 * T + 9.84730201e-06 * T2 -
                  9.68129509e-09 * T3 + 3.24372837e-12 * T4;
    // species 14: O
    species[14] = +2.16826710e+00 - 3.27931884e-03 * T + 6.64306396e-06 * T2 -
                  6.12806624e-09 * T3 + 2.11265971e-12 * T4;
    // species 15: OH
    species[15] = +3.12530561e+00 - 3.22544939e-03 * T + 6.52764691e-06 * T2 -
                  5.79853643e-09 * T3 + 2.06237379e-12 * T4;
    // species 16: HO2
    species[16] = +3.30179801e+00 - 4.74912051e-03 * T + 2.11582891e-05 * T2 -
                  2.42763894e-08 * T3 + 9.29225124e-12 * T4;
    // species 17: H2O
    species[17] = +3.19864056e+00 - 2.03643410e-03 * T + 6.52040211e-06 * T2 -
                  5.48797062e-09 * T3 + 1.77197817e-12 * T4;
    // species 18: H2O2
    species[18] = +3.27611269e+00 - 5.42822417e-04 * T + 1.67335701e-05 * T2 -
                  2.15770813e-08 * T3 + 8.62454363e-12 * T4;
    // species 19: H
    species[19] = +1.50000000e+00 + 7.05332819e-13 * T - 1.99591964e-15 * T2 +
                  2.30081632e-18 * T3 - 9.27732332e-22 * T4;
    // species 20: CH2
    species[20] = +2.76267867e+00 + 9.68872143e-04 * T + 2.79489841e-06 * T2 -
                  3.85091153e-09 * T3 + 1.68741719e-12 * T4;
    // species 21: CH2*
    species[21] = +3.19860411e+00 - 2.36661419e-03 * T + 8.23296220e-06 * T2 -
                  6.68815981e-09 * T3 + 1.94314737e-12 * T4;
    // species 22: HCO
    species[22] = +3.22118584e+00 - 3.24392532e-03 * T + 1.37799446e-05 * T2 -
                  1.33144093e-08 * T3 + 4.33768865e-12 * T4;
    // species 23: CH2O
    species[23] = +3.79372315e+00 - 9.90833369e-03 * T + 3.73220008e-05 * T2 -
                  3.79285261e-08 * T3 + 1.31772652e-11 * T4;
    // species 24: CH3O
    species[24] = +2.71180502e+00 - 2.80463306e-03 * T + 3.76550971e-05 * T2 -
                  4.73072089e-08 * T3 + 1.86588420e-11 * T4;
    // species 25: CO2
    species[25] = +1.35677352e+00 + 8.98459677e-03 * T - 7.12356269e-06 * T2 +
                  2.45919022e-09 * T3 - 1.43699548e-13 * T4;
    // species 26: C2H3
    species[26] = +2.21246645e+00 + 1.51479162e-03 * T + 2.59209412e-05 * T2 -
                  3.57657847e-08 * T3 + 1.47150873e-11 * T4;
    // species 27: C2H5
    species[27] = +3.30646568e+00 - 4.18658892e-03 * T + 4.97142807e-05 * T2 -
                  5.99126606e-08 * T3 + 2.30509004e-11 * T4;
    // species 28: HCCO
    species[28] = +1.25172140e+00 + 1.76550210e-02 * T - 2.37291010e-05 * T2 +
                  1.72757590e-08 * T3 - 5.06648110e-12 * T4;
    // species 29: CH2CO
    species[29] = +1.13583630e+00 + 1.81188721e-02 * T - 1.73947474e-05 * T2 +
                  9.34397568e-09 * T3 - 2.01457615e-12 * T4;
    // species 30: CH2CHO
    species[30] = +2.40906240e+00 + 1.07385740e-02 * T + 1.89149250e-06 * T2 -
                  7.15858310e-09 * T3 + 2.86738510e-12 * T4;
    // species 31: C3H3
    species[31] = +3.51109270e-01 + 3.27411223e-02 * T - 4.73827135e-05 * T2 +
                  3.76309808e-08 * T3 - 1.18540923e-11 * T4;
    // species 32: aC3H5
    species[32] = +3.63183500e-01 + 1.98138210e-02 * T + 1.24970600e-05 * T2 -
                  3.33555550e-08 * T3 + 1.58465710e-11 * T4;
    // species 33: C5H4O
    species[33] = -7.35423503e-01 + 3.34873827e-02 * T + 1.67738470e-06 * T2 -
                  2.96207455e-08 * T3 + 1.54431476e-11 * T4;
    // species 34: C5H5
    species[34] = -1.65017800e-02 + 3.36514760e-02 * T - 1.10541810e-07 * T2 -
                  3.67433940e-08 * T3 + 2.31411840e-11 * T4;
    // species 35: C6H5
    species[35] = -4.69314530e+00 + 5.21789680e-02 * T - 2.55584270e-05 * T2 -
                  7.06611210e-09 * T3 + 7.58339750e-12 * T4;
    // species 36: C6H5CH2
    species[36] = -5.18884600e-01 + 3.85128320e-02 * T + 3.28614920e-05 * T2 -
                  7.69727210e-08 * T3 + 3.54230680e-11 * T4;
    // species 37: C6H5O
    species[37] = -1.46620445e+00 + 4.13443975e-02 * T + 1.32412991e-05 * T2 -
                  5.72872769e-08 * T3 + 2.89763707e-11 * T4;
    // species 38: C6H5CO
    species[38] = -3.02511550e+00 + 6.15125410e-02 * T - 3.16036530e-05 * T2 -
                  6.97245990e-09 * T3 + 7.98351490e-12 * T4;
    // species 39: C6H5CHO
    species[39] = -4.16273340e+00 + 6.63692450e-02 * T - 3.48163530e-05 * T2 -
                  6.29993770e-09 * T3 + 8.58071010e-12 * T4;
    // species 40: N2
    species[40] = +2.29867700e+00 + 1.40824040e-03 * T - 3.96322200e-06 * T2 +
                  5.64151500e-09 * T3 - 2.44485400e-12 * T4;
  } else {
    // species 0: POSF10325
    species[0] = +2.03578910e+01 + 6.65890870e-02 * T - 2.59674690e-05 * T2 +
                 4.47750010e-09 * T3 - 2.36071520e-13 * T4;
    // species 1: C2H4
    species[1] = +1.03611116e+00 + 1.46454151e-02 * T - 6.71077915e-06 * T2 +
                 1.47222923e-09 * T3 - 1.25706061e-13 * T4;
    // species 2: CH4
    species[2] = -9.25148505e-01 + 1.33909467e-02 * T - 5.73285809e-06 * T2 +
                 1.22292535e-09 * T3 - 1.01815230e-13 * T4;
    // species 3: C3H6
    species[3] = +5.73225700e+00 + 1.49083400e-02 * T - 4.94989900e-06 * T2 +
                 7.21202200e-10 * T3 - 3.76620400e-14 * T4;
    // species 4: iC4H8
    species[4] = +3.46094700e+00 + 2.96114870e-02 * T - 1.30771290e-05 * T2 +
                 2.65719340e-09 * T3 - 2.01347130e-13 * T4;
    // species 5: C4H81
    species[5] = +1.05358410e+00 + 3.43505070e-02 * T - 1.58831970e-05 * T2 +
                 3.30896620e-09 * T3 - 2.53610450e-13 * T4;
    // species 6: H2
    species[6] = +2.33727920e+00 - 4.94024731e-05 * T + 4.99456778e-07 * T2 -
                 1.79566394e-10 * T3 + 2.00255376e-14 * T4;
    // species 7: C2H6
    species[7] = +7.18815000e-02 + 2.16852677e-02 * T - 1.00256067e-05 * T2 +
                 2.21412001e-09 * T3 - 1.90002890e-13 * T4;
    // species 8: CO
    species[8] = +1.71518561e+00 + 2.06252743e-03 * T - 9.98825771e-07 * T2 +
                 2.30053008e-10 * T3 - 2.03647716e-14 * T4;
    // species 9: C6H6
    species[9] = +8.13812450e+00 + 2.38544330e-02 * T - 8.81277260e-06 * T2 +
                 1.20990210e-09 * T3 - 1.82215030e-14 * T4;
    // species 10: C2H2
    species[10] = +3.14756964e+00 + 5.96166664e-03 * T - 2.37294852e-06 * T2 +
                  4.67412171e-10 * T3 - 3.61235213e-14 * T4;
    // species 11: C6H5CH3
    species[11] = +1.19400340e+01 + 2.66912870e-02 * T - 9.68385050e-06 * T2 +
                  1.57386290e-09 * T3 - 9.46636010e-14 * T4;
    // species 12: CH3
    species[12] = +1.28571772e+00 + 7.23990037e-03 * T - 2.98714348e-06 * T2 +
                  5.95684644e-10 * T3 - 4.67154394e-14 * T4;
    // species 13: O2
    species[13] = +2.28253784e+00 + 1.48308754e-03 * T - 7.57966669e-07 * T2 +
                  2.09470555e-10 * T3 - 2.16717794e-14 * T4;
    // species 14: O
    species[14] = +1.56942078e+00 - 8.59741137e-05 * T + 4.19484589e-08 * T2 -
                  1.00177799e-11 * T3 + 1.22833691e-15 * T4;
    // species 15: OH
    species[15] = +1.86472886e+00 + 1.05650448e-03 * T - 2.59082758e-07 * T2 +
                  3.05218674e-11 * T3 - 1.33195876e-15 * T4;
    // species 16: HO2
    species[16] = +3.01721090e+00 + 2.23982013e-03 * T - 6.33658150e-07 * T2 +
                  1.14246370e-10 * T3 - 1.07908535e-14 * T4;
    // species 17: H2O
    species[17] = +2.03399249e+00 + 2.17691804e-03 * T - 1.64072518e-07 * T2 -
                  9.70419870e-11 * T3 + 1.68200992e-14 * T4;
    // species 18: H2O2
    species[18] = +3.16500285e+00 + 4.90831694e-03 * T - 1.90139225e-06 * T2 +
                  3.71185986e-10 * T3 - 2.87908305e-14 * T4;
    // species 19: H
    species[19] = +1.50000001e+00 - 2.30842973e-11 * T + 1.61561948e-14 * T2 -
                  4.73515235e-18 * T3 + 4.98197357e-22 * T4;
    // species 20: CH2
    species[20] = +1.87410113e+00 + 3.65639292e-03 * T - 1.40894597e-06 * T2 +
                  2.60179549e-10 * T3 - 1.87727567e-14 * T4;
    // species 21: CH2*
    species[21] = +1.29203842e+00 + 4.65588637e-03 * T - 2.01191947e-06 * T2 +
                  4.17906000e-10 * T3 - 3.39716365e-14 * T4;
    // species 22: HCO
    species[22] = +1.77217438e+00 + 4.95695526e-03 * T - 2.48445613e-06 * T2 +
                  5.89161778e-10 * T3 - 5.33508711e-14 * T4;
    // species 23: CH2O
    species[23] = +7.60690080e-01 + 9.20000082e-03 * T - 4.42258813e-06 * T2 +
                  1.00641212e-09 * T3 - 8.83855640e-14 * T4;
    // species 24: CH3O
    species[24] = +3.75779238e+00 + 7.44142474e-03 * T - 2.69705176e-06 * T2 +
                  4.38090504e-10 * T3 - 2.63537098e-14 * T4;
    // species 25: CO2
    species[25] = +2.85746029e+00 + 4.41437026e-03 * T - 2.21481404e-06 * T2 +
                  5.23490188e-10 * T3 - 4.72084164e-14 * T4;
    // species 26: C2H3
    species[26] = +2.01672400e+00 + 1.03302292e-02 * T - 4.68082349e-06 * T2 +
                  1.01763288e-09 * T3 - 8.62607041e-14 * T4;
    // species 27: C2H5
    species[27] = +9.54656420e-01 + 1.73972722e-02 * T - 7.98206668e-06 * T2 +
                  1.75217689e-09 * T3 - 1.49641576e-13 * T4;
    // species 28: HCCO
    species[28] = +4.62820580e+00 + 4.08534010e-03 * T - 1.59345470e-06 * T2 +
                  2.86260520e-10 * T3 - 1.94078320e-14 * T4;
    // species 29: CH2CO
    species[29] = +3.51129732e+00 + 9.00359745e-03 * T - 4.16939635e-06 * T2 +
                  9.23345882e-10 * T3 - 7.94838201e-14 * T4;
    // species 30: CH2CHO
    species[30] = +4.97566990e+00 + 8.13059140e-03 * T - 2.74362450e-06 * T2 +
                  4.07030410e-10 * T3 - 2.17601710e-14 * T4;
    // species 31: C3H3
    species[31] = +6.14221880e+00 + 7.61902005e-03 * T - 2.67459950e-06 * T2 +
                  4.24914801e-10 * T3 - 2.51475415e-14 * T4;
    // species 32: aC3H5
    species[32] = +5.50078770e+00 + 1.43247310e-02 * T - 5.67816320e-06 * T2 +
                  1.10808010e-09 * T3 - 9.03638870e-14 * T4;
    // species 33: C5H4O
    species[33] = +9.08068240e+00 + 1.61143465e-02 * T - 5.83314509e-06 * T2 +
                  9.46759320e-10 * T3 - 5.68972206e-14 * T4;
    // species 34: C5H5
    species[34] = +6.47439380e+00 + 1.60127330e-02 * T - 6.48231480e-09 * T2 -
                  3.58197030e-09 * T3 + 9.23650710e-13 * T4;
    // species 35: C6H5
    species[35] = +7.59731100e+00 + 2.22416300e-02 * T - 8.71999780e-06 * T2 +
                  1.37887850e-09 * T3 - 5.31460560e-14 * T4;
    // species 36: C6H5CH2
    species[36] = +1.30439800e+01 + 2.34938730e-02 * T - 8.53753670e-06 * T2 +
                  1.38908410e-09 * T3 - 8.36144200e-14 * T4;
    // species 37: C6H5O
    species[37] = +1.27221720e+01 + 1.74688771e-02 * T - 6.35504520e-06 * T2 +
                  1.03492308e-09 * T3 - 6.23410504e-14 * T4;
    // species 38: C6H5CO
    species[38] = +1.23744090e+01 + 2.39992890e-02 * T - 1.04657240e-05 * T2 +
                  2.16691310e-09 * T3 - 1.80070450e-13 * T4;
    // species 39: C6H5CHO
    species[39] = +1.26507370e+01 + 2.56804190e-02 * T - 1.04667290e-05 * T2 +
                  1.94134300e-09 * T3 - 1.34837920e-13 * T4;
    // species 40: N2
    species[40] = +1.92664000e+00 + 1.48797680e-03 * T - 5.68476000e-07 * T2 +
                  1.00970380e-10 * T3 - 6.75335100e-15 * T4;
  }
}

// compute Cp/R at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cp_R(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: POSF10325
    species[0] = +2.57855180e+00 + 7.26248320e-02 * T + 7.32363700e-05 * T2 -
                 1.51154440e-07 * T3 + 6.89355790e-11 * T4;
    // species 1: C2H4
    species[1] = +3.95920148e+00 - 7.57052247e-03 * T + 5.70990292e-05 * T2 -
                 6.91588753e-08 * T3 + 2.69884373e-11 * T4;
    // species 2: CH4
    species[2] = +5.14987613e+00 - 1.36709788e-02 * T + 4.91800599e-05 * T2 -
                 4.84743026e-08 * T3 + 1.66693956e-11 * T4;
    // species 3: C3H6
    species[3] = +1.49330700e+00 + 2.09251800e-02 * T + 4.48679400e-06 * T2 -
                 1.66891200e-08 * T3 + 7.15814600e-12 * T4;
    // species 4: iC4H8
    species[4] = +2.64714050e+00 + 2.59029570e-02 * T + 8.19853540e-06 * T2 -
                 2.21932590e-08 * T3 + 8.89585800e-12 * T4;
    // species 5: C4H81
    species[5] = +1.18113800e+00 + 3.08533800e-02 * T + 5.08652470e-06 * T2 -
                 2.46548880e-08 * T3 + 1.11101930e-11 * T4;
    // species 6: H2
    species[6] = +2.34433112e+00 + 7.98052075e-03 * T - 1.94781510e-05 * T2 +
                 2.01572094e-08 * T3 - 7.37611761e-12 * T4;
    // species 7: C2H6
    species[7] = +4.29142492e+00 - 5.50154270e-03 * T + 5.99438288e-05 * T2 -
                 7.08466285e-08 * T3 + 2.68685771e-11 * T4;
    // species 8: CO
    species[8] = +3.57953347e+00 - 6.10353680e-04 * T + 1.01681433e-06 * T2 +
                 9.07005884e-10 * T3 - 9.04424499e-13 * T4;
    // species 9: C6H6
    species[9] = -4.84377340e+00 + 5.84276130e-02 * T - 2.94858550e-05 * T2 -
                 6.93904400e-09 * T3 + 8.21252530e-12 * T4;
    // species 10: C2H2
    species[10] = +8.08681094e-01 + 2.33615629e-02 * T - 3.55171815e-05 * T2 +
                  2.80152437e-08 * T3 - 8.50072974e-12 * T4;
    // species 11: C6H5CH3
    species[11] = +1.61526630e+00 + 2.10994380e-02 * T + 8.53660180e-05 * T2 -
                  1.32610660e-07 * T3 + 5.59566040e-11 * T4;
    // species 12: CH3
    species[12] = +3.67359040e+00 + 2.01095175e-03 * T + 5.73021856e-06 * T2 -
                  6.87117425e-09 * T3 + 2.54385734e-12 * T4;
    // species 13: O2
    species[13] = +3.78245636e+00 - 2.99673416e-03 * T + 9.84730201e-06 * T2 -
                  9.68129509e-09 * T3 + 3.24372837e-12 * T4;
    // species 14: O
    species[14] = +3.16826710e+00 - 3.27931884e-03 * T + 6.64306396e-06 * T2 -
                  6.12806624e-09 * T3 + 2.11265971e-12 * T4;
    // species 15: OH
    species[15] = +4.12530561e+00 - 3.22544939e-03 * T + 6.52764691e-06 * T2 -
                  5.79853643e-09 * T3 + 2.06237379e-12 * T4;
    // species 16: HO2
    species[16] = +4.30179801e+00 - 4.74912051e-03 * T + 2.11582891e-05 * T2 -
                  2.42763894e-08 * T3 + 9.29225124e-12 * T4;
    // species 17: H2O
    species[17] = +4.19864056e+00 - 2.03643410e-03 * T + 6.52040211e-06 * T2 -
                  5.48797062e-09 * T3 + 1.77197817e-12 * T4;
    // species 18: H2O2
    species[18] = +4.27611269e+00 - 5.42822417e-04 * T + 1.67335701e-05 * T2 -
                  2.15770813e-08 * T3 + 8.62454363e-12 * T4;
    // species 19: H
    species[19] = +2.50000000e+00 + 7.05332819e-13 * T - 1.99591964e-15 * T2 +
                  2.30081632e-18 * T3 - 9.27732332e-22 * T4;
    // species 20: CH2
    species[20] = +3.76267867e+00 + 9.68872143e-04 * T + 2.79489841e-06 * T2 -
                  3.85091153e-09 * T3 + 1.68741719e-12 * T4;
    // species 21: CH2*
    species[21] = +4.19860411e+00 - 2.36661419e-03 * T + 8.23296220e-06 * T2 -
                  6.68815981e-09 * T3 + 1.94314737e-12 * T4;
    // species 22: HCO
    species[22] = +4.22118584e+00 - 3.24392532e-03 * T + 1.37799446e-05 * T2 -
                  1.33144093e-08 * T3 + 4.33768865e-12 * T4;
    // species 23: CH2O
    species[23] = +4.79372315e+00 - 9.90833369e-03 * T + 3.73220008e-05 * T2 -
                  3.79285261e-08 * T3 + 1.31772652e-11 * T4;
    // species 24: CH3O
    species[24] = +3.71180502e+00 - 2.80463306e-03 * T + 3.76550971e-05 * T2 -
                  4.73072089e-08 * T3 + 1.86588420e-11 * T4;
    // species 25: CO2
    species[25] = +2.35677352e+00 + 8.98459677e-03 * T - 7.12356269e-06 * T2 +
                  2.45919022e-09 * T3 - 1.43699548e-13 * T4;
    // species 26: C2H3
    species[26] = +3.21246645e+00 + 1.51479162e-03 * T + 2.59209412e-05 * T2 -
                  3.57657847e-08 * T3 + 1.47150873e-11 * T4;
    // species 27: C2H5
    species[27] = +4.30646568e+00 - 4.18658892e-03 * T + 4.97142807e-05 * T2 -
                  5.99126606e-08 * T3 + 2.30509004e-11 * T4;
    // species 28: HCCO
    species[28] = +2.25172140e+00 + 1.76550210e-02 * T - 2.37291010e-05 * T2 +
                  1.72757590e-08 * T3 - 5.06648110e-12 * T4;
    // species 29: CH2CO
    species[29] = +2.13583630e+00 + 1.81188721e-02 * T - 1.73947474e-05 * T2 +
                  9.34397568e-09 * T3 - 2.01457615e-12 * T4;
    // species 30: CH2CHO
    species[30] = +3.40906240e+00 + 1.07385740e-02 * T + 1.89149250e-06 * T2 -
                  7.15858310e-09 * T3 + 2.86738510e-12 * T4;
    // species 31: C3H3
    species[31] = +1.35110927e+00 + 3.27411223e-02 * T - 4.73827135e-05 * T2 +
                  3.76309808e-08 * T3 - 1.18540923e-11 * T4;
    // species 32: aC3H5
    species[32] = +1.36318350e+00 + 1.98138210e-02 * T + 1.24970600e-05 * T2 -
                  3.33555550e-08 * T3 + 1.58465710e-11 * T4;
    // species 33: C5H4O
    species[33] = +2.64576497e-01 + 3.34873827e-02 * T + 1.67738470e-06 * T2 -
                  2.96207455e-08 * T3 + 1.54431476e-11 * T4;
    // species 34: C5H5
    species[34] = +9.83498220e-01 + 3.36514760e-02 * T - 1.10541810e-07 * T2 -
                  3.67433940e-08 * T3 + 2.31411840e-11 * T4;
    // species 35: C6H5
    species[35] = -3.69314530e+00 + 5.21789680e-02 * T - 2.55584270e-05 * T2 -
                  7.06611210e-09 * T3 + 7.58339750e-12 * T4;
    // species 36: C6H5CH2
    species[36] = +4.81115400e-01 + 3.85128320e-02 * T + 3.28614920e-05 * T2 -
                  7.69727210e-08 * T3 + 3.54230680e-11 * T4;
    // species 37: C6H5O
    species[37] = -4.66204455e-01 + 4.13443975e-02 * T + 1.32412991e-05 * T2 -
                  5.72872769e-08 * T3 + 2.89763707e-11 * T4;
    // species 38: C6H5CO
    species[38] = -2.02511550e+00 + 6.15125410e-02 * T - 3.16036530e-05 * T2 -
                  6.97245990e-09 * T3 + 7.98351490e-12 * T4;
    // species 39: C6H5CHO
    species[39] = -3.16273340e+00 + 6.63692450e-02 * T - 3.48163530e-05 * T2 -
                  6.29993770e-09 * T3 + 8.58071010e-12 * T4;
    // species 40: N2
    species[40] = +3.29867700e+00 + 1.40824040e-03 * T - 3.96322200e-06 * T2 +
                  5.64151500e-09 * T3 - 2.44485400e-12 * T4;
  } else {
    // species 0: POSF10325
    species[0] = +2.13578910e+01 + 6.65890870e-02 * T - 2.59674690e-05 * T2 +
                 4.47750010e-09 * T3 - 2.36071520e-13 * T4;
    // species 1: C2H4
    species[1] = +2.03611116e+00 + 1.46454151e-02 * T - 6.71077915e-06 * T2 +
                 1.47222923e-09 * T3 - 1.25706061e-13 * T4;
    // species 2: CH4
    species[2] = +7.48514950e-02 + 1.33909467e-02 * T - 5.73285809e-06 * T2 +
                 1.22292535e-09 * T3 - 1.01815230e-13 * T4;
    // species 3: C3H6
    species[3] = +6.73225700e+00 + 1.49083400e-02 * T - 4.94989900e-06 * T2 +
                 7.21202200e-10 * T3 - 3.76620400e-14 * T4;
    // species 4: iC4H8
    species[4] = +4.46094700e+00 + 2.96114870e-02 * T - 1.30771290e-05 * T2 +
                 2.65719340e-09 * T3 - 2.01347130e-13 * T4;
    // species 5: C4H81
    species[5] = +2.05358410e+00 + 3.43505070e-02 * T - 1.58831970e-05 * T2 +
                 3.30896620e-09 * T3 - 2.53610450e-13 * T4;
    // species 6: H2
    species[6] = +3.33727920e+00 - 4.94024731e-05 * T + 4.99456778e-07 * T2 -
                 1.79566394e-10 * T3 + 2.00255376e-14 * T4;
    // species 7: C2H6
    species[7] = +1.07188150e+00 + 2.16852677e-02 * T - 1.00256067e-05 * T2 +
                 2.21412001e-09 * T3 - 1.90002890e-13 * T4;
    // species 8: CO
    species[8] = +2.71518561e+00 + 2.06252743e-03 * T - 9.98825771e-07 * T2 +
                 2.30053008e-10 * T3 - 2.03647716e-14 * T4;
    // species 9: C6H6
    species[9] = +9.13812450e+00 + 2.38544330e-02 * T - 8.81277260e-06 * T2 +
                 1.20990210e-09 * T3 - 1.82215030e-14 * T4;
    // species 10: C2H2
    species[10] = +4.14756964e+00 + 5.96166664e-03 * T - 2.37294852e-06 * T2 +
                  4.67412171e-10 * T3 - 3.61235213e-14 * T4;
    // species 11: C6H5CH3
    species[11] = +1.29400340e+01 + 2.66912870e-02 * T - 9.68385050e-06 * T2 +
                  1.57386290e-09 * T3 - 9.46636010e-14 * T4;
    // species 12: CH3
    species[12] = +2.28571772e+00 + 7.23990037e-03 * T - 2.98714348e-06 * T2 +
                  5.95684644e-10 * T3 - 4.67154394e-14 * T4;
    // species 13: O2
    species[13] = +3.28253784e+00 + 1.48308754e-03 * T - 7.57966669e-07 * T2 +
                  2.09470555e-10 * T3 - 2.16717794e-14 * T4;
    // species 14: O
    species[14] = +2.56942078e+00 - 8.59741137e-05 * T + 4.19484589e-08 * T2 -
                  1.00177799e-11 * T3 + 1.22833691e-15 * T4;
    // species 15: OH
    species[15] = +2.86472886e+00 + 1.05650448e-03 * T - 2.59082758e-07 * T2 +
                  3.05218674e-11 * T3 - 1.33195876e-15 * T4;
    // species 16: HO2
    species[16] = +4.01721090e+00 + 2.23982013e-03 * T - 6.33658150e-07 * T2 +
                  1.14246370e-10 * T3 - 1.07908535e-14 * T4;
    // species 17: H2O
    species[17] = +3.03399249e+00 + 2.17691804e-03 * T - 1.64072518e-07 * T2 -
                  9.70419870e-11 * T3 + 1.68200992e-14 * T4;
    // species 18: H2O2
    species[18] = +4.16500285e+00 + 4.90831694e-03 * T - 1.90139225e-06 * T2 +
                  3.71185986e-10 * T3 - 2.87908305e-14 * T4;
    // species 19: H
    species[19] = +2.50000001e+00 - 2.30842973e-11 * T + 1.61561948e-14 * T2 -
                  4.73515235e-18 * T3 + 4.98197357e-22 * T4;
    // species 20: CH2
    species[20] = +2.87410113e+00 + 3.65639292e-03 * T - 1.40894597e-06 * T2 +
                  2.60179549e-10 * T3 - 1.87727567e-14 * T4;
    // species 21: CH2*
    species[21] = +2.29203842e+00 + 4.65588637e-03 * T - 2.01191947e-06 * T2 +
                  4.17906000e-10 * T3 - 3.39716365e-14 * T4;
    // species 22: HCO
    species[22] = +2.77217438e+00 + 4.95695526e-03 * T - 2.48445613e-06 * T2 +
                  5.89161778e-10 * T3 - 5.33508711e-14 * T4;
    // species 23: CH2O
    species[23] = +1.76069008e+00 + 9.20000082e-03 * T - 4.42258813e-06 * T2 +
                  1.00641212e-09 * T3 - 8.83855640e-14 * T4;
    // species 24: CH3O
    species[24] = +4.75779238e+00 + 7.44142474e-03 * T - 2.69705176e-06 * T2 +
                  4.38090504e-10 * T3 - 2.63537098e-14 * T4;
    // species 25: CO2
    species[25] = +3.85746029e+00 + 4.41437026e-03 * T - 2.21481404e-06 * T2 +
                  5.23490188e-10 * T3 - 4.72084164e-14 * T4;
    // species 26: C2H3
    species[26] = +3.01672400e+00 + 1.03302292e-02 * T - 4.68082349e-06 * T2 +
                  1.01763288e-09 * T3 - 8.62607041e-14 * T4;
    // species 27: C2H5
    species[27] = +1.95465642e+00 + 1.73972722e-02 * T - 7.98206668e-06 * T2 +
                  1.75217689e-09 * T3 - 1.49641576e-13 * T4;
    // species 28: HCCO
    species[28] = +5.62820580e+00 + 4.08534010e-03 * T - 1.59345470e-06 * T2 +
                  2.86260520e-10 * T3 - 1.94078320e-14 * T4;
    // species 29: CH2CO
    species[29] = +4.51129732e+00 + 9.00359745e-03 * T - 4.16939635e-06 * T2 +
                  9.23345882e-10 * T3 - 7.94838201e-14 * T4;
    // species 30: CH2CHO
    species[30] = +5.97566990e+00 + 8.13059140e-03 * T - 2.74362450e-06 * T2 +
                  4.07030410e-10 * T3 - 2.17601710e-14 * T4;
    // species 31: C3H3
    species[31] = +7.14221880e+00 + 7.61902005e-03 * T - 2.67459950e-06 * T2 +
                  4.24914801e-10 * T3 - 2.51475415e-14 * T4;
    // species 32: aC3H5
    species[32] = +6.50078770e+00 + 1.43247310e-02 * T - 5.67816320e-06 * T2 +
                  1.10808010e-09 * T3 - 9.03638870e-14 * T4;
    // species 33: C5H4O
    species[33] = +1.00806824e+01 + 1.61143465e-02 * T - 5.83314509e-06 * T2 +
                  9.46759320e-10 * T3 - 5.68972206e-14 * T4;
    // species 34: C5H5
    species[34] = +7.47439380e+00 + 1.60127330e-02 * T - 6.48231480e-09 * T2 -
                  3.58197030e-09 * T3 + 9.23650710e-13 * T4;
    // species 35: C6H5
    species[35] = +8.59731100e+00 + 2.22416300e-02 * T - 8.71999780e-06 * T2 +
                  1.37887850e-09 * T3 - 5.31460560e-14 * T4;
    // species 36: C6H5CH2
    species[36] = +1.40439800e+01 + 2.34938730e-02 * T - 8.53753670e-06 * T2 +
                  1.38908410e-09 * T3 - 8.36144200e-14 * T4;
    // species 37: C6H5O
    species[37] = +1.37221720e+01 + 1.74688771e-02 * T - 6.35504520e-06 * T2 +
                  1.03492308e-09 * T3 - 6.23410504e-14 * T4;
    // species 38: C6H5CO
    species[38] = +1.33744090e+01 + 2.39992890e-02 * T - 1.04657240e-05 * T2 +
                  2.16691310e-09 * T3 - 1.80070450e-13 * T4;
    // species 39: C6H5CHO
    species[39] = +1.36507370e+01 + 2.56804190e-02 * T - 1.04667290e-05 * T2 +
                  1.94134300e-09 * T3 - 1.34837920e-13 * T4;
    // species 40: N2
    species[40] = +2.92664000e+00 + 1.48797680e-03 * T - 5.68476000e-07 * T2 +
                  1.00970380e-10 * T3 - 6.75335100e-15 * T4;
  }
}

// compute the g/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
gibbs(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real invT = 1.0 / T;
  const amrex::Real logT = log(T);

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: POSF10325
    species[0] = -3.802985500000000e+04 * invT - 1.995518320000000e+01 -
                 2.578551800000000e+00 * logT - 3.631241600000000e-02 * T -
                 1.220606166666667e-05 * T2 + 1.259620333333333e-08 * T3 -
                 3.446778950000000e-12 * T4;
    // species 1: C2H4
    species[1] = +5.089775930000000e+03 * invT - 1.381294799999999e-01 -
                 3.959201480000000e+00 * logT + 3.785261235000000e-03 * T -
                 9.516504866666667e-06 * T2 + 5.763239608333333e-09 * T3 -
                 1.349421865000000e-12 * T4;
    // species 2: CH4
    species[2] = -1.024664760000000e+04 * invT + 9.791179889999999e+00 -
                 5.149876130000000e+00 * logT + 6.835489400000000e-03 * T -
                 8.196676650000000e-06 * T2 + 4.039525216666667e-09 * T3 -
                 8.334697800000000e-13 * T4;
    // species 3: C3H6
    species[3] = +1.074826000000000e+03 * invT - 1.465203300000000e+01 -
                 1.493307000000000e+00 * logT - 1.046259000000000e-02 * T -
                 7.477990000000000e-07 * T2 + 1.390760000000000e-09 * T3 -
                 3.579073000000000e-13 * T4;
    // species 4: iC4H8
    species[4] = -4.037306900000000e+03 * invT - 1.002924750000000e+01 -
                 2.647140500000000e+00 * logT - 1.295147850000000e-02 * T -
                 1.366422566666667e-06 * T2 + 1.849438250000000e-09 * T3 -
                 4.447929000000000e-13 * T4;
    // species 5: C4H81
    species[5] = -1.790400400000000e+03 * invT - 1.988133100000000e+01 -
                 1.181138000000000e+00 * logT - 1.542669000000000e-02 * T -
                 8.477541166666667e-07 * T2 + 2.054574000000000e-09 * T3 -
                 5.555096499999999e-13 * T4;
    // species 6: H2
    species[6] = -9.179351730000000e+02 * invT + 1.661320882000000e+00 -
                 2.344331120000000e+00 * logT - 3.990260375000000e-03 * T +
                 3.246358500000000e-06 * T2 - 1.679767450000000e-09 * T3 +
                 3.688058805000000e-13 * T4;
    // species 7: C2H6
    species[7] = -1.152220550000000e+04 * invT + 1.624601760000000e+00 -
                 4.291424920000000e+00 * logT + 2.750771350000000e-03 * T -
                 9.990638133333334e-06 * T2 + 5.903885708333334e-09 * T3 -
                 1.343428855000000e-12 * T4;
    // species 8: CO
    species[8] = -1.434408600000000e+04 * invT + 7.112418999999992e-02 -
                 3.579533470000000e+00 * logT + 3.051768400000000e-04 * T -
                 1.694690550000000e-07 * T2 - 7.558382366666667e-11 * T3 +
                 4.522122495000000e-14 * T4;
    // species 9: C6H6
    species[9] = +9.181777300000000e+03 * invT - 4.873360540000000e+01 +
                 4.843773400000000e+00 * logT - 2.921380650000000e-02 * T +
                 4.914309166666667e-06 * T2 + 5.782536666666667e-10 * T3 -
                 4.106262650000000e-13 * T4;
    // species 10: C2H2
    species[10] = +2.642898070000000e+04 * invT - 1.313102400600000e+01 -
                  8.086810940000000e-01 * logT - 1.168078145000000e-02 * T +
                  5.919530250000000e-06 * T2 - 2.334603641666667e-09 * T3 +
                  4.250364870000000e-13 * T4;
    // species 11: C6H5CH3
    species[11] = +4.075630000000000e+03 * invT - 1.866694370000000e+01 -
                  1.615266300000000e+00 * logT - 1.054971900000000e-02 * T -
                  1.422766966666667e-05 * T2 + 1.105088833333333e-08 * T3 -
                  2.797830200000000e-12 * T4;
    // species 12: CH3
    species[12] = +1.644499880000000e+04 * invT + 2.069026070000000e+00 -
                  3.673590400000000e+00 * logT - 1.005475875000000e-03 * T -
                  9.550364266666668e-07 * T2 + 5.725978541666666e-10 * T3 -
                  1.271928670000000e-13 * T4;
    // species 13: O2
    species[13] = -1.063943560000000e+03 * invT + 1.247806300000001e-01 -
                  3.782456360000000e+00 * logT + 1.498367080000000e-03 * T -
                  1.641217001666667e-06 * T2 + 8.067745908333334e-10 * T3 -
                  1.621864185000000e-13 * T4;
    // species 14: O
    species[14] = +2.912225920000000e+04 * invT + 1.116333640000000e+00 -
                  3.168267100000000e+00 * logT + 1.639659420000000e-03 * T -
                  1.107177326666667e-06 * T2 + 5.106721866666666e-10 * T3 -
                  1.056329855000000e-13 * T4;
    // species 15: OH
    species[15] = +3.381538120000000e+03 * invT + 4.815738570000000e+00 -
                  4.125305610000000e+00 * logT + 1.612724695000000e-03 * T -
                  1.087941151666667e-06 * T2 + 4.832113691666666e-10 * T3 -
                  1.031186895000000e-13 * T4;
    // species 16: HO2
    species[16] = +2.948080400000000e+02 * invT + 5.851355599999999e-01 -
                  4.301798010000000e+00 * logT + 2.374560255000000e-03 * T -
                  3.526381516666666e-06 * T2 + 2.023032450000000e-09 * T3 -
                  4.646125620000001e-13 * T4;
    // species 17: H2O
    species[17] = -3.029372670000000e+04 * invT + 5.047672768000000e+00 -
                  4.198640560000000e+00 * logT + 1.018217050000000e-03 * T -
                  1.086733685000000e-06 * T2 + 4.573308850000000e-10 * T3 -
                  8.859890850000000e-14 * T4;
    // species 18: H2O2
    species[18] = -1.770258210000000e+04 * invT + 8.410619499999998e-01 -
                  4.276112690000000e+00 * logT + 2.714112085000000e-04 * T -
                  2.788928350000000e-06 * T2 + 1.798090108333333e-09 * T3 -
                  4.312271815000000e-13 * T4;
    // species 19: H
    species[19] = +2.547365990000000e+04 * invT + 2.946682853000000e+00 -
                  2.500000000000000e+00 * logT - 3.526664095000000e-13 * T +
                  3.326532733333333e-16 * T2 - 1.917346933333333e-19 * T3 +
                  4.638661660000000e-23 * T4;
    // species 20: CH2
    species[20] = +4.600404010000000e+04 * invT + 2.200146820000000e+00 -
                  3.762678670000000e+00 * logT - 4.844360715000000e-04 * T -
                  4.658164016666667e-07 * T2 + 3.209092941666667e-10 * T3 -
                  8.437085950000000e-14 * T4;
    // species 21: CH2*
    species[21] = +5.049681630000000e+04 * invT + 4.967723077000000e+00 -
                  4.198604110000000e+00 * logT + 1.183307095000000e-03 * T -
                  1.372160366666667e-06 * T2 + 5.573466508333334e-10 * T3 -
                  9.715736850000000e-14 * T4;
    // species 22: HCO
    species[22] = +3.839564960000000e+03 * invT + 8.268134100000002e-01 -
                  4.221185840000000e+00 * logT + 1.621962660000000e-03 * T -
                  2.296657433333333e-06 * T2 + 1.109534108333333e-09 * T3 -
                  2.168844325000000e-13 * T4;
    // species 23: CH2O
    species[23] = -1.430895670000000e+04 * invT + 4.190910250000000e+00 -
                  4.793723150000000e+00 * logT + 4.954166845000000e-03 * T -
                  6.220333466666666e-06 * T2 + 3.160710508333333e-09 * T3 -
                  6.588632600000000e-13 * T4;
    // species 24: CH3O
    species[24] = +1.295697600000000e+03 * invT - 2.860603620000000e+00 -
                  3.711805020000000e+00 * logT + 1.402316530000000e-03 * T -
                  6.275849516666667e-06 * T2 + 3.942267408333333e-09 * T3 -
                  9.329421000000001e-13 * T4;
    // species 25: CO2
    species[25] = -4.837196970000000e+04 * invT - 7.544278700000000e+00 -
                  2.356773520000000e+00 * logT - 4.492298385000000e-03 * T +
                  1.187260448333333e-06 * T2 - 2.049325183333333e-10 * T3 +
                  7.184977399999999e-15 * T4;
    // species 26: C2H3
    species[26] = +3.485984680000000e+04 * invT - 5.298073800000000e+00 -
                  3.212466450000000e+00 * logT - 7.573958100000000e-04 * T -
                  4.320156866666666e-06 * T2 + 2.980482058333333e-09 * T3 -
                  7.357543650000000e-13 * T4;
    // species 27: C2H5
    species[27] = +1.284162650000000e+04 * invT - 4.007435600000004e-01 -
                  4.306465680000000e+00 * logT + 2.093294460000000e-03 * T -
                  8.285713450000000e-06 * T2 + 4.992721716666666e-09 * T3 -
                  1.152545020000000e-12 * T4;
    // species 28: HCCO
    species[28] = +2.005944900000000e+04 * invT - 1.023869560000000e+01 -
                  2.251721400000000e+00 * logT - 8.827510500000000e-03 * T +
                  3.954850166666666e-06 * T2 - 1.439646583333334e-09 * T3 +
                  2.533240550000000e-13 * T4;
    // species 29: CH2CO
    species[29] = -7.270000000000000e+03 * invT - 1.007981170000000e+01 -
                  2.135836300000000e+00 * logT - 9.059436050000000e-03 * T +
                  2.899124566666666e-06 * T2 - 7.786646400000000e-10 * T3 +
                  1.007288075000000e-13 * T4;
    // species 30: CH2CHO
    species[30] = +6.200000000000000e+01 * invT - 6.162391100000001e+00 -
                  3.409062400000000e+00 * logT - 5.369287000000000e-03 * T -
                  3.152487500000000e-07 * T2 + 5.965485916666667e-10 * T3 -
                  1.433692550000000e-13 * T4;
    // species 31: C3H3
    species[31] = +4.010577830000000e+04 * invT - 1.385478313000000e+01 -
                  1.351109270000000e+00 * logT - 1.637056115000000e-02 * T +
                  7.897118916666667e-06 * T2 - 3.135915066666667e-09 * T3 +
                  5.927046150000000e-13 * T4;
    // species 32: aC3H5
    species[32] = +1.924562900000000e+04 * invT - 1.581003050000000e+01 -
                  1.363183500000000e+00 * logT - 9.906910499999999e-03 * T -
                  2.082843333333333e-06 * T2 + 2.779629583333333e-09 * T3 -
                  7.923285500000000e-13 * T4;
    // species 33: C5H4O
    species[33] = +5.111592870000000e+03 * invT - 2.327637480300000e+01 -
                  2.645764970000000e-01 * logT - 1.674369135000000e-02 * T -
                  2.795641166666666e-07 * T2 + 2.468395458333334e-09 * T3 -
                  7.721573800000001e-13 * T4;
    // species 34: C5H5
    species[34] = +2.962600000000000e+04 * invT - 1.560202078000000e+01 -
                  9.834982200000000e-01 * logT - 1.682573800000000e-02 * T +
                  1.842363500000000e-08 * T2 + 3.061949500000000e-09 * T3 -
                  1.157059200000000e-12 * T4;
    // species 35: C6H5
    species[35] = +3.977959000000000e+04 * invT - 4.502568030000000e+01 +
                  3.693145300000000e+00 * logT - 2.608948400000000e-02 * T +
                  4.259737833333333e-06 * T2 + 5.888426750000000e-10 * T3 -
                  3.791698750000000e-13 * T4;
    // species 36: C6H5CH2
    species[36] = +2.330702700000000e+04 * invT - 2.306770460000000e+01 -
                  4.811154000000000e-01 * logT - 1.925641600000000e-02 * T -
                  5.476915333333333e-06 * T2 + 6.414393416666667e-09 * T3 -
                  1.771153400000000e-12 * T4;
    // species 37: C6H5O
    species[37] = +4.778583910000000e+03 * invT - 2.816523185500000e+01 +
                  4.662044550000000e-01 * logT - 2.067219875000000e-02 * T -
                  2.206883183333333e-06 * T2 + 4.773939741666667e-09 * T3 -
                  1.448818535000000e-12 * T4;
    // species 38: C6H5CO
    species[38] = +1.125580300000000e+04 * invT - 3.780329050000000e+01 +
                  2.025115500000000e+00 * logT - 3.075627050000000e-02 * T +
                  5.267275500000000e-06 * T2 + 5.810383250000000e-10 * T3 -
                  3.991757449999999e-13 * T4;
    // species 39: C6H5CHO
    species[39] = -6.116934900000000e+03 * invT - 4.339446840000000e+01 +
                  3.162733400000000e+00 * logT - 3.318462250000000e-02 * T +
                  5.802725500000000e-06 * T2 + 5.249948083333333e-10 * T3 -
                  4.290355050000000e-13 * T4;
    // species 40: N2
    species[40] = -1.020899900000000e+03 * invT - 6.516950000000001e-01 -
                  3.298677000000000e+00 * logT - 7.041202000000000e-04 * T +
                  6.605369999999999e-07 * T2 - 4.701262500000001e-10 * T3 +
                  1.222427000000000e-13 * T4;
  } else {
    // species 0: POSF10325
    species[0] = -4.579699600000000e+04 * invT + 1.074939770000000e+02 -
                 2.135789100000000e+01 * logT - 3.329454350000000e-02 * T +
                 4.327911500000000e-06 * T2 - 3.731250083333333e-10 * T3 +
                 1.180357600000000e-14 * T4;
    // species 1: C2H4
    species[1] = +4.939886140000000e+03 * invT - 8.269258140000002e+00 -
                 2.036111160000000e+00 * logT - 7.322707550000000e-03 * T +
                 1.118463191666667e-06 * T2 - 1.226857691666667e-10 * T3 +
                 6.285303050000000e-15 * T4;
    // species 2: CH4
    species[2] = -9.468344590000001e+03 * invT - 1.836246650500000e+01 -
                 7.485149500000000e-02 * logT - 6.695473350000000e-03 * T +
                 9.554763483333333e-07 * T2 - 1.019104458333333e-10 * T3 +
                 5.090761500000000e-15 * T4;
    // species 3: C3H6
    species[3] = -9.235703000000000e+02 * invT + 2.004560700000000e+01 -
                 6.732257000000000e+00 * logT - 7.454170000000000e-03 * T +
                 8.249831666666666e-07 * T2 - 6.010018333333334e-11 * T3 +
                 1.883102000000000e-15 * T4;
    // species 4: iC4H8
    species[4] = -5.006675800000000e+03 * invT + 3.393792100000000e+00 -
                 4.460947000000000e+00 * logT - 1.480574350000000e-02 * T +
                 2.179521500000000e-06 * T2 - 2.214327833333333e-10 * T3 +
                 1.006735650000000e-14 * T4;
    // species 5: C4H81
    species[5] = -2.139723100000000e+03 * invT - 1.348961690000000e+01 -
                 2.053584100000000e+00 * logT - 1.717525350000000e-02 * T +
                 2.647199500000000e-06 * T2 - 2.757471833333334e-10 * T3 +
                 1.268052250000000e-14 * T4;
    // species 6: H2
    species[6] = -9.501589220000000e+02 * invT + 6.542302510000000e+00 -
                 3.337279200000000e+00 * logT + 2.470123655000000e-05 * T -
                 8.324279633333333e-08 * T2 + 1.496386616666667e-11 * T3 -
                 1.001276880000000e-15 * T4;
    // species 7: C2H6
    species[7] = -1.142639320000000e+04 * invT - 1.404372920000000e+01 -
                 1.071881500000000e+00 * logT - 1.084263385000000e-02 * T +
                 1.670934450000000e-06 * T2 - 1.845100008333333e-10 * T3 +
                 9.500144500000000e-15 * T4;
    // species 8: CO
    species[8] = -1.415187240000000e+04 * invT - 5.103502110000000e+00 -
                 2.715185610000000e+00 * logT - 1.031263715000000e-03 * T +
                 1.664709618333334e-07 * T2 - 1.917108400000000e-11 * T3 +
                 1.018238580000000e-15 * T4;
    // species 9: C6H6
    species[9] = +5.204346200000000e+03 * invT + 3.825378950000000e+01 -
                 9.138124500000000e+00 * logT - 1.192721650000000e-02 * T +
                 1.468795433333333e-06 * T2 - 1.008251750000000e-10 * T3 +
                 9.110751500000001e-16 * T4;
    // species 10: C2H2
    species[10] = +2.593599920000000e+04 * invT + 5.377850850000001e+00 -
                  4.147569640000000e+00 * logT - 2.980833320000000e-03 * T +
                  3.954914200000000e-07 * T2 - 3.895101425000000e-11 * T3 +
                  1.806176065000000e-15 * T4;
    // species 11: C6H5CH3
    species[11] = -6.976490800000000e+02 * invT + 5.966881900000000e+01 -
                  1.294003400000000e+01 * logT - 1.334564350000000e-02 * T +
                  1.613975083333333e-06 * T2 - 1.311552416666667e-10 * T3 +
                  4.733180050000000e-15 * T4;
    // species 12: CH3
    species[12] = +1.677558430000000e+04 * invT - 6.194354070000000e+00 -
                  2.285717720000000e+00 * logT - 3.619950185000000e-03 * T +
                  4.978572466666667e-07 * T2 - 4.964038700000000e-11 * T3 +
                  2.335771970000000e-15 * T4;
    // species 13: O2
    species[13] = -1.088457720000000e+03 * invT - 2.170693450000000e+00 -
                  3.282537840000000e+00 * logT - 7.415437700000000e-04 * T +
                  1.263277781666667e-07 * T2 - 1.745587958333333e-11 * T3 +
                  1.083588970000000e-15 * T4;
    // species 14: O
    species[14] = +2.921757910000000e+04 * invT - 2.214917859999999e+00 -
                  2.569420780000000e+00 * logT + 4.298705685000000e-05 * T -
                  6.991409816666667e-09 * T2 + 8.348149916666666e-13 * T3 -
                  6.141684549999999e-17 * T4;
    // species 15: OH
    species[15] = +3.718857740000000e+03 * invT - 2.836911870000000e+00 -
                  2.864728860000000e+00 * logT - 5.282522400000000e-04 * T +
                  4.318045966666667e-08 * T2 - 2.543488950000000e-12 * T3 +
                  6.659793800000000e-17 * T4;
    // species 16: HO2
    species[16] = +1.118567130000000e+02 * invT + 2.321087500000001e-01 -
                  4.017210900000000e+00 * logT - 1.119910065000000e-03 * T +
                  1.056096916666667e-07 * T2 - 9.520530833333334e-12 * T3 +
                  5.395426750000000e-16 * T4;
    // species 17: H2O
    species[17] = -3.000429710000000e+04 * invT - 1.932777610000000e+00 -
                  3.033992490000000e+00 * logT - 1.088459020000000e-03 * T +
                  2.734541966666666e-08 * T2 + 8.086832250000000e-12 * T3 -
                  8.410049600000000e-16 * T4;
    // species 18: H2O2
    species[18] = -1.786178770000000e+04 * invT + 1.248846229999999e+00 -
                  4.165002850000000e+00 * logT - 2.454158470000000e-03 * T +
                  3.168987083333333e-07 * T2 - 3.093216550000000e-11 * T3 +
                  1.439541525000000e-15 * T4;
    // species 19: H
    species[19] = +2.547365990000000e+04 * invT + 2.946682924000000e+00 -
                  2.500000010000000e+00 * logT + 1.154214865000000e-11 * T -
                  2.692699133333334e-15 * T2 + 3.945960291666667e-19 * T3 -
                  2.490986785000000e-23 * T4;
    // species 20: CH2
    species[20] = +4.626360400000000e+04 * invT - 3.297092110000000e+00 -
                  2.874101130000000e+00 * logT - 1.828196460000000e-03 * T +
                  2.348243283333333e-07 * T2 - 2.168162908333333e-11 * T3 +
                  9.386378350000000e-16 * T4;
    // species 21: CH2*
    species[21] = +5.092599970000000e+04 * invT - 6.334463270000000e+00 -
                  2.292038420000000e+00 * logT - 2.327943185000000e-03 * T +
                  3.353199116666667e-07 * T2 - 3.482550000000000e-11 * T3 +
                  1.698581825000000e-15 * T4;
    // species 22: HCO
    species[22] = +4.011918150000000e+03 * invT - 7.026170540000000e+00 -
                  2.772174380000000e+00 * logT - 2.478477630000000e-03 * T +
                  4.140760216666667e-07 * T2 - 4.909681483333334e-11 * T3 +
                  2.667543555000000e-15 * T4;
    // species 23: CH2O
    species[23] = -1.399583230000000e+04 * invT - 1.189563292000000e+01 -
                  1.760690080000000e+00 * logT - 4.600000410000000e-03 * T +
                  7.370980216666666e-07 * T2 - 8.386767666666666e-11 * T3 +
                  4.419278200000001e-15 * T4;
    // species 24: CH3O
    species[24] = +3.781119400000000e+02 * invT + 6.724592660000000e+00 -
                  4.757792380000000e+00 * logT - 3.720712370000000e-03 * T +
                  4.495086266666666e-07 * T2 - 3.650754200000000e-11 * T3 +
                  1.317685490000000e-15 * T4;
    // species 25: CO2
    species[25] = -4.875916600000000e+04 * invT + 1.585822230000000e+00 -
                  3.857460290000000e+00 * logT - 2.207185130000000e-03 * T +
                  3.691356733333334e-07 * T2 - 4.362418233333334e-11 * T3 +
                  2.360420820000000e-15 * T4;
    // species 26: C2H3
    species[26] = +3.461287390000000e+04 * invT - 4.770599780000000e+00 -
                  3.016724000000000e+00 * logT - 5.165114600000000e-03 * T +
                  7.801372483333333e-07 * T2 - 8.480274000000000e-11 * T3 +
                  4.313035205000000e-15 * T4;
    // species 27: C2H5
    species[27] = +1.285752000000000e+04 * invT - 1.150777788000000e+01 -
                  1.954656420000000e+00 * logT - 8.698636100000001e-03 * T +
                  1.330344446666667e-06 * T2 - 1.460147408333333e-10 * T3 +
                  7.482078800000000e-15 * T4;
    // species 28: HCCO
    species[28] = +1.932721500000000e+04 * invT + 9.558465300000000e+00 -
                  5.628205800000000e+00 * logT - 2.042670050000000e-03 * T +
                  2.655757833333333e-07 * T2 - 2.385504333333333e-11 * T3 +
                  9.703915999999999e-16 * T4;
    // species 29: CH2CO
    species[29] = -7.778500000000000e+03 * invT + 3.879050115000000e+00 -
                  4.511297320000000e+00 * logT - 4.501798725000000e-03 * T +
                  6.948993916666666e-07 * T2 - 7.694549016666667e-11 * T3 +
                  3.974191005000000e-15 * T4;
    // species 30: CH2CHO
    species[30] = -9.695000000000000e+02 * invT + 1.100775780000000e+01 -
                  5.975669900000000e+00 * logT - 4.065295700000000e-03 * T +
                  4.572707500000000e-07 * T2 - 3.391920083333333e-11 * T3 +
                  1.088008550000000e-15 * T4;
    // species 31: C3H3
    species[31] = +3.890874270000000e+04 * invT + 1.972706240000000e+01 -
                  7.142218800000000e+00 * logT - 3.809510025000000e-03 * T +
                  4.457665833333333e-07 * T2 - 3.540956675000000e-11 * T3 +
                  1.257377075000000e-15 * T4;
    // species 32: aC3H5
    species[32] = +1.748244900000000e+04 * invT + 1.774383770000000e+01 -
                  6.500787700000000e+00 * logT - 7.162365500000000e-03 * T +
                  9.463605333333332e-07 * T2 - 9.234000833333333e-11 * T3 +
                  4.518194349999999e-15 * T4;
    // species 33: C5H4O
    species[33] = +1.943647710000000e+03 * invT + 3.953284470000000e+01 -
                  1.008068240000000e+01 * logT - 8.057173250000001e-03 * T +
                  9.721908483333333e-07 * T2 - 7.889661000000000e-11 * T3 +
                  2.844861030000000e-15 * T4;
    // species 34: C5H5
    species[34] = +2.808600000000000e+04 * invT + 2.360739380000000e+01 -
                  7.474393800000000e+00 * logT - 8.006366500000001e-03 * T +
                  1.080385800000000e-09 * T2 + 2.984975250000000e-10 * T3 -
                  4.618253550000001e-14 * T4;
    // species 35: C6H5
    species[35] = +3.626104700000000e+04 * invT + 3.155195400000000e+01 -
                  8.597310999999999e+00 * logT - 1.112081500000000e-02 * T +
                  1.453332966666666e-06 * T2 - 1.149065416666667e-10 * T3 +
                  2.657302800000000e-15 * T4;
    // species 36: C6H5CH2
    species[36] = +1.856420300000000e+04 * invT + 6.570956900000000e+01 -
                  1.404398000000000e+01 * logT - 1.174693650000000e-02 * T +
                  1.422922783333333e-06 * T2 - 1.157570083333333e-10 * T3 +
                  4.180721000000000e-15 * T4;
    // species 37: C6H5O
    species[37] = +2.872747510000000e+02 * invT + 6.254034000000000e+01 -
                  1.372217200000000e+01 * logT - 8.734438549999999e-03 * T +
                  1.059174200000000e-06 * T2 - 8.624359000000001e-11 * T3 +
                  3.117052520000000e-15 * T4;
    // species 38: C6H5CO
    species[38] = +6.914783700000000e+03 * invT + 5.803362700000000e+01 -
                  1.337440900000000e+01 * logT - 1.199964450000000e-02 * T +
                  1.744287333333333e-06 * T2 - 1.805760916666667e-10 * T3 +
                  9.003522500000000e-15 * T4;
    // species 39: C6H5CHO
    species[39] = -1.101974400000000e+04 * invT + 6.161653300000000e+01 -
                  1.365073700000000e+01 * logT - 1.284020950000000e-02 * T +
                  1.744454833333333e-06 * T2 - 1.617785833333333e-10 * T3 +
                  6.741896000000000e-15 * T4;
    // species 40: N2
    species[40] = -9.227977000000000e+02 * invT - 3.053888000000000e+00 -
                  2.926640000000000e+00 * logT - 7.439884000000000e-04 * T +
                  9.474600000000001e-08 * T2 - 8.414198333333333e-12 * T3 +
                  3.376675500000000e-16 * T4;
  }
}

// compute the a/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
helmholtz(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real invT = 1.0 / T;
  const amrex::Real logT = log(T);

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: POSF10325
    species[0] = -3.80298550e+04 * invT - 2.09551832e+01 -
                 2.57855180e+00 * logT - 3.63124160e-02 * T -
                 1.22060617e-05 * T2 + 1.25962033e-08 * T3 -
                 3.44677895e-12 * T4;
    // species 1: C2H4
    species[1] = +5.08977593e+03 * invT - 1.13812948e+00 -
                 3.95920148e+00 * logT + 3.78526124e-03 * T -
                 9.51650487e-06 * T2 + 5.76323961e-09 * T3 -
                 1.34942187e-12 * T4;
    // species 2: CH4
    species[2] = -1.02466476e+04 * invT + 8.79117989e+00 -
                 5.14987613e+00 * logT + 6.83548940e-03 * T -
                 8.19667665e-06 * T2 + 4.03952522e-09 * T3 -
                 8.33469780e-13 * T4;
    // species 3: C3H6
    species[3] = +1.07482600e+03 * invT - 1.56520330e+01 -
                 1.49330700e+00 * logT - 1.04625900e-02 * T -
                 7.47799000e-07 * T2 + 1.39076000e-09 * T3 -
                 3.57907300e-13 * T4;
    // species 4: iC4H8
    species[4] = -4.03730690e+03 * invT - 1.10292475e+01 -
                 2.64714050e+00 * logT - 1.29514785e-02 * T -
                 1.36642257e-06 * T2 + 1.84943825e-09 * T3 -
                 4.44792900e-13 * T4;
    // species 5: C4H81
    species[5] = -1.79040040e+03 * invT - 2.08813310e+01 -
                 1.18113800e+00 * logT - 1.54266900e-02 * T -
                 8.47754117e-07 * T2 + 2.05457400e-09 * T3 -
                 5.55509650e-13 * T4;
    // species 6: H2
    species[6] = -9.17935173e+02 * invT + 6.61320882e-01 -
                 2.34433112e+00 * logT - 3.99026037e-03 * T +
                 3.24635850e-06 * T2 - 1.67976745e-09 * T3 +
                 3.68805881e-13 * T4;
    // species 7: C2H6
    species[7] = -1.15222055e+04 * invT + 6.24601760e-01 -
                 4.29142492e+00 * logT + 2.75077135e-03 * T -
                 9.99063813e-06 * T2 + 5.90388571e-09 * T3 -
                 1.34342886e-12 * T4;
    // species 8: CO
    species[8] = -1.43440860e+04 * invT - 9.28875810e-01 -
                 3.57953347e+00 * logT + 3.05176840e-04 * T -
                 1.69469055e-07 * T2 - 7.55838237e-11 * T3 +
                 4.52212249e-14 * T4;
    // species 9: C6H6
    species[9] = +9.18177730e+03 * invT - 4.97336054e+01 +
                 4.84377340e+00 * logT - 2.92138065e-02 * T +
                 4.91430917e-06 * T2 + 5.78253667e-10 * T3 -
                 4.10626265e-13 * T4;
    // species 10: C2H2
    species[10] = +2.64289807e+04 * invT - 1.41310240e+01 -
                  8.08681094e-01 * logT - 1.16807815e-02 * T +
                  5.91953025e-06 * T2 - 2.33460364e-09 * T3 +
                  4.25036487e-13 * T4;
    // species 11: C6H5CH3
    species[11] = +4.07563000e+03 * invT - 1.96669437e+01 -
                  1.61526630e+00 * logT - 1.05497190e-02 * T -
                  1.42276697e-05 * T2 + 1.10508883e-08 * T3 -
                  2.79783020e-12 * T4;
    // species 12: CH3
    species[12] = +1.64449988e+04 * invT + 1.06902607e+00 -
                  3.67359040e+00 * logT - 1.00547588e-03 * T -
                  9.55036427e-07 * T2 + 5.72597854e-10 * T3 -
                  1.27192867e-13 * T4;
    // species 13: O2
    species[13] = -1.06394356e+03 * invT - 8.75219370e-01 -
                  3.78245636e+00 * logT + 1.49836708e-03 * T -
                  1.64121700e-06 * T2 + 8.06774591e-10 * T3 -
                  1.62186418e-13 * T4;
    // species 14: O
    species[14] = +2.91222592e+04 * invT + 1.16333640e-01 -
                  3.16826710e+00 * logT + 1.63965942e-03 * T -
                  1.10717733e-06 * T2 + 5.10672187e-10 * T3 -
                  1.05632985e-13 * T4;
    // species 15: OH
    species[15] = +3.38153812e+03 * invT + 3.81573857e+00 -
                  4.12530561e+00 * logT + 1.61272470e-03 * T -
                  1.08794115e-06 * T2 + 4.83211369e-10 * T3 -
                  1.03118689e-13 * T4;
    // species 16: HO2
    species[16] = +2.94808040e+02 * invT - 4.14864440e-01 -
                  4.30179801e+00 * logT + 2.37456025e-03 * T -
                  3.52638152e-06 * T2 + 2.02303245e-09 * T3 -
                  4.64612562e-13 * T4;
    // species 17: H2O
    species[17] = -3.02937267e+04 * invT + 4.04767277e+00 -
                  4.19864056e+00 * logT + 1.01821705e-03 * T -
                  1.08673369e-06 * T2 + 4.57330885e-10 * T3 -
                  8.85989085e-14 * T4;
    // species 18: H2O2
    species[18] = -1.77025821e+04 * invT - 1.58938050e-01 -
                  4.27611269e+00 * logT + 2.71411208e-04 * T -
                  2.78892835e-06 * T2 + 1.79809011e-09 * T3 -
                  4.31227182e-13 * T4;
    // species 19: H
    species[19] = +2.54736599e+04 * invT + 1.94668285e+00 -
                  2.50000000e+00 * logT - 3.52666409e-13 * T +
                  3.32653273e-16 * T2 - 1.91734693e-19 * T3 +
                  4.63866166e-23 * T4;
    // species 20: CH2
    species[20] = +4.60040401e+04 * invT + 1.20014682e+00 -
                  3.76267867e+00 * logT - 4.84436072e-04 * T -
                  4.65816402e-07 * T2 + 3.20909294e-10 * T3 -
                  8.43708595e-14 * T4;
    // species 21: CH2*
    species[21] = +5.04968163e+04 * invT + 3.96772308e+00 -
                  4.19860411e+00 * logT + 1.18330710e-03 * T -
                  1.37216037e-06 * T2 + 5.57346651e-10 * T3 -
                  9.71573685e-14 * T4;
    // species 22: HCO
    species[22] = +3.83956496e+03 * invT - 1.73186590e-01 -
                  4.22118584e+00 * logT + 1.62196266e-03 * T -
                  2.29665743e-06 * T2 + 1.10953411e-09 * T3 -
                  2.16884432e-13 * T4;
    // species 23: CH2O
    species[23] = -1.43089567e+04 * invT + 3.19091025e+00 -
                  4.79372315e+00 * logT + 4.95416684e-03 * T -
                  6.22033347e-06 * T2 + 3.16071051e-09 * T3 -
                  6.58863260e-13 * T4;
    // species 24: CH3O
    species[24] = +1.29569760e+03 * invT - 3.86060362e+00 -
                  3.71180502e+00 * logT + 1.40231653e-03 * T -
                  6.27584952e-06 * T2 + 3.94226741e-09 * T3 -
                  9.32942100e-13 * T4;
    // species 25: CO2
    species[25] = -4.83719697e+04 * invT - 8.54427870e+00 -
                  2.35677352e+00 * logT - 4.49229839e-03 * T +
                  1.18726045e-06 * T2 - 2.04932518e-10 * T3 +
                  7.18497740e-15 * T4;
    // species 26: C2H3
    species[26] = +3.48598468e+04 * invT - 6.29807380e+00 -
                  3.21246645e+00 * logT - 7.57395810e-04 * T -
                  4.32015687e-06 * T2 + 2.98048206e-09 * T3 -
                  7.35754365e-13 * T4;
    // species 27: C2H5
    species[27] = +1.28416265e+04 * invT - 1.40074356e+00 -
                  4.30646568e+00 * logT + 2.09329446e-03 * T -
                  8.28571345e-06 * T2 + 4.99272172e-09 * T3 -
                  1.15254502e-12 * T4;
    // species 28: HCCO
    species[28] = +2.00594490e+04 * invT - 1.12386956e+01 -
                  2.25172140e+00 * logT - 8.82751050e-03 * T +
                  3.95485017e-06 * T2 - 1.43964658e-09 * T3 +
                  2.53324055e-13 * T4;
    // species 29: CH2CO
    species[29] = -7.27000000e+03 * invT - 1.10798117e+01 -
                  2.13583630e+00 * logT - 9.05943605e-03 * T +
                  2.89912457e-06 * T2 - 7.78664640e-10 * T3 +
                  1.00728807e-13 * T4;
    // species 30: CH2CHO
    species[30] = +6.20000000e+01 * invT - 7.16239110e+00 -
                  3.40906240e+00 * logT - 5.36928700e-03 * T -
                  3.15248750e-07 * T2 + 5.96548592e-10 * T3 -
                  1.43369255e-13 * T4;
    // species 31: C3H3
    species[31] = +4.01057783e+04 * invT - 1.48547831e+01 -
                  1.35110927e+00 * logT - 1.63705612e-02 * T +
                  7.89711892e-06 * T2 - 3.13591507e-09 * T3 +
                  5.92704615e-13 * T4;
    // species 32: aC3H5
    species[32] = +1.92456290e+04 * invT - 1.68100305e+01 -
                  1.36318350e+00 * logT - 9.90691050e-03 * T -
                  2.08284333e-06 * T2 + 2.77962958e-09 * T3 -
                  7.92328550e-13 * T4;
    // species 33: C5H4O
    species[33] = +5.11159287e+03 * invT - 2.42763748e+01 -
                  2.64576497e-01 * logT - 1.67436913e-02 * T -
                  2.79564117e-07 * T2 + 2.46839546e-09 * T3 -
                  7.72157380e-13 * T4;
    // species 34: C5H5
    species[34] = +2.96260000e+04 * invT - 1.66020208e+01 -
                  9.83498220e-01 * logT - 1.68257380e-02 * T +
                  1.84236350e-08 * T2 + 3.06194950e-09 * T3 -
                  1.15705920e-12 * T4;
    // species 35: C6H5
    species[35] = +3.97795900e+04 * invT - 4.60256803e+01 +
                  3.69314530e+00 * logT - 2.60894840e-02 * T +
                  4.25973783e-06 * T2 + 5.88842675e-10 * T3 -
                  3.79169875e-13 * T4;
    // species 36: C6H5CH2
    species[36] = +2.33070270e+04 * invT - 2.40677046e+01 -
                  4.81115400e-01 * logT - 1.92564160e-02 * T -
                  5.47691533e-06 * T2 + 6.41439342e-09 * T3 -
                  1.77115340e-12 * T4;
    // species 37: C6H5O
    species[37] = +4.77858391e+03 * invT - 2.91652319e+01 +
                  4.66204455e-01 * logT - 2.06721987e-02 * T -
                  2.20688318e-06 * T2 + 4.77393974e-09 * T3 -
                  1.44881853e-12 * T4;
    // species 38: C6H5CO
    species[38] = +1.12558030e+04 * invT - 3.88032905e+01 +
                  2.02511550e+00 * logT - 3.07562705e-02 * T +
                  5.26727550e-06 * T2 + 5.81038325e-10 * T3 -
                  3.99175745e-13 * T4;
    // species 39: C6H5CHO
    species[39] = -6.11693490e+03 * invT - 4.43944684e+01 +
                  3.16273340e+00 * logT - 3.31846225e-02 * T +
                  5.80272550e-06 * T2 + 5.24994808e-10 * T3 -
                  4.29035505e-13 * T4;
    // species 40: N2
    species[40] = -1.02089990e+03 * invT - 1.65169500e+00 -
                  3.29867700e+00 * logT - 7.04120200e-04 * T +
                  6.60537000e-07 * T2 - 4.70126250e-10 * T3 +
                  1.22242700e-13 * T4;
  } else {
    // species 0: POSF10325
    species[0] = -4.57969960e+04 * invT + 1.06493977e+02 -
                 2.13578910e+01 * logT - 3.32945435e-02 * T +
                 4.32791150e-06 * T2 - 3.73125008e-10 * T3 +
                 1.18035760e-14 * T4;
    // species 1: C2H4
    species[1] = +4.93988614e+03 * invT - 9.26925814e+00 -
                 2.03611116e+00 * logT - 7.32270755e-03 * T +
                 1.11846319e-06 * T2 - 1.22685769e-10 * T3 +
                 6.28530305e-15 * T4;
    // species 2: CH4
    species[2] = -9.46834459e+03 * invT - 1.93624665e+01 -
                 7.48514950e-02 * logT - 6.69547335e-03 * T +
                 9.55476348e-07 * T2 - 1.01910446e-10 * T3 +
                 5.09076150e-15 * T4;
    // species 3: C3H6
    species[3] = -9.23570300e+02 * invT + 1.90456070e+01 -
                 6.73225700e+00 * logT - 7.45417000e-03 * T +
                 8.24983167e-07 * T2 - 6.01001833e-11 * T3 +
                 1.88310200e-15 * T4;
    // species 4: iC4H8
    species[4] = -5.00667580e+03 * invT + 2.39379210e+00 -
                 4.46094700e+00 * logT - 1.48057435e-02 * T +
                 2.17952150e-06 * T2 - 2.21432783e-10 * T3 +
                 1.00673565e-14 * T4;
    // species 5: C4H81
    species[5] = -2.13972310e+03 * invT - 1.44896169e+01 -
                 2.05358410e+00 * logT - 1.71752535e-02 * T +
                 2.64719950e-06 * T2 - 2.75747183e-10 * T3 +
                 1.26805225e-14 * T4;
    // species 6: H2
    species[6] = -9.50158922e+02 * invT + 5.54230251e+00 -
                 3.33727920e+00 * logT + 2.47012365e-05 * T -
                 8.32427963e-08 * T2 + 1.49638662e-11 * T3 -
                 1.00127688e-15 * T4;
    // species 7: C2H6
    species[7] = -1.14263932e+04 * invT - 1.50437292e+01 -
                 1.07188150e+00 * logT - 1.08426339e-02 * T +
                 1.67093445e-06 * T2 - 1.84510001e-10 * T3 +
                 9.50014450e-15 * T4;
    // species 8: CO
    species[8] = -1.41518724e+04 * invT - 6.10350211e+00 -
                 2.71518561e+00 * logT - 1.03126372e-03 * T +
                 1.66470962e-07 * T2 - 1.91710840e-11 * T3 +
                 1.01823858e-15 * T4;
    // species 9: C6H6
    species[9] = +5.20434620e+03 * invT + 3.72537895e+01 -
                 9.13812450e+00 * logT - 1.19272165e-02 * T +
                 1.46879543e-06 * T2 - 1.00825175e-10 * T3 +
                 9.11075150e-16 * T4;
    // species 10: C2H2
    species[10] = +2.59359992e+04 * invT + 4.37785085e+00 -
                  4.14756964e+00 * logT - 2.98083332e-03 * T +
                  3.95491420e-07 * T2 - 3.89510143e-11 * T3 +
                  1.80617607e-15 * T4;
    // species 11: C6H5CH3
    species[11] = -6.97649080e+02 * invT + 5.86688190e+01 -
                  1.29400340e+01 * logT - 1.33456435e-02 * T +
                  1.61397508e-06 * T2 - 1.31155242e-10 * T3 +
                  4.73318005e-15 * T4;
    // species 12: CH3
    species[12] = +1.67755843e+04 * invT - 7.19435407e+00 -
                  2.28571772e+00 * logT - 3.61995018e-03 * T +
                  4.97857247e-07 * T2 - 4.96403870e-11 * T3 +
                  2.33577197e-15 * T4;
    // species 13: O2
    species[13] = -1.08845772e+03 * invT - 3.17069345e+00 -
                  3.28253784e+00 * logT - 7.41543770e-04 * T +
                  1.26327778e-07 * T2 - 1.74558796e-11 * T3 +
                  1.08358897e-15 * T4;
    // species 14: O
    species[14] = +2.92175791e+04 * invT - 3.21491786e+00 -
                  2.56942078e+00 * logT + 4.29870569e-05 * T -
                  6.99140982e-09 * T2 + 8.34814992e-13 * T3 -
                  6.14168455e-17 * T4;
    // species 15: OH
    species[15] = +3.71885774e+03 * invT - 3.83691187e+00 -
                  2.86472886e+00 * logT - 5.28252240e-04 * T +
                  4.31804597e-08 * T2 - 2.54348895e-12 * T3 +
                  6.65979380e-17 * T4;
    // species 16: HO2
    species[16] = +1.11856713e+02 * invT - 7.67891250e-01 -
                  4.01721090e+00 * logT - 1.11991006e-03 * T +
                  1.05609692e-07 * T2 - 9.52053083e-12 * T3 +
                  5.39542675e-16 * T4;
    // species 17: H2O
    species[17] = -3.00042971e+04 * invT - 2.93277761e+00 -
                  3.03399249e+00 * logT - 1.08845902e-03 * T +
                  2.73454197e-08 * T2 + 8.08683225e-12 * T3 -
                  8.41004960e-16 * T4;
    // species 18: H2O2
    species[18] = -1.78617877e+04 * invT + 2.48846230e-01 -
                  4.16500285e+00 * logT - 2.45415847e-03 * T +
                  3.16898708e-07 * T2 - 3.09321655e-11 * T3 +
                  1.43954153e-15 * T4;
    // species 19: H
    species[19] = +2.54736599e+04 * invT + 1.94668292e+00 -
                  2.50000001e+00 * logT + 1.15421486e-11 * T -
                  2.69269913e-15 * T2 + 3.94596029e-19 * T3 -
                  2.49098679e-23 * T4;
    // species 20: CH2
    species[20] = +4.62636040e+04 * invT - 4.29709211e+00 -
                  2.87410113e+00 * logT - 1.82819646e-03 * T +
                  2.34824328e-07 * T2 - 2.16816291e-11 * T3 +
                  9.38637835e-16 * T4;
    // species 21: CH2*
    species[21] = +5.09259997e+04 * invT - 7.33446327e+00 -
                  2.29203842e+00 * logT - 2.32794318e-03 * T +
                  3.35319912e-07 * T2 - 3.48255000e-11 * T3 +
                  1.69858182e-15 * T4;
    // species 22: HCO
    species[22] = +4.01191815e+03 * invT - 8.02617054e+00 -
                  2.77217438e+00 * logT - 2.47847763e-03 * T +
                  4.14076022e-07 * T2 - 4.90968148e-11 * T3 +
                  2.66754356e-15 * T4;
    // species 23: CH2O
    species[23] = -1.39958323e+04 * invT - 1.28956329e+01 -
                  1.76069008e+00 * logT - 4.60000041e-03 * T +
                  7.37098022e-07 * T2 - 8.38676767e-11 * T3 +
                  4.41927820e-15 * T4;
    // species 24: CH3O
    species[24] = +3.78111940e+02 * invT + 5.72459266e+00 -
                  4.75779238e+00 * logT - 3.72071237e-03 * T +
                  4.49508627e-07 * T2 - 3.65075420e-11 * T3 +
                  1.31768549e-15 * T4;
    // species 25: CO2
    species[25] = -4.87591660e+04 * invT + 5.85822230e-01 -
                  3.85746029e+00 * logT - 2.20718513e-03 * T +
                  3.69135673e-07 * T2 - 4.36241823e-11 * T3 +
                  2.36042082e-15 * T4;
    // species 26: C2H3
    species[26] = +3.46128739e+04 * invT - 5.77059978e+00 -
                  3.01672400e+00 * logT - 5.16511460e-03 * T +
                  7.80137248e-07 * T2 - 8.48027400e-11 * T3 +
                  4.31303520e-15 * T4;
    // species 27: C2H5
    species[27] = +1.28575200e+04 * invT - 1.25077779e+01 -
                  1.95465642e+00 * logT - 8.69863610e-03 * T +
                  1.33034445e-06 * T2 - 1.46014741e-10 * T3 +
                  7.48207880e-15 * T4;
    // species 28: HCCO
    species[28] = +1.93272150e+04 * invT + 8.55846530e+00 -
                  5.62820580e+00 * logT - 2.04267005e-03 * T +
                  2.65575783e-07 * T2 - 2.38550433e-11 * T3 +
                  9.70391600e-16 * T4;
    // species 29: CH2CO
    species[29] = -7.77850000e+03 * invT + 2.87905011e+00 -
                  4.51129732e+00 * logT - 4.50179872e-03 * T +
                  6.94899392e-07 * T2 - 7.69454902e-11 * T3 +
                  3.97419100e-15 * T4;
    // species 30: CH2CHO
    species[30] = -9.69500000e+02 * invT + 1.00077578e+01 -
                  5.97566990e+00 * logT - 4.06529570e-03 * T +
                  4.57270750e-07 * T2 - 3.39192008e-11 * T3 +
                  1.08800855e-15 * T4;
    // species 31: C3H3
    species[31] = +3.89087427e+04 * invT + 1.87270624e+01 -
                  7.14221880e+00 * logT - 3.80951002e-03 * T +
                  4.45766583e-07 * T2 - 3.54095668e-11 * T3 +
                  1.25737708e-15 * T4;
    // species 32: aC3H5
    species[32] = +1.74824490e+04 * invT + 1.67438377e+01 -
                  6.50078770e+00 * logT - 7.16236550e-03 * T +
                  9.46360533e-07 * T2 - 9.23400083e-11 * T3 +
                  4.51819435e-15 * T4;
    // species 33: C5H4O
    species[33] = +1.94364771e+03 * invT + 3.85328447e+01 -
                  1.00806824e+01 * logT - 8.05717325e-03 * T +
                  9.72190848e-07 * T2 - 7.88966100e-11 * T3 +
                  2.84486103e-15 * T4;
    // species 34: C5H5
    species[34] = +2.80860000e+04 * invT + 2.26073938e+01 -
                  7.47439380e+00 * logT - 8.00636650e-03 * T +
                  1.08038580e-09 * T2 + 2.98497525e-10 * T3 -
                  4.61825355e-14 * T4;
    // species 35: C6H5
    species[35] = +3.62610470e+04 * invT + 3.05519540e+01 -
                  8.59731100e+00 * logT - 1.11208150e-02 * T +
                  1.45333297e-06 * T2 - 1.14906542e-10 * T3 +
                  2.65730280e-15 * T4;
    // species 36: C6H5CH2
    species[36] = +1.85642030e+04 * invT + 6.47095690e+01 -
                  1.40439800e+01 * logT - 1.17469365e-02 * T +
                  1.42292278e-06 * T2 - 1.15757008e-10 * T3 +
                  4.18072100e-15 * T4;
    // species 37: C6H5O
    species[37] = +2.87274751e+02 * invT + 6.15403400e+01 -
                  1.37221720e+01 * logT - 8.73443855e-03 * T +
                  1.05917420e-06 * T2 - 8.62435900e-11 * T3 +
                  3.11705252e-15 * T4;
    // species 38: C6H5CO
    species[38] = +6.91478370e+03 * invT + 5.70336270e+01 -
                  1.33744090e+01 * logT - 1.19996445e-02 * T +
                  1.74428733e-06 * T2 - 1.80576092e-10 * T3 +
                  9.00352250e-15 * T4;
    // species 39: C6H5CHO
    species[39] = -1.10197440e+04 * invT + 6.06165330e+01 -
                  1.36507370e+01 * logT - 1.28402095e-02 * T +
                  1.74445483e-06 * T2 - 1.61778583e-10 * T3 +
                  6.74189600e-15 * T4;
    // species 40: N2
    species[40] = -9.22797700e+02 * invT - 4.05388800e+00 -
                  2.92664000e+00 * logT - 7.43988400e-04 * T +
                  9.47460000e-08 * T2 - 8.41419833e-12 * T3 +
                  3.37667550e-16 * T4;
  }
}

// compute the e/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesInternalEnergy(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: POSF10325
    species[0] = +1.57855180e+00 + 3.63124160e-02 * T + 2.44121233e-05 * T2 -
                 3.77886100e-08 * T3 + 1.37871158e-11 * T4 -
                 3.80298550e+04 * invT;
    // species 1: C2H4
    species[1] = +2.95920148e+00 - 3.78526124e-03 * T + 1.90330097e-05 * T2 -
                 1.72897188e-08 * T3 + 5.39768746e-12 * T4 +
                 5.08977593e+03 * invT;
    // species 2: CH4
    species[2] = +4.14987613e+00 - 6.83548940e-03 * T + 1.63933533e-05 * T2 -
                 1.21185757e-08 * T3 + 3.33387912e-12 * T4 -
                 1.02466476e+04 * invT;
    // species 3: C3H6
    species[3] = +4.93307000e-01 + 1.04625900e-02 * T + 1.49559800e-06 * T2 -
                 4.17228000e-09 * T3 + 1.43162920e-12 * T4 +
                 1.07482600e+03 * invT;
    // species 4: iC4H8
    species[4] = +1.64714050e+00 + 1.29514785e-02 * T + 2.73284513e-06 * T2 -
                 5.54831475e-09 * T3 + 1.77917160e-12 * T4 -
                 4.03730690e+03 * invT;
    // species 5: C4H81
    species[5] = +1.81138000e-01 + 1.54266900e-02 * T + 1.69550823e-06 * T2 -
                 6.16372200e-09 * T3 + 2.22203860e-12 * T4 -
                 1.79040040e+03 * invT;
    // species 6: H2
    species[6] = +1.34433112e+00 + 3.99026037e-03 * T - 6.49271700e-06 * T2 +
                 5.03930235e-09 * T3 - 1.47522352e-12 * T4 -
                 9.17935173e+02 * invT;
    // species 7: C2H6
    species[7] = +3.29142492e+00 - 2.75077135e-03 * T + 1.99812763e-05 * T2 -
                 1.77116571e-08 * T3 + 5.37371542e-12 * T4 -
                 1.15222055e+04 * invT;
    // species 8: CO
    species[8] = +2.57953347e+00 - 3.05176840e-04 * T + 3.38938110e-07 * T2 +
                 2.26751471e-10 * T3 - 1.80884900e-13 * T4 -
                 1.43440860e+04 * invT;
    // species 9: C6H6
    species[9] = -5.84377340e+00 + 2.92138065e-02 * T - 9.82861833e-06 * T2 -
                 1.73476100e-09 * T3 + 1.64250506e-12 * T4 +
                 9.18177730e+03 * invT;
    // species 10: C2H2
    species[10] = -1.91318906e-01 + 1.16807815e-02 * T - 1.18390605e-05 * T2 +
                  7.00381092e-09 * T3 - 1.70014595e-12 * T4 +
                  2.64289807e+04 * invT;
    // species 11: C6H5CH3
    species[11] = +6.15266300e-01 + 1.05497190e-02 * T + 2.84553393e-05 * T2 -
                  3.31526650e-08 * T3 + 1.11913208e-11 * T4 +
                  4.07563000e+03 * invT;
    // species 12: CH3
    species[12] = +2.67359040e+00 + 1.00547588e-03 * T + 1.91007285e-06 * T2 -
                  1.71779356e-09 * T3 + 5.08771468e-13 * T4 +
                  1.64449988e+04 * invT;
    // species 13: O2
    species[13] = +2.78245636e+00 - 1.49836708e-03 * T + 3.28243400e-06 * T2 -
                  2.42032377e-09 * T3 + 6.48745674e-13 * T4 -
                  1.06394356e+03 * invT;
    // species 14: O
    species[14] = +2.16826710e+00 - 1.63965942e-03 * T + 2.21435465e-06 * T2 -
                  1.53201656e-09 * T3 + 4.22531942e-13 * T4 +
                  2.91222592e+04 * invT;
    // species 15: OH
    species[15] = +3.12530561e+00 - 1.61272470e-03 * T + 2.17588230e-06 * T2 -
                  1.44963411e-09 * T3 + 4.12474758e-13 * T4 +
                  3.38153812e+03 * invT;
    // species 16: HO2
    species[16] = +3.30179801e+00 - 2.37456025e-03 * T + 7.05276303e-06 * T2 -
                  6.06909735e-09 * T3 + 1.85845025e-12 * T4 +
                  2.94808040e+02 * invT;
    // species 17: H2O
    species[17] = +3.19864056e+00 - 1.01821705e-03 * T + 2.17346737e-06 * T2 -
                  1.37199266e-09 * T3 + 3.54395634e-13 * T4 -
                  3.02937267e+04 * invT;
    // species 18: H2O2
    species[18] = +3.27611269e+00 - 2.71411208e-04 * T + 5.57785670e-06 * T2 -
                  5.39427032e-09 * T3 + 1.72490873e-12 * T4 -
                  1.77025821e+04 * invT;
    // species 19: H
    species[19] = +1.50000000e+00 + 3.52666409e-13 * T - 6.65306547e-16 * T2 +
                  5.75204080e-19 * T3 - 1.85546466e-22 * T4 +
                  2.54736599e+04 * invT;
    // species 20: CH2
    species[20] = +2.76267867e+00 + 4.84436072e-04 * T + 9.31632803e-07 * T2 -
                  9.62727883e-10 * T3 + 3.37483438e-13 * T4 +
                  4.60040401e+04 * invT;
    // species 21: CH2*
    species[21] = +3.19860411e+00 - 1.18330710e-03 * T + 2.74432073e-06 * T2 -
                  1.67203995e-09 * T3 + 3.88629474e-13 * T4 +
                  5.04968163e+04 * invT;
    // species 22: HCO
    species[22] = +3.22118584e+00 - 1.62196266e-03 * T + 4.59331487e-06 * T2 -
                  3.32860233e-09 * T3 + 8.67537730e-13 * T4 +
                  3.83956496e+03 * invT;
    // species 23: CH2O
    species[23] = +3.79372315e+00 - 4.95416684e-03 * T + 1.24406669e-05 * T2 -
                  9.48213152e-09 * T3 + 2.63545304e-12 * T4 -
                  1.43089567e+04 * invT;
    // species 24: CH3O
    species[24] = +2.71180502e+00 - 1.40231653e-03 * T + 1.25516990e-05 * T2 -
                  1.18268022e-08 * T3 + 3.73176840e-12 * T4 +
                  1.29569760e+03 * invT;
    // species 25: CO2
    species[25] = +1.35677352e+00 + 4.49229839e-03 * T - 2.37452090e-06 * T2 +
                  6.14797555e-10 * T3 - 2.87399096e-14 * T4 -
                  4.83719697e+04 * invT;
    // species 26: C2H3
    species[26] = +2.21246645e+00 + 7.57395810e-04 * T + 8.64031373e-06 * T2 -
                  8.94144617e-09 * T3 + 2.94301746e-12 * T4 +
                  3.48598468e+04 * invT;
    // species 27: C2H5
    species[27] = +3.30646568e+00 - 2.09329446e-03 * T + 1.65714269e-05 * T2 -
                  1.49781651e-08 * T3 + 4.61018008e-12 * T4 +
                  1.28416265e+04 * invT;
    // species 28: HCCO
    species[28] = +1.25172140e+00 + 8.82751050e-03 * T - 7.90970033e-06 * T2 +
                  4.31893975e-09 * T3 - 1.01329622e-12 * T4 +
                  2.00594490e+04 * invT;
    // species 29: CH2CO
    species[29] = +1.13583630e+00 + 9.05943605e-03 * T - 5.79824913e-06 * T2 +
                  2.33599392e-09 * T3 - 4.02915230e-13 * T4 -
                  7.27000000e+03 * invT;
    // species 30: CH2CHO
    species[30] = +2.40906240e+00 + 5.36928700e-03 * T + 6.30497500e-07 * T2 -
                  1.78964578e-09 * T3 + 5.73477020e-13 * T4 +
                  6.20000000e+01 * invT;
    // species 31: C3H3
    species[31] = +3.51109270e-01 + 1.63705612e-02 * T - 1.57942378e-05 * T2 +
                  9.40774520e-09 * T3 - 2.37081846e-12 * T4 +
                  4.01057783e+04 * invT;
    // species 32: aC3H5
    species[32] = +3.63183500e-01 + 9.90691050e-03 * T + 4.16568667e-06 * T2 -
                  8.33888875e-09 * T3 + 3.16931420e-12 * T4 +
                  1.92456290e+04 * invT;
    // species 33: C5H4O
    species[33] = -7.35423503e-01 + 1.67436913e-02 * T + 5.59128233e-07 * T2 -
                  7.40518638e-09 * T3 + 3.08862952e-12 * T4 +
                  5.11159287e+03 * invT;
    // species 34: C5H5
    species[34] = -1.65017800e-02 + 1.68257380e-02 * T - 3.68472700e-08 * T2 -
                  9.18584850e-09 * T3 + 4.62823680e-12 * T4 +
                  2.96260000e+04 * invT;
    // species 35: C6H5
    species[35] = -4.69314530e+00 + 2.60894840e-02 * T - 8.51947567e-06 * T2 -
                  1.76652803e-09 * T3 + 1.51667950e-12 * T4 +
                  3.97795900e+04 * invT;
    // species 36: C6H5CH2
    species[36] = -5.18884600e-01 + 1.92564160e-02 * T + 1.09538307e-05 * T2 -
                  1.92431803e-08 * T3 + 7.08461360e-12 * T4 +
                  2.33070270e+04 * invT;
    // species 37: C6H5O
    species[37] = -1.46620445e+00 + 2.06721987e-02 * T + 4.41376637e-06 * T2 -
                  1.43218192e-08 * T3 + 5.79527414e-12 * T4 +
                  4.77858391e+03 * invT;
    // species 38: C6H5CO
    species[38] = -3.02511550e+00 + 3.07562705e-02 * T - 1.05345510e-05 * T2 -
                  1.74311497e-09 * T3 + 1.59670298e-12 * T4 +
                  1.12558030e+04 * invT;
    // species 39: C6H5CHO
    species[39] = -4.16273340e+00 + 3.31846225e-02 * T - 1.16054510e-05 * T2 -
                  1.57498443e-09 * T3 + 1.71614202e-12 * T4 -
                  6.11693490e+03 * invT;
    // species 40: N2
    species[40] = +2.29867700e+00 + 7.04120200e-04 * T - 1.32107400e-06 * T2 +
                  1.41037875e-09 * T3 - 4.88970800e-13 * T4 -
                  1.02089990e+03 * invT;
  } else {
    // species 0: POSF10325
    species[0] = +2.03578910e+01 + 3.32945435e-02 * T - 8.65582300e-06 * T2 +
                 1.11937502e-09 * T3 - 4.72143040e-14 * T4 -
                 4.57969960e+04 * invT;
    // species 1: C2H4
    species[1] = +1.03611116e+00 + 7.32270755e-03 * T - 2.23692638e-06 * T2 +
                 3.68057308e-10 * T3 - 2.51412122e-14 * T4 +
                 4.93988614e+03 * invT;
    // species 2: CH4
    species[2] = -9.25148505e-01 + 6.69547335e-03 * T - 1.91095270e-06 * T2 +
                 3.05731338e-10 * T3 - 2.03630460e-14 * T4 -
                 9.46834459e+03 * invT;
    // species 3: C3H6
    species[3] = +5.73225700e+00 + 7.45417000e-03 * T - 1.64996633e-06 * T2 +
                 1.80300550e-10 * T3 - 7.53240800e-15 * T4 -
                 9.23570300e+02 * invT;
    // species 4: iC4H8
    species[4] = +3.46094700e+00 + 1.48057435e-02 * T - 4.35904300e-06 * T2 +
                 6.64298350e-10 * T3 - 4.02694260e-14 * T4 -
                 5.00667580e+03 * invT;
    // species 5: C4H81
    species[5] = +1.05358410e+00 + 1.71752535e-02 * T - 5.29439900e-06 * T2 +
                 8.27241550e-10 * T3 - 5.07220900e-14 * T4 -
                 2.13972310e+03 * invT;
    // species 6: H2
    species[6] = +2.33727920e+00 - 2.47012365e-05 * T + 1.66485593e-07 * T2 -
                 4.48915985e-11 * T3 + 4.00510752e-15 * T4 -
                 9.50158922e+02 * invT;
    // species 7: C2H6
    species[7] = +7.18815000e-02 + 1.08426339e-02 * T - 3.34186890e-06 * T2 +
                 5.53530003e-10 * T3 - 3.80005780e-14 * T4 -
                 1.14263932e+04 * invT;
    // species 8: CO
    species[8] = +1.71518561e+00 + 1.03126372e-03 * T - 3.32941924e-07 * T2 +
                 5.75132520e-11 * T3 - 4.07295432e-15 * T4 -
                 1.41518724e+04 * invT;
    // species 9: C6H6
    species[9] = +8.13812450e+00 + 1.19272165e-02 * T - 2.93759087e-06 * T2 +
                 3.02475525e-10 * T3 - 3.64430060e-15 * T4 +
                 5.20434620e+03 * invT;
    // species 10: C2H2
    species[10] = +3.14756964e+00 + 2.98083332e-03 * T - 7.90982840e-07 * T2 +
                  1.16853043e-10 * T3 - 7.22470426e-15 * T4 +
                  2.59359992e+04 * invT;
    // species 11: C6H5CH3
    species[11] = +1.19400340e+01 + 1.33456435e-02 * T - 3.22795017e-06 * T2 +
                  3.93465725e-10 * T3 - 1.89327202e-14 * T4 -
                  6.97649080e+02 * invT;
    // species 12: CH3
    species[12] = +1.28571772e+00 + 3.61995018e-03 * T - 9.95714493e-07 * T2 +
                  1.48921161e-10 * T3 - 9.34308788e-15 * T4 +
                  1.67755843e+04 * invT;
    // species 13: O2
    species[13] = +2.28253784e+00 + 7.41543770e-04 * T - 2.52655556e-07 * T2 +
                  5.23676387e-11 * T3 - 4.33435588e-15 * T4 -
                  1.08845772e+03 * invT;
    // species 14: O
    species[14] = +1.56942078e+00 - 4.29870569e-05 * T + 1.39828196e-08 * T2 -
                  2.50444497e-12 * T3 + 2.45667382e-16 * T4 +
                  2.92175791e+04 * invT;
    // species 15: OH
    species[15] = +1.86472886e+00 + 5.28252240e-04 * T - 8.63609193e-08 * T2 +
                  7.63046685e-12 * T3 - 2.66391752e-16 * T4 +
                  3.71885774e+03 * invT;
    // species 16: HO2
    species[16] = +3.01721090e+00 + 1.11991006e-03 * T - 2.11219383e-07 * T2 +
                  2.85615925e-11 * T3 - 2.15817070e-15 * T4 +
                  1.11856713e+02 * invT;
    // species 17: H2O
    species[17] = +2.03399249e+00 + 1.08845902e-03 * T - 5.46908393e-08 * T2 -
                  2.42604967e-11 * T3 + 3.36401984e-15 * T4 -
                  3.00042971e+04 * invT;
    // species 18: H2O2
    species[18] = +3.16500285e+00 + 2.45415847e-03 * T - 6.33797417e-07 * T2 +
                  9.27964965e-11 * T3 - 5.75816610e-15 * T4 -
                  1.78617877e+04 * invT;
    // species 19: H
    species[19] = +1.50000001e+00 - 1.15421486e-11 * T + 5.38539827e-15 * T2 -
                  1.18378809e-18 * T3 + 9.96394714e-23 * T4 +
                  2.54736599e+04 * invT;
    // species 20: CH2
    species[20] = +1.87410113e+00 + 1.82819646e-03 * T - 4.69648657e-07 * T2 +
                  6.50448872e-11 * T3 - 3.75455134e-15 * T4 +
                  4.62636040e+04 * invT;
    // species 21: CH2*
    species[21] = +1.29203842e+00 + 2.32794318e-03 * T - 6.70639823e-07 * T2 +
                  1.04476500e-10 * T3 - 6.79432730e-15 * T4 +
                  5.09259997e+04 * invT;
    // species 22: HCO
    species[22] = +1.77217438e+00 + 2.47847763e-03 * T - 8.28152043e-07 * T2 +
                  1.47290445e-10 * T3 - 1.06701742e-14 * T4 +
                  4.01191815e+03 * invT;
    // species 23: CH2O
    species[23] = +7.60690080e-01 + 4.60000041e-03 * T - 1.47419604e-06 * T2 +
                  2.51603030e-10 * T3 - 1.76771128e-14 * T4 -
                  1.39958323e+04 * invT;
    // species 24: CH3O
    species[24] = +3.75779238e+00 + 3.72071237e-03 * T - 8.99017253e-07 * T2 +
                  1.09522626e-10 * T3 - 5.27074196e-15 * T4 +
                  3.78111940e+02 * invT;
    // species 25: CO2
    species[25] = +2.85746029e+00 + 2.20718513e-03 * T - 7.38271347e-07 * T2 +
                  1.30872547e-10 * T3 - 9.44168328e-15 * T4 -
                  4.87591660e+04 * invT;
    // species 26: C2H3
    species[26] = +2.01672400e+00 + 5.16511460e-03 * T - 1.56027450e-06 * T2 +
                  2.54408220e-10 * T3 - 1.72521408e-14 * T4 +
                  3.46128739e+04 * invT;
    // species 27: C2H5
    species[27] = +9.54656420e-01 + 8.69863610e-03 * T - 2.66068889e-06 * T2 +
                  4.38044223e-10 * T3 - 2.99283152e-14 * T4 +
                  1.28575200e+04 * invT;
    // species 28: HCCO
    species[28] = +4.62820580e+00 + 2.04267005e-03 * T - 5.31151567e-07 * T2 +
                  7.15651300e-11 * T3 - 3.88156640e-15 * T4 +
                  1.93272150e+04 * invT;
    // species 29: CH2CO
    species[29] = +3.51129732e+00 + 4.50179872e-03 * T - 1.38979878e-06 * T2 +
                  2.30836470e-10 * T3 - 1.58967640e-14 * T4 -
                  7.77850000e+03 * invT;
    // species 30: CH2CHO
    species[30] = +4.97566990e+00 + 4.06529570e-03 * T - 9.14541500e-07 * T2 +
                  1.01757603e-10 * T3 - 4.35203420e-15 * T4 -
                  9.69500000e+02 * invT;
    // species 31: C3H3
    species[31] = +6.14221880e+00 + 3.80951002e-03 * T - 8.91533167e-07 * T2 +
                  1.06228700e-10 * T3 - 5.02950830e-15 * T4 +
                  3.89087427e+04 * invT;
    // species 32: aC3H5
    species[32] = +5.50078770e+00 + 7.16236550e-03 * T - 1.89272107e-06 * T2 +
                  2.77020025e-10 * T3 - 1.80727774e-14 * T4 +
                  1.74824490e+04 * invT;
    // species 33: C5H4O
    species[33] = +9.08068240e+00 + 8.05717325e-03 * T - 1.94438170e-06 * T2 +
                  2.36689830e-10 * T3 - 1.13794441e-14 * T4 +
                  1.94364771e+03 * invT;
    // species 34: C5H5
    species[34] = +6.47439380e+00 + 8.00636650e-03 * T - 2.16077160e-09 * T2 -
                  8.95492575e-10 * T3 + 1.84730142e-13 * T4 +
                  2.80860000e+04 * invT;
    // species 35: C6H5
    species[35] = +7.59731100e+00 + 1.11208150e-02 * T - 2.90666593e-06 * T2 +
                  3.44719625e-10 * T3 - 1.06292112e-14 * T4 +
                  3.62610470e+04 * invT;
    // species 36: C6H5CH2
    species[36] = +1.30439800e+01 + 1.17469365e-02 * T - 2.84584557e-06 * T2 +
                  3.47271025e-10 * T3 - 1.67228840e-14 * T4 +
                  1.85642030e+04 * invT;
    // species 37: C6H5O
    species[37] = +1.27221720e+01 + 8.73443855e-03 * T - 2.11834840e-06 * T2 +
                  2.58730770e-10 * T3 - 1.24682101e-14 * T4 +
                  2.87274751e+02 * invT;
    // species 38: C6H5CO
    species[38] = +1.23744090e+01 + 1.19996445e-02 * T - 3.48857467e-06 * T2 +
                  5.41728275e-10 * T3 - 3.60140900e-14 * T4 +
                  6.91478370e+03 * invT;
    // species 39: C6H5CHO
    species[39] = +1.26507370e+01 + 1.28402095e-02 * T - 3.48890967e-06 * T2 +
                  4.85335750e-10 * T3 - 2.69675840e-14 * T4 -
                  1.10197440e+04 * invT;
    // species 40: N2
    species[40] = +1.92664000e+00 + 7.43988400e-04 * T - 1.89492000e-07 * T2 +
                  2.52425950e-11 * T3 - 1.35067020e-15 * T4 -
                  9.22797700e+02 * invT;
  }
}

// compute the h/(RT) at the given temperature (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEnthalpy(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: POSF10325
    species[0] = +2.57855180e+00 + 3.63124160e-02 * T + 2.44121233e-05 * T2 -
                 3.77886100e-08 * T3 + 1.37871158e-11 * T4 -
                 3.80298550e+04 * invT;
    // species 1: C2H4
    species[1] = +3.95920148e+00 - 3.78526124e-03 * T + 1.90330097e-05 * T2 -
                 1.72897188e-08 * T3 + 5.39768746e-12 * T4 +
                 5.08977593e+03 * invT;
    // species 2: CH4
    species[2] = +5.14987613e+00 - 6.83548940e-03 * T + 1.63933533e-05 * T2 -
                 1.21185757e-08 * T3 + 3.33387912e-12 * T4 -
                 1.02466476e+04 * invT;
    // species 3: C3H6
    species[3] = +1.49330700e+00 + 1.04625900e-02 * T + 1.49559800e-06 * T2 -
                 4.17228000e-09 * T3 + 1.43162920e-12 * T4 +
                 1.07482600e+03 * invT;
    // species 4: iC4H8
    species[4] = +2.64714050e+00 + 1.29514785e-02 * T + 2.73284513e-06 * T2 -
                 5.54831475e-09 * T3 + 1.77917160e-12 * T4 -
                 4.03730690e+03 * invT;
    // species 5: C4H81
    species[5] = +1.18113800e+00 + 1.54266900e-02 * T + 1.69550823e-06 * T2 -
                 6.16372200e-09 * T3 + 2.22203860e-12 * T4 -
                 1.79040040e+03 * invT;
    // species 6: H2
    species[6] = +2.34433112e+00 + 3.99026037e-03 * T - 6.49271700e-06 * T2 +
                 5.03930235e-09 * T3 - 1.47522352e-12 * T4 -
                 9.17935173e+02 * invT;
    // species 7: C2H6
    species[7] = +4.29142492e+00 - 2.75077135e-03 * T + 1.99812763e-05 * T2 -
                 1.77116571e-08 * T3 + 5.37371542e-12 * T4 -
                 1.15222055e+04 * invT;
    // species 8: CO
    species[8] = +3.57953347e+00 - 3.05176840e-04 * T + 3.38938110e-07 * T2 +
                 2.26751471e-10 * T3 - 1.80884900e-13 * T4 -
                 1.43440860e+04 * invT;
    // species 9: C6H6
    species[9] = -4.84377340e+00 + 2.92138065e-02 * T - 9.82861833e-06 * T2 -
                 1.73476100e-09 * T3 + 1.64250506e-12 * T4 +
                 9.18177730e+03 * invT;
    // species 10: C2H2
    species[10] = +8.08681094e-01 + 1.16807815e-02 * T - 1.18390605e-05 * T2 +
                  7.00381092e-09 * T3 - 1.70014595e-12 * T4 +
                  2.64289807e+04 * invT;
    // species 11: C6H5CH3
    species[11] = +1.61526630e+00 + 1.05497190e-02 * T + 2.84553393e-05 * T2 -
                  3.31526650e-08 * T3 + 1.11913208e-11 * T4 +
                  4.07563000e+03 * invT;
    // species 12: CH3
    species[12] = +3.67359040e+00 + 1.00547588e-03 * T + 1.91007285e-06 * T2 -
                  1.71779356e-09 * T3 + 5.08771468e-13 * T4 +
                  1.64449988e+04 * invT;
    // species 13: O2
    species[13] = +3.78245636e+00 - 1.49836708e-03 * T + 3.28243400e-06 * T2 -
                  2.42032377e-09 * T3 + 6.48745674e-13 * T4 -
                  1.06394356e+03 * invT;
    // species 14: O
    species[14] = +3.16826710e+00 - 1.63965942e-03 * T + 2.21435465e-06 * T2 -
                  1.53201656e-09 * T3 + 4.22531942e-13 * T4 +
                  2.91222592e+04 * invT;
    // species 15: OH
    species[15] = +4.12530561e+00 - 1.61272470e-03 * T + 2.17588230e-06 * T2 -
                  1.44963411e-09 * T3 + 4.12474758e-13 * T4 +
                  3.38153812e+03 * invT;
    // species 16: HO2
    species[16] = +4.30179801e+00 - 2.37456025e-03 * T + 7.05276303e-06 * T2 -
                  6.06909735e-09 * T3 + 1.85845025e-12 * T4 +
                  2.94808040e+02 * invT;
    // species 17: H2O
    species[17] = +4.19864056e+00 - 1.01821705e-03 * T + 2.17346737e-06 * T2 -
                  1.37199266e-09 * T3 + 3.54395634e-13 * T4 -
                  3.02937267e+04 * invT;
    // species 18: H2O2
    species[18] = +4.27611269e+00 - 2.71411208e-04 * T + 5.57785670e-06 * T2 -
                  5.39427032e-09 * T3 + 1.72490873e-12 * T4 -
                  1.77025821e+04 * invT;
    // species 19: H
    species[19] = +2.50000000e+00 + 3.52666409e-13 * T - 6.65306547e-16 * T2 +
                  5.75204080e-19 * T3 - 1.85546466e-22 * T4 +
                  2.54736599e+04 * invT;
    // species 20: CH2
    species[20] = +3.76267867e+00 + 4.84436072e-04 * T + 9.31632803e-07 * T2 -
                  9.62727883e-10 * T3 + 3.37483438e-13 * T4 +
                  4.60040401e+04 * invT;
    // species 21: CH2*
    species[21] = +4.19860411e+00 - 1.18330710e-03 * T + 2.74432073e-06 * T2 -
                  1.67203995e-09 * T3 + 3.88629474e-13 * T4 +
                  5.04968163e+04 * invT;
    // species 22: HCO
    species[22] = +4.22118584e+00 - 1.62196266e-03 * T + 4.59331487e-06 * T2 -
                  3.32860233e-09 * T3 + 8.67537730e-13 * T4 +
                  3.83956496e+03 * invT;
    // species 23: CH2O
    species[23] = +4.79372315e+00 - 4.95416684e-03 * T + 1.24406669e-05 * T2 -
                  9.48213152e-09 * T3 + 2.63545304e-12 * T4 -
                  1.43089567e+04 * invT;
    // species 24: CH3O
    species[24] = +3.71180502e+00 - 1.40231653e-03 * T + 1.25516990e-05 * T2 -
                  1.18268022e-08 * T3 + 3.73176840e-12 * T4 +
                  1.29569760e+03 * invT;
    // species 25: CO2
    species[25] = +2.35677352e+00 + 4.49229839e-03 * T - 2.37452090e-06 * T2 +
                  6.14797555e-10 * T3 - 2.87399096e-14 * T4 -
                  4.83719697e+04 * invT;
    // species 26: C2H3
    species[26] = +3.21246645e+00 + 7.57395810e-04 * T + 8.64031373e-06 * T2 -
                  8.94144617e-09 * T3 + 2.94301746e-12 * T4 +
                  3.48598468e+04 * invT;
    // species 27: C2H5
    species[27] = +4.30646568e+00 - 2.09329446e-03 * T + 1.65714269e-05 * T2 -
                  1.49781651e-08 * T3 + 4.61018008e-12 * T4 +
                  1.28416265e+04 * invT;
    // species 28: HCCO
    species[28] = +2.25172140e+00 + 8.82751050e-03 * T - 7.90970033e-06 * T2 +
                  4.31893975e-09 * T3 - 1.01329622e-12 * T4 +
                  2.00594490e+04 * invT;
    // species 29: CH2CO
    species[29] = +2.13583630e+00 + 9.05943605e-03 * T - 5.79824913e-06 * T2 +
                  2.33599392e-09 * T3 - 4.02915230e-13 * T4 -
                  7.27000000e+03 * invT;
    // species 30: CH2CHO
    species[30] = +3.40906240e+00 + 5.36928700e-03 * T + 6.30497500e-07 * T2 -
                  1.78964578e-09 * T3 + 5.73477020e-13 * T4 +
                  6.20000000e+01 * invT;
    // species 31: C3H3
    species[31] = +1.35110927e+00 + 1.63705612e-02 * T - 1.57942378e-05 * T2 +
                  9.40774520e-09 * T3 - 2.37081846e-12 * T4 +
                  4.01057783e+04 * invT;
    // species 32: aC3H5
    species[32] = +1.36318350e+00 + 9.90691050e-03 * T + 4.16568667e-06 * T2 -
                  8.33888875e-09 * T3 + 3.16931420e-12 * T4 +
                  1.92456290e+04 * invT;
    // species 33: C5H4O
    species[33] = +2.64576497e-01 + 1.67436913e-02 * T + 5.59128233e-07 * T2 -
                  7.40518638e-09 * T3 + 3.08862952e-12 * T4 +
                  5.11159287e+03 * invT;
    // species 34: C5H5
    species[34] = +9.83498220e-01 + 1.68257380e-02 * T - 3.68472700e-08 * T2 -
                  9.18584850e-09 * T3 + 4.62823680e-12 * T4 +
                  2.96260000e+04 * invT;
    // species 35: C6H5
    species[35] = -3.69314530e+00 + 2.60894840e-02 * T - 8.51947567e-06 * T2 -
                  1.76652803e-09 * T3 + 1.51667950e-12 * T4 +
                  3.97795900e+04 * invT;
    // species 36: C6H5CH2
    species[36] = +4.81115400e-01 + 1.92564160e-02 * T + 1.09538307e-05 * T2 -
                  1.92431803e-08 * T3 + 7.08461360e-12 * T4 +
                  2.33070270e+04 * invT;
    // species 37: C6H5O
    species[37] = -4.66204455e-01 + 2.06721987e-02 * T + 4.41376637e-06 * T2 -
                  1.43218192e-08 * T3 + 5.79527414e-12 * T4 +
                  4.77858391e+03 * invT;
    // species 38: C6H5CO
    species[38] = -2.02511550e+00 + 3.07562705e-02 * T - 1.05345510e-05 * T2 -
                  1.74311497e-09 * T3 + 1.59670298e-12 * T4 +
                  1.12558030e+04 * invT;
    // species 39: C6H5CHO
    species[39] = -3.16273340e+00 + 3.31846225e-02 * T - 1.16054510e-05 * T2 -
                  1.57498443e-09 * T3 + 1.71614202e-12 * T4 -
                  6.11693490e+03 * invT;
    // species 40: N2
    species[40] = +3.29867700e+00 + 7.04120200e-04 * T - 1.32107400e-06 * T2 +
                  1.41037875e-09 * T3 - 4.88970800e-13 * T4 -
                  1.02089990e+03 * invT;
  } else {
    // species 0: POSF10325
    species[0] = +2.13578910e+01 + 3.32945435e-02 * T - 8.65582300e-06 * T2 +
                 1.11937502e-09 * T3 - 4.72143040e-14 * T4 -
                 4.57969960e+04 * invT;
    // species 1: C2H4
    species[1] = +2.03611116e+00 + 7.32270755e-03 * T - 2.23692638e-06 * T2 +
                 3.68057308e-10 * T3 - 2.51412122e-14 * T4 +
                 4.93988614e+03 * invT;
    // species 2: CH4
    species[2] = +7.48514950e-02 + 6.69547335e-03 * T - 1.91095270e-06 * T2 +
                 3.05731338e-10 * T3 - 2.03630460e-14 * T4 -
                 9.46834459e+03 * invT;
    // species 3: C3H6
    species[3] = +6.73225700e+00 + 7.45417000e-03 * T - 1.64996633e-06 * T2 +
                 1.80300550e-10 * T3 - 7.53240800e-15 * T4 -
                 9.23570300e+02 * invT;
    // species 4: iC4H8
    species[4] = +4.46094700e+00 + 1.48057435e-02 * T - 4.35904300e-06 * T2 +
                 6.64298350e-10 * T3 - 4.02694260e-14 * T4 -
                 5.00667580e+03 * invT;
    // species 5: C4H81
    species[5] = +2.05358410e+00 + 1.71752535e-02 * T - 5.29439900e-06 * T2 +
                 8.27241550e-10 * T3 - 5.07220900e-14 * T4 -
                 2.13972310e+03 * invT;
    // species 6: H2
    species[6] = +3.33727920e+00 - 2.47012365e-05 * T + 1.66485593e-07 * T2 -
                 4.48915985e-11 * T3 + 4.00510752e-15 * T4 -
                 9.50158922e+02 * invT;
    // species 7: C2H6
    species[7] = +1.07188150e+00 + 1.08426339e-02 * T - 3.34186890e-06 * T2 +
                 5.53530003e-10 * T3 - 3.80005780e-14 * T4 -
                 1.14263932e+04 * invT;
    // species 8: CO
    species[8] = +2.71518561e+00 + 1.03126372e-03 * T - 3.32941924e-07 * T2 +
                 5.75132520e-11 * T3 - 4.07295432e-15 * T4 -
                 1.41518724e+04 * invT;
    // species 9: C6H6
    species[9] = +9.13812450e+00 + 1.19272165e-02 * T - 2.93759087e-06 * T2 +
                 3.02475525e-10 * T3 - 3.64430060e-15 * T4 +
                 5.20434620e+03 * invT;
    // species 10: C2H2
    species[10] = +4.14756964e+00 + 2.98083332e-03 * T - 7.90982840e-07 * T2 +
                  1.16853043e-10 * T3 - 7.22470426e-15 * T4 +
                  2.59359992e+04 * invT;
    // species 11: C6H5CH3
    species[11] = +1.29400340e+01 + 1.33456435e-02 * T - 3.22795017e-06 * T2 +
                  3.93465725e-10 * T3 - 1.89327202e-14 * T4 -
                  6.97649080e+02 * invT;
    // species 12: CH3
    species[12] = +2.28571772e+00 + 3.61995018e-03 * T - 9.95714493e-07 * T2 +
                  1.48921161e-10 * T3 - 9.34308788e-15 * T4 +
                  1.67755843e+04 * invT;
    // species 13: O2
    species[13] = +3.28253784e+00 + 7.41543770e-04 * T - 2.52655556e-07 * T2 +
                  5.23676387e-11 * T3 - 4.33435588e-15 * T4 -
                  1.08845772e+03 * invT;
    // species 14: O
    species[14] = +2.56942078e+00 - 4.29870569e-05 * T + 1.39828196e-08 * T2 -
                  2.50444497e-12 * T3 + 2.45667382e-16 * T4 +
                  2.92175791e+04 * invT;
    // species 15: OH
    species[15] = +2.86472886e+00 + 5.28252240e-04 * T - 8.63609193e-08 * T2 +
                  7.63046685e-12 * T3 - 2.66391752e-16 * T4 +
                  3.71885774e+03 * invT;
    // species 16: HO2
    species[16] = +4.01721090e+00 + 1.11991006e-03 * T - 2.11219383e-07 * T2 +
                  2.85615925e-11 * T3 - 2.15817070e-15 * T4 +
                  1.11856713e+02 * invT;
    // species 17: H2O
    species[17] = +3.03399249e+00 + 1.08845902e-03 * T - 5.46908393e-08 * T2 -
                  2.42604967e-11 * T3 + 3.36401984e-15 * T4 -
                  3.00042971e+04 * invT;
    // species 18: H2O2
    species[18] = +4.16500285e+00 + 2.45415847e-03 * T - 6.33797417e-07 * T2 +
                  9.27964965e-11 * T3 - 5.75816610e-15 * T4 -
                  1.78617877e+04 * invT;
    // species 19: H
    species[19] = +2.50000001e+00 - 1.15421486e-11 * T + 5.38539827e-15 * T2 -
                  1.18378809e-18 * T3 + 9.96394714e-23 * T4 +
                  2.54736599e+04 * invT;
    // species 20: CH2
    species[20] = +2.87410113e+00 + 1.82819646e-03 * T - 4.69648657e-07 * T2 +
                  6.50448872e-11 * T3 - 3.75455134e-15 * T4 +
                  4.62636040e+04 * invT;
    // species 21: CH2*
    species[21] = +2.29203842e+00 + 2.32794318e-03 * T - 6.70639823e-07 * T2 +
                  1.04476500e-10 * T3 - 6.79432730e-15 * T4 +
                  5.09259997e+04 * invT;
    // species 22: HCO
    species[22] = +2.77217438e+00 + 2.47847763e-03 * T - 8.28152043e-07 * T2 +
                  1.47290445e-10 * T3 - 1.06701742e-14 * T4 +
                  4.01191815e+03 * invT;
    // species 23: CH2O
    species[23] = +1.76069008e+00 + 4.60000041e-03 * T - 1.47419604e-06 * T2 +
                  2.51603030e-10 * T3 - 1.76771128e-14 * T4 -
                  1.39958323e+04 * invT;
    // species 24: CH3O
    species[24] = +4.75779238e+00 + 3.72071237e-03 * T - 8.99017253e-07 * T2 +
                  1.09522626e-10 * T3 - 5.27074196e-15 * T4 +
                  3.78111940e+02 * invT;
    // species 25: CO2
    species[25] = +3.85746029e+00 + 2.20718513e-03 * T - 7.38271347e-07 * T2 +
                  1.30872547e-10 * T3 - 9.44168328e-15 * T4 -
                  4.87591660e+04 * invT;
    // species 26: C2H3
    species[26] = +3.01672400e+00 + 5.16511460e-03 * T - 1.56027450e-06 * T2 +
                  2.54408220e-10 * T3 - 1.72521408e-14 * T4 +
                  3.46128739e+04 * invT;
    // species 27: C2H5
    species[27] = +1.95465642e+00 + 8.69863610e-03 * T - 2.66068889e-06 * T2 +
                  4.38044223e-10 * T3 - 2.99283152e-14 * T4 +
                  1.28575200e+04 * invT;
    // species 28: HCCO
    species[28] = +5.62820580e+00 + 2.04267005e-03 * T - 5.31151567e-07 * T2 +
                  7.15651300e-11 * T3 - 3.88156640e-15 * T4 +
                  1.93272150e+04 * invT;
    // species 29: CH2CO
    species[29] = +4.51129732e+00 + 4.50179872e-03 * T - 1.38979878e-06 * T2 +
                  2.30836470e-10 * T3 - 1.58967640e-14 * T4 -
                  7.77850000e+03 * invT;
    // species 30: CH2CHO
    species[30] = +5.97566990e+00 + 4.06529570e-03 * T - 9.14541500e-07 * T2 +
                  1.01757603e-10 * T3 - 4.35203420e-15 * T4 -
                  9.69500000e+02 * invT;
    // species 31: C3H3
    species[31] = +7.14221880e+00 + 3.80951002e-03 * T - 8.91533167e-07 * T2 +
                  1.06228700e-10 * T3 - 5.02950830e-15 * T4 +
                  3.89087427e+04 * invT;
    // species 32: aC3H5
    species[32] = +6.50078770e+00 + 7.16236550e-03 * T - 1.89272107e-06 * T2 +
                  2.77020025e-10 * T3 - 1.80727774e-14 * T4 +
                  1.74824490e+04 * invT;
    // species 33: C5H4O
    species[33] = +1.00806824e+01 + 8.05717325e-03 * T - 1.94438170e-06 * T2 +
                  2.36689830e-10 * T3 - 1.13794441e-14 * T4 +
                  1.94364771e+03 * invT;
    // species 34: C5H5
    species[34] = +7.47439380e+00 + 8.00636650e-03 * T - 2.16077160e-09 * T2 -
                  8.95492575e-10 * T3 + 1.84730142e-13 * T4 +
                  2.80860000e+04 * invT;
    // species 35: C6H5
    species[35] = +8.59731100e+00 + 1.11208150e-02 * T - 2.90666593e-06 * T2 +
                  3.44719625e-10 * T3 - 1.06292112e-14 * T4 +
                  3.62610470e+04 * invT;
    // species 36: C6H5CH2
    species[36] = +1.40439800e+01 + 1.17469365e-02 * T - 2.84584557e-06 * T2 +
                  3.47271025e-10 * T3 - 1.67228840e-14 * T4 +
                  1.85642030e+04 * invT;
    // species 37: C6H5O
    species[37] = +1.37221720e+01 + 8.73443855e-03 * T - 2.11834840e-06 * T2 +
                  2.58730770e-10 * T3 - 1.24682101e-14 * T4 +
                  2.87274751e+02 * invT;
    // species 38: C6H5CO
    species[38] = +1.33744090e+01 + 1.19996445e-02 * T - 3.48857467e-06 * T2 +
                  5.41728275e-10 * T3 - 3.60140900e-14 * T4 +
                  6.91478370e+03 * invT;
    // species 39: C6H5CHO
    species[39] = +1.36507370e+01 + 1.28402095e-02 * T - 3.48890967e-06 * T2 +
                  4.85335750e-10 * T3 - 2.69675840e-14 * T4 -
                  1.10197440e+04 * invT;
    // species 40: N2
    species[40] = +2.92664000e+00 + 7.43988400e-04 * T - 1.89492000e-07 * T2 +
                  2.52425950e-11 * T3 - 1.35067020e-15 * T4 -
                  9.22797700e+02 * invT;
  }
}

// compute the S/R at the given temperature (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEntropy(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real logT = log(T);

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: POSF10325
    species[0] = +2.57855180e+00 * logT + 7.26248320e-02 * T +
                 3.66181850e-05 * T2 - 5.03848133e-08 * T3 +
                 1.72338947e-11 * T4 + 2.25337350e+01;
    // species 1: C2H4
    species[1] = +3.95920148e+00 * logT - 7.57052247e-03 * T +
                 2.85495146e-05 * T2 - 2.30529584e-08 * T3 +
                 6.74710933e-12 * T4 + 4.09733096e+00;
    // species 2: CH4
    species[2] = +5.14987613e+00 * logT - 1.36709788e-02 * T +
                 2.45900299e-05 * T2 - 1.61581009e-08 * T3 +
                 4.16734890e-12 * T4 - 4.64130376e+00;
    // species 3: C3H6
    species[3] = +1.49330700e+00 * logT + 2.09251800e-02 * T +
                 2.24339700e-06 * T2 - 5.56304000e-09 * T3 +
                 1.78953650e-12 * T4 + 1.61453400e+01;
    // species 4: iC4H8
    species[4] = +2.64714050e+00 * logT + 2.59029570e-02 * T +
                 4.09926770e-06 * T2 - 7.39775300e-09 * T3 +
                 2.22396450e-12 * T4 + 1.26763880e+01;
    // species 5: C4H81
    species[5] = +1.18113800e+00 * logT + 3.08533800e-02 * T +
                 2.54326235e-06 * T2 - 8.21829600e-09 * T3 +
                 2.77754825e-12 * T4 + 2.10624690e+01;
    // species 6: H2
    species[6] = +2.34433112e+00 * logT + 7.98052075e-03 * T -
                 9.73907550e-06 * T2 + 6.71906980e-09 * T3 -
                 1.84402940e-12 * T4 + 6.83010238e-01;
    // species 7: C2H6
    species[7] = +4.29142492e+00 * logT - 5.50154270e-03 * T +
                 2.99719144e-05 * T2 - 2.36155428e-08 * T3 +
                 6.71714427e-12 * T4 + 2.66682316e+00;
    // species 8: CO
    species[8] = +3.57953347e+00 * logT - 6.10353680e-04 * T +
                 5.08407165e-07 * T2 + 3.02335295e-10 * T3 -
                 2.26106125e-13 * T4 + 3.50840928e+00;
    // species 9: C6H6
    species[9] = -4.84377340e+00 * logT + 5.84276130e-02 * T -
                 1.47429275e-05 * T2 - 2.31301467e-09 * T3 +
                 2.05313133e-12 * T4 + 4.38898320e+01;
    // species 10: C2H2
    species[10] = +8.08681094e-01 * logT + 2.33615629e-02 * T -
                  1.77585907e-05 * T2 + 9.33841457e-09 * T3 -
                  2.12518243e-12 * T4 + 1.39397051e+01;
    // species 11: C6H5CH3
    species[11] = +1.61526630e+00 * logT + 2.10994380e-02 * T +
                  4.26830090e-05 * T2 - 4.42035533e-08 * T3 +
                  1.39891510e-11 * T4 + 2.02822100e+01;
    // species 12: CH3
    species[12] = +3.67359040e+00 * logT + 2.01095175e-03 * T +
                  2.86510928e-06 * T2 - 2.29039142e-09 * T3 +
                  6.35964335e-13 * T4 + 1.60456433e+00;
    // species 13: O2
    species[13] = +3.78245636e+00 * logT - 2.99673416e-03 * T +
                  4.92365101e-06 * T2 - 3.22709836e-09 * T3 +
                  8.10932092e-13 * T4 + 3.65767573e+00;
    // species 14: O
    species[14] = +3.16826710e+00 * logT - 3.27931884e-03 * T +
                  3.32153198e-06 * T2 - 2.04268875e-09 * T3 +
                  5.28164927e-13 * T4 + 2.05193346e+00;
    // species 15: OH
    species[15] = +4.12530561e+00 * logT - 3.22544939e-03 * T +
                  3.26382346e-06 * T2 - 1.93284548e-09 * T3 +
                  5.15593447e-13 * T4 - 6.90432960e-01;
    // species 16: HO2
    species[16] = +4.30179801e+00 * logT - 4.74912051e-03 * T +
                  1.05791445e-05 * T2 - 8.09212980e-09 * T3 +
                  2.32306281e-12 * T4 + 3.71666245e+00;
    // species 17: H2O
    species[17] = +4.19864056e+00 * logT - 2.03643410e-03 * T +
                  3.26020105e-06 * T2 - 1.82932354e-09 * T3 +
                  4.42994543e-13 * T4 - 8.49032208e-01;
    // species 18: H2O2
    species[18] = +4.27611269e+00 * logT - 5.42822417e-04 * T +
                  8.36678505e-06 * T2 - 7.19236043e-09 * T3 +
                  2.15613591e-12 * T4 + 3.43505074e+00;
    // species 19: H
    species[19] = +2.50000000e+00 * logT + 7.05332819e-13 * T -
                  9.97959820e-16 * T2 + 7.66938773e-19 * T3 -
                  2.31933083e-22 * T4 - 4.46682853e-01;
    // species 20: CH2
    species[20] = +3.76267867e+00 * logT + 9.68872143e-04 * T +
                  1.39744921e-06 * T2 - 1.28363718e-09 * T3 +
                  4.21854298e-13 * T4 + 1.56253185e+00;
    // species 21: CH2*
    species[21] = +4.19860411e+00 * logT - 2.36661419e-03 * T +
                  4.11648110e-06 * T2 - 2.22938660e-09 * T3 +
                  4.85786843e-13 * T4 - 7.69118967e-01;
    // species 22: HCO
    species[22] = +4.22118584e+00 * logT - 3.24392532e-03 * T +
                  6.88997230e-06 * T2 - 4.43813643e-09 * T3 +
                  1.08442216e-12 * T4 + 3.39437243e+00;
    // species 23: CH2O
    species[23] = +4.79372315e+00 * logT - 9.90833369e-03 * T +
                  1.86610004e-05 * T2 - 1.26428420e-08 * T3 +
                  3.29431630e-12 * T4 + 6.02812900e-01;
    // species 24: CH3O
    species[24] = +3.71180502e+00 * logT - 2.80463306e-03 * T +
                  1.88275486e-05 * T2 - 1.57690696e-08 * T3 +
                  4.66471050e-12 * T4 + 6.57240864e+00;
    // species 25: CO2
    species[25] = +2.35677352e+00 * logT + 8.98459677e-03 * T -
                  3.56178134e-06 * T2 + 8.19730073e-10 * T3 -
                  3.59248870e-14 * T4 + 9.90105222e+00;
    // species 26: C2H3
    species[26] = +3.21246645e+00 * logT + 1.51479162e-03 * T +
                  1.29604706e-05 * T2 - 1.19219282e-08 * T3 +
                  3.67877182e-12 * T4 + 8.51054025e+00;
    // species 27: C2H5
    species[27] = +4.30646568e+00 * logT - 4.18658892e-03 * T +
                  2.48571403e-05 * T2 - 1.99708869e-08 * T3 +
                  5.76272510e-12 * T4 + 4.70720924e+00;
    // species 28: HCCO
    species[28] = +2.25172140e+00 * logT + 1.76550210e-02 * T -
                  1.18645505e-05 * T2 + 5.75858633e-09 * T3 -
                  1.26662028e-12 * T4 + 1.24904170e+01;
    // species 29: CH2CO
    species[29] = +2.13583630e+00 * logT + 1.81188721e-02 * T -
                  8.69737370e-06 * T2 + 3.11465856e-09 * T3 -
                  5.03644037e-13 * T4 + 1.22156480e+01;
    // species 30: CH2CHO
    species[30] = +3.40906240e+00 * logT + 1.07385740e-02 * T +
                  9.45746250e-07 * T2 - 2.38619437e-09 * T3 +
                  7.16846275e-13 * T4 + 9.57145350e+00;
    // species 31: C3H3
    species[31] = +1.35110927e+00 * logT + 3.27411223e-02 * T -
                  2.36913568e-05 * T2 + 1.25436603e-08 * T3 -
                  2.96352308e-12 * T4 + 1.52058924e+01;
    // species 32: aC3H5
    species[32] = +1.36318350e+00 * logT + 1.98138210e-02 * T +
                  6.24853000e-06 * T2 - 1.11185183e-08 * T3 +
                  3.96164275e-12 * T4 + 1.71732140e+01;
    // species 33: C5H4O
    species[33] = +2.64576497e-01 * logT + 3.34873827e-02 * T +
                  8.38692350e-07 * T2 - 9.87358183e-09 * T3 +
                  3.86078690e-12 * T4 + 2.35409513e+01;
    // species 34: C5H5
    species[34] = +9.83498220e-01 * logT + 3.36514760e-02 * T -
                  5.52709050e-08 * T2 - 1.22477980e-08 * T3 +
                  5.78529600e-12 * T4 + 1.65855190e+01;
    // species 35: C6H5
    species[35] = -3.69314530e+00 * logT + 5.21789680e-02 * T -
                  1.27792135e-05 * T2 - 2.35537070e-09 * T3 +
                  1.89584937e-12 * T4 + 4.13325350e+01;
    // species 36: C6H5CH2
    species[36] = +4.81115400e-01 * logT + 3.85128320e-02 * T +
                  1.64307460e-05 * T2 - 2.56575737e-08 * T3 +
                  8.85576700e-12 * T4 + 2.35488200e+01;
    // species 37: C6H5O
    species[37] = -4.66204455e-01 * logT + 4.13443975e-02 * T +
                  6.62064955e-06 * T2 - 1.90957590e-08 * T3 +
                  7.24409267e-12 * T4 + 2.76990274e+01;
    // species 38: C6H5CO
    species[38] = -2.02511550e+00 * logT + 6.15125410e-02 * T -
                  1.58018265e-05 * T2 - 2.32415330e-09 * T3 +
                  1.99587872e-12 * T4 + 3.57781750e+01;
    // species 39: C6H5CHO
    species[39] = -3.16273340e+00 * logT + 6.63692450e-02 * T -
                  1.74081765e-05 * T2 - 2.09997923e-09 * T3 +
                  2.14517753e-12 * T4 + 4.02317350e+01;
    // species 40: N2
    species[40] = +3.29867700e+00 * logT + 1.40824040e-03 * T -
                  1.98161100e-06 * T2 + 1.88050500e-09 * T3 -
                  6.11213500e-13 * T4 + 3.95037200e+00;
  } else {
    // species 0: POSF10325
    species[0] = +2.13578910e+01 * logT + 6.65890870e-02 * T -
                 1.29837345e-05 * T2 + 1.49250003e-09 * T3 -
                 5.90178800e-14 * T4 - 8.61360860e+01;
    // species 1: C2H4
    species[1] = +2.03611116e+00 * logT + 1.46454151e-02 * T -
                 3.35538958e-06 * T2 + 4.90743077e-10 * T3 -
                 3.14265152e-14 * T4 + 1.03053693e+01;
    // species 2: CH4
    species[2] = +7.48514950e-02 * logT + 1.33909467e-02 * T -
                 2.86642905e-06 * T2 + 4.07641783e-10 * T3 -
                 2.54538075e-14 * T4 + 1.84373180e+01;
    // species 3: C3H6
    species[3] = +6.73225700e+00 * logT + 1.49083400e-02 * T -
                 2.47494950e-06 * T2 + 2.40400733e-10 * T3 -
                 9.41551000e-15 * T4 - 1.33133500e+01;
    // species 4: iC4H8
    species[4] = +4.46094700e+00 * logT + 2.96114870e-02 * T -
                 6.53856450e-06 * T2 + 8.85731133e-10 * T3 -
                 5.03367825e-14 * T4 + 1.06715490e+00;
    // species 5: C4H81
    species[5] = +2.05358410e+00 * logT + 3.43505070e-02 * T -
                 7.94159850e-06 * T2 + 1.10298873e-09 * T3 -
                 6.34026125e-14 * T4 + 1.55432010e+01;
    // species 6: H2
    species[6] = +3.33727920e+00 * logT - 4.94024731e-05 * T +
                 2.49728389e-07 * T2 - 5.98554647e-11 * T3 +
                 5.00638440e-15 * T4 - 3.20502331e+00;
    // species 7: C2H6
    species[7] = +1.07188150e+00 * logT + 2.16852677e-02 * T -
                 5.01280335e-06 * T2 + 7.38040003e-10 * T3 -
                 4.75007225e-14 * T4 + 1.51156107e+01;
    // species 8: CO
    species[8] = +2.71518561e+00 * logT + 2.06252743e-03 * T -
                 4.99412886e-07 * T2 + 7.66843360e-11 * T3 -
                 5.09119290e-15 * T4 + 7.81868772e+00;
    // species 9: C6H6
    species[9] = +9.13812450e+00 * logT + 2.38544330e-02 * T -
                 4.40638630e-06 * T2 + 4.03300700e-10 * T3 -
                 4.55537575e-15 * T4 - 2.91156650e+01;
    // species 10: C2H2
    species[10] = +4.14756964e+00 * logT + 5.96166664e-03 * T -
                  1.18647426e-06 * T2 + 1.55804057e-10 * T3 -
                  9.03088033e-15 * T4 - 1.23028121e+00;
    // species 11: C6H5CH3
    species[11] = +1.29400340e+01 * logT + 2.66912870e-02 * T -
                  4.84192525e-06 * T2 + 5.24620967e-10 * T3 -
                  2.36659002e-14 * T4 - 4.67287850e+01;
    // species 12: CH3
    species[12] = +2.28571772e+00 * logT + 7.23990037e-03 * T -
                  1.49357174e-06 * T2 + 1.98561548e-10 * T3 -
                  1.16788599e-14 * T4 + 8.48007179e+00;
    // species 13: O2
    species[13] = +3.28253784e+00 * logT + 1.48308754e-03 * T -
                  3.78983334e-07 * T2 + 6.98235183e-11 * T3 -
                  5.41794485e-15 * T4 + 5.45323129e+00;
    // species 14: O
    species[14] = +2.56942078e+00 * logT - 8.59741137e-05 * T +
                  2.09742295e-08 * T2 - 3.33925997e-12 * T3 +
                  3.07084227e-16 * T4 + 4.78433864e+00;
    // species 15: OH
    species[15] = +2.86472886e+00 * logT + 1.05650448e-03 * T -
                  1.29541379e-07 * T2 + 1.01739558e-11 * T3 -
                  3.32989690e-16 * T4 + 5.70164073e+00;
    // species 16: HO2
    species[16] = +4.01721090e+00 * logT + 2.23982013e-03 * T -
                  3.16829075e-07 * T2 + 3.80821233e-11 * T3 -
                  2.69771337e-15 * T4 + 3.78510215e+00;
    // species 17: H2O
    species[17] = +3.03399249e+00 * logT + 2.17691804e-03 * T -
                  8.20362590e-08 * T2 - 3.23473290e-11 * T3 +
                  4.20502480e-15 * T4 + 4.96677010e+00;
    // species 18: H2O2
    species[18] = +4.16500285e+00 * logT + 4.90831694e-03 * T -
                  9.50696125e-07 * T2 + 1.23728662e-10 * T3 -
                  7.19770763e-15 * T4 + 2.91615662e+00;
    // species 19: H
    species[19] = +2.50000001e+00 * logT - 2.30842973e-11 * T +
                  8.07809740e-15 * T2 - 1.57838412e-18 * T3 +
                  1.24549339e-22 * T4 - 4.46682914e-01;
    // species 20: CH2
    species[20] = +2.87410113e+00 * logT + 3.65639292e-03 * T -
                  7.04472985e-07 * T2 + 8.67265163e-11 * T3 -
                  4.69318918e-15 * T4 + 6.17119324e+00;
    // species 21: CH2*
    species[21] = +2.29203842e+00 * logT + 4.65588637e-03 * T -
                  1.00595973e-06 * T2 + 1.39302000e-10 * T3 -
                  8.49290912e-15 * T4 + 8.62650169e+00;
    // species 22: HCO
    species[22] = +2.77217438e+00 * logT + 4.95695526e-03 * T -
                  1.24222806e-06 * T2 + 1.96387259e-10 * T3 -
                  1.33377178e-14 * T4 + 9.79834492e+00;
    // species 23: CH2O
    species[23] = +1.76069008e+00 * logT + 9.20000082e-03 * T -
                  2.21129406e-06 * T2 + 3.35470707e-10 * T3 -
                  2.20963910e-14 * T4 + 1.36563230e+01;
    // species 24: CH3O
    species[24] = +4.75779238e+00 * logT + 7.44142474e-03 * T -
                  1.34852588e-06 * T2 + 1.46030168e-10 * T3 -
                  6.58842745e-15 * T4 - 1.96680028e+00;
    // species 25: CO2
    species[25] = +3.85746029e+00 * logT + 4.41437026e-03 * T -
                  1.10740702e-06 * T2 + 1.74496729e-10 * T3 -
                  1.18021041e-14 * T4 + 2.27163806e+00;
    // species 26: C2H3
    species[26] = +3.01672400e+00 * logT + 1.03302292e-02 * T -
                  2.34041174e-06 * T2 + 3.39210960e-10 * T3 -
                  2.15651760e-14 * T4 + 7.78732378e+00;
    // species 27: C2H5
    species[27] = +1.95465642e+00 * logT + 1.73972722e-02 * T -
                  3.99103334e-06 * T2 + 5.84058963e-10 * T3 -
                  3.74103940e-14 * T4 + 1.34624343e+01;
    // species 28: HCCO
    species[28] = +5.62820580e+00 * logT + 4.08534010e-03 * T -
                  7.96727350e-07 * T2 + 9.54201733e-11 * T3 -
                  4.85195800e-15 * T4 - 3.93025950e+00;
    // species 29: CH2CO
    species[29] = +4.51129732e+00 * logT + 9.00359745e-03 * T -
                  2.08469817e-06 * T2 + 3.07781961e-10 * T3 -
                  1.98709550e-14 * T4 + 6.32247205e-01;
    // species 30: CH2CHO
    species[30] = +5.97566990e+00 * logT + 8.13059140e-03 * T -
                  1.37181225e-06 * T2 + 1.35676803e-10 * T3 -
                  5.44004275e-15 * T4 - 5.03208790e+00;
    // species 31: C3H3
    species[31] = +7.14221880e+00 * logT + 7.61902005e-03 * T -
                  1.33729975e-06 * T2 + 1.41638267e-10 * T3 -
                  6.28688537e-15 * T4 - 1.25848436e+01;
    // species 32: aC3H5
    species[32] = +6.50078770e+00 * logT + 1.43247310e-02 * T -
                  2.83908160e-06 * T2 + 3.69360033e-10 * T3 -
                  2.25909717e-14 * T4 - 1.12430500e+01;
    // species 33: C5H4O
    species[33] = +1.00806824e+01 * logT + 1.61143465e-02 * T -
                  2.91657254e-06 * T2 + 3.15586440e-10 * T3 -
                  1.42243052e-14 * T4 - 2.94521623e+01;
    // species 34: C5H5
    species[34] = +7.47439380e+00 * logT + 1.60127330e-02 * T -
                  3.24115740e-09 * T2 - 1.19399010e-09 * T3 +
                  2.30912678e-13 * T4 - 1.61330000e+01;
    // species 35: C6H5
    species[35] = +8.59731100e+00 * logT + 2.22416300e-02 * T -
                  4.35999890e-06 * T2 + 4.59626167e-10 * T3 -
                  1.32865140e-14 * T4 - 2.29546430e+01;
    // species 36: C6H5CH2
    species[36] = +1.40439800e+01 * logT + 2.34938730e-02 * T -
                  4.26876835e-06 * T2 + 4.63028033e-10 * T3 -
                  2.09036050e-14 * T4 - 5.16655890e+01;
    // species 37: C6H5O
    species[37] = +1.37221720e+01 * logT + 1.74688771e-02 * T -
                  3.17752260e-06 * T2 + 3.44974360e-10 * T3 -
                  1.55852626e-14 * T4 - 4.88181680e+01;
    // species 38: C6H5CO
    species[38] = +1.33744090e+01 * logT + 2.39992890e-02 * T -
                  5.23286200e-06 * T2 + 7.22304367e-10 * T3 -
                  4.50176125e-14 * T4 - 4.46592180e+01;
    // species 39: C6H5CHO
    species[39] = +1.36507370e+01 * logT + 2.56804190e-02 * T -
                  5.23336450e-06 * T2 + 6.47114333e-10 * T3 -
                  3.37094800e-14 * T4 - 4.79657960e+01;
    // species 40: N2
    species[40] = +2.92664000e+00 * logT + 1.48797680e-03 * T -
                  2.84238000e-07 * T2 + 3.36567933e-11 * T3 -
                  1.68833775e-15 * T4 + 5.98052800e+00;
  }
}

// compute d(Cp/R)/dT and d(Cv/R)/dT at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
dcvpRdT(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: POSF10325
    species[0] = +7.26248320e-02 + 1.46472740e-04 * T - 4.53463320e-07 * T2 +
                 2.75742316e-10 * T3;
    // species 1: C2H4
    species[1] = -7.57052247e-03 + 1.14198058e-04 * T - 2.07476626e-07 * T2 +
                 1.07953749e-10 * T3;
    // species 2: CH4
    species[2] = -1.36709788e-02 + 9.83601198e-05 * T - 1.45422908e-07 * T2 +
                 6.66775824e-11 * T3;
    // species 3: C3H6
    species[3] = +2.09251800e-02 + 8.97358800e-06 * T - 5.00673600e-08 * T2 +
                 2.86325840e-11 * T3;
    // species 4: iC4H8
    species[4] = +2.59029570e-02 + 1.63970708e-05 * T - 6.65797770e-08 * T2 +
                 3.55834320e-11 * T3;
    // species 5: C4H81
    species[5] = +3.08533800e-02 + 1.01730494e-05 * T - 7.39646640e-08 * T2 +
                 4.44407720e-11 * T3;
    // species 6: H2
    species[6] = +7.98052075e-03 - 3.89563020e-05 * T + 6.04716282e-08 * T2 -
                 2.95044704e-11 * T3;
    // species 7: C2H6
    species[7] = -5.50154270e-03 + 1.19887658e-04 * T - 2.12539886e-07 * T2 +
                 1.07474308e-10 * T3;
    // species 8: CO
    species[8] = -6.10353680e-04 + 2.03362866e-06 * T + 2.72101765e-09 * T2 -
                 3.61769800e-12 * T3;
    // species 9: C6H6
    species[9] = +5.84276130e-02 - 5.89717100e-05 * T - 2.08171320e-08 * T2 +
                 3.28501012e-11 * T3;
    // species 10: C2H2
    species[10] = +2.33615629e-02 - 7.10343630e-05 * T + 8.40457311e-08 * T2 -
                  3.40029190e-11 * T3;
    // species 11: C6H5CH3
    species[11] = +2.10994380e-02 + 1.70732036e-04 * T - 3.97831980e-07 * T2 +
                  2.23826416e-10 * T3;
    // species 12: CH3
    species[12] = +2.01095175e-03 + 1.14604371e-05 * T - 2.06135228e-08 * T2 +
                  1.01754294e-11 * T3;
    // species 13: O2
    species[13] = -2.99673416e-03 + 1.96946040e-05 * T - 2.90438853e-08 * T2 +
                  1.29749135e-11 * T3;
    // species 14: O
    species[14] = -3.27931884e-03 + 1.32861279e-05 * T - 1.83841987e-08 * T2 +
                  8.45063884e-12 * T3;
    // species 15: OH
    species[15] = -3.22544939e-03 + 1.30552938e-05 * T - 1.73956093e-08 * T2 +
                  8.24949516e-12 * T3;
    // species 16: HO2
    species[16] = -4.74912051e-03 + 4.23165782e-05 * T - 7.28291682e-08 * T2 +
                  3.71690050e-11 * T3;
    // species 17: H2O
    species[17] = -2.03643410e-03 + 1.30408042e-05 * T - 1.64639119e-08 * T2 +
                  7.08791268e-12 * T3;
    // species 18: H2O2
    species[18] = -5.42822417e-04 + 3.34671402e-05 * T - 6.47312439e-08 * T2 +
                  3.44981745e-11 * T3;
    // species 19: H
    species[19] = +7.05332819e-13 - 3.99183928e-15 * T + 6.90244896e-18 * T2 -
                  3.71092933e-21 * T3;
    // species 20: CH2
    species[20] = +9.68872143e-04 + 5.58979682e-06 * T - 1.15527346e-08 * T2 +
                  6.74966876e-12 * T3;
    // species 21: CH2*
    species[21] = -2.36661419e-03 + 1.64659244e-05 * T - 2.00644794e-08 * T2 +
                  7.77258948e-12 * T3;
    // species 22: HCO
    species[22] = -3.24392532e-03 + 2.75598892e-05 * T - 3.99432279e-08 * T2 +
                  1.73507546e-11 * T3;
    // species 23: CH2O
    species[23] = -9.90833369e-03 + 7.46440016e-05 * T - 1.13785578e-07 * T2 +
                  5.27090608e-11 * T3;
    // species 24: CH3O
    species[24] = -2.80463306e-03 + 7.53101942e-05 * T - 1.41921627e-07 * T2 +
                  7.46353680e-11 * T3;
    // species 25: CO2
    species[25] = +8.98459677e-03 - 1.42471254e-05 * T + 7.37757066e-09 * T2 -
                  5.74798192e-13 * T3;
    // species 26: C2H3
    species[26] = +1.51479162e-03 + 5.18418824e-05 * T - 1.07297354e-07 * T2 +
                  5.88603492e-11 * T3;
    // species 27: C2H5
    species[27] = -4.18658892e-03 + 9.94285614e-05 * T - 1.79737982e-07 * T2 +
                  9.22036016e-11 * T3;
    // species 28: HCCO
    species[28] = +1.76550210e-02 - 4.74582020e-05 * T + 5.18272770e-08 * T2 -
                  2.02659244e-11 * T3;
    // species 29: CH2CO
    species[29] = +1.81188721e-02 - 3.47894948e-05 * T + 2.80319270e-08 * T2 -
                  8.05830460e-12 * T3;
    // species 30: CH2CHO
    species[30] = +1.07385740e-02 + 3.78298500e-06 * T - 2.14757493e-08 * T2 +
                  1.14695404e-11 * T3;
    // species 31: C3H3
    species[31] = +3.27411223e-02 - 9.47654270e-05 * T + 1.12892942e-07 * T2 -
                  4.74163692e-11 * T3;
    // species 32: aC3H5
    species[32] = +1.98138210e-02 + 2.49941200e-05 * T - 1.00066665e-07 * T2 +
                  6.33862840e-11 * T3;
    // species 33: C5H4O
    species[33] = +3.34873827e-02 + 3.35476940e-06 * T - 8.88622365e-08 * T2 +
                  6.17725904e-11 * T3;
    // species 34: C5H5
    species[34] = +3.36514760e-02 - 2.21083620e-07 * T - 1.10230182e-07 * T2 +
                  9.25647360e-11 * T3;
    // species 35: C6H5
    species[35] = +5.21789680e-02 - 5.11168540e-05 * T - 2.11983363e-08 * T2 +
                  3.03335900e-11 * T3;
    // species 36: C6H5CH2
    species[36] = +3.85128320e-02 + 6.57229840e-05 * T - 2.30918163e-07 * T2 +
                  1.41692272e-10 * T3;
    // species 37: C6H5O
    species[37] = +4.13443975e-02 + 2.64825982e-05 * T - 1.71861831e-07 * T2 +
                  1.15905483e-10 * T3;
    // species 38: C6H5CO
    species[38] = +6.15125410e-02 - 6.32073060e-05 * T - 2.09173797e-08 * T2 +
                  3.19340596e-11 * T3;
    // species 39: C6H5CHO
    species[39] = +6.63692450e-02 - 6.96327060e-05 * T - 1.88998131e-08 * T2 +
                  3.43228404e-11 * T3;
    // species 40: N2
    species[40] = +1.40824040e-03 - 7.92644400e-06 * T + 1.69245450e-08 * T2 -
                  9.77941600e-12 * T3;
  } else {
    // species 0: POSF10325
    species[0] = +6.65890870e-02 - 5.19349380e-05 * T + 1.34325003e-08 * T2 -
                 9.44286080e-13 * T3;
    // species 1: C2H4
    species[1] = +1.46454151e-02 - 1.34215583e-05 * T + 4.41668769e-09 * T2 -
                 5.02824244e-13 * T3;
    // species 2: CH4
    species[2] = +1.33909467e-02 - 1.14657162e-05 * T + 3.66877605e-09 * T2 -
                 4.07260920e-13 * T3;
    // species 3: C3H6
    species[3] = +1.49083400e-02 - 9.89979800e-06 * T + 2.16360660e-09 * T2 -
                 1.50648160e-13 * T3;
    // species 4: iC4H8
    species[4] = +2.96114870e-02 - 2.61542580e-05 * T + 7.97158020e-09 * T2 -
                 8.05388520e-13 * T3;
    // species 5: C4H81
    species[5] = +3.43505070e-02 - 3.17663940e-05 * T + 9.92689860e-09 * T2 -
                 1.01444180e-12 * T3;
    // species 6: H2
    species[6] = -4.94024731e-05 + 9.98913556e-07 * T - 5.38699182e-10 * T2 +
                 8.01021504e-14 * T3;
    // species 7: C2H6
    species[7] = +2.16852677e-02 - 2.00512134e-05 * T + 6.64236003e-09 * T2 -
                 7.60011560e-13 * T3;
    // species 8: CO
    species[8] = +2.06252743e-03 - 1.99765154e-06 * T + 6.90159024e-10 * T2 -
                 8.14590864e-14 * T3;
    // species 9: C6H6
    species[9] = +2.38544330e-02 - 1.76255452e-05 * T + 3.62970630e-09 * T2 -
                 7.28860120e-14 * T3;
    // species 10: C2H2
    species[10] = +5.96166664e-03 - 4.74589704e-06 * T + 1.40223651e-09 * T2 -
                  1.44494085e-13 * T3;
    // species 11: C6H5CH3
    species[11] = +2.66912870e-02 - 1.93677010e-05 * T + 4.72158870e-09 * T2 -
                  3.78654404e-13 * T3;
    // species 12: CH3
    species[12] = +7.23990037e-03 - 5.97428696e-06 * T + 1.78705393e-09 * T2 -
                  1.86861758e-13 * T3;
    // species 13: O2
    species[13] = +1.48308754e-03 - 1.51593334e-06 * T + 6.28411665e-10 * T2 -
                  8.66871176e-14 * T3;
    // species 14: O
    species[14] = -8.59741137e-05 + 8.38969178e-08 * T - 3.00533397e-11 * T2 +
                  4.91334764e-15 * T3;
    // species 15: OH
    species[15] = +1.05650448e-03 - 5.18165516e-07 * T + 9.15656022e-11 * T2 -
                  5.32783504e-15 * T3;
    // species 16: HO2
    species[16] = +2.23982013e-03 - 1.26731630e-06 * T + 3.42739110e-10 * T2 -
                  4.31634140e-14 * T3;
    // species 17: H2O
    species[17] = +2.17691804e-03 - 3.28145036e-07 * T - 2.91125961e-10 * T2 +
                  6.72803968e-14 * T3;
    // species 18: H2O2
    species[18] = +4.90831694e-03 - 3.80278450e-06 * T + 1.11355796e-09 * T2 -
                  1.15163322e-13 * T3;
    // species 19: H
    species[19] = -2.30842973e-11 + 3.23123896e-14 * T - 1.42054571e-17 * T2 +
                  1.99278943e-21 * T3;
    // species 20: CH2
    species[20] = +3.65639292e-03 - 2.81789194e-06 * T + 7.80538647e-10 * T2 -
                  7.50910268e-14 * T3;
    // species 21: CH2*
    species[21] = +4.65588637e-03 - 4.02383894e-06 * T + 1.25371800e-09 * T2 -
                  1.35886546e-13 * T3;
    // species 22: HCO
    species[22] = +4.95695526e-03 - 4.96891226e-06 * T + 1.76748533e-09 * T2 -
                  2.13403484e-13 * T3;
    // species 23: CH2O
    species[23] = +9.20000082e-03 - 8.84517626e-06 * T + 3.01923636e-09 * T2 -
                  3.53542256e-13 * T3;
    // species 24: CH3O
    species[24] = +7.44142474e-03 - 5.39410352e-06 * T + 1.31427151e-09 * T2 -
                  1.05414839e-13 * T3;
    // species 25: CO2
    species[25] = +4.41437026e-03 - 4.42962808e-06 * T + 1.57047056e-09 * T2 -
                  1.88833666e-13 * T3;
    // species 26: C2H3
    species[26] = +1.03302292e-02 - 9.36164698e-06 * T + 3.05289864e-09 * T2 -
                  3.45042816e-13 * T3;
    // species 27: C2H5
    species[27] = +1.73972722e-02 - 1.59641334e-05 * T + 5.25653067e-09 * T2 -
                  5.98566304e-13 * T3;
    // species 28: HCCO
    species[28] = +4.08534010e-03 - 3.18690940e-06 * T + 8.58781560e-10 * T2 -
                  7.76313280e-14 * T3;
    // species 29: CH2CO
    species[29] = +9.00359745e-03 - 8.33879270e-06 * T + 2.77003765e-09 * T2 -
                  3.17935280e-13 * T3;
    // species 30: CH2CHO
    species[30] = +8.13059140e-03 - 5.48724900e-06 * T + 1.22109123e-09 * T2 -
                  8.70406840e-14 * T3;
    // species 31: C3H3
    species[31] = +7.61902005e-03 - 5.34919900e-06 * T + 1.27474440e-09 * T2 -
                  1.00590166e-13 * T3;
    // species 32: aC3H5
    species[32] = +1.43247310e-02 - 1.13563264e-05 * T + 3.32424030e-09 * T2 -
                  3.61455548e-13 * T3;
    // species 33: C5H4O
    species[33] = +1.61143465e-02 - 1.16662902e-05 * T + 2.84027796e-09 * T2 -
                  2.27588882e-13 * T3;
    // species 34: C5H5
    species[34] = +1.60127330e-02 - 1.29646296e-08 * T - 1.07459109e-08 * T2 +
                  3.69460284e-12 * T3;
    // species 35: C6H5
    species[35] = +2.22416300e-02 - 1.74399956e-05 * T + 4.13663550e-09 * T2 -
                  2.12584224e-13 * T3;
    // species 36: C6H5CH2
    species[36] = +2.34938730e-02 - 1.70750734e-05 * T + 4.16725230e-09 * T2 -
                  3.34457680e-13 * T3;
    // species 37: C6H5O
    species[37] = +1.74688771e-02 - 1.27100904e-05 * T + 3.10476924e-09 * T2 -
                  2.49364202e-13 * T3;
    // species 38: C6H5CO
    species[38] = +2.39992890e-02 - 2.09314480e-05 * T + 6.50073930e-09 * T2 -
                  7.20281800e-13 * T3;
    // species 39: C6H5CHO
    species[39] = +2.56804190e-02 - 2.09334580e-05 * T + 5.82402900e-09 * T2 -
                  5.39351680e-13 * T3;
    // species 40: N2
    species[40] = +1.48797680e-03 - 1.13695200e-06 * T + 3.02911140e-10 * T2 -
                  2.70134040e-14 * T3;
  }
}

// Returns the mean specific heat at CP (Eq. 33)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBL(const amrex::Real T, const amrex::Real x[], amrex::Real& cpbl)
{
  amrex::Real result = 0;
  amrex::Real cpor[41]; //  temporary storage
  cp_R(cpor, T);

  // perform dot product
  for (int id = 0; id < 41; ++id) {
    result += x[id] * cpor[id];
  }

  cpbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CP (Eq. 34)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBS(const amrex::Real T, const amrex::Real y[], amrex::Real& cpbs)
{
  amrex::Real result = 0.0;

  // compute Cp/R at the given temperature
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: POSF10325
    result += y[0] *
              (+2.57855180e+00 + 7.26248320e-02 * T + 7.32363700e-05 * T2 -
               1.51154440e-07 * T3 + 6.89355790e-11 * T4) *
              0.0064810074077915;
    // species 1: C2H4
    result += y[1] *
              (+3.95920148e+00 - 7.57052247e-03 * T + 5.70990292e-05 * T2 -
               6.91588753e-08 * T3 + 2.69884373e-11 * T4) *
              0.0356455407428531;
    // species 2: CH4
    result += y[2] *
              (+5.14987613e+00 - 1.36709788e-02 * T + 4.91800599e-05 * T2 -
               4.84743026e-08 * T3 + 1.66693956e-11 * T4) *
              0.0623324814560868;
    // species 3: C3H6
    result += y[3] *
              (+1.49330700e+00 + 2.09251800e-02 * T + 4.48679400e-06 * T2 -
               1.66891200e-08 * T3 + 7.15814600e-12 * T4) *
              0.0237636938285687;
    // species 4: iC4H8
    result += y[4] *
              (+2.64714050e+00 + 2.59029570e-02 * T + 8.19853540e-06 * T2 -
               2.21932590e-08 * T3 + 8.89585800e-12 * T4) *
              0.0178227703714265;
    // species 5: C4H81
    result += y[5] *
              (+1.18113800e+00 + 3.08533800e-02 * T + 5.08652470e-06 * T2 -
               2.46548880e-08 * T3 + 1.11101930e-11 * T4) *
              0.0178227703714265;
    // species 6: H2
    result += y[6] *
              (+2.34433112e+00 + 7.98052075e-03 * T - 1.94781510e-05 * T2 +
               2.01572094e-08 * T3 - 7.37611761e-12 * T4) *
              0.4960317460317460;
    // species 7: C2H6
    result += y[7] *
              (+4.29142492e+00 - 5.50154270e-03 * T + 5.99438288e-05 * T2 -
               7.08466285e-08 * T3 + 2.68685771e-11 * T4) *
              0.0332557366145660;
    // species 8: CO
    result += y[8] *
              (+3.57953347e+00 - 6.10353680e-04 * T + 1.01681433e-06 * T2 +
               9.07005884e-10 * T3 - 9.04424499e-13 * T4) *
              0.0357015351660121;
    // species 9: C6H6
    result += y[9] *
              (-4.84377340e+00 + 5.84276130e-02 * T - 2.94858550e-05 * T2 -
               6.93904400e-09 * T3 + 8.21252530e-12 * T4) *
              0.0128018024937911;
    // species 10: C2H2
    result += y[10] *
              (+8.08681094e-01 + 2.33615629e-02 * T - 3.55171815e-05 * T2 +
               2.80152437e-08 * T3 - 8.50072974e-12 * T4) *
              0.0384054074813734;
    // species 11: C6H5CH3
    result += y[11] *
              (+1.61526630e+00 + 2.10994380e-02 * T + 8.53660180e-05 * T2 -
               1.32610660e-07 * T3 + 5.59566040e-11 * T4) *
              0.0108529319195581;
    // species 12: CH3
    result += y[12] *
              (+3.67359040e+00 + 2.01095175e-03 * T + 5.73021856e-06 * T2 -
               6.87117425e-09 * T3 + 2.54385734e-12 * T4) *
              0.0665114732291320;
    // species 13: O2
    result += y[13] *
              (+3.78245636e+00 - 2.99673416e-03 * T + 9.84730201e-06 * T2 -
               9.68129509e-09 * T3 + 3.24372837e-12 * T4) *
              0.0312519532470779;
    // species 14: O
    result += y[14] *
              (+3.16826710e+00 - 3.27931884e-03 * T + 6.64306396e-06 * T2 -
               6.12806624e-09 * T3 + 2.11265971e-12 * T4) *
              0.0625039064941559;
    // species 15: OH
    result += y[15] *
              (+4.12530561e+00 - 3.22544939e-03 * T + 6.52764691e-06 * T2 -
               5.79853643e-09 * T3 + 2.06237379e-12 * T4) *
              0.0587993179279120;
    // species 16: HO2
    result += y[16] *
              (+4.30179801e+00 - 4.74912051e-03 * T + 2.11582891e-05 * T2 -
               2.42763894e-08 * T3 + 9.29225124e-12 * T4) *
              0.0302975216627280;
    // species 17: H2O
    result += y[17] *
              (+4.19864056e+00 - 2.03643410e-03 * T + 6.52040211e-06 * T2 -
               5.48797062e-09 * T3 + 1.77197817e-12 * T4) *
              0.0555092978073827;
    // species 18: H2O2
    result += y[18] *
              (+4.27611269e+00 - 5.42822417e-04 * T + 1.67335701e-05 * T2 -
               2.15770813e-08 * T3 + 8.62454363e-12 * T4) *
              0.0293996589639560;
    // species 19: H
    result += y[19] *
              (+2.50000000e+00 + 7.05332819e-13 * T - 1.99591964e-15 * T2 +
               2.30081632e-18 * T3 - 9.27732332e-22 * T4) *
              0.9920634920634921;
    // species 20: CH2
    result += y[20] *
              (+3.76267867e+00 + 9.68872143e-04 * T + 2.79489841e-06 * T2 -
               3.85091153e-09 * T3 + 1.68741719e-12 * T4) *
              0.0712910814857061;
    // species 21: CH2*
    result += y[21] *
              (+4.19860411e+00 - 2.36661419e-03 * T + 8.23296220e-06 * T2 -
               6.68815981e-09 * T3 + 1.94314737e-12 * T4) *
              0.0712910814857061;
    // species 22: HCO
    result += y[22] *
              (+4.22118584e+00 - 3.24392532e-03 * T + 1.37799446e-05 * T2 -
               1.33144093e-08 * T3 + 4.33768865e-12 * T4) *
              0.0344613688055690;
    // species 23: CH2O
    result += y[23] *
              (+4.79372315e+00 - 9.90833369e-03 * T + 3.73220008e-05 * T2 -
               3.79285261e-08 * T3 + 1.31772652e-11 * T4) *
              0.0333044694598015;
    // species 24: CH3O
    result += y[24] *
              (+3.71180502e+00 - 2.80463306e-03 * T + 3.76550971e-05 * T2 -
               4.73072089e-08 * T3 + 1.86588420e-11 * T4) *
              0.0322227234645872;
    // species 25: CO2
    result += y[25] *
              (+2.35677352e+00 + 8.98459677e-03 * T - 7.12356269e-06 * T2 +
               2.45919022e-09 * T3 - 1.43699548e-13 * T4) *
              0.0227226249176305;
    // species 26: C2H3
    result += y[26] *
              (+3.21246645e+00 + 1.51479162e-03 * T + 2.59209412e-05 * T2 -
               3.57657847e-08 * T3 + 1.47150873e-11 * T4) *
              0.0369740442209569;
    // species 27: C2H5
    result += y[27] *
              (+4.30646568e+00 - 4.18658892e-03 * T + 4.97142807e-05 * T2 -
               5.99126606e-08 * T3 + 2.30509004e-11 * T4) *
              0.0344091941366733;
    // species 28: HCCO
    result += y[28] *
              (+2.25172140e+00 + 1.76550210e-02 * T - 2.37291010e-05 * T2 +
               1.72757590e-08 * T3 - 5.06648110e-12 * T4) *
              0.0243730044602598;
    // species 29: CH2CO
    result += y[29] *
              (+2.13583630e+00 + 1.81188721e-02 * T - 1.73947474e-05 * T2 +
               9.34397568e-09 * T3 - 2.01457615e-12 * T4) *
              0.0237885672145967;
    // species 30: CH2CHO
    result += y[30] *
              (+3.40906240e+00 + 1.07385740e-02 * T + 1.89149250e-06 * T2 -
               7.15858310e-09 * T3 + 2.86738510e-12 * T4) *
              0.0232315019165989;
    // species 31: C3H3
    result += y[31] *
              (+1.35110927e+00 + 3.27411223e-02 * T - 4.73827135e-05 * T2 +
               3.76309808e-08 * T3 - 1.18540923e-11 * T4) *
              0.0256036049875823;
    // species 32: aC3H5
    result += y[32] *
              (+1.36318350e+00 + 1.98138210e-02 * T + 1.24970600e-05 * T2 -
               3.33555550e-08 * T3 + 1.58465710e-11 * T4) *
              0.0243468945535997;
    // species 33: C5H4O
    result += y[33] *
              (+2.64576497e-01 + 3.34873827e-02 * T + 1.67738470e-06 * T2 -
               2.96207455e-08 * T3 + 1.54431476e-11 * T4) *
              0.0124865769298005;
    // species 34: C5H5
    result += y[34] *
              (+9.83498220e-01 + 3.36514760e-02 * T - 1.10541810e-07 * T2 -
               3.67433940e-08 * T3 + 2.31411840e-11 * T4) *
              0.0153621629925494;
    // species 35: C6H5
    result += y[35] *
              (-3.69314530e+00 + 5.21789680e-02 * T - 2.55584270e-05 * T2 -
               7.06611210e-09 * T3 + 7.58339750e-12 * T4) *
              0.0129691593390916;
    // species 36: C6H5CH2
    result += y[36] *
              (+4.81115400e-01 + 3.85128320e-02 * T + 3.28614920e-05 * T2 -
               7.69727210e-08 * T3 + 3.54230680e-11 * T4) *
              0.0109729735661067;
    // species 37: C6H5O
    result += y[37] *
              (-4.66204455e-01 + 4.13443975e-02 * T + 1.32412991e-05 * T2 -
               5.72872769e-08 * T3 + 2.89763707e-11 * T4) *
              0.0107405617313786;
    // species 38: C6H5CO
    result += y[38] *
              (-2.02511550e+00 + 6.15125410e-02 * T - 3.16036530e-05 * T2 -
               6.97245990e-09 * T3 + 7.98351490e-12 * T4) *
              0.0095132995928308;
    // species 39: C6H5CHO
    result += y[39] *
              (-3.16273340e+00 + 6.63692450e-02 * T - 3.48163530e-05 * T2 -
               6.29993770e-09 * T3 + 8.58071010e-12 * T4) *
              0.0094229392031963;
    // species 40: N2
    result += y[40] *
              (+3.29867700e+00 + 1.40824040e-03 * T - 3.96322200e-06 * T2 +
               5.64151500e-09 * T3 - 2.44485400e-12 * T4) *
              0.0356964374955379;
  } else {
    // species 0: POSF10325
    result += y[0] *
              (+2.13578910e+01 + 6.65890870e-02 * T - 2.59674690e-05 * T2 +
               4.47750010e-09 * T3 - 2.36071520e-13 * T4) *
              0.0064810074077915;
    // species 1: C2H4
    result += y[1] *
              (+2.03611116e+00 + 1.46454151e-02 * T - 6.71077915e-06 * T2 +
               1.47222923e-09 * T3 - 1.25706061e-13 * T4) *
              0.0356455407428531;
    // species 2: CH4
    result += y[2] *
              (+7.48514950e-02 + 1.33909467e-02 * T - 5.73285809e-06 * T2 +
               1.22292535e-09 * T3 - 1.01815230e-13 * T4) *
              0.0623324814560868;
    // species 3: C3H6
    result += y[3] *
              (+6.73225700e+00 + 1.49083400e-02 * T - 4.94989900e-06 * T2 +
               7.21202200e-10 * T3 - 3.76620400e-14 * T4) *
              0.0237636938285687;
    // species 4: iC4H8
    result += y[4] *
              (+4.46094700e+00 + 2.96114870e-02 * T - 1.30771290e-05 * T2 +
               2.65719340e-09 * T3 - 2.01347130e-13 * T4) *
              0.0178227703714265;
    // species 5: C4H81
    result += y[5] *
              (+2.05358410e+00 + 3.43505070e-02 * T - 1.58831970e-05 * T2 +
               3.30896620e-09 * T3 - 2.53610450e-13 * T4) *
              0.0178227703714265;
    // species 6: H2
    result += y[6] *
              (+3.33727920e+00 - 4.94024731e-05 * T + 4.99456778e-07 * T2 -
               1.79566394e-10 * T3 + 2.00255376e-14 * T4) *
              0.4960317460317460;
    // species 7: C2H6
    result += y[7] *
              (+1.07188150e+00 + 2.16852677e-02 * T - 1.00256067e-05 * T2 +
               2.21412001e-09 * T3 - 1.90002890e-13 * T4) *
              0.0332557366145660;
    // species 8: CO
    result += y[8] *
              (+2.71518561e+00 + 2.06252743e-03 * T - 9.98825771e-07 * T2 +
               2.30053008e-10 * T3 - 2.03647716e-14 * T4) *
              0.0357015351660121;
    // species 9: C6H6
    result += y[9] *
              (+9.13812450e+00 + 2.38544330e-02 * T - 8.81277260e-06 * T2 +
               1.20990210e-09 * T3 - 1.82215030e-14 * T4) *
              0.0128018024937911;
    // species 10: C2H2
    result += y[10] *
              (+4.14756964e+00 + 5.96166664e-03 * T - 2.37294852e-06 * T2 +
               4.67412171e-10 * T3 - 3.61235213e-14 * T4) *
              0.0384054074813734;
    // species 11: C6H5CH3
    result += y[11] *
              (+1.29400340e+01 + 2.66912870e-02 * T - 9.68385050e-06 * T2 +
               1.57386290e-09 * T3 - 9.46636010e-14 * T4) *
              0.0108529319195581;
    // species 12: CH3
    result += y[12] *
              (+2.28571772e+00 + 7.23990037e-03 * T - 2.98714348e-06 * T2 +
               5.95684644e-10 * T3 - 4.67154394e-14 * T4) *
              0.0665114732291320;
    // species 13: O2
    result += y[13] *
              (+3.28253784e+00 + 1.48308754e-03 * T - 7.57966669e-07 * T2 +
               2.09470555e-10 * T3 - 2.16717794e-14 * T4) *
              0.0312519532470779;
    // species 14: O
    result += y[14] *
              (+2.56942078e+00 - 8.59741137e-05 * T + 4.19484589e-08 * T2 -
               1.00177799e-11 * T3 + 1.22833691e-15 * T4) *
              0.0625039064941559;
    // species 15: OH
    result += y[15] *
              (+2.86472886e+00 + 1.05650448e-03 * T - 2.59082758e-07 * T2 +
               3.05218674e-11 * T3 - 1.33195876e-15 * T4) *
              0.0587993179279120;
    // species 16: HO2
    result += y[16] *
              (+4.01721090e+00 + 2.23982013e-03 * T - 6.33658150e-07 * T2 +
               1.14246370e-10 * T3 - 1.07908535e-14 * T4) *
              0.0302975216627280;
    // species 17: H2O
    result += y[17] *
              (+3.03399249e+00 + 2.17691804e-03 * T - 1.64072518e-07 * T2 -
               9.70419870e-11 * T3 + 1.68200992e-14 * T4) *
              0.0555092978073827;
    // species 18: H2O2
    result += y[18] *
              (+4.16500285e+00 + 4.90831694e-03 * T - 1.90139225e-06 * T2 +
               3.71185986e-10 * T3 - 2.87908305e-14 * T4) *
              0.0293996589639560;
    // species 19: H
    result += y[19] *
              (+2.50000001e+00 - 2.30842973e-11 * T + 1.61561948e-14 * T2 -
               4.73515235e-18 * T3 + 4.98197357e-22 * T4) *
              0.9920634920634921;
    // species 20: CH2
    result += y[20] *
              (+2.87410113e+00 + 3.65639292e-03 * T - 1.40894597e-06 * T2 +
               2.60179549e-10 * T3 - 1.87727567e-14 * T4) *
              0.0712910814857061;
    // species 21: CH2*
    result += y[21] *
              (+2.29203842e+00 + 4.65588637e-03 * T - 2.01191947e-06 * T2 +
               4.17906000e-10 * T3 - 3.39716365e-14 * T4) *
              0.0712910814857061;
    // species 22: HCO
    result += y[22] *
              (+2.77217438e+00 + 4.95695526e-03 * T - 2.48445613e-06 * T2 +
               5.89161778e-10 * T3 - 5.33508711e-14 * T4) *
              0.0344613688055690;
    // species 23: CH2O
    result += y[23] *
              (+1.76069008e+00 + 9.20000082e-03 * T - 4.42258813e-06 * T2 +
               1.00641212e-09 * T3 - 8.83855640e-14 * T4) *
              0.0333044694598015;
    // species 24: CH3O
    result += y[24] *
              (+4.75779238e+00 + 7.44142474e-03 * T - 2.69705176e-06 * T2 +
               4.38090504e-10 * T3 - 2.63537098e-14 * T4) *
              0.0322227234645872;
    // species 25: CO2
    result += y[25] *
              (+3.85746029e+00 + 4.41437026e-03 * T - 2.21481404e-06 * T2 +
               5.23490188e-10 * T3 - 4.72084164e-14 * T4) *
              0.0227226249176305;
    // species 26: C2H3
    result += y[26] *
              (+3.01672400e+00 + 1.03302292e-02 * T - 4.68082349e-06 * T2 +
               1.01763288e-09 * T3 - 8.62607041e-14 * T4) *
              0.0369740442209569;
    // species 27: C2H5
    result += y[27] *
              (+1.95465642e+00 + 1.73972722e-02 * T - 7.98206668e-06 * T2 +
               1.75217689e-09 * T3 - 1.49641576e-13 * T4) *
              0.0344091941366733;
    // species 28: HCCO
    result += y[28] *
              (+5.62820580e+00 + 4.08534010e-03 * T - 1.59345470e-06 * T2 +
               2.86260520e-10 * T3 - 1.94078320e-14 * T4) *
              0.0243730044602598;
    // species 29: CH2CO
    result += y[29] *
              (+4.51129732e+00 + 9.00359745e-03 * T - 4.16939635e-06 * T2 +
               9.23345882e-10 * T3 - 7.94838201e-14 * T4) *
              0.0237885672145967;
    // species 30: CH2CHO
    result += y[30] *
              (+5.97566990e+00 + 8.13059140e-03 * T - 2.74362450e-06 * T2 +
               4.07030410e-10 * T3 - 2.17601710e-14 * T4) *
              0.0232315019165989;
    // species 31: C3H3
    result += y[31] *
              (+7.14221880e+00 + 7.61902005e-03 * T - 2.67459950e-06 * T2 +
               4.24914801e-10 * T3 - 2.51475415e-14 * T4) *
              0.0256036049875823;
    // species 32: aC3H5
    result += y[32] *
              (+6.50078770e+00 + 1.43247310e-02 * T - 5.67816320e-06 * T2 +
               1.10808010e-09 * T3 - 9.03638870e-14 * T4) *
              0.0243468945535997;
    // species 33: C5H4O
    result += y[33] *
              (+1.00806824e+01 + 1.61143465e-02 * T - 5.83314509e-06 * T2 +
               9.46759320e-10 * T3 - 5.68972206e-14 * T4) *
              0.0124865769298005;
    // species 34: C5H5
    result += y[34] *
              (+7.47439380e+00 + 1.60127330e-02 * T - 6.48231480e-09 * T2 -
               3.58197030e-09 * T3 + 9.23650710e-13 * T4) *
              0.0153621629925494;
    // species 35: C6H5
    result += y[35] *
              (+8.59731100e+00 + 2.22416300e-02 * T - 8.71999780e-06 * T2 +
               1.37887850e-09 * T3 - 5.31460560e-14 * T4) *
              0.0129691593390916;
    // species 36: C6H5CH2
    result += y[36] *
              (+1.40439800e+01 + 2.34938730e-02 * T - 8.53753670e-06 * T2 +
               1.38908410e-09 * T3 - 8.36144200e-14 * T4) *
              0.0109729735661067;
    // species 37: C6H5O
    result += y[37] *
              (+1.37221720e+01 + 1.74688771e-02 * T - 6.35504520e-06 * T2 +
               1.03492308e-09 * T3 - 6.23410504e-14 * T4) *
              0.0107405617313786;
    // species 38: C6H5CO
    result += y[38] *
              (+1.33744090e+01 + 2.39992890e-02 * T - 1.04657240e-05 * T2 +
               2.16691310e-09 * T3 - 1.80070450e-13 * T4) *
              0.0095132995928308;
    // species 39: C6H5CHO
    result += y[39] *
              (+1.36507370e+01 + 2.56804190e-02 * T - 1.04667290e-05 * T2 +
               1.94134300e-09 * T3 - 1.34837920e-13 * T4) *
              0.0094229392031963;
    // species 40: N2
    result += y[40] *
              (+2.92664000e+00 + 1.48797680e-03 * T - 5.68476000e-07 * T2 +
               1.00970380e-10 * T3 - 6.75335100e-15 * T4) *
              0.0356964374955379;
  }

  cpbs = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 35)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBL(const amrex::Real T, const amrex::Real x[], amrex::Real& cvbl)
{
  amrex::Real result = 0;
  amrex::Real cvor[41]; //  temporary storage
  cv_R(cvor, T);

  // perform dot product
  for (int id = 0; id < 41; ++id) {
    result += x[id] * cvor[id];
  }

  cvbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 36)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBS(const amrex::Real T, const amrex::Real y[], amrex::Real& cvbs)
{
  amrex::Real result = 0.0;
  // compute Cv/R at the given temperature
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: POSF10325
    result += y[0] *
              (+1.57855180e+00 + 7.26248320e-02 * T + 7.32363700e-05 * T2 -
               1.51154440e-07 * T3 + 6.89355790e-11 * T4) *
              0.0064810074077915;
    // species 1: C2H4
    result += y[1] *
              (+2.95920148e+00 - 7.57052247e-03 * T + 5.70990292e-05 * T2 -
               6.91588753e-08 * T3 + 2.69884373e-11 * T4) *
              0.0356455407428531;
    // species 2: CH4
    result += y[2] *
              (+4.14987613e+00 - 1.36709788e-02 * T + 4.91800599e-05 * T2 -
               4.84743026e-08 * T3 + 1.66693956e-11 * T4) *
              0.0623324814560868;
    // species 3: C3H6
    result += y[3] *
              (+4.93307000e-01 + 2.09251800e-02 * T + 4.48679400e-06 * T2 -
               1.66891200e-08 * T3 + 7.15814600e-12 * T4) *
              0.0237636938285687;
    // species 4: iC4H8
    result += y[4] *
              (+1.64714050e+00 + 2.59029570e-02 * T + 8.19853540e-06 * T2 -
               2.21932590e-08 * T3 + 8.89585800e-12 * T4) *
              0.0178227703714265;
    // species 5: C4H81
    result += y[5] *
              (+1.81138000e-01 + 3.08533800e-02 * T + 5.08652470e-06 * T2 -
               2.46548880e-08 * T3 + 1.11101930e-11 * T4) *
              0.0178227703714265;
    // species 6: H2
    result += y[6] *
              (+1.34433112e+00 + 7.98052075e-03 * T - 1.94781510e-05 * T2 +
               2.01572094e-08 * T3 - 7.37611761e-12 * T4) *
              0.4960317460317460;
    // species 7: C2H6
    result += y[7] *
              (+3.29142492e+00 - 5.50154270e-03 * T + 5.99438288e-05 * T2 -
               7.08466285e-08 * T3 + 2.68685771e-11 * T4) *
              0.0332557366145660;
    // species 8: CO
    result += y[8] *
              (+2.57953347e+00 - 6.10353680e-04 * T + 1.01681433e-06 * T2 +
               9.07005884e-10 * T3 - 9.04424499e-13 * T4) *
              0.0357015351660121;
    // species 9: C6H6
    result += y[9] *
              (-5.84377340e+00 + 5.84276130e-02 * T - 2.94858550e-05 * T2 -
               6.93904400e-09 * T3 + 8.21252530e-12 * T4) *
              0.0128018024937911;
    // species 10: C2H2
    result += y[10] *
              (-1.91318906e-01 + 2.33615629e-02 * T - 3.55171815e-05 * T2 +
               2.80152437e-08 * T3 - 8.50072974e-12 * T4) *
              0.0384054074813734;
    // species 11: C6H5CH3
    result += y[11] *
              (+6.15266300e-01 + 2.10994380e-02 * T + 8.53660180e-05 * T2 -
               1.32610660e-07 * T3 + 5.59566040e-11 * T4) *
              0.0108529319195581;
    // species 12: CH3
    result += y[12] *
              (+2.67359040e+00 + 2.01095175e-03 * T + 5.73021856e-06 * T2 -
               6.87117425e-09 * T3 + 2.54385734e-12 * T4) *
              0.0665114732291320;
    // species 13: O2
    result += y[13] *
              (+2.78245636e+00 - 2.99673416e-03 * T + 9.84730201e-06 * T2 -
               9.68129509e-09 * T3 + 3.24372837e-12 * T4) *
              0.0312519532470779;
    // species 14: O
    result += y[14] *
              (+2.16826710e+00 - 3.27931884e-03 * T + 6.64306396e-06 * T2 -
               6.12806624e-09 * T3 + 2.11265971e-12 * T4) *
              0.0625039064941559;
    // species 15: OH
    result += y[15] *
              (+3.12530561e+00 - 3.22544939e-03 * T + 6.52764691e-06 * T2 -
               5.79853643e-09 * T3 + 2.06237379e-12 * T4) *
              0.0587993179279120;
    // species 16: HO2
    result += y[16] *
              (+3.30179801e+00 - 4.74912051e-03 * T + 2.11582891e-05 * T2 -
               2.42763894e-08 * T3 + 9.29225124e-12 * T4) *
              0.0302975216627280;
    // species 17: H2O
    result += y[17] *
              (+3.19864056e+00 - 2.03643410e-03 * T + 6.52040211e-06 * T2 -
               5.48797062e-09 * T3 + 1.77197817e-12 * T4) *
              0.0555092978073827;
    // species 18: H2O2
    result += y[18] *
              (+3.27611269e+00 - 5.42822417e-04 * T + 1.67335701e-05 * T2 -
               2.15770813e-08 * T3 + 8.62454363e-12 * T4) *
              0.0293996589639560;
    // species 19: H
    result += y[19] *
              (+1.50000000e+00 + 7.05332819e-13 * T - 1.99591964e-15 * T2 +
               2.30081632e-18 * T3 - 9.27732332e-22 * T4) *
              0.9920634920634921;
    // species 20: CH2
    result += y[20] *
              (+2.76267867e+00 + 9.68872143e-04 * T + 2.79489841e-06 * T2 -
               3.85091153e-09 * T3 + 1.68741719e-12 * T4) *
              0.0712910814857061;
    // species 21: CH2*
    result += y[21] *
              (+3.19860411e+00 - 2.36661419e-03 * T + 8.23296220e-06 * T2 -
               6.68815981e-09 * T3 + 1.94314737e-12 * T4) *
              0.0712910814857061;
    // species 22: HCO
    result += y[22] *
              (+3.22118584e+00 - 3.24392532e-03 * T + 1.37799446e-05 * T2 -
               1.33144093e-08 * T3 + 4.33768865e-12 * T4) *
              0.0344613688055690;
    // species 23: CH2O
    result += y[23] *
              (+3.79372315e+00 - 9.90833369e-03 * T + 3.73220008e-05 * T2 -
               3.79285261e-08 * T3 + 1.31772652e-11 * T4) *
              0.0333044694598015;
    // species 24: CH3O
    result += y[24] *
              (+2.71180502e+00 - 2.80463306e-03 * T + 3.76550971e-05 * T2 -
               4.73072089e-08 * T3 + 1.86588420e-11 * T4) *
              0.0322227234645872;
    // species 25: CO2
    result += y[25] *
              (+1.35677352e+00 + 8.98459677e-03 * T - 7.12356269e-06 * T2 +
               2.45919022e-09 * T3 - 1.43699548e-13 * T4) *
              0.0227226249176305;
    // species 26: C2H3
    result += y[26] *
              (+2.21246645e+00 + 1.51479162e-03 * T + 2.59209412e-05 * T2 -
               3.57657847e-08 * T3 + 1.47150873e-11 * T4) *
              0.0369740442209569;
    // species 27: C2H5
    result += y[27] *
              (+3.30646568e+00 - 4.18658892e-03 * T + 4.97142807e-05 * T2 -
               5.99126606e-08 * T3 + 2.30509004e-11 * T4) *
              0.0344091941366733;
    // species 28: HCCO
    result += y[28] *
              (+1.25172140e+00 + 1.76550210e-02 * T - 2.37291010e-05 * T2 +
               1.72757590e-08 * T3 - 5.06648110e-12 * T4) *
              0.0243730044602598;
    // species 29: CH2CO
    result += y[29] *
              (+1.13583630e+00 + 1.81188721e-02 * T - 1.73947474e-05 * T2 +
               9.34397568e-09 * T3 - 2.01457615e-12 * T4) *
              0.0237885672145967;
    // species 30: CH2CHO
    result += y[30] *
              (+2.40906240e+00 + 1.07385740e-02 * T + 1.89149250e-06 * T2 -
               7.15858310e-09 * T3 + 2.86738510e-12 * T4) *
              0.0232315019165989;
    // species 31: C3H3
    result += y[31] *
              (+3.51109270e-01 + 3.27411223e-02 * T - 4.73827135e-05 * T2 +
               3.76309808e-08 * T3 - 1.18540923e-11 * T4) *
              0.0256036049875823;
    // species 32: aC3H5
    result += y[32] *
              (+3.63183500e-01 + 1.98138210e-02 * T + 1.24970600e-05 * T2 -
               3.33555550e-08 * T3 + 1.58465710e-11 * T4) *
              0.0243468945535997;
    // species 33: C5H4O
    result += y[33] *
              (-7.35423503e-01 + 3.34873827e-02 * T + 1.67738470e-06 * T2 -
               2.96207455e-08 * T3 + 1.54431476e-11 * T4) *
              0.0124865769298005;
    // species 34: C5H5
    result += y[34] *
              (-1.65017800e-02 + 3.36514760e-02 * T - 1.10541810e-07 * T2 -
               3.67433940e-08 * T3 + 2.31411840e-11 * T4) *
              0.0153621629925494;
    // species 35: C6H5
    result += y[35] *
              (-4.69314530e+00 + 5.21789680e-02 * T - 2.55584270e-05 * T2 -
               7.06611210e-09 * T3 + 7.58339750e-12 * T4) *
              0.0129691593390916;
    // species 36: C6H5CH2
    result += y[36] *
              (-5.18884600e-01 + 3.85128320e-02 * T + 3.28614920e-05 * T2 -
               7.69727210e-08 * T3 + 3.54230680e-11 * T4) *
              0.0109729735661067;
    // species 37: C6H5O
    result += y[37] *
              (-1.46620445e+00 + 4.13443975e-02 * T + 1.32412991e-05 * T2 -
               5.72872769e-08 * T3 + 2.89763707e-11 * T4) *
              0.0107405617313786;
    // species 38: C6H5CO
    result += y[38] *
              (-3.02511550e+00 + 6.15125410e-02 * T - 3.16036530e-05 * T2 -
               6.97245990e-09 * T3 + 7.98351490e-12 * T4) *
              0.0095132995928308;
    // species 39: C6H5CHO
    result += y[39] *
              (-4.16273340e+00 + 6.63692450e-02 * T - 3.48163530e-05 * T2 -
               6.29993770e-09 * T3 + 8.58071010e-12 * T4) *
              0.0094229392031963;
    // species 40: N2
    result += y[40] *
              (+2.29867700e+00 + 1.40824040e-03 * T - 3.96322200e-06 * T2 +
               5.64151500e-09 * T3 - 2.44485400e-12 * T4) *
              0.0356964374955379;
  } else {
    // species 0: POSF10325
    result += y[0] *
              (+2.03578910e+01 + 6.65890870e-02 * T - 2.59674690e-05 * T2 +
               4.47750010e-09 * T3 - 2.36071520e-13 * T4) *
              0.0064810074077915;
    // species 1: C2H4
    result += y[1] *
              (+1.03611116e+00 + 1.46454151e-02 * T - 6.71077915e-06 * T2 +
               1.47222923e-09 * T3 - 1.25706061e-13 * T4) *
              0.0356455407428531;
    // species 2: CH4
    result += y[2] *
              (-9.25148505e-01 + 1.33909467e-02 * T - 5.73285809e-06 * T2 +
               1.22292535e-09 * T3 - 1.01815230e-13 * T4) *
              0.0623324814560868;
    // species 3: C3H6
    result += y[3] *
              (+5.73225700e+00 + 1.49083400e-02 * T - 4.94989900e-06 * T2 +
               7.21202200e-10 * T3 - 3.76620400e-14 * T4) *
              0.0237636938285687;
    // species 4: iC4H8
    result += y[4] *
              (+3.46094700e+00 + 2.96114870e-02 * T - 1.30771290e-05 * T2 +
               2.65719340e-09 * T3 - 2.01347130e-13 * T4) *
              0.0178227703714265;
    // species 5: C4H81
    result += y[5] *
              (+1.05358410e+00 + 3.43505070e-02 * T - 1.58831970e-05 * T2 +
               3.30896620e-09 * T3 - 2.53610450e-13 * T4) *
              0.0178227703714265;
    // species 6: H2
    result += y[6] *
              (+2.33727920e+00 - 4.94024731e-05 * T + 4.99456778e-07 * T2 -
               1.79566394e-10 * T3 + 2.00255376e-14 * T4) *
              0.4960317460317460;
    // species 7: C2H6
    result += y[7] *
              (+7.18815000e-02 + 2.16852677e-02 * T - 1.00256067e-05 * T2 +
               2.21412001e-09 * T3 - 1.90002890e-13 * T4) *
              0.0332557366145660;
    // species 8: CO
    result += y[8] *
              (+1.71518561e+00 + 2.06252743e-03 * T - 9.98825771e-07 * T2 +
               2.30053008e-10 * T3 - 2.03647716e-14 * T4) *
              0.0357015351660121;
    // species 9: C6H6
    result += y[9] *
              (+8.13812450e+00 + 2.38544330e-02 * T - 8.81277260e-06 * T2 +
               1.20990210e-09 * T3 - 1.82215030e-14 * T4) *
              0.0128018024937911;
    // species 10: C2H2
    result += y[10] *
              (+3.14756964e+00 + 5.96166664e-03 * T - 2.37294852e-06 * T2 +
               4.67412171e-10 * T3 - 3.61235213e-14 * T4) *
              0.0384054074813734;
    // species 11: C6H5CH3
    result += y[11] *
              (+1.19400340e+01 + 2.66912870e-02 * T - 9.68385050e-06 * T2 +
               1.57386290e-09 * T3 - 9.46636010e-14 * T4) *
              0.0108529319195581;
    // species 12: CH3
    result += y[12] *
              (+1.28571772e+00 + 7.23990037e-03 * T - 2.98714348e-06 * T2 +
               5.95684644e-10 * T3 - 4.67154394e-14 * T4) *
              0.0665114732291320;
    // species 13: O2
    result += y[13] *
              (+2.28253784e+00 + 1.48308754e-03 * T - 7.57966669e-07 * T2 +
               2.09470555e-10 * T3 - 2.16717794e-14 * T4) *
              0.0312519532470779;
    // species 14: O
    result += y[14] *
              (+1.56942078e+00 - 8.59741137e-05 * T + 4.19484589e-08 * T2 -
               1.00177799e-11 * T3 + 1.22833691e-15 * T4) *
              0.0625039064941559;
    // species 15: OH
    result += y[15] *
              (+1.86472886e+00 + 1.05650448e-03 * T - 2.59082758e-07 * T2 +
               3.05218674e-11 * T3 - 1.33195876e-15 * T4) *
              0.0587993179279120;
    // species 16: HO2
    result += y[16] *
              (+3.01721090e+00 + 2.23982013e-03 * T - 6.33658150e-07 * T2 +
               1.14246370e-10 * T3 - 1.07908535e-14 * T4) *
              0.0302975216627280;
    // species 17: H2O
    result += y[17] *
              (+2.03399249e+00 + 2.17691804e-03 * T - 1.64072518e-07 * T2 -
               9.70419870e-11 * T3 + 1.68200992e-14 * T4) *
              0.0555092978073827;
    // species 18: H2O2
    result += y[18] *
              (+3.16500285e+00 + 4.90831694e-03 * T - 1.90139225e-06 * T2 +
               3.71185986e-10 * T3 - 2.87908305e-14 * T4) *
              0.0293996589639560;
    // species 19: H
    result += y[19] *
              (+1.50000001e+00 - 2.30842973e-11 * T + 1.61561948e-14 * T2 -
               4.73515235e-18 * T3 + 4.98197357e-22 * T4) *
              0.9920634920634921;
    // species 20: CH2
    result += y[20] *
              (+1.87410113e+00 + 3.65639292e-03 * T - 1.40894597e-06 * T2 +
               2.60179549e-10 * T3 - 1.87727567e-14 * T4) *
              0.0712910814857061;
    // species 21: CH2*
    result += y[21] *
              (+1.29203842e+00 + 4.65588637e-03 * T - 2.01191947e-06 * T2 +
               4.17906000e-10 * T3 - 3.39716365e-14 * T4) *
              0.0712910814857061;
    // species 22: HCO
    result += y[22] *
              (+1.77217438e+00 + 4.95695526e-03 * T - 2.48445613e-06 * T2 +
               5.89161778e-10 * T3 - 5.33508711e-14 * T4) *
              0.0344613688055690;
    // species 23: CH2O
    result += y[23] *
              (+7.60690080e-01 + 9.20000082e-03 * T - 4.42258813e-06 * T2 +
               1.00641212e-09 * T3 - 8.83855640e-14 * T4) *
              0.0333044694598015;
    // species 24: CH3O
    result += y[24] *
              (+3.75779238e+00 + 7.44142474e-03 * T - 2.69705176e-06 * T2 +
               4.38090504e-10 * T3 - 2.63537098e-14 * T4) *
              0.0322227234645872;
    // species 25: CO2
    result += y[25] *
              (+2.85746029e+00 + 4.41437026e-03 * T - 2.21481404e-06 * T2 +
               5.23490188e-10 * T3 - 4.72084164e-14 * T4) *
              0.0227226249176305;
    // species 26: C2H3
    result += y[26] *
              (+2.01672400e+00 + 1.03302292e-02 * T - 4.68082349e-06 * T2 +
               1.01763288e-09 * T3 - 8.62607041e-14 * T4) *
              0.0369740442209569;
    // species 27: C2H5
    result += y[27] *
              (+9.54656420e-01 + 1.73972722e-02 * T - 7.98206668e-06 * T2 +
               1.75217689e-09 * T3 - 1.49641576e-13 * T4) *
              0.0344091941366733;
    // species 28: HCCO
    result += y[28] *
              (+4.62820580e+00 + 4.08534010e-03 * T - 1.59345470e-06 * T2 +
               2.86260520e-10 * T3 - 1.94078320e-14 * T4) *
              0.0243730044602598;
    // species 29: CH2CO
    result += y[29] *
              (+3.51129732e+00 + 9.00359745e-03 * T - 4.16939635e-06 * T2 +
               9.23345882e-10 * T3 - 7.94838201e-14 * T4) *
              0.0237885672145967;
    // species 30: CH2CHO
    result += y[30] *
              (+4.97566990e+00 + 8.13059140e-03 * T - 2.74362450e-06 * T2 +
               4.07030410e-10 * T3 - 2.17601710e-14 * T4) *
              0.0232315019165989;
    // species 31: C3H3
    result += y[31] *
              (+6.14221880e+00 + 7.61902005e-03 * T - 2.67459950e-06 * T2 +
               4.24914801e-10 * T3 - 2.51475415e-14 * T4) *
              0.0256036049875823;
    // species 32: aC3H5
    result += y[32] *
              (+5.50078770e+00 + 1.43247310e-02 * T - 5.67816320e-06 * T2 +
               1.10808010e-09 * T3 - 9.03638870e-14 * T4) *
              0.0243468945535997;
    // species 33: C5H4O
    result += y[33] *
              (+9.08068240e+00 + 1.61143465e-02 * T - 5.83314509e-06 * T2 +
               9.46759320e-10 * T3 - 5.68972206e-14 * T4) *
              0.0124865769298005;
    // species 34: C5H5
    result += y[34] *
              (+6.47439380e+00 + 1.60127330e-02 * T - 6.48231480e-09 * T2 -
               3.58197030e-09 * T3 + 9.23650710e-13 * T4) *
              0.0153621629925494;
    // species 35: C6H5
    result += y[35] *
              (+7.59731100e+00 + 2.22416300e-02 * T - 8.71999780e-06 * T2 +
               1.37887850e-09 * T3 - 5.31460560e-14 * T4) *
              0.0129691593390916;
    // species 36: C6H5CH2
    result += y[36] *
              (+1.30439800e+01 + 2.34938730e-02 * T - 8.53753670e-06 * T2 +
               1.38908410e-09 * T3 - 8.36144200e-14 * T4) *
              0.0109729735661067;
    // species 37: C6H5O
    result += y[37] *
              (+1.27221720e+01 + 1.74688771e-02 * T - 6.35504520e-06 * T2 +
               1.03492308e-09 * T3 - 6.23410504e-14 * T4) *
              0.0107405617313786;
    // species 38: C6H5CO
    result += y[38] *
              (+1.23744090e+01 + 2.39992890e-02 * T - 1.04657240e-05 * T2 +
               2.16691310e-09 * T3 - 1.80070450e-13 * T4) *
              0.0095132995928308;
    // species 39: C6H5CHO
    result += y[39] *
              (+1.26507370e+01 + 2.56804190e-02 * T - 1.04667290e-05 * T2 +
               1.94134300e-09 * T3 - 1.34837920e-13 * T4) *
              0.0094229392031963;
    // species 40: N2
    result += y[40] *
              (+1.92664000e+00 + 1.48797680e-03 * T - 5.68476000e-07 * T2 +
               1.00970380e-10 * T3 - 6.75335100e-15 * T4) *
              0.0356964374955379;
  }

  cvbs = result * 8.31446261815324e+07;
}

// Returns the mean enthalpy of the mixture in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBML(const amrex::Real T, const amrex::Real x[], amrex::Real& hbml)
{
  amrex::Real result = 0;
  amrex::Real hml[41];                       //  temporary storage
  amrex::Real RT = 8.31446261815324e+07 * T; // R*T
  speciesEnthalpy(hml, T);

  // perform dot product
  for (int id = 0; id < 41; ++id) {
    result += x[id] * hml[id];
  }

  hbml = result * RT;
}

// Returns mean enthalpy of mixture in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBMS(const amrex::Real T, const amrex::Real y[], amrex::Real& hbms)
{
  amrex::Real result = 0.0;
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: POSF10325
    result +=
      y[0] *
      (+2.57855180e+00 + 3.63124160e-02 * T + 2.44121233e-05 * T2 -
       3.77886100e-08 * T3 + 1.37871158e-11 * T4 - 3.80298550e+04 * invT) *
      0.0064810074077915;
    // species 1: C2H4
    result +=
      y[1] *
      (+3.95920148e+00 - 3.78526124e-03 * T + 1.90330097e-05 * T2 -
       1.72897188e-08 * T3 + 5.39768746e-12 * T4 + 5.08977593e+03 * invT) *
      0.0356455407428531;
    // species 2: CH4
    result +=
      y[2] *
      (+5.14987613e+00 - 6.83548940e-03 * T + 1.63933533e-05 * T2 -
       1.21185757e-08 * T3 + 3.33387912e-12 * T4 - 1.02466476e+04 * invT) *
      0.0623324814560868;
    // species 3: C3H6
    result +=
      y[3] *
      (+1.49330700e+00 + 1.04625900e-02 * T + 1.49559800e-06 * T2 -
       4.17228000e-09 * T3 + 1.43162920e-12 * T4 + 1.07482600e+03 * invT) *
      0.0237636938285687;
    // species 4: iC4H8
    result +=
      y[4] *
      (+2.64714050e+00 + 1.29514785e-02 * T + 2.73284513e-06 * T2 -
       5.54831475e-09 * T3 + 1.77917160e-12 * T4 - 4.03730690e+03 * invT) *
      0.0178227703714265;
    // species 5: C4H81
    result +=
      y[5] *
      (+1.18113800e+00 + 1.54266900e-02 * T + 1.69550823e-06 * T2 -
       6.16372200e-09 * T3 + 2.22203860e-12 * T4 - 1.79040040e+03 * invT) *
      0.0178227703714265;
    // species 6: H2
    result +=
      y[6] *
      (+2.34433112e+00 + 3.99026037e-03 * T - 6.49271700e-06 * T2 +
       5.03930235e-09 * T3 - 1.47522352e-12 * T4 - 9.17935173e+02 * invT) *
      0.4960317460317460;
    // species 7: C2H6
    result +=
      y[7] *
      (+4.29142492e+00 - 2.75077135e-03 * T + 1.99812763e-05 * T2 -
       1.77116571e-08 * T3 + 5.37371542e-12 * T4 - 1.15222055e+04 * invT) *
      0.0332557366145660;
    // species 8: CO
    result +=
      y[8] *
      (+3.57953347e+00 - 3.05176840e-04 * T + 3.38938110e-07 * T2 +
       2.26751471e-10 * T3 - 1.80884900e-13 * T4 - 1.43440860e+04 * invT) *
      0.0357015351660121;
    // species 9: C6H6
    result +=
      y[9] *
      (-4.84377340e+00 + 2.92138065e-02 * T - 9.82861833e-06 * T2 -
       1.73476100e-09 * T3 + 1.64250506e-12 * T4 + 9.18177730e+03 * invT) *
      0.0128018024937911;
    // species 10: C2H2
    result +=
      y[10] *
      (+8.08681094e-01 + 1.16807815e-02 * T - 1.18390605e-05 * T2 +
       7.00381092e-09 * T3 - 1.70014595e-12 * T4 + 2.64289807e+04 * invT) *
      0.0384054074813734;
    // species 11: C6H5CH3
    result +=
      y[11] *
      (+1.61526630e+00 + 1.05497190e-02 * T + 2.84553393e-05 * T2 -
       3.31526650e-08 * T3 + 1.11913208e-11 * T4 + 4.07563000e+03 * invT) *
      0.0108529319195581;
    // species 12: CH3
    result +=
      y[12] *
      (+3.67359040e+00 + 1.00547588e-03 * T + 1.91007285e-06 * T2 -
       1.71779356e-09 * T3 + 5.08771468e-13 * T4 + 1.64449988e+04 * invT) *
      0.0665114732291320;
    // species 13: O2
    result +=
      y[13] *
      (+3.78245636e+00 - 1.49836708e-03 * T + 3.28243400e-06 * T2 -
       2.42032377e-09 * T3 + 6.48745674e-13 * T4 - 1.06394356e+03 * invT) *
      0.0312519532470779;
    // species 14: O
    result +=
      y[14] *
      (+3.16826710e+00 - 1.63965942e-03 * T + 2.21435465e-06 * T2 -
       1.53201656e-09 * T3 + 4.22531942e-13 * T4 + 2.91222592e+04 * invT) *
      0.0625039064941559;
    // species 15: OH
    result +=
      y[15] *
      (+4.12530561e+00 - 1.61272470e-03 * T + 2.17588230e-06 * T2 -
       1.44963411e-09 * T3 + 4.12474758e-13 * T4 + 3.38153812e+03 * invT) *
      0.0587993179279120;
    // species 16: HO2
    result +=
      y[16] *
      (+4.30179801e+00 - 2.37456025e-03 * T + 7.05276303e-06 * T2 -
       6.06909735e-09 * T3 + 1.85845025e-12 * T4 + 2.94808040e+02 * invT) *
      0.0302975216627280;
    // species 17: H2O
    result +=
      y[17] *
      (+4.19864056e+00 - 1.01821705e-03 * T + 2.17346737e-06 * T2 -
       1.37199266e-09 * T3 + 3.54395634e-13 * T4 - 3.02937267e+04 * invT) *
      0.0555092978073827;
    // species 18: H2O2
    result +=
      y[18] *
      (+4.27611269e+00 - 2.71411208e-04 * T + 5.57785670e-06 * T2 -
       5.39427032e-09 * T3 + 1.72490873e-12 * T4 - 1.77025821e+04 * invT) *
      0.0293996589639560;
    // species 19: H
    result +=
      y[19] *
      (+2.50000000e+00 + 3.52666409e-13 * T - 6.65306547e-16 * T2 +
       5.75204080e-19 * T3 - 1.85546466e-22 * T4 + 2.54736599e+04 * invT) *
      0.9920634920634921;
    // species 20: CH2
    result +=
      y[20] *
      (+3.76267867e+00 + 4.84436072e-04 * T + 9.31632803e-07 * T2 -
       9.62727883e-10 * T3 + 3.37483438e-13 * T4 + 4.60040401e+04 * invT) *
      0.0712910814857061;
    // species 21: CH2*
    result +=
      y[21] *
      (+4.19860411e+00 - 1.18330710e-03 * T + 2.74432073e-06 * T2 -
       1.67203995e-09 * T3 + 3.88629474e-13 * T4 + 5.04968163e+04 * invT) *
      0.0712910814857061;
    // species 22: HCO
    result +=
      y[22] *
      (+4.22118584e+00 - 1.62196266e-03 * T + 4.59331487e-06 * T2 -
       3.32860233e-09 * T3 + 8.67537730e-13 * T4 + 3.83956496e+03 * invT) *
      0.0344613688055690;
    // species 23: CH2O
    result +=
      y[23] *
      (+4.79372315e+00 - 4.95416684e-03 * T + 1.24406669e-05 * T2 -
       9.48213152e-09 * T3 + 2.63545304e-12 * T4 - 1.43089567e+04 * invT) *
      0.0333044694598015;
    // species 24: CH3O
    result +=
      y[24] *
      (+3.71180502e+00 - 1.40231653e-03 * T + 1.25516990e-05 * T2 -
       1.18268022e-08 * T3 + 3.73176840e-12 * T4 + 1.29569760e+03 * invT) *
      0.0322227234645872;
    // species 25: CO2
    result +=
      y[25] *
      (+2.35677352e+00 + 4.49229839e-03 * T - 2.37452090e-06 * T2 +
       6.14797555e-10 * T3 - 2.87399096e-14 * T4 - 4.83719697e+04 * invT) *
      0.0227226249176305;
    // species 26: C2H3
    result +=
      y[26] *
      (+3.21246645e+00 + 7.57395810e-04 * T + 8.64031373e-06 * T2 -
       8.94144617e-09 * T3 + 2.94301746e-12 * T4 + 3.48598468e+04 * invT) *
      0.0369740442209569;
    // species 27: C2H5
    result +=
      y[27] *
      (+4.30646568e+00 - 2.09329446e-03 * T + 1.65714269e-05 * T2 -
       1.49781651e-08 * T3 + 4.61018008e-12 * T4 + 1.28416265e+04 * invT) *
      0.0344091941366733;
    // species 28: HCCO
    result +=
      y[28] *
      (+2.25172140e+00 + 8.82751050e-03 * T - 7.90970033e-06 * T2 +
       4.31893975e-09 * T3 - 1.01329622e-12 * T4 + 2.00594490e+04 * invT) *
      0.0243730044602598;
    // species 29: CH2CO
    result +=
      y[29] *
      (+2.13583630e+00 + 9.05943605e-03 * T - 5.79824913e-06 * T2 +
       2.33599392e-09 * T3 - 4.02915230e-13 * T4 - 7.27000000e+03 * invT) *
      0.0237885672145967;
    // species 30: CH2CHO
    result +=
      y[30] *
      (+3.40906240e+00 + 5.36928700e-03 * T + 6.30497500e-07 * T2 -
       1.78964578e-09 * T3 + 5.73477020e-13 * T4 + 6.20000000e+01 * invT) *
      0.0232315019165989;
    // species 31: C3H3
    result +=
      y[31] *
      (+1.35110927e+00 + 1.63705612e-02 * T - 1.57942378e-05 * T2 +
       9.40774520e-09 * T3 - 2.37081846e-12 * T4 + 4.01057783e+04 * invT) *
      0.0256036049875823;
    // species 32: aC3H5
    result +=
      y[32] *
      (+1.36318350e+00 + 9.90691050e-03 * T + 4.16568667e-06 * T2 -
       8.33888875e-09 * T3 + 3.16931420e-12 * T4 + 1.92456290e+04 * invT) *
      0.0243468945535997;
    // species 33: C5H4O
    result +=
      y[33] *
      (+2.64576497e-01 + 1.67436913e-02 * T + 5.59128233e-07 * T2 -
       7.40518638e-09 * T3 + 3.08862952e-12 * T4 + 5.11159287e+03 * invT) *
      0.0124865769298005;
    // species 34: C5H5
    result +=
      y[34] *
      (+9.83498220e-01 + 1.68257380e-02 * T - 3.68472700e-08 * T2 -
       9.18584850e-09 * T3 + 4.62823680e-12 * T4 + 2.96260000e+04 * invT) *
      0.0153621629925494;
    // species 35: C6H5
    result +=
      y[35] *
      (-3.69314530e+00 + 2.60894840e-02 * T - 8.51947567e-06 * T2 -
       1.76652803e-09 * T3 + 1.51667950e-12 * T4 + 3.97795900e+04 * invT) *
      0.0129691593390916;
    // species 36: C6H5CH2
    result +=
      y[36] *
      (+4.81115400e-01 + 1.92564160e-02 * T + 1.09538307e-05 * T2 -
       1.92431803e-08 * T3 + 7.08461360e-12 * T4 + 2.33070270e+04 * invT) *
      0.0109729735661067;
    // species 37: C6H5O
    result +=
      y[37] *
      (-4.66204455e-01 + 2.06721987e-02 * T + 4.41376637e-06 * T2 -
       1.43218192e-08 * T3 + 5.79527414e-12 * T4 + 4.77858391e+03 * invT) *
      0.0107405617313786;
    // species 38: C6H5CO
    result +=
      y[38] *
      (-2.02511550e+00 + 3.07562705e-02 * T - 1.05345510e-05 * T2 -
       1.74311497e-09 * T3 + 1.59670298e-12 * T4 + 1.12558030e+04 * invT) *
      0.0095132995928308;
    // species 39: C6H5CHO
    result +=
      y[39] *
      (-3.16273340e+00 + 3.31846225e-02 * T - 1.16054510e-05 * T2 -
       1.57498443e-09 * T3 + 1.71614202e-12 * T4 - 6.11693490e+03 * invT) *
      0.0094229392031963;
    // species 40: N2
    result +=
      y[40] *
      (+3.29867700e+00 + 7.04120200e-04 * T - 1.32107400e-06 * T2 +
       1.41037875e-09 * T3 - 4.88970800e-13 * T4 - 1.02089990e+03 * invT) *
      0.0356964374955379;
  } else {
    // species 0: POSF10325
    result +=
      y[0] *
      (+2.13578910e+01 + 3.32945435e-02 * T - 8.65582300e-06 * T2 +
       1.11937502e-09 * T3 - 4.72143040e-14 * T4 - 4.57969960e+04 * invT) *
      0.0064810074077915;
    // species 1: C2H4
    result +=
      y[1] *
      (+2.03611116e+00 + 7.32270755e-03 * T - 2.23692638e-06 * T2 +
       3.68057308e-10 * T3 - 2.51412122e-14 * T4 + 4.93988614e+03 * invT) *
      0.0356455407428531;
    // species 2: CH4
    result +=
      y[2] *
      (+7.48514950e-02 + 6.69547335e-03 * T - 1.91095270e-06 * T2 +
       3.05731338e-10 * T3 - 2.03630460e-14 * T4 - 9.46834459e+03 * invT) *
      0.0623324814560868;
    // species 3: C3H6
    result +=
      y[3] *
      (+6.73225700e+00 + 7.45417000e-03 * T - 1.64996633e-06 * T2 +
       1.80300550e-10 * T3 - 7.53240800e-15 * T4 - 9.23570300e+02 * invT) *
      0.0237636938285687;
    // species 4: iC4H8
    result +=
      y[4] *
      (+4.46094700e+00 + 1.48057435e-02 * T - 4.35904300e-06 * T2 +
       6.64298350e-10 * T3 - 4.02694260e-14 * T4 - 5.00667580e+03 * invT) *
      0.0178227703714265;
    // species 5: C4H81
    result +=
      y[5] *
      (+2.05358410e+00 + 1.71752535e-02 * T - 5.29439900e-06 * T2 +
       8.27241550e-10 * T3 - 5.07220900e-14 * T4 - 2.13972310e+03 * invT) *
      0.0178227703714265;
    // species 6: H2
    result +=
      y[6] *
      (+3.33727920e+00 - 2.47012365e-05 * T + 1.66485593e-07 * T2 -
       4.48915985e-11 * T3 + 4.00510752e-15 * T4 - 9.50158922e+02 * invT) *
      0.4960317460317460;
    // species 7: C2H6
    result +=
      y[7] *
      (+1.07188150e+00 + 1.08426339e-02 * T - 3.34186890e-06 * T2 +
       5.53530003e-10 * T3 - 3.80005780e-14 * T4 - 1.14263932e+04 * invT) *
      0.0332557366145660;
    // species 8: CO
    result +=
      y[8] *
      (+2.71518561e+00 + 1.03126372e-03 * T - 3.32941924e-07 * T2 +
       5.75132520e-11 * T3 - 4.07295432e-15 * T4 - 1.41518724e+04 * invT) *
      0.0357015351660121;
    // species 9: C6H6
    result +=
      y[9] *
      (+9.13812450e+00 + 1.19272165e-02 * T - 2.93759087e-06 * T2 +
       3.02475525e-10 * T3 - 3.64430060e-15 * T4 + 5.20434620e+03 * invT) *
      0.0128018024937911;
    // species 10: C2H2
    result +=
      y[10] *
      (+4.14756964e+00 + 2.98083332e-03 * T - 7.90982840e-07 * T2 +
       1.16853043e-10 * T3 - 7.22470426e-15 * T4 + 2.59359992e+04 * invT) *
      0.0384054074813734;
    // species 11: C6H5CH3
    result +=
      y[11] *
      (+1.29400340e+01 + 1.33456435e-02 * T - 3.22795017e-06 * T2 +
       3.93465725e-10 * T3 - 1.89327202e-14 * T4 - 6.97649080e+02 * invT) *
      0.0108529319195581;
    // species 12: CH3
    result +=
      y[12] *
      (+2.28571772e+00 + 3.61995018e-03 * T - 9.95714493e-07 * T2 +
       1.48921161e-10 * T3 - 9.34308788e-15 * T4 + 1.67755843e+04 * invT) *
      0.0665114732291320;
    // species 13: O2
    result +=
      y[13] *
      (+3.28253784e+00 + 7.41543770e-04 * T - 2.52655556e-07 * T2 +
       5.23676387e-11 * T3 - 4.33435588e-15 * T4 - 1.08845772e+03 * invT) *
      0.0312519532470779;
    // species 14: O
    result +=
      y[14] *
      (+2.56942078e+00 - 4.29870569e-05 * T + 1.39828196e-08 * T2 -
       2.50444497e-12 * T3 + 2.45667382e-16 * T4 + 2.92175791e+04 * invT) *
      0.0625039064941559;
    // species 15: OH
    result +=
      y[15] *
      (+2.86472886e+00 + 5.28252240e-04 * T - 8.63609193e-08 * T2 +
       7.63046685e-12 * T3 - 2.66391752e-16 * T4 + 3.71885774e+03 * invT) *
      0.0587993179279120;
    // species 16: HO2
    result +=
      y[16] *
      (+4.01721090e+00 + 1.11991006e-03 * T - 2.11219383e-07 * T2 +
       2.85615925e-11 * T3 - 2.15817070e-15 * T4 + 1.11856713e+02 * invT) *
      0.0302975216627280;
    // species 17: H2O
    result +=
      y[17] *
      (+3.03399249e+00 + 1.08845902e-03 * T - 5.46908393e-08 * T2 -
       2.42604967e-11 * T3 + 3.36401984e-15 * T4 - 3.00042971e+04 * invT) *
      0.0555092978073827;
    // species 18: H2O2
    result +=
      y[18] *
      (+4.16500285e+00 + 2.45415847e-03 * T - 6.33797417e-07 * T2 +
       9.27964965e-11 * T3 - 5.75816610e-15 * T4 - 1.78617877e+04 * invT) *
      0.0293996589639560;
    // species 19: H
    result +=
      y[19] *
      (+2.50000001e+00 - 1.15421486e-11 * T + 5.38539827e-15 * T2 -
       1.18378809e-18 * T3 + 9.96394714e-23 * T4 + 2.54736599e+04 * invT) *
      0.9920634920634921;
    // species 20: CH2
    result +=
      y[20] *
      (+2.87410113e+00 + 1.82819646e-03 * T - 4.69648657e-07 * T2 +
       6.50448872e-11 * T3 - 3.75455134e-15 * T4 + 4.62636040e+04 * invT) *
      0.0712910814857061;
    // species 21: CH2*
    result +=
      y[21] *
      (+2.29203842e+00 + 2.32794318e-03 * T - 6.70639823e-07 * T2 +
       1.04476500e-10 * T3 - 6.79432730e-15 * T4 + 5.09259997e+04 * invT) *
      0.0712910814857061;
    // species 22: HCO
    result +=
      y[22] *
      (+2.77217438e+00 + 2.47847763e-03 * T - 8.28152043e-07 * T2 +
       1.47290445e-10 * T3 - 1.06701742e-14 * T4 + 4.01191815e+03 * invT) *
      0.0344613688055690;
    // species 23: CH2O
    result +=
      y[23] *
      (+1.76069008e+00 + 4.60000041e-03 * T - 1.47419604e-06 * T2 +
       2.51603030e-10 * T3 - 1.76771128e-14 * T4 - 1.39958323e+04 * invT) *
      0.0333044694598015;
    // species 24: CH3O
    result +=
      y[24] *
      (+4.75779238e+00 + 3.72071237e-03 * T - 8.99017253e-07 * T2 +
       1.09522626e-10 * T3 - 5.27074196e-15 * T4 + 3.78111940e+02 * invT) *
      0.0322227234645872;
    // species 25: CO2
    result +=
      y[25] *
      (+3.85746029e+00 + 2.20718513e-03 * T - 7.38271347e-07 * T2 +
       1.30872547e-10 * T3 - 9.44168328e-15 * T4 - 4.87591660e+04 * invT) *
      0.0227226249176305;
    // species 26: C2H3
    result +=
      y[26] *
      (+3.01672400e+00 + 5.16511460e-03 * T - 1.56027450e-06 * T2 +
       2.54408220e-10 * T3 - 1.72521408e-14 * T4 + 3.46128739e+04 * invT) *
      0.0369740442209569;
    // species 27: C2H5
    result +=
      y[27] *
      (+1.95465642e+00 + 8.69863610e-03 * T - 2.66068889e-06 * T2 +
       4.38044223e-10 * T3 - 2.99283152e-14 * T4 + 1.28575200e+04 * invT) *
      0.0344091941366733;
    // species 28: HCCO
    result +=
      y[28] *
      (+5.62820580e+00 + 2.04267005e-03 * T - 5.31151567e-07 * T2 +
       7.15651300e-11 * T3 - 3.88156640e-15 * T4 + 1.93272150e+04 * invT) *
      0.0243730044602598;
    // species 29: CH2CO
    result +=
      y[29] *
      (+4.51129732e+00 + 4.50179872e-03 * T - 1.38979878e-06 * T2 +
       2.30836470e-10 * T3 - 1.58967640e-14 * T4 - 7.77850000e+03 * invT) *
      0.0237885672145967;
    // species 30: CH2CHO
    result +=
      y[30] *
      (+5.97566990e+00 + 4.06529570e-03 * T - 9.14541500e-07 * T2 +
       1.01757603e-10 * T3 - 4.35203420e-15 * T4 - 9.69500000e+02 * invT) *
      0.0232315019165989;
    // species 31: C3H3
    result +=
      y[31] *
      (+7.14221880e+00 + 3.80951002e-03 * T - 8.91533167e-07 * T2 +
       1.06228700e-10 * T3 - 5.02950830e-15 * T4 + 3.89087427e+04 * invT) *
      0.0256036049875823;
    // species 32: aC3H5
    result +=
      y[32] *
      (+6.50078770e+00 + 7.16236550e-03 * T - 1.89272107e-06 * T2 +
       2.77020025e-10 * T3 - 1.80727774e-14 * T4 + 1.74824490e+04 * invT) *
      0.0243468945535997;
    // species 33: C5H4O
    result +=
      y[33] *
      (+1.00806824e+01 + 8.05717325e-03 * T - 1.94438170e-06 * T2 +
       2.36689830e-10 * T3 - 1.13794441e-14 * T4 + 1.94364771e+03 * invT) *
      0.0124865769298005;
    // species 34: C5H5
    result +=
      y[34] *
      (+7.47439380e+00 + 8.00636650e-03 * T - 2.16077160e-09 * T2 -
       8.95492575e-10 * T3 + 1.84730142e-13 * T4 + 2.80860000e+04 * invT) *
      0.0153621629925494;
    // species 35: C6H5
    result +=
      y[35] *
      (+8.59731100e+00 + 1.11208150e-02 * T - 2.90666593e-06 * T2 +
       3.44719625e-10 * T3 - 1.06292112e-14 * T4 + 3.62610470e+04 * invT) *
      0.0129691593390916;
    // species 36: C6H5CH2
    result +=
      y[36] *
      (+1.40439800e+01 + 1.17469365e-02 * T - 2.84584557e-06 * T2 +
       3.47271025e-10 * T3 - 1.67228840e-14 * T4 + 1.85642030e+04 * invT) *
      0.0109729735661067;
    // species 37: C6H5O
    result +=
      y[37] *
      (+1.37221720e+01 + 8.73443855e-03 * T - 2.11834840e-06 * T2 +
       2.58730770e-10 * T3 - 1.24682101e-14 * T4 + 2.87274751e+02 * invT) *
      0.0107405617313786;
    // species 38: C6H5CO
    result +=
      y[38] *
      (+1.33744090e+01 + 1.19996445e-02 * T - 3.48857467e-06 * T2 +
       5.41728275e-10 * T3 - 3.60140900e-14 * T4 + 6.91478370e+03 * invT) *
      0.0095132995928308;
    // species 39: C6H5CHO
    result +=
      y[39] *
      (+1.36507370e+01 + 1.28402095e-02 * T - 3.48890967e-06 * T2 +
       4.85335750e-10 * T3 - 2.69675840e-14 * T4 - 1.10197440e+04 * invT) *
      0.0094229392031963;
    // species 40: N2
    result +=
      y[40] *
      (+2.92664000e+00 + 7.43988400e-04 * T - 1.89492000e-07 * T2 +
       2.52425950e-11 * T3 - 1.35067020e-15 * T4 - 9.22797700e+02 * invT) *
      0.0356964374955379;
  }

  const amrex::Real RT = 8.31446261815324e+07 * T; // R*T

  hbms = result * RT;
}

// get mean internal energy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBML(const amrex::Real T, const amrex::Real x[], amrex::Real& ubml)
{
  amrex::Real result = 0;
  amrex::Real uml[41];                       //  temporary energy array
  amrex::Real RT = 8.31446261815324e+07 * T; // R*T
  speciesInternalEnergy(uml, T);

  // perform dot product
  for (int id = 0; id < 41; ++id) {
    result += x[id] * uml[id];
  }

  ubml = result * RT;
}

// get mean internal energy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBMS(const amrex::Real T, const amrex::Real y[], amrex::Real& ubms)
{
  amrex::Real result = 0.0;
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: POSF10325
    result +=
      y[0] *
      (+1.57855180e+00 + 3.63124160e-02 * T + 2.44121233e-05 * T2 -
       3.77886100e-08 * T3 + 1.37871158e-11 * T4 - 3.80298550e+04 * invT) *
      0.0064810074077915;
    // species 1: C2H4
    result +=
      y[1] *
      (+2.95920148e+00 - 3.78526124e-03 * T + 1.90330097e-05 * T2 -
       1.72897188e-08 * T3 + 5.39768746e-12 * T4 + 5.08977593e+03 * invT) *
      0.0356455407428531;
    // species 2: CH4
    result +=
      y[2] *
      (+4.14987613e+00 - 6.83548940e-03 * T + 1.63933533e-05 * T2 -
       1.21185757e-08 * T3 + 3.33387912e-12 * T4 - 1.02466476e+04 * invT) *
      0.0623324814560868;
    // species 3: C3H6
    result +=
      y[3] *
      (+4.93307000e-01 + 1.04625900e-02 * T + 1.49559800e-06 * T2 -
       4.17228000e-09 * T3 + 1.43162920e-12 * T4 + 1.07482600e+03 * invT) *
      0.0237636938285687;
    // species 4: iC4H8
    result +=
      y[4] *
      (+1.64714050e+00 + 1.29514785e-02 * T + 2.73284513e-06 * T2 -
       5.54831475e-09 * T3 + 1.77917160e-12 * T4 - 4.03730690e+03 * invT) *
      0.0178227703714265;
    // species 5: C4H81
    result +=
      y[5] *
      (+1.81138000e-01 + 1.54266900e-02 * T + 1.69550823e-06 * T2 -
       6.16372200e-09 * T3 + 2.22203860e-12 * T4 - 1.79040040e+03 * invT) *
      0.0178227703714265;
    // species 6: H2
    result +=
      y[6] *
      (+1.34433112e+00 + 3.99026037e-03 * T - 6.49271700e-06 * T2 +
       5.03930235e-09 * T3 - 1.47522352e-12 * T4 - 9.17935173e+02 * invT) *
      0.4960317460317460;
    // species 7: C2H6
    result +=
      y[7] *
      (+3.29142492e+00 - 2.75077135e-03 * T + 1.99812763e-05 * T2 -
       1.77116571e-08 * T3 + 5.37371542e-12 * T4 - 1.15222055e+04 * invT) *
      0.0332557366145660;
    // species 8: CO
    result +=
      y[8] *
      (+2.57953347e+00 - 3.05176840e-04 * T + 3.38938110e-07 * T2 +
       2.26751471e-10 * T3 - 1.80884900e-13 * T4 - 1.43440860e+04 * invT) *
      0.0357015351660121;
    // species 9: C6H6
    result +=
      y[9] *
      (-5.84377340e+00 + 2.92138065e-02 * T - 9.82861833e-06 * T2 -
       1.73476100e-09 * T3 + 1.64250506e-12 * T4 + 9.18177730e+03 * invT) *
      0.0128018024937911;
    // species 10: C2H2
    result +=
      y[10] *
      (-1.91318906e-01 + 1.16807815e-02 * T - 1.18390605e-05 * T2 +
       7.00381092e-09 * T3 - 1.70014595e-12 * T4 + 2.64289807e+04 * invT) *
      0.0384054074813734;
    // species 11: C6H5CH3
    result +=
      y[11] *
      (+6.15266300e-01 + 1.05497190e-02 * T + 2.84553393e-05 * T2 -
       3.31526650e-08 * T3 + 1.11913208e-11 * T4 + 4.07563000e+03 * invT) *
      0.0108529319195581;
    // species 12: CH3
    result +=
      y[12] *
      (+2.67359040e+00 + 1.00547588e-03 * T + 1.91007285e-06 * T2 -
       1.71779356e-09 * T3 + 5.08771468e-13 * T4 + 1.64449988e+04 * invT) *
      0.0665114732291320;
    // species 13: O2
    result +=
      y[13] *
      (+2.78245636e+00 - 1.49836708e-03 * T + 3.28243400e-06 * T2 -
       2.42032377e-09 * T3 + 6.48745674e-13 * T4 - 1.06394356e+03 * invT) *
      0.0312519532470779;
    // species 14: O
    result +=
      y[14] *
      (+2.16826710e+00 - 1.63965942e-03 * T + 2.21435465e-06 * T2 -
       1.53201656e-09 * T3 + 4.22531942e-13 * T4 + 2.91222592e+04 * invT) *
      0.0625039064941559;
    // species 15: OH
    result +=
      y[15] *
      (+3.12530561e+00 - 1.61272470e-03 * T + 2.17588230e-06 * T2 -
       1.44963411e-09 * T3 + 4.12474758e-13 * T4 + 3.38153812e+03 * invT) *
      0.0587993179279120;
    // species 16: HO2
    result +=
      y[16] *
      (+3.30179801e+00 - 2.37456025e-03 * T + 7.05276303e-06 * T2 -
       6.06909735e-09 * T3 + 1.85845025e-12 * T4 + 2.94808040e+02 * invT) *
      0.0302975216627280;
    // species 17: H2O
    result +=
      y[17] *
      (+3.19864056e+00 - 1.01821705e-03 * T + 2.17346737e-06 * T2 -
       1.37199266e-09 * T3 + 3.54395634e-13 * T4 - 3.02937267e+04 * invT) *
      0.0555092978073827;
    // species 18: H2O2
    result +=
      y[18] *
      (+3.27611269e+00 - 2.71411208e-04 * T + 5.57785670e-06 * T2 -
       5.39427032e-09 * T3 + 1.72490873e-12 * T4 - 1.77025821e+04 * invT) *
      0.0293996589639560;
    // species 19: H
    result +=
      y[19] *
      (+1.50000000e+00 + 3.52666409e-13 * T - 6.65306547e-16 * T2 +
       5.75204080e-19 * T3 - 1.85546466e-22 * T4 + 2.54736599e+04 * invT) *
      0.9920634920634921;
    // species 20: CH2
    result +=
      y[20] *
      (+2.76267867e+00 + 4.84436072e-04 * T + 9.31632803e-07 * T2 -
       9.62727883e-10 * T3 + 3.37483438e-13 * T4 + 4.60040401e+04 * invT) *
      0.0712910814857061;
    // species 21: CH2*
    result +=
      y[21] *
      (+3.19860411e+00 - 1.18330710e-03 * T + 2.74432073e-06 * T2 -
       1.67203995e-09 * T3 + 3.88629474e-13 * T4 + 5.04968163e+04 * invT) *
      0.0712910814857061;
    // species 22: HCO
    result +=
      y[22] *
      (+3.22118584e+00 - 1.62196266e-03 * T + 4.59331487e-06 * T2 -
       3.32860233e-09 * T3 + 8.67537730e-13 * T4 + 3.83956496e+03 * invT) *
      0.0344613688055690;
    // species 23: CH2O
    result +=
      y[23] *
      (+3.79372315e+00 - 4.95416684e-03 * T + 1.24406669e-05 * T2 -
       9.48213152e-09 * T3 + 2.63545304e-12 * T4 - 1.43089567e+04 * invT) *
      0.0333044694598015;
    // species 24: CH3O
    result +=
      y[24] *
      (+2.71180502e+00 - 1.40231653e-03 * T + 1.25516990e-05 * T2 -
       1.18268022e-08 * T3 + 3.73176840e-12 * T4 + 1.29569760e+03 * invT) *
      0.0322227234645872;
    // species 25: CO2
    result +=
      y[25] *
      (+1.35677352e+00 + 4.49229839e-03 * T - 2.37452090e-06 * T2 +
       6.14797555e-10 * T3 - 2.87399096e-14 * T4 - 4.83719697e+04 * invT) *
      0.0227226249176305;
    // species 26: C2H3
    result +=
      y[26] *
      (+2.21246645e+00 + 7.57395810e-04 * T + 8.64031373e-06 * T2 -
       8.94144617e-09 * T3 + 2.94301746e-12 * T4 + 3.48598468e+04 * invT) *
      0.0369740442209569;
    // species 27: C2H5
    result +=
      y[27] *
      (+3.30646568e+00 - 2.09329446e-03 * T + 1.65714269e-05 * T2 -
       1.49781651e-08 * T3 + 4.61018008e-12 * T4 + 1.28416265e+04 * invT) *
      0.0344091941366733;
    // species 28: HCCO
    result +=
      y[28] *
      (+1.25172140e+00 + 8.82751050e-03 * T - 7.90970033e-06 * T2 +
       4.31893975e-09 * T3 - 1.01329622e-12 * T4 + 2.00594490e+04 * invT) *
      0.0243730044602598;
    // species 29: CH2CO
    result +=
      y[29] *
      (+1.13583630e+00 + 9.05943605e-03 * T - 5.79824913e-06 * T2 +
       2.33599392e-09 * T3 - 4.02915230e-13 * T4 - 7.27000000e+03 * invT) *
      0.0237885672145967;
    // species 30: CH2CHO
    result +=
      y[30] *
      (+2.40906240e+00 + 5.36928700e-03 * T + 6.30497500e-07 * T2 -
       1.78964578e-09 * T3 + 5.73477020e-13 * T4 + 6.20000000e+01 * invT) *
      0.0232315019165989;
    // species 31: C3H3
    result +=
      y[31] *
      (+3.51109270e-01 + 1.63705612e-02 * T - 1.57942378e-05 * T2 +
       9.40774520e-09 * T3 - 2.37081846e-12 * T4 + 4.01057783e+04 * invT) *
      0.0256036049875823;
    // species 32: aC3H5
    result +=
      y[32] *
      (+3.63183500e-01 + 9.90691050e-03 * T + 4.16568667e-06 * T2 -
       8.33888875e-09 * T3 + 3.16931420e-12 * T4 + 1.92456290e+04 * invT) *
      0.0243468945535997;
    // species 33: C5H4O
    result +=
      y[33] *
      (-7.35423503e-01 + 1.67436913e-02 * T + 5.59128233e-07 * T2 -
       7.40518638e-09 * T3 + 3.08862952e-12 * T4 + 5.11159287e+03 * invT) *
      0.0124865769298005;
    // species 34: C5H5
    result +=
      y[34] *
      (-1.65017800e-02 + 1.68257380e-02 * T - 3.68472700e-08 * T2 -
       9.18584850e-09 * T3 + 4.62823680e-12 * T4 + 2.96260000e+04 * invT) *
      0.0153621629925494;
    // species 35: C6H5
    result +=
      y[35] *
      (-4.69314530e+00 + 2.60894840e-02 * T - 8.51947567e-06 * T2 -
       1.76652803e-09 * T3 + 1.51667950e-12 * T4 + 3.97795900e+04 * invT) *
      0.0129691593390916;
    // species 36: C6H5CH2
    result +=
      y[36] *
      (-5.18884600e-01 + 1.92564160e-02 * T + 1.09538307e-05 * T2 -
       1.92431803e-08 * T3 + 7.08461360e-12 * T4 + 2.33070270e+04 * invT) *
      0.0109729735661067;
    // species 37: C6H5O
    result +=
      y[37] *
      (-1.46620445e+00 + 2.06721987e-02 * T + 4.41376637e-06 * T2 -
       1.43218192e-08 * T3 + 5.79527414e-12 * T4 + 4.77858391e+03 * invT) *
      0.0107405617313786;
    // species 38: C6H5CO
    result +=
      y[38] *
      (-3.02511550e+00 + 3.07562705e-02 * T - 1.05345510e-05 * T2 -
       1.74311497e-09 * T3 + 1.59670298e-12 * T4 + 1.12558030e+04 * invT) *
      0.0095132995928308;
    // species 39: C6H5CHO
    result +=
      y[39] *
      (-4.16273340e+00 + 3.31846225e-02 * T - 1.16054510e-05 * T2 -
       1.57498443e-09 * T3 + 1.71614202e-12 * T4 - 6.11693490e+03 * invT) *
      0.0094229392031963;
    // species 40: N2
    result +=
      y[40] *
      (+2.29867700e+00 + 7.04120200e-04 * T - 1.32107400e-06 * T2 +
       1.41037875e-09 * T3 - 4.88970800e-13 * T4 - 1.02089990e+03 * invT) *
      0.0356964374955379;
  } else {
    // species 0: POSF10325
    result +=
      y[0] *
      (+2.03578910e+01 + 3.32945435e-02 * T - 8.65582300e-06 * T2 +
       1.11937502e-09 * T3 - 4.72143040e-14 * T4 - 4.57969960e+04 * invT) *
      0.0064810074077915;
    // species 1: C2H4
    result +=
      y[1] *
      (+1.03611116e+00 + 7.32270755e-03 * T - 2.23692638e-06 * T2 +
       3.68057308e-10 * T3 - 2.51412122e-14 * T4 + 4.93988614e+03 * invT) *
      0.0356455407428531;
    // species 2: CH4
    result +=
      y[2] *
      (-9.25148505e-01 + 6.69547335e-03 * T - 1.91095270e-06 * T2 +
       3.05731338e-10 * T3 - 2.03630460e-14 * T4 - 9.46834459e+03 * invT) *
      0.0623324814560868;
    // species 3: C3H6
    result +=
      y[3] *
      (+5.73225700e+00 + 7.45417000e-03 * T - 1.64996633e-06 * T2 +
       1.80300550e-10 * T3 - 7.53240800e-15 * T4 - 9.23570300e+02 * invT) *
      0.0237636938285687;
    // species 4: iC4H8
    result +=
      y[4] *
      (+3.46094700e+00 + 1.48057435e-02 * T - 4.35904300e-06 * T2 +
       6.64298350e-10 * T3 - 4.02694260e-14 * T4 - 5.00667580e+03 * invT) *
      0.0178227703714265;
    // species 5: C4H81
    result +=
      y[5] *
      (+1.05358410e+00 + 1.71752535e-02 * T - 5.29439900e-06 * T2 +
       8.27241550e-10 * T3 - 5.07220900e-14 * T4 - 2.13972310e+03 * invT) *
      0.0178227703714265;
    // species 6: H2
    result +=
      y[6] *
      (+2.33727920e+00 - 2.47012365e-05 * T + 1.66485593e-07 * T2 -
       4.48915985e-11 * T3 + 4.00510752e-15 * T4 - 9.50158922e+02 * invT) *
      0.4960317460317460;
    // species 7: C2H6
    result +=
      y[7] *
      (+7.18815000e-02 + 1.08426339e-02 * T - 3.34186890e-06 * T2 +
       5.53530003e-10 * T3 - 3.80005780e-14 * T4 - 1.14263932e+04 * invT) *
      0.0332557366145660;
    // species 8: CO
    result +=
      y[8] *
      (+1.71518561e+00 + 1.03126372e-03 * T - 3.32941924e-07 * T2 +
       5.75132520e-11 * T3 - 4.07295432e-15 * T4 - 1.41518724e+04 * invT) *
      0.0357015351660121;
    // species 9: C6H6
    result +=
      y[9] *
      (+8.13812450e+00 + 1.19272165e-02 * T - 2.93759087e-06 * T2 +
       3.02475525e-10 * T3 - 3.64430060e-15 * T4 + 5.20434620e+03 * invT) *
      0.0128018024937911;
    // species 10: C2H2
    result +=
      y[10] *
      (+3.14756964e+00 + 2.98083332e-03 * T - 7.90982840e-07 * T2 +
       1.16853043e-10 * T3 - 7.22470426e-15 * T4 + 2.59359992e+04 * invT) *
      0.0384054074813734;
    // species 11: C6H5CH3
    result +=
      y[11] *
      (+1.19400340e+01 + 1.33456435e-02 * T - 3.22795017e-06 * T2 +
       3.93465725e-10 * T3 - 1.89327202e-14 * T4 - 6.97649080e+02 * invT) *
      0.0108529319195581;
    // species 12: CH3
    result +=
      y[12] *
      (+1.28571772e+00 + 3.61995018e-03 * T - 9.95714493e-07 * T2 +
       1.48921161e-10 * T3 - 9.34308788e-15 * T4 + 1.67755843e+04 * invT) *
      0.0665114732291320;
    // species 13: O2
    result +=
      y[13] *
      (+2.28253784e+00 + 7.41543770e-04 * T - 2.52655556e-07 * T2 +
       5.23676387e-11 * T3 - 4.33435588e-15 * T4 - 1.08845772e+03 * invT) *
      0.0312519532470779;
    // species 14: O
    result +=
      y[14] *
      (+1.56942078e+00 - 4.29870569e-05 * T + 1.39828196e-08 * T2 -
       2.50444497e-12 * T3 + 2.45667382e-16 * T4 + 2.92175791e+04 * invT) *
      0.0625039064941559;
    // species 15: OH
    result +=
      y[15] *
      (+1.86472886e+00 + 5.28252240e-04 * T - 8.63609193e-08 * T2 +
       7.63046685e-12 * T3 - 2.66391752e-16 * T4 + 3.71885774e+03 * invT) *
      0.0587993179279120;
    // species 16: HO2
    result +=
      y[16] *
      (+3.01721090e+00 + 1.11991006e-03 * T - 2.11219383e-07 * T2 +
       2.85615925e-11 * T3 - 2.15817070e-15 * T4 + 1.11856713e+02 * invT) *
      0.0302975216627280;
    // species 17: H2O
    result +=
      y[17] *
      (+2.03399249e+00 + 1.08845902e-03 * T - 5.46908393e-08 * T2 -
       2.42604967e-11 * T3 + 3.36401984e-15 * T4 - 3.00042971e+04 * invT) *
      0.0555092978073827;
    // species 18: H2O2
    result +=
      y[18] *
      (+3.16500285e+00 + 2.45415847e-03 * T - 6.33797417e-07 * T2 +
       9.27964965e-11 * T3 - 5.75816610e-15 * T4 - 1.78617877e+04 * invT) *
      0.0293996589639560;
    // species 19: H
    result +=
      y[19] *
      (+1.50000001e+00 - 1.15421486e-11 * T + 5.38539827e-15 * T2 -
       1.18378809e-18 * T3 + 9.96394714e-23 * T4 + 2.54736599e+04 * invT) *
      0.9920634920634921;
    // species 20: CH2
    result +=
      y[20] *
      (+1.87410113e+00 + 1.82819646e-03 * T - 4.69648657e-07 * T2 +
       6.50448872e-11 * T3 - 3.75455134e-15 * T4 + 4.62636040e+04 * invT) *
      0.0712910814857061;
    // species 21: CH2*
    result +=
      y[21] *
      (+1.29203842e+00 + 2.32794318e-03 * T - 6.70639823e-07 * T2 +
       1.04476500e-10 * T3 - 6.79432730e-15 * T4 + 5.09259997e+04 * invT) *
      0.0712910814857061;
    // species 22: HCO
    result +=
      y[22] *
      (+1.77217438e+00 + 2.47847763e-03 * T - 8.28152043e-07 * T2 +
       1.47290445e-10 * T3 - 1.06701742e-14 * T4 + 4.01191815e+03 * invT) *
      0.0344613688055690;
    // species 23: CH2O
    result +=
      y[23] *
      (+7.60690080e-01 + 4.60000041e-03 * T - 1.47419604e-06 * T2 +
       2.51603030e-10 * T3 - 1.76771128e-14 * T4 - 1.39958323e+04 * invT) *
      0.0333044694598015;
    // species 24: CH3O
    result +=
      y[24] *
      (+3.75779238e+00 + 3.72071237e-03 * T - 8.99017253e-07 * T2 +
       1.09522626e-10 * T3 - 5.27074196e-15 * T4 + 3.78111940e+02 * invT) *
      0.0322227234645872;
    // species 25: CO2
    result +=
      y[25] *
      (+2.85746029e+00 + 2.20718513e-03 * T - 7.38271347e-07 * T2 +
       1.30872547e-10 * T3 - 9.44168328e-15 * T4 - 4.87591660e+04 * invT) *
      0.0227226249176305;
    // species 26: C2H3
    result +=
      y[26] *
      (+2.01672400e+00 + 5.16511460e-03 * T - 1.56027450e-06 * T2 +
       2.54408220e-10 * T3 - 1.72521408e-14 * T4 + 3.46128739e+04 * invT) *
      0.0369740442209569;
    // species 27: C2H5
    result +=
      y[27] *
      (+9.54656420e-01 + 8.69863610e-03 * T - 2.66068889e-06 * T2 +
       4.38044223e-10 * T3 - 2.99283152e-14 * T4 + 1.28575200e+04 * invT) *
      0.0344091941366733;
    // species 28: HCCO
    result +=
      y[28] *
      (+4.62820580e+00 + 2.04267005e-03 * T - 5.31151567e-07 * T2 +
       7.15651300e-11 * T3 - 3.88156640e-15 * T4 + 1.93272150e+04 * invT) *
      0.0243730044602598;
    // species 29: CH2CO
    result +=
      y[29] *
      (+3.51129732e+00 + 4.50179872e-03 * T - 1.38979878e-06 * T2 +
       2.30836470e-10 * T3 - 1.58967640e-14 * T4 - 7.77850000e+03 * invT) *
      0.0237885672145967;
    // species 30: CH2CHO
    result +=
      y[30] *
      (+4.97566990e+00 + 4.06529570e-03 * T - 9.14541500e-07 * T2 +
       1.01757603e-10 * T3 - 4.35203420e-15 * T4 - 9.69500000e+02 * invT) *
      0.0232315019165989;
    // species 31: C3H3
    result +=
      y[31] *
      (+6.14221880e+00 + 3.80951002e-03 * T - 8.91533167e-07 * T2 +
       1.06228700e-10 * T3 - 5.02950830e-15 * T4 + 3.89087427e+04 * invT) *
      0.0256036049875823;
    // species 32: aC3H5
    result +=
      y[32] *
      (+5.50078770e+00 + 7.16236550e-03 * T - 1.89272107e-06 * T2 +
       2.77020025e-10 * T3 - 1.80727774e-14 * T4 + 1.74824490e+04 * invT) *
      0.0243468945535997;
    // species 33: C5H4O
    result +=
      y[33] *
      (+9.08068240e+00 + 8.05717325e-03 * T - 1.94438170e-06 * T2 +
       2.36689830e-10 * T3 - 1.13794441e-14 * T4 + 1.94364771e+03 * invT) *
      0.0124865769298005;
    // species 34: C5H5
    result +=
      y[34] *
      (+6.47439380e+00 + 8.00636650e-03 * T - 2.16077160e-09 * T2 -
       8.95492575e-10 * T3 + 1.84730142e-13 * T4 + 2.80860000e+04 * invT) *
      0.0153621629925494;
    // species 35: C6H5
    result +=
      y[35] *
      (+7.59731100e+00 + 1.11208150e-02 * T - 2.90666593e-06 * T2 +
       3.44719625e-10 * T3 - 1.06292112e-14 * T4 + 3.62610470e+04 * invT) *
      0.0129691593390916;
    // species 36: C6H5CH2
    result +=
      y[36] *
      (+1.30439800e+01 + 1.17469365e-02 * T - 2.84584557e-06 * T2 +
       3.47271025e-10 * T3 - 1.67228840e-14 * T4 + 1.85642030e+04 * invT) *
      0.0109729735661067;
    // species 37: C6H5O
    result +=
      y[37] *
      (+1.27221720e+01 + 8.73443855e-03 * T - 2.11834840e-06 * T2 +
       2.58730770e-10 * T3 - 1.24682101e-14 * T4 + 2.87274751e+02 * invT) *
      0.0107405617313786;
    // species 38: C6H5CO
    result +=
      y[38] *
      (+1.23744090e+01 + 1.19996445e-02 * T - 3.48857467e-06 * T2 +
       5.41728275e-10 * T3 - 3.60140900e-14 * T4 + 6.91478370e+03 * invT) *
      0.0095132995928308;
    // species 39: C6H5CHO
    result +=
      y[39] *
      (+1.26507370e+01 + 1.28402095e-02 * T - 3.48890967e-06 * T2 +
       4.85335750e-10 * T3 - 2.69675840e-14 * T4 - 1.10197440e+04 * invT) *
      0.0094229392031963;
    // species 40: N2
    result +=
      y[40] *
      (+1.92664000e+00 + 7.43988400e-04 * T - 1.89492000e-07 * T2 +
       2.52425950e-11 * T3 - 1.35067020e-15 * T4 - 9.22797700e+02 * invT) *
      0.0356964374955379;
  }

  const amrex::Real RT = 8.31446261815324e+07 * T; // R*T

  ubms = result * RT;
}

// get mixture entropy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBML(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& sbml)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(P / 1013250.0);
  amrex::Real sor[41]; //  temporary storage
  speciesEntropy(sor, T);

  // Compute Eq 42
  for (int id = 0; id < 41; ++id) {
    result += x[id] * (sor[id] - log((x[id] + 1e-100)) - logPratio);
  }

  sbml = result * 8.31446261815324e+07;
}

// get mixture entropy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBMS(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& sbms)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(P / 1013250.0);
  amrex::Real sor[41]; //  temporary storage
  amrex::Real x[41];   //  need a ytx conversion
  amrex::Real YOW = 0; // See Eq 4, 6 in CK Manual

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 41; i++) {
    YOW += y[i] * imw(i);
  }
  // Now compute y to x conversion
  x[0] = y[0] / (154.297000 * YOW);
  x[1] = y[1] / (28.054000 * YOW);
  x[2] = y[2] / (16.043000 * YOW);
  x[3] = y[3] / (42.081000 * YOW);
  x[4] = y[4] / (56.108000 * YOW);
  x[5] = y[5] / (56.108000 * YOW);
  x[6] = y[6] / (2.016000 * YOW);
  x[7] = y[7] / (30.070000 * YOW);
  x[8] = y[8] / (28.010000 * YOW);
  x[9] = y[9] / (78.114000 * YOW);
  x[10] = y[10] / (26.038000 * YOW);
  x[11] = y[11] / (92.141000 * YOW);
  x[12] = y[12] / (15.035000 * YOW);
  x[13] = y[13] / (31.998000 * YOW);
  x[14] = y[14] / (15.999000 * YOW);
  x[15] = y[15] / (17.007000 * YOW);
  x[16] = y[16] / (33.006000 * YOW);
  x[17] = y[17] / (18.015000 * YOW);
  x[18] = y[18] / (34.014000 * YOW);
  x[19] = y[19] / (1.008000 * YOW);
  x[20] = y[20] / (14.027000 * YOW);
  x[21] = y[21] / (14.027000 * YOW);
  x[22] = y[22] / (29.018000 * YOW);
  x[23] = y[23] / (30.026000 * YOW);
  x[24] = y[24] / (31.034000 * YOW);
  x[25] = y[25] / (44.009000 * YOW);
  x[26] = y[26] / (27.046000 * YOW);
  x[27] = y[27] / (29.062000 * YOW);
  x[28] = y[28] / (41.029000 * YOW);
  x[29] = y[29] / (42.037000 * YOW);
  x[30] = y[30] / (43.045000 * YOW);
  x[31] = y[31] / (39.057000 * YOW);
  x[32] = y[32] / (41.073000 * YOW);
  x[33] = y[33] / (80.086000 * YOW);
  x[34] = y[34] / (65.095000 * YOW);
  x[35] = y[35] / (77.106000 * YOW);
  x[36] = y[36] / (91.133000 * YOW);
  x[37] = y[37] / (93.105000 * YOW);
  x[38] = y[38] / (105.116000 * YOW);
  x[39] = y[39] / (106.124000 * YOW);
  x[40] = y[40] / (28.014000 * YOW);
  speciesEntropy(sor, T);
  // Perform computation in Eq 42 and 43
  for (int i = 0; i < 41; i++) {
    result += x[i] * (sor[i] - log((x[i] + 1e-100)) - logPratio);
  }
  // Scale by R/W
  sbms = result * 8.31446261815324e+07 * YOW;
}

//  get temperature given internal energy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_EY(
  const amrex::Real e, const amrex::Real y[], amrex::Real& t, int& ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real e1, emin, emax, cv, t1, dt;
  CKUBMS(tmin, y, emin);
  CKUBMS(tmax, y, emax);
  if (e < emin) {
    // Linear Extrapolation below tmin
    CKCVBS(tmin, y, cv);
    t = tmin - (emin - e) / cv;
    ierr = 1;
    return;
  }
  if (e > emax) {
    // Linear Extrapolation above tmax
    CKCVBS(tmax, y, cv);
    t = tmax - (emax - e) / cv;
    ierr = 1;
    return;
  }
  t1 = t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (emax - emin) * (e - emin);
  }
  for (int i = 0; i < maxiter; ++i) {
    CKUBMS(t1, y, e1);
    CKCVBS(t1, y, cv);
    dt = (e - e1) / cv;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  t = t1;
  ierr = 0;
}

//  get temperature given enthalpy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_HY(
  const amrex::Real h, const amrex::Real y[], amrex::Real& t, int& ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real h1, hmin, hmax, cp, t1, dt;
  CKHBMS(tmin, y, hmin);
  CKHBMS(tmax, y, hmax);
  if (h < hmin) {
    // Linear Extrapolation below tmin
    CKCPBS(tmin, y, cp);
    t = tmin - (hmin - h) / cp;
    ierr = 1;
    return;
  }
  if (h > hmax) {
    // Linear Extrapolation above tmax
    CKCPBS(tmax, y, cp);
    t = tmax - (hmax - h) / cp;
    ierr = 1;
    return;
  }
  t1 = t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (hmax - hmin) * (h - hmin);
  }
  for (int i = 0; i < maxiter; ++i) {
    CKHBMS(t1, y, h1);
    CKCPBS(t1, y, cp);
    dt = (h - h1) / cp;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  t = t1;
  ierr = 0;
}

// Compute P = rhoRT/W(x)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPX(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& P)
{
  amrex::Real XW = 0;                      //  To hold mean molecular wt
  XW += x[0] * 154.297000;                 // POSF10325
  XW += x[1] * 28.054000;                  // C2H4
  XW += x[2] * 16.043000;                  // CH4
  XW += x[3] * 42.081000;                  // C3H6
  XW += x[4] * 56.108000;                  // iC4H8
  XW += x[5] * 56.108000;                  // C4H81
  XW += x[6] * 2.016000;                   // H2
  XW += x[7] * 30.070000;                  // C2H6
  XW += x[8] * 28.010000;                  // CO
  XW += x[9] * 78.114000;                  // C6H6
  XW += x[10] * 26.038000;                 // C2H2
  XW += x[11] * 92.141000;                 // C6H5CH3
  XW += x[12] * 15.035000;                 // CH3
  XW += x[13] * 31.998000;                 // O2
  XW += x[14] * 15.999000;                 // O
  XW += x[15] * 17.007000;                 // OH
  XW += x[16] * 33.006000;                 // HO2
  XW += x[17] * 18.015000;                 // H2O
  XW += x[18] * 34.014000;                 // H2O2
  XW += x[19] * 1.008000;                  // H
  XW += x[20] * 14.027000;                 // CH2
  XW += x[21] * 14.027000;                 // CH2*
  XW += x[22] * 29.018000;                 // HCO
  XW += x[23] * 30.026000;                 // CH2O
  XW += x[24] * 31.034000;                 // CH3O
  XW += x[25] * 44.009000;                 // CO2
  XW += x[26] * 27.046000;                 // C2H3
  XW += x[27] * 29.062000;                 // C2H5
  XW += x[28] * 41.029000;                 // HCCO
  XW += x[29] * 42.037000;                 // CH2CO
  XW += x[30] * 43.045000;                 // CH2CHO
  XW += x[31] * 39.057000;                 // C3H3
  XW += x[32] * 41.073000;                 // aC3H5
  XW += x[33] * 80.086000;                 // C5H4O
  XW += x[34] * 65.095000;                 // C5H5
  XW += x[35] * 77.106000;                 // C6H5
  XW += x[36] * 91.133000;                 // C6H5CH2
  XW += x[37] * 93.105000;                 // C6H5O
  XW += x[38] * 105.116000;                // C6H5CO
  XW += x[39] * 106.124000;                // C6H5CHO
  XW += x[40] * 28.014000;                 // N2
  P = rho * 8.31446261815324e+07 * T / XW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(y)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPY(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& P)
{
  amrex::Real YOW = 0; //  for computing mean MW

  for (int i = 0; i < 41; i++) {
    YOW += y[i] * imw(i);
  }
  P = rho * 8.31446261815324e+07 * T * YOW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(c)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPC(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real c[],
  amrex::Real& P)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 154.297000;  // POSF10325
  W += c[1] * 28.054000;   // C2H4
  W += c[2] * 16.043000;   // CH4
  W += c[3] * 42.081000;   // C3H6
  W += c[4] * 56.108000;   // iC4H8
  W += c[5] * 56.108000;   // C4H81
  W += c[6] * 2.016000;    // H2
  W += c[7] * 30.070000;   // C2H6
  W += c[8] * 28.010000;   // CO
  W += c[9] * 78.114000;   // C6H6
  W += c[10] * 26.038000;  // C2H2
  W += c[11] * 92.141000;  // C6H5CH3
  W += c[12] * 15.035000;  // CH3
  W += c[13] * 31.998000;  // O2
  W += c[14] * 15.999000;  // O
  W += c[15] * 17.007000;  // OH
  W += c[16] * 33.006000;  // HO2
  W += c[17] * 18.015000;  // H2O
  W += c[18] * 34.014000;  // H2O2
  W += c[19] * 1.008000;   // H
  W += c[20] * 14.027000;  // CH2
  W += c[21] * 14.027000;  // CH2*
  W += c[22] * 29.018000;  // HCO
  W += c[23] * 30.026000;  // CH2O
  W += c[24] * 31.034000;  // CH3O
  W += c[25] * 44.009000;  // CO2
  W += c[26] * 27.046000;  // C2H3
  W += c[27] * 29.062000;  // C2H5
  W += c[28] * 41.029000;  // HCCO
  W += c[29] * 42.037000;  // CH2CO
  W += c[30] * 43.045000;  // CH2CHO
  W += c[31] * 39.057000;  // C3H3
  W += c[32] * 41.073000;  // aC3H5
  W += c[33] * 80.086000;  // C5H4O
  W += c[34] * 65.095000;  // C5H5
  W += c[35] * 77.106000;  // C6H5
  W += c[36] * 91.133000;  // C6H5CH2
  W += c[37] * 93.105000;  // C6H5O
  W += c[38] * 105.116000; // C6H5CO
  W += c[39] * 106.124000; // C6H5CHO
  W += c[40] * 28.014000;  // N2

  for (int id = 0; id < 41; ++id) {
    sumC += c[id];
  }
  P = rho * 8.31446261815324e+07 * T * sumC / W; // P = rho*R*T/W
}

// Compute rho = PW(x)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOX(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& rho)
{
  amrex::Real XW = 0;                        //  To hold mean molecular wt
  XW += x[0] * 154.297000;                   // POSF10325
  XW += x[1] * 28.054000;                    // C2H4
  XW += x[2] * 16.043000;                    // CH4
  XW += x[3] * 42.081000;                    // C3H6
  XW += x[4] * 56.108000;                    // iC4H8
  XW += x[5] * 56.108000;                    // C4H81
  XW += x[6] * 2.016000;                     // H2
  XW += x[7] * 30.070000;                    // C2H6
  XW += x[8] * 28.010000;                    // CO
  XW += x[9] * 78.114000;                    // C6H6
  XW += x[10] * 26.038000;                   // C2H2
  XW += x[11] * 92.141000;                   // C6H5CH3
  XW += x[12] * 15.035000;                   // CH3
  XW += x[13] * 31.998000;                   // O2
  XW += x[14] * 15.999000;                   // O
  XW += x[15] * 17.007000;                   // OH
  XW += x[16] * 33.006000;                   // HO2
  XW += x[17] * 18.015000;                   // H2O
  XW += x[18] * 34.014000;                   // H2O2
  XW += x[19] * 1.008000;                    // H
  XW += x[20] * 14.027000;                   // CH2
  XW += x[21] * 14.027000;                   // CH2*
  XW += x[22] * 29.018000;                   // HCO
  XW += x[23] * 30.026000;                   // CH2O
  XW += x[24] * 31.034000;                   // CH3O
  XW += x[25] * 44.009000;                   // CO2
  XW += x[26] * 27.046000;                   // C2H3
  XW += x[27] * 29.062000;                   // C2H5
  XW += x[28] * 41.029000;                   // HCCO
  XW += x[29] * 42.037000;                   // CH2CO
  XW += x[30] * 43.045000;                   // CH2CHO
  XW += x[31] * 39.057000;                   // C3H3
  XW += x[32] * 41.073000;                   // aC3H5
  XW += x[33] * 80.086000;                   // C5H4O
  XW += x[34] * 65.095000;                   // C5H5
  XW += x[35] * 77.106000;                   // C6H5
  XW += x[36] * 91.133000;                   // C6H5CH2
  XW += x[37] * 93.105000;                   // C6H5O
  XW += x[38] * 105.116000;                  // C6H5CO
  XW += x[39] * 106.124000;                  // C6H5CHO
  XW += x[40] * 28.014000;                   // N2
  rho = P * XW / (8.31446261815324e+07 * T); // rho = P*W/(R*T)
}

// Compute rho = P*W(y)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOY(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& rho)
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 41; i++) {
    YOW += y[i] * imw(i);
  }

  rho = P / (8.31446261815324e+07 * T * YOW); // rho = P*W/(R*T)
}

// Compute rho = P*W(c)/(R*T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOC(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real c[],
  amrex::Real& rho)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 154.297000;  // POSF10325
  W += c[1] * 28.054000;   // C2H4
  W += c[2] * 16.043000;   // CH4
  W += c[3] * 42.081000;   // C3H6
  W += c[4] * 56.108000;   // iC4H8
  W += c[5] * 56.108000;   // C4H81
  W += c[6] * 2.016000;    // H2
  W += c[7] * 30.070000;   // C2H6
  W += c[8] * 28.010000;   // CO
  W += c[9] * 78.114000;   // C6H6
  W += c[10] * 26.038000;  // C2H2
  W += c[11] * 92.141000;  // C6H5CH3
  W += c[12] * 15.035000;  // CH3
  W += c[13] * 31.998000;  // O2
  W += c[14] * 15.999000;  // O
  W += c[15] * 17.007000;  // OH
  W += c[16] * 33.006000;  // HO2
  W += c[17] * 18.015000;  // H2O
  W += c[18] * 34.014000;  // H2O2
  W += c[19] * 1.008000;   // H
  W += c[20] * 14.027000;  // CH2
  W += c[21] * 14.027000;  // CH2*
  W += c[22] * 29.018000;  // HCO
  W += c[23] * 30.026000;  // CH2O
  W += c[24] * 31.034000;  // CH3O
  W += c[25] * 44.009000;  // CO2
  W += c[26] * 27.046000;  // C2H3
  W += c[27] * 29.062000;  // C2H5
  W += c[28] * 41.029000;  // HCCO
  W += c[29] * 42.037000;  // CH2CO
  W += c[30] * 43.045000;  // CH2CHO
  W += c[31] * 39.057000;  // C3H3
  W += c[32] * 41.073000;  // aC3H5
  W += c[33] * 80.086000;  // C5H4O
  W += c[34] * 65.095000;  // C5H5
  W += c[35] * 77.106000;  // C6H5
  W += c[36] * 91.133000;  // C6H5CH2
  W += c[37] * 93.105000;  // C6H5O
  W += c[38] * 105.116000; // C6H5CO
  W += c[39] * 106.124000; // C6H5CHO
  W += c[40] * 28.014000;  // N2

  for (int id = 0; id < 41; ++id) {
    sumC += c[id];
  }
  rho = P * W / (sumC * T * 8.31446261815324e+07); // rho = PW/(R*T)
}

// get molecular weight for all species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWT(amrex::Real wt[])
{
  get_mw(wt);
}

// given y[species]: mass fractions
// s mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWY(const amrex::Real y[], amrex::Real& wtm)
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 41; i++) {
    YOW += y[i] * imw(i);
  }

  wtm = 1.0 / YOW;
}

// given x[species]: mole fractions
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWX(const amrex::Real x[], amrex::Real& wtm)
{
  amrex::Real XW = 0;       //  see Eq 4 in CK Manual
  XW += x[0] * 154.297000;  // POSF10325
  XW += x[1] * 28.054000;   // C2H4
  XW += x[2] * 16.043000;   // CH4
  XW += x[3] * 42.081000;   // C3H6
  XW += x[4] * 56.108000;   // iC4H8
  XW += x[5] * 56.108000;   // C4H81
  XW += x[6] * 2.016000;    // H2
  XW += x[7] * 30.070000;   // C2H6
  XW += x[8] * 28.010000;   // CO
  XW += x[9] * 78.114000;   // C6H6
  XW += x[10] * 26.038000;  // C2H2
  XW += x[11] * 92.141000;  // C6H5CH3
  XW += x[12] * 15.035000;  // CH3
  XW += x[13] * 31.998000;  // O2
  XW += x[14] * 15.999000;  // O
  XW += x[15] * 17.007000;  // OH
  XW += x[16] * 33.006000;  // HO2
  XW += x[17] * 18.015000;  // H2O
  XW += x[18] * 34.014000;  // H2O2
  XW += x[19] * 1.008000;   // H
  XW += x[20] * 14.027000;  // CH2
  XW += x[21] * 14.027000;  // CH2*
  XW += x[22] * 29.018000;  // HCO
  XW += x[23] * 30.026000;  // CH2O
  XW += x[24] * 31.034000;  // CH3O
  XW += x[25] * 44.009000;  // CO2
  XW += x[26] * 27.046000;  // C2H3
  XW += x[27] * 29.062000;  // C2H5
  XW += x[28] * 41.029000;  // HCCO
  XW += x[29] * 42.037000;  // CH2CO
  XW += x[30] * 43.045000;  // CH2CHO
  XW += x[31] * 39.057000;  // C3H3
  XW += x[32] * 41.073000;  // aC3H5
  XW += x[33] * 80.086000;  // C5H4O
  XW += x[34] * 65.095000;  // C5H5
  XW += x[35] * 77.106000;  // C6H5
  XW += x[36] * 91.133000;  // C6H5CH2
  XW += x[37] * 93.105000;  // C6H5O
  XW += x[38] * 105.116000; // C6H5CO
  XW += x[39] * 106.124000; // C6H5CHO
  XW += x[40] * 28.014000;  // N2
  wtm = XW;
}

// given c[species]: molar concentration
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWC(const amrex::Real c[], amrex::Real& wtm)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 154.297000;  // POSF10325
  W += c[1] * 28.054000;   // C2H4
  W += c[2] * 16.043000;   // CH4
  W += c[3] * 42.081000;   // C3H6
  W += c[4] * 56.108000;   // iC4H8
  W += c[5] * 56.108000;   // C4H81
  W += c[6] * 2.016000;    // H2
  W += c[7] * 30.070000;   // C2H6
  W += c[8] * 28.010000;   // CO
  W += c[9] * 78.114000;   // C6H6
  W += c[10] * 26.038000;  // C2H2
  W += c[11] * 92.141000;  // C6H5CH3
  W += c[12] * 15.035000;  // CH3
  W += c[13] * 31.998000;  // O2
  W += c[14] * 15.999000;  // O
  W += c[15] * 17.007000;  // OH
  W += c[16] * 33.006000;  // HO2
  W += c[17] * 18.015000;  // H2O
  W += c[18] * 34.014000;  // H2O2
  W += c[19] * 1.008000;   // H
  W += c[20] * 14.027000;  // CH2
  W += c[21] * 14.027000;  // CH2*
  W += c[22] * 29.018000;  // HCO
  W += c[23] * 30.026000;  // CH2O
  W += c[24] * 31.034000;  // CH3O
  W += c[25] * 44.009000;  // CO2
  W += c[26] * 27.046000;  // C2H3
  W += c[27] * 29.062000;  // C2H5
  W += c[28] * 41.029000;  // HCCO
  W += c[29] * 42.037000;  // CH2CO
  W += c[30] * 43.045000;  // CH2CHO
  W += c[31] * 39.057000;  // C3H3
  W += c[32] * 41.073000;  // aC3H5
  W += c[33] * 80.086000;  // C5H4O
  W += c[34] * 65.095000;  // C5H5
  W += c[35] * 77.106000;  // C6H5
  W += c[36] * 91.133000;  // C6H5CH2
  W += c[37] * 93.105000;  // C6H5O
  W += c[38] * 105.116000; // C6H5CO
  W += c[39] * 106.124000; // C6H5CHO
  W += c[40] * 28.014000;  // N2

  for (int id = 0; id < 41; ++id) {
    sumC += c[id];
  }
  //  CK provides no guard against division by zero
  wtm = W / sumC;
}

// get Cp/R as a function of T
// for all species (Eq 19)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPOR(const amrex::Real T, amrex::Real cpor[])
{
  cp_R(cpor, T);
}

// get H/RT as a function of T
// for all species (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHORT(const amrex::Real T, amrex::Real hort[])
{
  speciesEnthalpy(hort, T);
}

// get S/R as a function of T
// for all species (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSOR(const amrex::Real T, amrex::Real sor[])
{
  speciesEntropy(sor, T);
}

// convert y[species] (mass fracs) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTX(const amrex::Real y[], amrex::Real x[])
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 41; i++) {
    YOW += y[i] * imw(i);
  }

  amrex::Real YOWINV = 1.0 / YOW;

  for (int i = 0; i < 41; i++) {
    x[i] = y[i] * imw(i) * YOWINV;
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real c[])
{
  amrex::Real YOW = 0;
  amrex::Real PWORT;

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 41; i++) {
    c[i] = y[i] * imw(i);
  }
  for (int i = 0; i < 41; i++) {
    YOW += c[i];
  }

  // PW/RT (see Eq. 7)
  PWORT = P / (YOW * 8.31446261815324e+07 * T);
  // Now compute conversion

  for (int i = 0; i < 41; i++) {
    c[i] = PWORT * y[i] * imw(i);
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCR(
  const amrex::Real rho,
  amrex::Real /*T*/,
  const amrex::Real y[],
  amrex::Real c[])
{

  for (int i = 0; i < 41; i++) {
    c[i] = rho * y[i] * imw(i);
  }
}

// convert x[species] (mole fracs) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTY(const amrex::Real x[], amrex::Real y[])
{
  amrex::Real XW = 0; // See Eq 4, 9 in CK Manual
  // Compute mean molecular wt first
  XW += x[0] * 154.297000;  // POSF10325
  XW += x[1] * 28.054000;   // C2H4
  XW += x[2] * 16.043000;   // CH4
  XW += x[3] * 42.081000;   // C3H6
  XW += x[4] * 56.108000;   // iC4H8
  XW += x[5] * 56.108000;   // C4H81
  XW += x[6] * 2.016000;    // H2
  XW += x[7] * 30.070000;   // C2H6
  XW += x[8] * 28.010000;   // CO
  XW += x[9] * 78.114000;   // C6H6
  XW += x[10] * 26.038000;  // C2H2
  XW += x[11] * 92.141000;  // C6H5CH3
  XW += x[12] * 15.035000;  // CH3
  XW += x[13] * 31.998000;  // O2
  XW += x[14] * 15.999000;  // O
  XW += x[15] * 17.007000;  // OH
  XW += x[16] * 33.006000;  // HO2
  XW += x[17] * 18.015000;  // H2O
  XW += x[18] * 34.014000;  // H2O2
  XW += x[19] * 1.008000;   // H
  XW += x[20] * 14.027000;  // CH2
  XW += x[21] * 14.027000;  // CH2*
  XW += x[22] * 29.018000;  // HCO
  XW += x[23] * 30.026000;  // CH2O
  XW += x[24] * 31.034000;  // CH3O
  XW += x[25] * 44.009000;  // CO2
  XW += x[26] * 27.046000;  // C2H3
  XW += x[27] * 29.062000;  // C2H5
  XW += x[28] * 41.029000;  // HCCO
  XW += x[29] * 42.037000;  // CH2CO
  XW += x[30] * 43.045000;  // CH2CHO
  XW += x[31] * 39.057000;  // C3H3
  XW += x[32] * 41.073000;  // aC3H5
  XW += x[33] * 80.086000;  // C5H4O
  XW += x[34] * 65.095000;  // C5H5
  XW += x[35] * 77.106000;  // C6H5
  XW += x[36] * 91.133000;  // C6H5CH2
  XW += x[37] * 93.105000;  // C6H5O
  XW += x[38] * 105.116000; // C6H5CO
  XW += x[39] * 106.124000; // C6H5CHO
  XW += x[40] * 28.014000;  // N2
  // Now compute conversion
  amrex::Real XWinv = 1.0 / XW;
  y[0] = x[0] * 154.297000 * XWinv;
  y[1] = x[1] * 28.054000 * XWinv;
  y[2] = x[2] * 16.043000 * XWinv;
  y[3] = x[3] * 42.081000 * XWinv;
  y[4] = x[4] * 56.108000 * XWinv;
  y[5] = x[5] * 56.108000 * XWinv;
  y[6] = x[6] * 2.016000 * XWinv;
  y[7] = x[7] * 30.070000 * XWinv;
  y[8] = x[8] * 28.010000 * XWinv;
  y[9] = x[9] * 78.114000 * XWinv;
  y[10] = x[10] * 26.038000 * XWinv;
  y[11] = x[11] * 92.141000 * XWinv;
  y[12] = x[12] * 15.035000 * XWinv;
  y[13] = x[13] * 31.998000 * XWinv;
  y[14] = x[14] * 15.999000 * XWinv;
  y[15] = x[15] * 17.007000 * XWinv;
  y[16] = x[16] * 33.006000 * XWinv;
  y[17] = x[17] * 18.015000 * XWinv;
  y[18] = x[18] * 34.014000 * XWinv;
  y[19] = x[19] * 1.008000 * XWinv;
  y[20] = x[20] * 14.027000 * XWinv;
  y[21] = x[21] * 14.027000 * XWinv;
  y[22] = x[22] * 29.018000 * XWinv;
  y[23] = x[23] * 30.026000 * XWinv;
  y[24] = x[24] * 31.034000 * XWinv;
  y[25] = x[25] * 44.009000 * XWinv;
  y[26] = x[26] * 27.046000 * XWinv;
  y[27] = x[27] * 29.062000 * XWinv;
  y[28] = x[28] * 41.029000 * XWinv;
  y[29] = x[29] * 42.037000 * XWinv;
  y[30] = x[30] * 43.045000 * XWinv;
  y[31] = x[31] * 39.057000 * XWinv;
  y[32] = x[32] * 41.073000 * XWinv;
  y[33] = x[33] * 80.086000 * XWinv;
  y[34] = x[34] * 65.095000 * XWinv;
  y[35] = x[35] * 77.106000 * XWinv;
  y[36] = x[36] * 91.133000 * XWinv;
  y[37] = x[37] * 93.105000 * XWinv;
  y[38] = x[38] * 105.116000 * XWinv;
  y[39] = x[39] * 106.124000 * XWinv;
  y[40] = x[40] * 28.014000 * XWinv;
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real c[])
{
  amrex::Real PORT = P / (8.31446261815324e+07 * T); // P/RT

  // Compute conversion, see Eq 10
  for (int id = 0; id < 41; ++id) {
    c[id] = x[id] * PORT;
  }
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCR(
  const amrex::Real rho,
  const amrex::Real /*T*/,
  const amrex::Real x[],
  amrex::Real c[])
{
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 154.297000;  // POSF10325
  XW += x[1] * 28.054000;   // C2H4
  XW += x[2] * 16.043000;   // CH4
  XW += x[3] * 42.081000;   // C3H6
  XW += x[4] * 56.108000;   // iC4H8
  XW += x[5] * 56.108000;   // C4H81
  XW += x[6] * 2.016000;    // H2
  XW += x[7] * 30.070000;   // C2H6
  XW += x[8] * 28.010000;   // CO
  XW += x[9] * 78.114000;   // C6H6
  XW += x[10] * 26.038000;  // C2H2
  XW += x[11] * 92.141000;  // C6H5CH3
  XW += x[12] * 15.035000;  // CH3
  XW += x[13] * 31.998000;  // O2
  XW += x[14] * 15.999000;  // O
  XW += x[15] * 17.007000;  // OH
  XW += x[16] * 33.006000;  // HO2
  XW += x[17] * 18.015000;  // H2O
  XW += x[18] * 34.014000;  // H2O2
  XW += x[19] * 1.008000;   // H
  XW += x[20] * 14.027000;  // CH2
  XW += x[21] * 14.027000;  // CH2*
  XW += x[22] * 29.018000;  // HCO
  XW += x[23] * 30.026000;  // CH2O
  XW += x[24] * 31.034000;  // CH3O
  XW += x[25] * 44.009000;  // CO2
  XW += x[26] * 27.046000;  // C2H3
  XW += x[27] * 29.062000;  // C2H5
  XW += x[28] * 41.029000;  // HCCO
  XW += x[29] * 42.037000;  // CH2CO
  XW += x[30] * 43.045000;  // CH2CHO
  XW += x[31] * 39.057000;  // C3H3
  XW += x[32] * 41.073000;  // aC3H5
  XW += x[33] * 80.086000;  // C5H4O
  XW += x[34] * 65.095000;  // C5H5
  XW += x[35] * 77.106000;  // C6H5
  XW += x[36] * 91.133000;  // C6H5CH2
  XW += x[37] * 93.105000;  // C6H5O
  XW += x[38] * 105.116000; // C6H5CO
  XW += x[39] * 106.124000; // C6H5CHO
  XW += x[40] * 28.014000;  // N2
  ROW = rho / XW;

  // Compute conversion, see Eq 11
  for (int id = 0; id < 41; ++id) {
    c[id] = x[id] * ROW;
  }
}

// convert c[species] (molar conc) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTX(const amrex::Real c[], amrex::Real x[])
{
  amrex::Real sumC = 0;

  // compute sum of c
  for (int id = 0; id < 41; ++id) {
    sumC += c[id];
  }

  //  See Eq 13
  amrex::Real sumCinv = 1.0 / sumC;
  for (int id = 0; id < 41; ++id) {
    x[id] = c[id] * sumCinv;
  }
}

// convert c[species] (molar conc) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTY(const amrex::Real c[], amrex::Real y[])
{
  amrex::Real CW = 0; // See Eq 12 in CK Manual
  // compute denominator in eq 12 first
  CW += c[0] * 154.297000;  // POSF10325
  CW += c[1] * 28.054000;   // C2H4
  CW += c[2] * 16.043000;   // CH4
  CW += c[3] * 42.081000;   // C3H6
  CW += c[4] * 56.108000;   // iC4H8
  CW += c[5] * 56.108000;   // C4H81
  CW += c[6] * 2.016000;    // H2
  CW += c[7] * 30.070000;   // C2H6
  CW += c[8] * 28.010000;   // CO
  CW += c[9] * 78.114000;   // C6H6
  CW += c[10] * 26.038000;  // C2H2
  CW += c[11] * 92.141000;  // C6H5CH3
  CW += c[12] * 15.035000;  // CH3
  CW += c[13] * 31.998000;  // O2
  CW += c[14] * 15.999000;  // O
  CW += c[15] * 17.007000;  // OH
  CW += c[16] * 33.006000;  // HO2
  CW += c[17] * 18.015000;  // H2O
  CW += c[18] * 34.014000;  // H2O2
  CW += c[19] * 1.008000;   // H
  CW += c[20] * 14.027000;  // CH2
  CW += c[21] * 14.027000;  // CH2*
  CW += c[22] * 29.018000;  // HCO
  CW += c[23] * 30.026000;  // CH2O
  CW += c[24] * 31.034000;  // CH3O
  CW += c[25] * 44.009000;  // CO2
  CW += c[26] * 27.046000;  // C2H3
  CW += c[27] * 29.062000;  // C2H5
  CW += c[28] * 41.029000;  // HCCO
  CW += c[29] * 42.037000;  // CH2CO
  CW += c[30] * 43.045000;  // CH2CHO
  CW += c[31] * 39.057000;  // C3H3
  CW += c[32] * 41.073000;  // aC3H5
  CW += c[33] * 80.086000;  // C5H4O
  CW += c[34] * 65.095000;  // C5H5
  CW += c[35] * 77.106000;  // C6H5
  CW += c[36] * 91.133000;  // C6H5CH2
  CW += c[37] * 93.105000;  // C6H5O
  CW += c[38] * 105.116000; // C6H5CO
  CW += c[39] * 106.124000; // C6H5CHO
  CW += c[40] * 28.014000;  // N2
  // Now compute conversion
  amrex::Real CWinv = 1.0 / CW;
  y[0] = c[0] * 154.297000 * CWinv;
  y[1] = c[1] * 28.054000 * CWinv;
  y[2] = c[2] * 16.043000 * CWinv;
  y[3] = c[3] * 42.081000 * CWinv;
  y[4] = c[4] * 56.108000 * CWinv;
  y[5] = c[5] * 56.108000 * CWinv;
  y[6] = c[6] * 2.016000 * CWinv;
  y[7] = c[7] * 30.070000 * CWinv;
  y[8] = c[8] * 28.010000 * CWinv;
  y[9] = c[9] * 78.114000 * CWinv;
  y[10] = c[10] * 26.038000 * CWinv;
  y[11] = c[11] * 92.141000 * CWinv;
  y[12] = c[12] * 15.035000 * CWinv;
  y[13] = c[13] * 31.998000 * CWinv;
  y[14] = c[14] * 15.999000 * CWinv;
  y[15] = c[15] * 17.007000 * CWinv;
  y[16] = c[16] * 33.006000 * CWinv;
  y[17] = c[17] * 18.015000 * CWinv;
  y[18] = c[18] * 34.014000 * CWinv;
  y[19] = c[19] * 1.008000 * CWinv;
  y[20] = c[20] * 14.027000 * CWinv;
  y[21] = c[21] * 14.027000 * CWinv;
  y[22] = c[22] * 29.018000 * CWinv;
  y[23] = c[23] * 30.026000 * CWinv;
  y[24] = c[24] * 31.034000 * CWinv;
  y[25] = c[25] * 44.009000 * CWinv;
  y[26] = c[26] * 27.046000 * CWinv;
  y[27] = c[27] * 29.062000 * CWinv;
  y[28] = c[28] * 41.029000 * CWinv;
  y[29] = c[29] * 42.037000 * CWinv;
  y[30] = c[30] * 43.045000 * CWinv;
  y[31] = c[31] * 39.057000 * CWinv;
  y[32] = c[32] * 41.073000 * CWinv;
  y[33] = c[33] * 80.086000 * CWinv;
  y[34] = c[34] * 65.095000 * CWinv;
  y[35] = c[35] * 77.106000 * CWinv;
  y[36] = c[36] * 91.133000 * CWinv;
  y[37] = c[37] * 93.105000 * CWinv;
  y[38] = c[38] * 105.116000 * CWinv;
  y[39] = c[39] * 106.124000 * CWinv;
  y[40] = c[40] * 28.014000 * CWinv;
}

// get specific heat at constant volume as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVML(const amrex::Real T, amrex::Real cvml[])
{
  cv_R(cvml, T);

  // convert to chemkin units
  for (int id = 0; id < 41; ++id) {
    cvml[id] *= 8.31446261815324e+07;
  }
}

// get specific heat at constant pressure as a
// function of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPML(const amrex::Real T, amrex::Real cpml[])
{
  cp_R(cpml, T);

  // convert to chemkin units
  for (int id = 0; id < 41; ++id) {
    cpml[id] *= 8.31446261815324e+07;
  }
}

// get internal energy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUML(const amrex::Real T, amrex::Real uml[])
{
  amrex::Real RT = 8.31446261815324e+07 * T; // R*T
  speciesInternalEnergy(uml, T);

  // convert to chemkin units
  for (int id = 0; id < 41; ++id) {
    uml[id] *= RT;
  }
}

// get enthalpy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHML(const amrex::Real T, amrex::Real hml[])
{
  amrex::Real RT = 8.31446261815324e+07 * T; // R*T
  speciesEnthalpy(hml, T);

  // convert to chemkin units
  for (int id = 0; id < 41; ++id) {
    hml[id] *= RT;
  }
}

// Returns the standard-state entropies in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSML(const amrex::Real T, amrex::Real sml[])
{
  speciesEntropy(sml, T);

  // convert to chemkin units
  for (int id = 0; id < 41; ++id) {
    sml[id] *= 8.31446261815324e+07;
  }
}

// Returns the specific heats at constant volume
// in mass units (Eq. 29)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVMS(const amrex::Real T, amrex::Real cvms[])
{
  cv_R(cvms, T);
  // multiply by R/molecularweight
  cvms[0] *= 5.388609382005639e+05;  // POSF10325
  cvms[1] *= 2.963735160103101e+06;  // C2H4
  cvms[2] *= 5.182610869633635e+06;  // CH4
  cvms[3] *= 1.975823440068734e+06;  // C3H6
  cvms[4] *= 1.481867580051551e+06;  // iC4H8
  cvms[5] *= 1.481867580051551e+06;  // C4H81
  cvms[6] *= 4.124237409798234e+07;  // H2
  cvms[7] *= 2.765035789209591e+06;  // C2H6
  cvms[8] *= 2.968390795484913e+06;  // CO
  cvms[9] *= 1.064401082796072e+06;  // C6H6
  cvms[10] *= 3.193203248388218e+06; // C2H2
  cvms[11] *= 9.023629674252765e+05; // C6H5CH3
  cvms[12] *= 5.530071578419182e+06; // CH3
  cvms[13] *= 2.598431970171023e+06; // O2
  cvms[14] *= 5.196863940342046e+06; // O
  cvms[15] *= 4.888847308845322e+06; // OH
  cvms[16] *= 2.519076112874398e+06; // HO2
  cvms[17] *= 4.615299815794193e+06; // H2O
  cvms[18] *= 2.444423654422661e+06; // H2O2
  cvms[19] *= 8.248474819596468e+07; // H
  cvms[20] *= 5.927470320206203e+06; // CH2
  cvms[21] *= 5.927470320206203e+06; // CH2*
  cvms[22] *= 2.865277627042952e+06; // HCO
  cvms[23] *= 2.769087663409458e+06; // CH2O
  cvms[24] *= 2.679146297013998e+06; // CH3O
  cvms[25] *= 1.889264154639560e+06; // CO2
  cvms[26] *= 3.074193085170909e+06; // C2H3
  cvms[27] *= 2.860939583701480e+06; // C2H5
  cvms[28] *= 2.026484344769124e+06; // HCCO
  cvms[29] *= 1.977891528451897e+06; // CH2CO
  cvms[30] *= 1.931574542491170e+06; // CH2CHO
  cvms[31] *= 2.128802165592145e+06; // C3H3
  cvms[32] *= 2.024313446340233e+06; // aC3H5
  cvms[33] *= 1.038191771115206e+06; // C5H4O
  cvms[34] *= 1.277281299355287e+06; // C5H5
  cvms[35] *= 1.078315905137504e+06; // C6H5
  cvms[36] *= 9.123437852537764e+05; // C6H5CH2
  cvms[37] *= 8.930199901351420e+05; // C6H5O
  cvms[38] *= 7.909797383988394e+05; // C6H5CO
  cvms[39] *= 7.834667575810599e+05; // C6H5CHO
  cvms[40] *= 2.967966951578939e+06; // N2
}

// Returns the specific heats at constant pressure
// in mass units (Eq. 26)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPMS(const amrex::Real T, amrex::Real cpms[])
{
  cp_R(cpms, T);
  // multiply by R/molecularweight
  cpms[0] *= 5.388609382005639e+05;  // POSF10325
  cpms[1] *= 2.963735160103101e+06;  // C2H4
  cpms[2] *= 5.182610869633635e+06;  // CH4
  cpms[3] *= 1.975823440068734e+06;  // C3H6
  cpms[4] *= 1.481867580051551e+06;  // iC4H8
  cpms[5] *= 1.481867580051551e+06;  // C4H81
  cpms[6] *= 4.124237409798234e+07;  // H2
  cpms[7] *= 2.765035789209591e+06;  // C2H6
  cpms[8] *= 2.968390795484913e+06;  // CO
  cpms[9] *= 1.064401082796072e+06;  // C6H6
  cpms[10] *= 3.193203248388218e+06; // C2H2
  cpms[11] *= 9.023629674252765e+05; // C6H5CH3
  cpms[12] *= 5.530071578419182e+06; // CH3
  cpms[13] *= 2.598431970171023e+06; // O2
  cpms[14] *= 5.196863940342046e+06; // O
  cpms[15] *= 4.888847308845322e+06; // OH
  cpms[16] *= 2.519076112874398e+06; // HO2
  cpms[17] *= 4.615299815794193e+06; // H2O
  cpms[18] *= 2.444423654422661e+06; // H2O2
  cpms[19] *= 8.248474819596468e+07; // H
  cpms[20] *= 5.927470320206203e+06; // CH2
  cpms[21] *= 5.927470320206203e+06; // CH2*
  cpms[22] *= 2.865277627042952e+06; // HCO
  cpms[23] *= 2.769087663409458e+06; // CH2O
  cpms[24] *= 2.679146297013998e+06; // CH3O
  cpms[25] *= 1.889264154639560e+06; // CO2
  cpms[26] *= 3.074193085170909e+06; // C2H3
  cpms[27] *= 2.860939583701480e+06; // C2H5
  cpms[28] *= 2.026484344769124e+06; // HCCO
  cpms[29] *= 1.977891528451897e+06; // CH2CO
  cpms[30] *= 1.931574542491170e+06; // CH2CHO
  cpms[31] *= 2.128802165592145e+06; // C3H3
  cpms[32] *= 2.024313446340233e+06; // aC3H5
  cpms[33] *= 1.038191771115206e+06; // C5H4O
  cpms[34] *= 1.277281299355287e+06; // C5H5
  cpms[35] *= 1.078315905137504e+06; // C6H5
  cpms[36] *= 9.123437852537764e+05; // C6H5CH2
  cpms[37] *= 8.930199901351420e+05; // C6H5O
  cpms[38] *= 7.909797383988394e+05; // C6H5CO
  cpms[39] *= 7.834667575810599e+05; // C6H5CHO
  cpms[40] *= 2.967966951578939e+06; // N2
}

// Returns internal energy in mass units (Eq 30.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUMS(const amrex::Real T, amrex::Real ums[])
{
  amrex::Real RT = 8.31446261815324e+07 * T; // R*T

  speciesInternalEnergy(ums, T);

  for (int i = 0; i < 41; i++) {
    ums[i] *= RT * imw(i);
  }
}

// Returns enthalpy in mass units (Eq 27.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHMS(const amrex::Real T, amrex::Real hms[])
{
  amrex::Real RT = 8.31446261815324e+07 * T; // R*T

  speciesEnthalpy(hms, T);

  for (int i = 0; i < 41; i++) {
    hms[i] *= RT * imw(i);
  }
}

// Returns the entropies in mass units (Eq 28.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSMS(const amrex::Real T, amrex::Real sms[])
{
  speciesEntropy(sms, T);
  // multiply by R/molecularweight
  sms[0] *= 5.388609382005639e+05;  // POSF10325
  sms[1] *= 2.963735160103101e+06;  // C2H4
  sms[2] *= 5.182610869633635e+06;  // CH4
  sms[3] *= 1.975823440068734e+06;  // C3H6
  sms[4] *= 1.481867580051551e+06;  // iC4H8
  sms[5] *= 1.481867580051551e+06;  // C4H81
  sms[6] *= 4.124237409798234e+07;  // H2
  sms[7] *= 2.765035789209591e+06;  // C2H6
  sms[8] *= 2.968390795484913e+06;  // CO
  sms[9] *= 1.064401082796072e+06;  // C6H6
  sms[10] *= 3.193203248388218e+06; // C2H2
  sms[11] *= 9.023629674252765e+05; // C6H5CH3
  sms[12] *= 5.530071578419182e+06; // CH3
  sms[13] *= 2.598431970171023e+06; // O2
  sms[14] *= 5.196863940342046e+06; // O
  sms[15] *= 4.888847308845322e+06; // OH
  sms[16] *= 2.519076112874398e+06; // HO2
  sms[17] *= 4.615299815794193e+06; // H2O
  sms[18] *= 2.444423654422661e+06; // H2O2
  sms[19] *= 8.248474819596468e+07; // H
  sms[20] *= 5.927470320206203e+06; // CH2
  sms[21] *= 5.927470320206203e+06; // CH2*
  sms[22] *= 2.865277627042952e+06; // HCO
  sms[23] *= 2.769087663409458e+06; // CH2O
  sms[24] *= 2.679146297013998e+06; // CH3O
  sms[25] *= 1.889264154639560e+06; // CO2
  sms[26] *= 3.074193085170909e+06; // C2H3
  sms[27] *= 2.860939583701480e+06; // C2H5
  sms[28] *= 2.026484344769124e+06; // HCCO
  sms[29] *= 1.977891528451897e+06; // CH2CO
  sms[30] *= 1.931574542491170e+06; // CH2CHO
  sms[31] *= 2.128802165592145e+06; // C3H3
  sms[32] *= 2.024313446340233e+06; // aC3H5
  sms[33] *= 1.038191771115206e+06; // C5H4O
  sms[34] *= 1.277281299355287e+06; // C5H5
  sms[35] *= 1.078315905137504e+06; // C6H5
  sms[36] *= 9.123437852537764e+05; // C6H5CH2
  sms[37] *= 8.930199901351420e+05; // C6H5O
  sms[38] *= 7.909797383988394e+05; // C6H5CO
  sms[39] *= 7.834667575810599e+05; // C6H5CHO
  sms[40] *= 2.967966951578939e+06; // N2
}

// GPU version of productionRate: no more use of thermo namespace vectors
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_qfqr(
  amrex::Real* qf,
  amrex::Real* qr,
  const amrex::Real* sc,
  const amrex::Real* /*sc_qss*/,
  const amrex::Real T,
  const amrex::Real invT,
  const amrex::Real logT)
{

  // reaction 16: H + O2 (+M) <=> HO2 (+M)
  qf[0] = sc[13] * sc[19];
  qr[0] = sc[16];

  // reaction 18: 2 OH (+M) <=> H2O2 (+M)
  qf[1] = (sc[15] * sc[15]);
  qr[1] = sc[18];

  // reaction 42: CO + H2 (+M) <=> CH2O (+M)
  qf[2] = sc[6] * sc[8];
  qr[2] = sc[23];

  // reaction 43: H + HCO (+M) <=> CH2O (+M)
  qf[3] = sc[19] * sc[22];
  qr[3] = sc[23];

  // reaction 44: CH2 + H (+M) <=> CH3 (+M)
  qf[4] = sc[19] * sc[20];
  qr[4] = sc[12];

  // reaction 50: CH2 + CO (+M) <=> CH2CO (+M)
  qf[5] = sc[8] * sc[20];
  qr[5] = sc[29];

  // reaction 61: CH2O + H (+M) <=> CH3O (+M)
  qf[6] = sc[19] * sc[23];
  qr[6] = sc[24];

  // reaction 67: CH3 + H (+M) <=> CH4 (+M)
  qf[7] = sc[12] * sc[19];
  qr[7] = sc[2];

  // reaction 79: 2 CH3 (+M) <=> C2H6 (+M)
  qf[8] = (sc[12] * sc[12]);
  qr[8] = sc[7];

  // reaction 95: C2H3 (+M) <=> C2H2 + H (+M)
  qf[9] = sc[26];
  qr[9] = sc[10] * sc[19];

  // reaction 104: CH2CO + H (+M) <=> CH2CHO (+M)
  qf[10] = sc[19] * sc[29];
  qr[10] = sc[30];

  // reaction 110: C2H3 + H (+M) <=> C2H4 (+M)
  qf[11] = sc[19] * sc[26];
  qr[11] = sc[1];

  // reaction 118: C2H3 + CH3 (+M) <=> C3H6 (+M)
  qf[12] = sc[12] * sc[26];
  qr[12] = sc[3];

  // reaction 126: C2H4 + H (+M) <=> C2H5 (+M)
  qf[13] = sc[1] * sc[19];
  qr[13] = sc[27];

  // reaction 137: C2H5 + H (+M) <=> C2H6 (+M)
  qf[14] = sc[19] * sc[27];
  qr[14] = sc[7];

  // reaction 141: C2H3 + C2H5 (+M) <=> C4H81 (+M)
  qf[15] = sc[26] * sc[27];
  qr[15] = sc[5];

  // reaction 151: H + aC3H5 (+M) <=> C3H6 (+M)
  qf[16] = sc[19] * sc[32];
  qr[16] = sc[3];

  // reaction 155: CH3 + aC3H5 (+M) <=> C4H81 (+M)
  qf[17] = sc[12] * sc[32];
  qr[17] = sc[5];

  // reaction 173: C6H5CH2 + H (+M) <=> C6H5CH3 (+M)
  qf[18] = sc[19] * sc[36];
  qr[18] = sc[11];

  // reaction 187: C6H5 + H (+M) <=> C6H6 (+M)
  qf[19] = sc[19] * sc[35];
  qr[19] = sc[9];

  // reaction 30: CO + O (+M) <=> CO2 (+M)
  qf[20] = sc[8] * sc[14];
  qr[20] = sc[25];

  // reaction 11: 2 H + M <=> H2 + M
  qf[21] = (sc[19] * sc[19]);
  qr[21] = sc[6];

  // reaction 12: 2 H + H2O <=> H2 + H2O
  qf[22] = sc[17] * (sc[19] * sc[19]);
  qr[22] = sc[6] * sc[17];

  // reaction 13: H + OH + M <=> H2O + M
  qf[23] = sc[15] * sc[19];
  qr[23] = sc[17];

  // reaction 14: H + O + M <=> OH + M
  qf[24] = sc[14] * sc[19];
  qr[24] = sc[15];

  // reaction 15: 2 O + M <=> O2 + M
  qf[25] = (sc[14] * sc[14]);
  qr[25] = sc[13];

  // reaction 39: HCO + M <=> CO + H + M
  qf[26] = sc[22];
  qr[26] = sc[8] * sc[19];

  // reaction 40: HCO + H2O <=> CO + H + H2O
  qf[27] = sc[17] * sc[22];
  qr[27] = sc[8] * sc[17] * sc[19];

  // reaction 0: POSF10325 => 1.74268 C2H4 + 0.819058 C3H6 + 0.261401 C4H81 +
  // 0.163333 C6H5CH3 + 0.17 C6H6 + 1.5 CH3 + 0.5 H + 0.0871338 iC4H8
  qf[28] = sc[0];
  qr[28] = 0.0;

  // reaction 1: H + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186 C4H81
  // + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + H2 +
  // 0.0797288 iC4H8
  qf[29] = sc[0] * sc[19];
  qr[29] = 0.0;

  // reaction 2: CH3 + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186
  // C4H81 + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 1.45 CH4 + 0.3 H +
  // 0.0797288 iC4H8
  qf[30] = sc[0] * sc[12];
  qr[30] = 0.0;

  // reaction 3: OH + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186 C4H81
  // + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + H2O +
  // 0.0797288 iC4H8
  qf[31] = sc[0] * sc[15];
  qr[31] = 0.0;

  // reaction 4: O2 + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186 C4H81
  // + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + HO2 +
  // 0.0797288 iC4H8
  qf[32] = sc[0] * sc[13];
  qr[32] = 0.0;

  // reaction 5: HO2 + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186
  // C4H81 + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + H2O2
  // + 0.0797288 iC4H8
  qf[33] = sc[0] * sc[16];
  qr[33] = 0.0;

  // reaction 6: O + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186 C4H81
  // + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + OH +
  // 0.0797288 iC4H8
  qf[34] = sc[0] * sc[14];
  qr[34] = 0.0;

  // reaction 7: H + O2 <=> O + OH
  qf[35] = sc[13] * sc[19];
  qr[35] = sc[14] * sc[15];

  // reaction 8: H2 + O <=> H + OH
  qf[36] = sc[6] * sc[14];
  qr[36] = sc[15] * sc[19];

  // reaction 9: H2 + OH <=> H + H2O
  qf[37] = sc[6] * sc[15];
  qr[37] = sc[17] * sc[19];

  // reaction 10: 2 OH <=> H2O + O
  qf[38] = (sc[15] * sc[15]);
  qr[38] = sc[14] * sc[17];

  // reaction 17: H2 + O2 <=> H + HO2
  qf[39] = sc[6] * sc[13];
  qr[39] = sc[16] * sc[19];

  // reaction 19: H + HO2 <=> 2 OH
  qf[40] = sc[16] * sc[19];
  qr[40] = (sc[15] * sc[15]);

  // reaction 20: HO2 + O <=> O2 + OH
  qf[41] = sc[14] * sc[16];
  qr[41] = sc[13] * sc[15];

  // reaction 21: 2 HO2 <=> H2O2 + O2
  qf[42] = (sc[16] * sc[16]);
  qr[42] = sc[13] * sc[18];

  // reaction 22: 2 HO2 <=> H2O2 + O2
  qf[43] = (sc[16] * sc[16]);
  qr[43] = sc[13] * sc[18];

  // reaction 23: HO2 + OH <=> H2O + O2
  qf[44] = sc[15] * sc[16];
  qr[44] = sc[13] * sc[17];

  // reaction 24: HO2 + OH <=> H2O + O2
  qf[45] = sc[15] * sc[16];
  qr[45] = sc[13] * sc[17];

  // reaction 25: HO2 + OH <=> H2O + O2
  qf[46] = sc[15] * sc[16];
  qr[46] = sc[13] * sc[17];

  // reaction 26: H + H2O2 <=> H2 + HO2
  qf[47] = sc[18] * sc[19];
  qr[47] = sc[6] * sc[16];

  // reaction 27: H + H2O2 <=> H2O + OH
  qf[48] = sc[18] * sc[19];
  qr[48] = sc[15] * sc[17];

  // reaction 28: H2O2 + O <=> HO2 + OH
  qf[49] = sc[14] * sc[18];
  qr[49] = sc[15] * sc[16];

  // reaction 29: H2O2 + OH <=> H2O + HO2
  qf[50] = sc[15] * sc[18];
  qr[50] = sc[16] * sc[17];

  // reaction 31: CO + OH <=> CO2 + H
  qf[51] = sc[8] * sc[15];
  qr[51] = sc[19] * sc[25];

  // reaction 32: CO + OH <=> CO2 + H
  qf[52] = sc[8] * sc[15];
  qr[52] = sc[19] * sc[25];

  // reaction 33: CO + O2 <=> CO2 + O
  qf[53] = sc[8] * sc[13];
  qr[53] = sc[14] * sc[25];

  // reaction 34: CO + HO2 <=> CO2 + OH
  qf[54] = sc[8] * sc[16];
  qr[54] = sc[15] * sc[25];

  // reaction 35: H + HCO <=> CO + H2
  qf[55] = sc[19] * sc[22];
  qr[55] = sc[6] * sc[8];

  // reaction 36: HCO + O <=> CO + OH
  qf[56] = sc[14] * sc[22];
  qr[56] = sc[8] * sc[15];

  // reaction 37: HCO + O <=> CO2 + H
  qf[57] = sc[14] * sc[22];
  qr[57] = sc[19] * sc[25];

  // reaction 38: HCO + OH <=> CO + H2O
  qf[58] = sc[15] * sc[22];
  qr[58] = sc[8] * sc[17];

  // reaction 41: HCO + O2 <=> CO + HO2
  qf[59] = sc[13] * sc[22];
  qr[59] = sc[8] * sc[16];

  // reaction 45: CH2 + O <=> H + HCO
  qf[60] = sc[14] * sc[20];
  qr[60] = sc[19] * sc[22];

  // reaction 46: CH2 + OH <=> CH2O + H
  qf[61] = sc[15] * sc[20];
  qr[61] = sc[19] * sc[23];

  // reaction 47: CH2 + H2 <=> CH3 + H
  qf[62] = sc[6] * sc[20];
  qr[62] = sc[12] * sc[19];

  // reaction 48: CH2 + O2 <=> HCO + OH
  qf[63] = sc[13] * sc[20];
  qr[63] = sc[15] * sc[22];

  // reaction 49: CH2 + O2 <=> CO2 + 2 H
  qf[64] = sc[13] * sc[20];
  qr[64] = (sc[19] * sc[19]) * sc[25];

  // reaction 51: CH2* + N2 <=> CH2 + N2
  qf[65] = sc[21] * sc[40];
  qr[65] = sc[20] * sc[40];

  // reaction 52: CH2* + O <=> CO + H2
  qf[66] = sc[14] * sc[21];
  qr[66] = sc[6] * sc[8];

  // reaction 53: CH2* + OH <=> CH2O + H
  qf[67] = sc[15] * sc[21];
  qr[67] = sc[19] * sc[23];

  // reaction 54: CH2* + H2 <=> CH3 + H
  qf[68] = sc[6] * sc[21];
  qr[68] = sc[12] * sc[19];

  // reaction 55: CH2* + O2 <=> CO + H + OH
  qf[69] = sc[13] * sc[21];
  qr[69] = sc[8] * sc[15] * sc[19];

  // reaction 56: CH2* + O2 <=> CO + H2O
  qf[70] = sc[13] * sc[21];
  qr[70] = sc[8] * sc[17];

  // reaction 57: CH2* + H2O <=> CH2 + H2O
  qf[71] = sc[17] * sc[21];
  qr[71] = sc[17] * sc[20];

  // reaction 58: CH2* + CO <=> CH2 + CO
  qf[72] = sc[8] * sc[21];
  qr[72] = sc[8] * sc[20];

  // reaction 59: CH2* + CO2 <=> CH2 + CO2
  qf[73] = sc[21] * sc[25];
  qr[73] = sc[20] * sc[25];

  // reaction 60: CH2* + CO2 <=> CH2O + CO
  qf[74] = sc[21] * sc[25];
  qr[74] = sc[8] * sc[23];

  // reaction 62: CH2O + H <=> H2 + HCO
  qf[75] = sc[19] * sc[23];
  qr[75] = sc[6] * sc[22];

  // reaction 63: CH2O + O <=> HCO + OH
  qf[76] = sc[14] * sc[23];
  qr[76] = sc[15] * sc[22];

  // reaction 64: CH2O + OH <=> H2O + HCO
  qf[77] = sc[15] * sc[23];
  qr[77] = sc[17] * sc[22];

  // reaction 65: CH2O + O2 <=> HCO + HO2
  qf[78] = sc[13] * sc[23];
  qr[78] = sc[16] * sc[22];

  // reaction 66: CH2O + HO2 <=> H2O2 + HCO
  qf[79] = sc[16] * sc[23];
  qr[79] = sc[18] * sc[22];

  // reaction 68: CH3 + O <=> CH2O + H
  qf[80] = sc[12] * sc[14];
  qr[80] = sc[19] * sc[23];

  // reaction 69: CH3 + OH <=> CH2 + H2O
  qf[81] = sc[12] * sc[15];
  qr[81] = sc[17] * sc[20];

  // reaction 70: CH3 + OH <=> CH2* + H2O
  qf[82] = sc[12] * sc[15];
  qr[82] = sc[17] * sc[21];

  // reaction 71: CH3 + O2 <=> CH3O + O
  qf[83] = sc[12] * sc[13];
  qr[83] = sc[14] * sc[24];

  // reaction 72: CH3 + O2 <=> CH2O + OH
  qf[84] = sc[12] * sc[13];
  qr[84] = sc[15] * sc[23];

  // reaction 73: CH3 + HO2 <=> CH4 + O2
  qf[85] = sc[12] * sc[16];
  qr[85] = sc[2] * sc[13];

  // reaction 74: CH3 + HO2 <=> CH3O + OH
  qf[86] = sc[12] * sc[16];
  qr[86] = sc[15] * sc[24];

  // reaction 75: CH3 + H2O2 <=> CH4 + HO2
  qf[87] = sc[12] * sc[18];
  qr[87] = sc[2] * sc[16];

  // reaction 76: CH3 + HCO <=> CH4 + CO
  qf[88] = sc[12] * sc[22];
  qr[88] = sc[2] * sc[8];

  // reaction 77: CH2O + CH3 <=> CH4 + HCO
  qf[89] = sc[12] * sc[23];
  qr[89] = sc[2] * sc[22];

  // reaction 78: CH2 + CH3 <=> C2H4 + H
  qf[90] = sc[12] * sc[20];
  qr[90] = sc[1] * sc[19];

  // reaction 80: 2 CH3 <=> C2H5 + H
  qf[91] = (sc[12] * sc[12]);
  qr[91] = sc[19] * sc[27];

  // reaction 81: CH3 + HCCO <=> C2H4 + CO
  qf[92] = sc[12] * sc[28];
  qr[92] = sc[1] * sc[8];

  // reaction 82: CH3O + H <=> CH2O + H2
  qf[93] = sc[19] * sc[24];
  qr[93] = sc[6] * sc[23];

  // reaction 83: CH3O + H <=> CH3 + OH
  qf[94] = sc[19] * sc[24];
  qr[94] = sc[12] * sc[15];

  // reaction 84: CH3O + H <=> CH2* + H2O
  qf[95] = sc[19] * sc[24];
  qr[95] = sc[17] * sc[21];

  // reaction 85: CH3O + OH <=> CH2O + H2O
  qf[96] = sc[15] * sc[24];
  qr[96] = sc[17] * sc[23];

  // reaction 86: CH3O + O2 <=> CH2O + HO2
  qf[97] = sc[13] * sc[24];
  qr[97] = sc[16] * sc[23];

  // reaction 87: CH4 + H <=> CH3 + H2
  qf[98] = sc[2] * sc[19];
  qr[98] = sc[6] * sc[12];

  // reaction 88: CH4 + O <=> CH3 + OH
  qf[99] = sc[2] * sc[14];
  qr[99] = sc[12] * sc[15];

  // reaction 89: CH4 + OH <=> CH3 + H2O
  qf[100] = sc[2] * sc[15];
  qr[100] = sc[12] * sc[17];

  // reaction 90: CH2 + CH4 <=> 2 CH3
  qf[101] = sc[2] * sc[20];
  qr[101] = (sc[12] * sc[12]);

  // reaction 91: H + HCCO <=> CH2* + CO
  qf[102] = sc[19] * sc[28];
  qr[102] = sc[8] * sc[21];

  // reaction 92: HCCO + O <=> 2 CO + H
  qf[103] = sc[14] * sc[28];
  qr[103] = (sc[8] * sc[8]) * sc[19];

  // reaction 93: HCCO + O2 <=> 2 CO + OH
  qf[104] = sc[13] * sc[28];
  qr[104] = (sc[8] * sc[8]) * sc[15];

  // reaction 94: CH2 + HCCO <=> C2H3 + CO
  qf[105] = sc[20] * sc[28];
  qr[105] = sc[8] * sc[26];

  // reaction 96: C2H2 + O <=> CH2 + CO
  qf[106] = sc[10] * sc[14];
  qr[106] = sc[8] * sc[20];

  // reaction 97: C2H2 + O <=> H + HCCO
  qf[107] = sc[10] * sc[14];
  qr[107] = sc[19] * sc[28];

  // reaction 98: C2H2 + OH <=> CH2CO + H
  qf[108] = sc[10] * sc[15];
  qr[108] = sc[19] * sc[29];

  // reaction 99: C2H2 + OH <=> CH3 + CO
  qf[109] = sc[10] * sc[15];
  qr[109] = sc[8] * sc[12];

  // reaction 100: C2H2 + HCO <=> C2H3 + CO
  qf[110] = sc[10] * sc[22];
  qr[110] = sc[8] * sc[26];

  // reaction 101: C2H2 + CH2 <=> C3H3 + H
  qf[111] = sc[10] * sc[20];
  qr[111] = sc[19] * sc[31];

  // reaction 102: C2H2 + CH2* <=> C3H3 + H
  qf[112] = sc[10] * sc[21];
  qr[112] = sc[19] * sc[31];

  // reaction 103: C2H2 + CH3 <=> aC3H5
  qf[113] = sc[10] * sc[12];
  qr[113] = sc[32];

  // reaction 105: CH2CO + H <=> H2 + HCCO
  qf[114] = sc[19] * sc[29];
  qr[114] = sc[6] * sc[28];

  // reaction 106: CH2CO + H <=> CH3 + CO
  qf[115] = sc[19] * sc[29];
  qr[115] = sc[8] * sc[12];

  // reaction 107: CH2CO + O <=> HCCO + OH
  qf[116] = sc[14] * sc[29];
  qr[116] = sc[15] * sc[28];

  // reaction 108: CH2CO + O <=> CH2 + CO2
  qf[117] = sc[14] * sc[29];
  qr[117] = sc[20] * sc[25];

  // reaction 109: CH2CO + OH <=> H2O + HCCO
  qf[118] = sc[15] * sc[29];
  qr[118] = sc[17] * sc[28];

  // reaction 111: C2H3 + H <=> C2H2 + H2
  qf[119] = sc[19] * sc[26];
  qr[119] = sc[6] * sc[10];

  // reaction 112: C2H3 + O <=> CH2CO + H
  qf[120] = sc[14] * sc[26];
  qr[120] = sc[19] * sc[29];

  // reaction 113: C2H3 + O <=> CH3 + CO
  qf[121] = sc[14] * sc[26];
  qr[121] = sc[8] * sc[12];

  // reaction 114: C2H3 + OH <=> C2H2 + H2O
  qf[122] = sc[15] * sc[26];
  qr[122] = sc[10] * sc[17];

  // reaction 115: C2H3 + O2 <=> C2H2 + HO2
  qf[123] = sc[13] * sc[26];
  qr[123] = sc[10] * sc[16];

  // reaction 116: C2H3 + O2 <=> CH2CHO + O
  qf[124] = sc[13] * sc[26];
  qr[124] = sc[14] * sc[30];

  // reaction 117: C2H3 + O2 <=> CH2O + HCO
  qf[125] = sc[13] * sc[26];
  qr[125] = sc[22] * sc[23];

  // reaction 119: C2H3 + CH3 <=> H + aC3H5
  qf[126] = sc[12] * sc[26];
  qr[126] = sc[19] * sc[32];

  // reaction 120: CH2CHO <=> CH3 + CO
  qf[127] = sc[30];
  qr[127] = sc[8] * sc[12];

  // reaction 121: CH2CHO + H <=> CH3 + HCO
  qf[128] = sc[19] * sc[30];
  qr[128] = sc[12] * sc[22];

  // reaction 122: CH2CHO + H <=> CH2CO + H2
  qf[129] = sc[19] * sc[30];
  qr[129] = sc[6] * sc[29];

  // reaction 123: CH2CHO + O <=> CH2CO + OH
  qf[130] = sc[14] * sc[30];
  qr[130] = sc[15] * sc[29];

  // reaction 124: CH2CHO + OH <=> CH2CO + H2O
  qf[131] = sc[15] * sc[30];
  qr[131] = sc[17] * sc[29];

  // reaction 125: CH2CHO + O2 <=> CH2CO + HO2
  qf[132] = sc[13] * sc[30];
  qr[132] = sc[16] * sc[29];

  // reaction 127: C2H4 + H <=> C2H3 + H2
  qf[133] = sc[1] * sc[19];
  qr[133] = sc[6] * sc[26];

  // reaction 128: C2H4 + O <=> C2H3 + OH
  qf[134] = sc[1] * sc[14];
  qr[134] = sc[15] * sc[26];

  // reaction 129: C2H4 + O <=> CH3 + HCO
  qf[135] = sc[1] * sc[14];
  qr[135] = sc[12] * sc[22];

  // reaction 130: C2H4 + O <=> CH2 + CH2O
  qf[136] = sc[1] * sc[14];
  qr[136] = sc[20] * sc[23];

  // reaction 131: C2H4 + OH <=> C2H3 + H2O
  qf[137] = sc[1] * sc[15];
  qr[137] = sc[17] * sc[26];

  // reaction 132: C2H4 + HCO <=> C2H5 + CO
  qf[138] = sc[1] * sc[22];
  qr[138] = sc[8] * sc[27];

  // reaction 133: C2H4 + CH2 <=> H + aC3H5
  qf[139] = sc[1] * sc[20];
  qr[139] = sc[19] * sc[32];

  // reaction 134: C2H4 + CH2* <=> H + aC3H5
  qf[140] = sc[1] * sc[21];
  qr[140] = sc[19] * sc[32];

  // reaction 135: C2H4 + CH3 <=> C2H3 + CH4
  qf[141] = sc[1] * sc[12];
  qr[141] = sc[2] * sc[26];

  // reaction 136: C2H4 + O2 <=> C2H3 + HO2
  qf[142] = sc[1] * sc[13];
  qr[142] = sc[16] * sc[26];

  // reaction 138: C2H5 + O <=> CH2O + CH3
  qf[143] = sc[14] * sc[27];
  qr[143] = sc[12] * sc[23];

  // reaction 139: C2H5 + O2 <=> C2H4 + HO2
  qf[144] = sc[13] * sc[27];
  qr[144] = sc[1] * sc[16];

  // reaction 140: C2H5 + HO2 <=> CH2O + CH3 + OH
  qf[145] = sc[16] * sc[27];
  qr[145] = sc[12] * sc[15] * sc[23];

  // reaction 142: C2H6 + H <=> C2H5 + H2
  qf[146] = sc[7] * sc[19];
  qr[146] = sc[6] * sc[27];

  // reaction 143: C2H6 + O <=> C2H5 + OH
  qf[147] = sc[7] * sc[14];
  qr[147] = sc[15] * sc[27];

  // reaction 144: C2H6 + OH <=> C2H5 + H2O
  qf[148] = sc[7] * sc[15];
  qr[148] = sc[17] * sc[27];

  // reaction 145: C2H6 + CH3 <=> C2H5 + CH4
  qf[149] = sc[7] * sc[12];
  qr[149] = sc[2] * sc[27];

  // reaction 146: C3H3 + O2 <=> CH2CO + HCO
  qf[150] = sc[13] * sc[31];
  qr[150] = sc[22] * sc[29];

  // reaction 147: C3H3 + HO2 <=> C2H3 + CO + OH
  qf[151] = sc[16] * sc[31];
  qr[151] = sc[8] * sc[15] * sc[26];

  // reaction 148: C2H2 + C3H3 <=> C5H5
  qf[152] = sc[10] * sc[31];
  qr[152] = sc[34];

  // reaction 149: 2 C3H3 => C6H5 + H
  qf[153] = (sc[31] * sc[31]);
  qr[153] = 0.0;

  // reaction 150: 2 C3H3 => C6H6
  qf[154] = (sc[31] * sc[31]);
  qr[154] = 0.0;

  // reaction 152: HO2 + aC3H5 <=> C3H6 + O2
  qf[155] = sc[16] * sc[32];
  qr[155] = sc[3] * sc[13];

  // reaction 153: HO2 + aC3H5 <=> C2H3 + CH2O + OH
  qf[156] = sc[16] * sc[32];
  qr[156] = sc[15] * sc[23] * sc[26];

  // reaction 154: HCO + aC3H5 <=> C3H6 + CO
  qf[157] = sc[22] * sc[32];
  qr[157] = sc[3] * sc[8];

  // reaction 156: C3H6 + H <=> C2H4 + CH3
  qf[158] = sc[3] * sc[19];
  qr[158] = sc[1] * sc[12];

  // reaction 157: C3H6 + H <=> H2 + aC3H5
  qf[159] = sc[3] * sc[19];
  qr[159] = sc[6] * sc[32];

  // reaction 158: C3H6 + O <=> CH2CO + CH3 + H
  qf[160] = sc[3] * sc[14];
  qr[160] = sc[12] * sc[19] * sc[29];

  // reaction 159: C3H6 + O <=> C2H5 + HCO
  qf[161] = sc[3] * sc[14];
  qr[161] = sc[22] * sc[27];

  // reaction 160: C3H6 + O <=> OH + aC3H5
  qf[162] = sc[3] * sc[14];
  qr[162] = sc[15] * sc[32];

  // reaction 161: C3H6 + OH <=> H2O + aC3H5
  qf[163] = sc[3] * sc[15];
  qr[163] = sc[17] * sc[32];

  // reaction 162: C3H6 + CH3 <=> CH4 + aC3H5
  qf[164] = sc[3] * sc[12];
  qr[164] = sc[2] * sc[32];

  // reaction 163: C4H81 + H <=> C2H4 + C2H5
  qf[165] = sc[5] * sc[19];
  qr[165] = sc[1] * sc[27];

  // reaction 164: C4H81 + H <=> C3H6 + CH3
  qf[166] = sc[5] * sc[19];
  qr[166] = sc[3] * sc[12];

  // reaction 165: H + iC4H8 <=> C3H6 + CH3
  qf[167] = sc[4] * sc[19];
  qr[167] = sc[3] * sc[12];

  // reaction 166: O + iC4H8 <=> CH2CO + 2 CH3
  qf[168] = sc[4] * sc[14];
  qr[168] = (sc[12] * sc[12]) * sc[29];

  // reaction 167: C6H5 + CH3 <=> C6H5CH3
  qf[169] = sc[12] * sc[35];
  qr[169] = sc[11];

  // reaction 168: C6H5CH3 + O2 <=> C6H5CH2 + HO2
  qf[170] = sc[11] * sc[13];
  qr[170] = sc[16] * sc[36];

  // reaction 169: C6H5CH3 + OH <=> C6H5CH2 + H2O
  qf[171] = sc[11] * sc[15];
  qr[171] = sc[17] * sc[36];

  // reaction 170: C6H5CH3 + H <=> C6H5CH2 + H2
  qf[172] = sc[11] * sc[19];
  qr[172] = sc[6] * sc[36];

  // reaction 171: C6H5CH3 + H <=> C6H6 + CH3
  qf[173] = sc[11] * sc[19];
  qr[173] = sc[9] * sc[12];

  // reaction 172: C6H5CH3 + CH3 <=> C6H5CH2 + CH4
  qf[174] = sc[11] * sc[12];
  qr[174] = sc[2] * sc[36];

  // reaction 174: C6H5CH2 + H <=> C6H5 + CH3
  qf[175] = sc[19] * sc[36];
  qr[175] = sc[12] * sc[35];

  // reaction 175: C6H5CH2 + O <=> C6H5CHO + H
  qf[176] = sc[14] * sc[36];
  qr[176] = sc[19] * sc[39];

  // reaction 176: C6H5CH2 + HO2 <=> C6H5CHO + H + OH
  qf[177] = sc[16] * sc[36];
  qr[177] = sc[15] * sc[19] * sc[39];

  // reaction 177: C6H5 + HCO <=> C6H5CHO
  qf[178] = sc[22] * sc[35];
  qr[178] = sc[39];

  // reaction 178: C6H5CHO <=> C6H5CO + H
  qf[179] = sc[39];
  qr[179] = sc[19] * sc[38];

  // reaction 179: C6H5CHO + O2 <=> C6H5CO + HO2
  qf[180] = sc[13] * sc[39];
  qr[180] = sc[16] * sc[38];

  // reaction 180: C6H5CHO + OH <=> C6H5CO + H2O
  qf[181] = sc[15] * sc[39];
  qr[181] = sc[17] * sc[38];

  // reaction 181: C6H5CHO + H <=> C6H5CO + H2
  qf[182] = sc[19] * sc[39];
  qr[182] = sc[6] * sc[38];

  // reaction 182: C6H5CHO + H <=> C6H6 + HCO
  qf[183] = sc[19] * sc[39];
  qr[183] = sc[9] * sc[22];

  // reaction 183: C6H5CHO + O <=> C6H5CO + OH
  qf[184] = sc[14] * sc[39];
  qr[184] = sc[15] * sc[38];

  // reaction 184: C6H5CHO + CH3 <=> C6H5CO + CH4
  qf[185] = sc[12] * sc[39];
  qr[185] = sc[2] * sc[38];

  // reaction 185: C6H5CO + H2O2 <=> C6H5CHO + HO2
  qf[186] = sc[18] * sc[38];
  qr[186] = sc[16] * sc[39];

  // reaction 186: C6H5CO <=> C6H5 + CO
  qf[187] = sc[38];
  qr[187] = sc[8] * sc[35];

  // reaction 188: C6H6 + OH <=> C6H5 + H2O
  qf[188] = sc[9] * sc[15];
  qr[188] = sc[17] * sc[35];

  // reaction 189: C6H6 + O <=> C6H5O + H
  qf[189] = sc[9] * sc[14];
  qr[189] = sc[19] * sc[37];

  // reaction 190: C6H6 + O <=> C5H5 + HCO
  qf[190] = sc[9] * sc[14];
  qr[190] = sc[22] * sc[34];

  // reaction 191: C6H5 + H2 <=> C6H6 + H
  qf[191] = sc[6] * sc[35];
  qr[191] = sc[9] * sc[19];

  // reaction 192: C6H5 + O2 <=> C6H5O + O
  qf[192] = sc[13] * sc[35];
  qr[192] = sc[14] * sc[37];

  // reaction 193: C6H5 + O <=> C5H5 + CO
  qf[193] = sc[14] * sc[35];
  qr[193] = sc[8] * sc[34];

  // reaction 194: C6H5 + OH <=> C6H5O + H
  qf[194] = sc[15] * sc[35];
  qr[194] = sc[19] * sc[37];

  // reaction 195: C6H5 + HO2 <=> C6H6 + O2
  qf[195] = sc[16] * sc[35];
  qr[195] = sc[9] * sc[13];

  // reaction 196: C6H5 + CH4 <=> C6H6 + CH3
  qf[196] = sc[2] * sc[35];
  qr[196] = sc[9] * sc[12];

  // reaction 197: C6H5O <=> C5H5 + CO
  qf[197] = sc[37];
  qr[197] = sc[8] * sc[34];

  // reaction 198: C5H5 + O <=> C5H4O + H
  qf[198] = sc[14] * sc[34];
  qr[198] = sc[19] * sc[33];

  // reaction 199: C5H5 + O2 <=> C5H4O + OH
  qf[199] = sc[13] * sc[34];
  qr[199] = sc[15] * sc[33];

  // reaction 200: C5H4O <=> 2 C2H2 + CO
  qf[200] = sc[33];
  qr[200] = sc[8] * (sc[10] * sc[10]);

  // reaction 201: C5H4O + O <=> C3H3 + CO + HCO
  qf[201] = sc[14] * sc[33];
  qr[201] = sc[8] * sc[22] * sc[31];

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 41; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[41];
  gibbs(g_RT, T);

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  amrex::Real refC = 101325 / 8.31446 * invT;
  amrex::Real refCinv = 1 / refC;

  // Evaluate the kfs
  amrex::Real k_f, Corr;
  amrex::Real redP, F, logPred, logFcent, troe_c, troe_n, troe, F_troe;

  // reaction 0:  POSF10325 => 1.74268 C2H4 + 0.819058 C3H6 + 0.261401 C4H81 +
  // 0.163333 C6H5CH3 + 0.17 C6H6 + 1.5 CH3 + 0.5 H + 0.0871338 iC4H8
  k_f = 1.53e+27 * exp((-2.58) * logT - (44130.5919410765) * invT);
  qf[28] *= k_f;
  qr[28] *=
    k_f *
    exp(
      -(g_RT[0] - 1.742676 * g_RT[1] - 0.819058 * g_RT[3] - 0.087134 * g_RT[4] -
        0.261401 * g_RT[5] - 0.170000 * g_RT[9] - 0.163333 * g_RT[11] -
        1.500000 * g_RT[12] - 0.500000 * g_RT[19])) *
    (pow(std::max(refCinv, 0.0), 4.243602));
  // reaction 1:  H + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186 C4H81
  // + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + H2 +
  // 0.0797288 iC4H8
  k_f = 7.66e-08 * exp((4.76) * logT - (651.615260550532) * invT);
  qf[29] *= k_f;
  qr[29] *= k_f *
            exp(
              -(g_RT[0] - 1.594576 * g_RT[1] - 0.450000 * g_RT[2] -
                0.749451 * g_RT[3] - 0.079729 * g_RT[4] - 0.239186 * g_RT[5] -
                g_RT[6] - 0.246500 * g_RT[9] - 0.236833 * g_RT[11] -
                0.700000 * g_RT[12] + g_RT[19] - 0.300000 * g_RT[19])) *
            (pow(std::max(refCinv, 0.0), 3.596276));
  // reaction 2:  CH3 + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186
  // C4H81 + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 1.45 CH4 + 0.3 H +
  // 0.0797288 iC4H8
  k_f = 3.17e-13 * exp((5.95) * logT - (2892.69068171185) * invT);
  qf[30] *= k_f;
  qr[30] *= k_f *
            exp(
              -(g_RT[0] - 1.594576 * g_RT[1] - 1.450000 * g_RT[2] -
                0.749451 * g_RT[3] - 0.079729 * g_RT[4] - 0.239186 * g_RT[5] -
                0.246500 * g_RT[9] - 0.236833 * g_RT[11] + g_RT[12] -
                0.700000 * g_RT[12] - 0.300000 * g_RT[19])) *
            (pow(std::max(refCinv, 0.0), 3.596276));
  // reaction 3:  OH + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186
  // C4H81 + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + H2O +
  // 0.0797288 iC4H8
  k_f = 2960 * exp((1.02) * logT - (107.285793149566) * invT);
  qf[31] *= k_f;
  qr[31] *= k_f *
            exp(
              -(g_RT[0] - 1.594576 * g_RT[1] - 0.450000 * g_RT[2] -
                0.749451 * g_RT[3] - 0.079729 * g_RT[4] - 0.239186 * g_RT[5] -
                0.246500 * g_RT[9] - 0.236833 * g_RT[11] - 0.700000 * g_RT[12] +
                g_RT[15] - g_RT[17] - 0.300000 * g_RT[19])) *
            (pow(std::max(refCinv, 0.0), 3.596276));
  // reaction 4:  O2 + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186
  // C4H81 + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + HO2 +
  // 0.0797288 iC4H8
  k_f = 1780000000 * exp((0.06) * logT - (22409.5464916153) * invT);
  qf[32] *= k_f;
  qr[32] *= k_f *
            exp(
              -(g_RT[0] - 1.594576 * g_RT[1] - 0.450000 * g_RT[2] -
                0.749451 * g_RT[3] - 0.079729 * g_RT[4] - 0.239186 * g_RT[5] -
                0.246500 * g_RT[9] - 0.236833 * g_RT[11] - 0.700000 * g_RT[12] +
                g_RT[13] - g_RT[16] - 0.300000 * g_RT[19])) *
            (pow(std::max(refCinv, 0.0), 3.596276));
  // reaction 5:  HO2 + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186
  // C4H81 + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + H2O2
  // + 0.0797288 iC4H8
  k_f = 0.0698 * exp((2.94) * logT - (6446.20548895846) * invT);
  qf[33] *= k_f;
  qr[33] *= k_f *
            exp(
              -(g_RT[0] - 1.594576 * g_RT[1] - 0.450000 * g_RT[2] -
                0.749451 * g_RT[3] - 0.079729 * g_RT[4] - 0.239186 * g_RT[5] -
                0.246500 * g_RT[9] - 0.236833 * g_RT[11] - 0.700000 * g_RT[12] +
                g_RT[16] - g_RT[18] - 0.300000 * g_RT[19])) *
            (pow(std::max(refCinv, 0.0), 3.596276));
  // reaction 6:  O + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186 C4H81
  // + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + OH +
  // 0.0797288 iC4H8
  k_f = 8.94e-05 * exp((3.86) * logT - (385.011071007191) * invT);
  qf[34] *= k_f;
  qr[34] *= k_f *
            exp(
              -(g_RT[0] - 1.594576 * g_RT[1] - 0.450000 * g_RT[2] -
                0.749451 * g_RT[3] - 0.079729 * g_RT[4] - 0.239186 * g_RT[5] -
                0.246500 * g_RT[9] - 0.236833 * g_RT[11] - 0.700000 * g_RT[12] +
                g_RT[14] - g_RT[15] - 0.300000 * g_RT[19])) *
            (pow(std::max(refCinv, 0.0), 3.596276));
  // reaction 7:  H + O2 <=> O + OH
  k_f = 26440000000 * exp((-0.6707) * logT - (8575.31520197823) * invT);
  qf[35] *= k_f;
  qr[35] *= k_f * exp(-(g_RT[13] - g_RT[14] - g_RT[15] + g_RT[19]));
  // reaction 8:  H2 + O <=> H + OH
  k_f = 0.04589 * exp((2.7) * logT - (3150.13632793755) * invT);
  qf[36] *= k_f;
  qr[36] *= k_f * exp(-(g_RT[6] + g_RT[14] - g_RT[15] - g_RT[19]));
  // reaction 9:  H2 + OH <=> H + H2O
  k_f = 173.4 * exp((1.51) * logT - (1726.03316371019) * invT);
  qf[37] *= k_f;
  qr[37] *= k_f * exp(-(g_RT[6] + g_RT[15] - g_RT[17] - g_RT[19]));
  // reaction 10:  2 OH <=> H2O + O
  k_f = 0.03973 * exp((2.4) * logT - (-1061.78716484796) * invT);
  qf[38] *= k_f;
  qr[38] *= k_f * exp(-(-g_RT[14] + 2.000000 * g_RT[15] - g_RT[17]));
  // reaction 11:  2 H + M <=> H2 + M
  k_f = 1780000 * exp((-1) * logT);
  Corr = mixture + (-1) * sc[6] + (-1) * sc[17] + (-1) * sc[25];
  qf[21] *= Corr * k_f;
  qr[21] *= Corr * k_f * exp(-(-g_RT[6] + 2.000000 * g_RT[19])) * (refC);
  // reaction 12:  2 H + H2O <=> H2 + H2O
  k_f = 56240000 * exp((-1.25) * logT);
  qf[22] *= k_f;
  qr[22] *= k_f * exp(-(-g_RT[6] + 2.000000 * g_RT[19])) * (refC);
  // reaction 13:  H + OH + M <=> H2O + M
  k_f = 44000000000 * exp((-2) * logT);
  Corr = mixture + sc[6] + (0.75) * sc[8] + (5.3) * sc[17] + (2.6) * sc[25];
  qf[23] *= Corr * k_f;
  qr[23] *= Corr * k_f * exp(-(g_RT[15] - g_RT[17] + g_RT[19])) * (refC);
  // reaction 14:  H + O + M <=> OH + M
  k_f = 9428000 * exp((-1) * logT);
  Corr = mixture + sc[6] + (0.75) * sc[8] + (11) * sc[17] + (2.6) * sc[25];
  qf[24] *= Corr * k_f;
  qr[24] *= Corr * k_f * exp(-(g_RT[14] - g_RT[15] + g_RT[19])) * (refC);
  // reaction 15:  2 O + M <=> O2 + M
  k_f = 120000 * exp((-1) * logT);
  Corr =
    mixture + (1.4) * sc[6] + (0.75) * sc[8] + (14.4) * sc[17] + (2.6) * sc[25];
  qf[25] *= Corr * k_f;
  qr[25] *= Corr * k_f * exp(-(-g_RT[13] + 2.000000 * g_RT[14])) * (refC);
  // reaction 16:  H + O2 (+M) <=> HO2 (+M)
  k_f = 5116000 * exp((0.44) * logT);
  Corr = mixture + (0.0900000000000001) * sc[8] + (-0.15) * sc[13] +
         (10.89) * sc[17] + (1.18) * sc[25];
  redP = Corr / k_f * 63280000 * exp(-1.4 * logT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10((0.5) * exp(-T * 1e+30) + 0.5 * exp(-T * 1e-30) + 0.0);
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[0] *= Corr * k_f;
  qr[0] *= Corr * k_f * exp(-(g_RT[13] - g_RT[16] + g_RT[19])) * (refC);
  // reaction 17:  H2 + O2 <=> H + HO2
  k_f = 0.5916 * exp((2.433) * logT - (26923.0980538841) * invT);
  qf[39] *= k_f;
  qr[39] *= k_f * exp(-(g_RT[6] + g_RT[13] - g_RT[16] - g_RT[19]));
  // reaction 18:  2 OH (+M) <=> H2O2 (+M)
  k_f = 111000000 * exp((-0.37) * logT);
  Corr = mixture + sc[6] + (0.75) * sc[8] + (5) * sc[17] + (2.6) * sc[25];
  redP = Corr / k_f * 201000 * exp(-0.584 * logT - (-1153.87581469022) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.2654) * exp(-T * 0.0106382978723404) +
    0.7346 * exp(-T * 0.000569476082004556) + exp(-5182 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[1] *= Corr * k_f;
  qr[1] *= Corr * k_f * exp(-(2.000000 * g_RT[15] - g_RT[18])) * (refC);
  // reaction 19:  H + HO2 <=> 2 OH
  k_f = 74850000 * exp(-(148.448916412392) * invT);
  qf[40] *= k_f;
  qr[40] *= k_f * exp(-(-2.000000 * g_RT[15] + g_RT[16] + g_RT[19]));
  // reaction 20:  HO2 + O <=> O2 + OH
  k_f = 40000000;
  qf[41] *= k_f;
  qr[41] *= k_f * exp(-(-g_RT[13] + g_RT[14] - g_RT[15] + g_RT[16]));
  // reaction 21:  2 HO2 <=> H2O2 + O2
  k_f = 130000 * exp(-(-820.243165261693) * invT);
  qf[42] *= k_f;
  qr[42] *= k_f * exp(-(-g_RT[13] + 2.000000 * g_RT[16] - g_RT[18]));
  // reaction 22:  2 HO2 <=> H2O2 + O2
  k_f = 365800000 * exp(-(6038.59998965664) * invT);
  qf[43] *= k_f;
  qr[43] *= k_f * exp(-(-g_RT[13] + 2.000000 * g_RT[16] - g_RT[18]));
  // reaction 23:  HO2 + OH <=> H2O + O2
  k_f = 1410000000000 * exp((-1.76) * logT - (30.1929999482832) * invT);
  qf[44] *= k_f;
  qr[44] *= k_f * exp(-(-g_RT[13] + g_RT[15] + g_RT[16] - g_RT[17]));
  // reaction 24:  HO2 + OH <=> H2O + O2
  k_f = 5.37e+64 * exp((-16.72) * logT - (16555.8283049753) * invT);
  qf[45] *= k_f;
  qr[45] *= k_f * exp(-(-g_RT[13] + g_RT[15] + g_RT[16] - g_RT[17]));
  // reaction 25:  HO2 + OH <=> H2O + O2
  k_f = 2510000 * exp((2) * logT - (20128.6666321888) * invT);
  qf[46] *= k_f;
  qr[46] *= k_f * exp(-(-g_RT[13] + g_RT[15] + g_RT[16] - g_RT[17]));
  // reaction 26:  H + H2O2 <=> H2 + HO2
  k_f = 6.05 * exp((2) * logT - (2616.72666218454) * invT);
  qf[47] *= k_f;
  qr[47] *= k_f * exp(-(-g_RT[6] - g_RT[16] + g_RT[18] + g_RT[19]));
  // reaction 27:  H + H2O2 <=> H2O + OH
  k_f = 24100000 * exp(-(1997.77016324474) * invT);
  qf[48] *= k_f;
  qr[48] *= k_f * exp(-(-g_RT[15] - g_RT[17] + g_RT[18] + g_RT[19]));
  // reaction 28:  H2O2 + O <=> HO2 + OH
  k_f = 9.63 * exp((2) * logT - (1997.77016324474) * invT);
  qf[49] *= k_f;
  qr[49] *= k_f * exp(-(g_RT[14] - g_RT[15] - g_RT[16] + g_RT[18]));
  // reaction 29:  H2O2 + OH <=> H2O + HO2
  k_f = 2.67e+35 * exp((-7) * logT - (18920.9466342575) * invT);
  qf[50] *= k_f;
  qr[50] *= k_f * exp(-(g_RT[15] - g_RT[16] - g_RT[17] + g_RT[18]));
  // reaction 30:  CO + O (+M) <=> CO2 (+M)
  k_f = 13620 * exp(-(1199.66853127845) * invT);
  Corr = mixture + sc[6] + (0.75) * sc[8] + (11) * sc[17] + (2.6) * sc[25];
  redP =
    Corr / k_f * 1173000000000 * exp(-2.79 * logT - (2108.98104638758) * invT);
  Corr = redP / (1. + redP);
  qf[20] *= Corr * k_f;
  qr[20] *= Corr * k_f * exp(-(g_RT[8] + g_RT[14] - g_RT[25])) * (refC);
  // reaction 31:  CO + OH <=> CO2 + H
  k_f = 0.07046 * exp((2.053) * logT - (-178.979071526765) * invT);
  qf[51] *= k_f;
  qr[51] *= k_f * exp(-(g_RT[8] + g_RT[15] - g_RT[19] - g_RT[25]));
  // reaction 32:  CO + OH <=> CO2 + H
  k_f = 5757000 * exp((-0.664) * logT - (166.98238621398) * invT);
  qf[52] *= k_f;
  qr[52] *= k_f * exp(-(g_RT[8] + g_RT[15] - g_RT[19] - g_RT[25]));
  // reaction 33:  CO + O2 <=> CO2 + O
  k_f = 1119000 * exp(-(24003.4349588851) * invT);
  qf[53] *= k_f;
  qr[53] *= k_f * exp(-(g_RT[8] + g_RT[13] - g_RT[14] - g_RT[25]));
  // reaction 34:  CO + HO2 <=> CO2 + OH
  k_f = 0.157 * exp((2.18) * logT - (9029.02038003442) * invT);
  qf[54] *= k_f;
  qr[54] *= k_f * exp(-(g_RT[8] - g_RT[15] + g_RT[16] - g_RT[25]));
  // reaction 35:  H + HCO <=> CO + H2
  k_f = 120000000;
  qf[55] *= k_f;
  qr[55] *= k_f * exp(-(-g_RT[6] - g_RT[8] + g_RT[19] + g_RT[22]));
  // reaction 36:  HCO + O <=> CO + OH
  k_f = 30000000;
  qf[56] *= k_f;
  qr[56] *= k_f * exp(-(-g_RT[8] + g_RT[14] - g_RT[15] + g_RT[22]));
  // reaction 37:  HCO + O <=> CO2 + H
  k_f = 30000000;
  qf[57] *= k_f;
  qr[57] *= k_f * exp(-(g_RT[14] - g_RT[19] + g_RT[22] - g_RT[25]));
  // reaction 38:  HCO + OH <=> CO + H2O
  k_f = 30200000;
  qf[58] *= k_f;
  qr[58] *= k_f * exp(-(-g_RT[8] + g_RT[15] - g_RT[17] + g_RT[22]));
  // reaction 39:  HCO + M <=> CO + H + M
  k_f = 187000000000 * exp((-1) * logT - (8554.68331868023) * invT);
  Corr = mixture + sc[6] + (0.75) * sc[8] + (-1) * sc[17] + (2.6) * sc[25];
  qf[26] *= Corr * k_f;
  qr[26] *= Corr * k_f * exp(-(-g_RT[8] - g_RT[19] + g_RT[22])) * (refCinv);
  // reaction 40:  HCO + H2O <=> CO + H + H2O
  k_f = 2244000000000 * exp((-1) * logT - (8554.68331868023) * invT);
  qf[27] *= k_f;
  qr[27] *= k_f * exp(-(-g_RT[8] - g_RT[19] + g_RT[22])) * (refCinv);
  // reaction 41:  HCO + O2 <=> CO + HO2
  k_f = 12040 * exp((0.807) * logT - (-365.838516040031) * invT);
  qf[59] *= k_f;
  qr[59] *= k_f * exp(-(-g_RT[8] + g_RT[13] - g_RT[16] + g_RT[22]));
  // reaction 42:  CO + H2 (+M) <=> CH2O (+M)
  k_f = 43 * exp((1.5) * logT - (40056.0465980557) * invT);
  Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] + (5) * sc[17] +
         sc[25];
  redP = Corr / k_f * 5.07e+15 * exp(-3.42 * logT - (42446.3257606281) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.0679999999999999) * exp(-T * 0.0050761421319797) +
    0.932 * exp(-T * 0.000649350649350649) + exp(-10300 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[2] *= Corr * k_f;
  qr[2] *= Corr * k_f * exp(-(g_RT[6] + g_RT[8] - g_RT[23])) * (refC);
  // reaction 43:  H + HCO (+M) <=> CH2O (+M)
  k_f = 1090000 * exp((0.48) * logT - (-130.836333109227) * invT);
  Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] + (5) * sc[17] +
         sc[25];
  redP =
    Corr / k_f * 1350000000000 * exp(-2.57 * logT - (717.083748771726) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.2176) * exp(-T * 0.003690036900369) +
    0.7824 * exp(-T * 0.000362976406533575) + exp(-6570 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[3] *= Corr * k_f;
  qr[3] *= Corr * k_f * exp(-(g_RT[19] + g_RT[22] - g_RT[23])) * (refC);
  // reaction 44:  CH2 + H (+M) <=> CH3 (+M)
  k_f = 25000000000 * exp((-0.8) * logT);
  Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] + (5) * sc[17] +
         sc[25];
  redP = Corr / k_f * 3.2e+15 * exp(-3.14 * logT - (618.956498939805) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.32) * exp(-T * 0.0128205128205128) +
    0.68 * exp(-T * 0.00050125313283208) + exp(-5590 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[4] *= Corr * k_f;
  qr[4] *= Corr * k_f * exp(-(-g_RT[12] + g_RT[19] + g_RT[20])) * (refC);
  // reaction 45:  CH2 + O <=> H + HCO
  k_f = 80000000;
  qf[60] *= k_f;
  qr[60] *= k_f * exp(-(g_RT[14] - g_RT[19] + g_RT[20] - g_RT[22]));
  // reaction 46:  CH2 + OH <=> CH2O + H
  k_f = 20000000;
  qf[61] *= k_f;
  qr[61] *= k_f * exp(-(g_RT[15] - g_RT[19] + g_RT[20] - g_RT[23]));
  // reaction 47:  CH2 + H2 <=> CH3 + H
  k_f = 0.5 * exp((2) * logT - (3638.25649376812) * invT);
  qf[62] *= k_f;
  qr[62] *= k_f * exp(-(g_RT[6] - g_RT[12] - g_RT[19] + g_RT[20]));
  // reaction 48:  CH2 + O2 <=> HCO + OH
  k_f = 10600000 * exp(-(754.82499870708) * invT);
  qf[63] *= k_f;
  qr[63] *= k_f * exp(-(g_RT[13] - g_RT[15] + g_RT[20] - g_RT[22]));
  // reaction 49:  CH2 + O2 <=> CO2 + 2 H
  k_f = 2640000 * exp(-(754.82499870708) * invT);
  qf[64] *= k_f;
  qr[64] *= k_f * exp(-(g_RT[13] - 2.000000 * g_RT[19] + g_RT[20] - g_RT[25])) *
            (refCinv);
  // reaction 50:  CH2 + CO (+M) <=> CH2CO (+M)
  k_f = 810000 * exp((0.5) * logT - (2269.50716277929) * invT);
  Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] + (5) * sc[17] +
         sc[25];
  redP = Corr / k_f * 2.69e+21 * exp(-5.11 * logT - (3570.32224388449) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.4093) * exp(-T * 0.00363636363636364) +
    0.5907 * exp(-T * 0.000815660685154976) + exp(-5185 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[5] *= Corr * k_f;
  qr[5] *= Corr * k_f * exp(-(g_RT[8] + g_RT[20] - g_RT[29])) * (refC);
  // reaction 51:  CH2* + N2 <=> CH2 + N2
  k_f = 15000000 * exp(-(301.929999482832) * invT);
  qf[65] *= k_f;
  qr[65] *= k_f * exp(-(-g_RT[20] + g_RT[21] + g_RT[40] - g_RT[40]));
  // reaction 52:  CH2* + O <=> CO + H2
  k_f = 15000000;
  qf[66] *= k_f;
  qr[66] *= k_f * exp(-(-g_RT[6] - g_RT[8] + g_RT[14] + g_RT[21]));
  // reaction 53:  CH2* + OH <=> CH2O + H
  k_f = 30000000;
  qf[67] *= k_f;
  qr[67] *= k_f * exp(-(g_RT[15] - g_RT[19] + g_RT[21] - g_RT[23]));
  // reaction 54:  CH2* + H2 <=> CH3 + H
  k_f = 70000000;
  qf[68] *= k_f;
  qr[68] *= k_f * exp(-(g_RT[6] - g_RT[12] - g_RT[19] + g_RT[21]));
  // reaction 55:  CH2* + O2 <=> CO + H + OH
  k_f = 28000000;
  qf[69] *= k_f;
  qr[69] *= k_f * exp(-(-g_RT[8] + g_RT[13] - g_RT[15] - g_RT[19] + g_RT[21])) *
            (refCinv);
  // reaction 56:  CH2* + O2 <=> CO + H2O
  k_f = 12000000;
  qf[70] *= k_f;
  qr[70] *= k_f * exp(-(-g_RT[8] + g_RT[13] - g_RT[17] + g_RT[21]));
  // reaction 57:  CH2* + H2O <=> CH2 + H2O
  k_f = 30000000;
  qf[71] *= k_f;
  qr[71] *= k_f * exp(-(g_RT[17] - g_RT[17] - g_RT[20] + g_RT[21]));
  // reaction 58:  CH2* + CO <=> CH2 + CO
  k_f = 9000000;
  qf[72] *= k_f;
  qr[72] *= k_f * exp(-(g_RT[8] - g_RT[8] - g_RT[20] + g_RT[21]));
  // reaction 59:  CH2* + CO2 <=> CH2 + CO2
  k_f = 7000000;
  qf[73] *= k_f;
  qr[73] *= k_f * exp(-(-g_RT[20] + g_RT[21] + g_RT[25] - g_RT[25]));
  // reaction 60:  CH2* + CO2 <=> CH2O + CO
  k_f = 14000000;
  qf[74] *= k_f;
  qr[74] *= k_f * exp(-(-g_RT[8] + g_RT[21] - g_RT[23] + g_RT[25]));
  // reaction 61:  CH2O + H (+M) <=> CH3O (+M)
  k_f = 540000 * exp((0.454) * logT - (1308.36333109227) * invT);
  Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] + (5) * sc[17] +
         sc[25];
  redP = Corr / k_f * 2.2e+18 * exp(-4.8 * logT - (2797.88466187424) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.242) * exp(-T * 0.0106382978723404) +
    0.758 * exp(-T * 0.000643086816720257) + exp(-4200 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[6] *= Corr * k_f;
  qr[6] *= Corr * k_f * exp(-(g_RT[19] + g_RT[23] - g_RT[24])) * (refC);
  // reaction 62:  CH2O + H <=> H2 + HCO
  k_f = 23000 * exp((1.05) * logT - (1648.03458051046) * invT);
  qf[75] *= k_f;
  qr[75] *= k_f * exp(-(-g_RT[6] + g_RT[19] - g_RT[22] + g_RT[23]));
  // reaction 63:  CH2O + O <=> HCO + OH
  k_f = 39000000 * exp(-(1781.38699694871) * invT);
  qf[76] *= k_f;
  qr[76] *= k_f * exp(-(g_RT[14] - g_RT[15] - g_RT[22] + g_RT[23]));
  // reaction 64:  CH2O + OH <=> H2O + HCO
  k_f = 3430 * exp((1.18) * logT - (-224.93784961471) * invT);
  qf[77] *= k_f;
  qr[77] *= k_f * exp(-(g_RT[15] - g_RT[17] - g_RT[22] + g_RT[23]));
  // reaction 65:  CH2O + O2 <=> HCO + HO2
  k_f = 100000000 * exp(-(20128.6666321888) * invT);
  qf[78] *= k_f;
  qr[78] *= k_f * exp(-(g_RT[13] - g_RT[16] - g_RT[22] + g_RT[23]));
  // reaction 66:  CH2O + HO2 <=> H2O2 + HCO
  k_f = 1000000 * exp(-(4025.73332643776) * invT);
  qf[79] *= k_f;
  qr[79] *= k_f * exp(-(g_RT[16] - g_RT[18] - g_RT[22] + g_RT[23]));
  // reaction 67:  CH3 + H (+M) <=> CH4 (+M)
  k_f = 12700000000 * exp((-0.63) * logT - (192.731983003208) * invT);
  Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] + (5) * sc[17] +
         sc[25];
  redP = Corr / k_f * 2.477e+21 * exp(-4.76 * logT - (1227.84866456352) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.217) * exp(-T * 0.0135135135135135) +
    0.783 * exp(-T * 0.000340020401224073) + exp(-6964 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[7] *= Corr * k_f;
  qr[7] *= Corr * k_f * exp(-(-g_RT[2] + g_RT[12] + g_RT[19])) * (refC);
  // reaction 68:  CH3 + O <=> CH2O + H
  k_f = 84300000;
  qf[80] *= k_f;
  qr[80] *= k_f * exp(-(g_RT[12] + g_RT[14] - g_RT[19] - g_RT[23]));
  // reaction 69:  CH3 + OH <=> CH2 + H2O
  k_f = 56 * exp((1.6) * logT - (2727.43432866158) * invT);
  qf[81] *= k_f;
  qr[81] *= k_f * exp(-(g_RT[12] + g_RT[15] - g_RT[17] - g_RT[20]));
  // reaction 70:  CH3 + OH <=> CH2* + H2O
  k_f = 25010000;
  qf[82] *= k_f;
  qr[82] *= k_f * exp(-(g_RT[12] + g_RT[15] - g_RT[17] - g_RT[21]));
  // reaction 71:  CH3 + O2 <=> CH3O + O
  k_f = 30830000 * exp(-(14492.6399751759) * invT);
  qf[83] *= k_f;
  qr[83] *= k_f * exp(-(g_RT[12] + g_RT[13] - g_RT[14] - g_RT[24]));
  // reaction 72:  CH3 + O2 <=> CH2O + OH
  k_f = 36000 * exp(-(4498.75699229419) * invT);
  qf[84] *= k_f;
  qr[84] *= k_f * exp(-(g_RT[12] + g_RT[13] - g_RT[15] - g_RT[23]));
  // reaction 73:  CH3 + HO2 <=> CH4 + O2
  k_f = 1000000;
  qf[85] *= k_f;
  qr[85] *= k_f * exp(-(-g_RT[2] + g_RT[12] - g_RT[13] + g_RT[16]));
  // reaction 74:  CH3 + HO2 <=> CH3O + OH
  k_f = 13400000;
  qf[86] *= k_f;
  qr[86] *= k_f * exp(-(g_RT[12] - g_RT[15] + g_RT[16] - g_RT[24]));
  // reaction 75:  CH3 + H2O2 <=> CH4 + HO2
  k_f = 0.0245 * exp((2.47) * logT - (2606.66232886845) * invT);
  qf[87] *= k_f;
  qr[87] *= k_f * exp(-(-g_RT[2] + g_RT[12] - g_RT[16] + g_RT[18]));
  // reaction 76:  CH3 + HCO <=> CH4 + CO
  k_f = 8480000;
  qf[88] *= k_f;
  qr[88] *= k_f * exp(-(-g_RT[2] - g_RT[8] + g_RT[12] + g_RT[22]));
  // reaction 77:  CH2O + CH3 <=> CH4 + HCO
  k_f = 0.00332 * exp((2.81) * logT - (2948.84966161566) * invT);
  qf[89] *= k_f;
  qr[89] *= k_f * exp(-(-g_RT[2] + g_RT[12] - g_RT[22] + g_RT[23]));
  // reaction 78:  CH2 + CH3 <=> C2H4 + H
  k_f = 40000000;
  qf[90] *= k_f;
  qr[90] *= k_f * exp(-(-g_RT[1] + g_RT[12] - g_RT[19] + g_RT[20]));
  // reaction 79:  2 CH3 (+M) <=> C2H6 (+M)
  k_f = 21200000000 * exp((-0.97) * logT - (311.994332798926) * invT);
  Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] + (5) * sc[17] +
         sc[25];
  redP = Corr / k_f * 1.77e+38 * exp(-9.67 * logT - (3130.00766130536) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.4675) * exp(-T * 0.00662251655629139) +
    0.5325 * exp(-T * 0.000963391136801541) + exp(-4970 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[8] *= Corr * k_f;
  qr[8] *= Corr * k_f * exp(-(-g_RT[7] + 2.000000 * g_RT[12])) * (refC);
  // reaction 80:  2 CH3 <=> C2H5 + H
  k_f = 4990000 * exp((0.1) * logT - (5334.09665753003) * invT);
  qf[91] *= k_f;
  qr[91] *= k_f * exp(-(2.000000 * g_RT[12] - g_RT[19] - g_RT[27]));
  // reaction 81:  CH3 + HCCO <=> C2H4 + CO
  k_f = 50000000;
  qf[92] *= k_f;
  qr[92] *= k_f * exp(-(-g_RT[1] - g_RT[8] + g_RT[12] + g_RT[28]));
  // reaction 82:  CH3O + H <=> CH2O + H2
  k_f = 20000000;
  qf[93] *= k_f;
  qr[93] *= k_f * exp(-(-g_RT[6] + g_RT[19] - g_RT[23] + g_RT[24]));
  // reaction 83:  CH3O + H <=> CH3 + OH
  k_f = 32000000;
  qf[94] *= k_f;
  qr[94] *= k_f * exp(-(-g_RT[12] - g_RT[15] + g_RT[19] + g_RT[24]));
  // reaction 84:  CH3O + H <=> CH2* + H2O
  k_f = 16000000;
  qf[95] *= k_f;
  qr[95] *= k_f * exp(-(-g_RT[17] + g_RT[19] - g_RT[21] + g_RT[24]));
  // reaction 85:  CH3O + OH <=> CH2O + H2O
  k_f = 5000000;
  qf[96] *= k_f;
  qr[96] *= k_f * exp(-(g_RT[15] - g_RT[17] - g_RT[23] + g_RT[24]));
  // reaction 86:  CH3O + O2 <=> CH2O + HO2
  k_f = 4.28e-19 * exp((7.6) * logT - (-1776.35483029066) * invT);
  qf[97] *= k_f;
  qr[97] *= k_f * exp(-(g_RT[13] - g_RT[16] - g_RT[23] + g_RT[24]));
  // reaction 87:  CH4 + H <=> CH3 + H2
  k_f = 660 * exp((1.62) * logT - (5454.86865732316) * invT);
  qf[98] *= k_f;
  qr[98] *= k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[12] + g_RT[19]));
  // reaction 88:  CH4 + O <=> CH3 + OH
  k_f = 1020 * exp((1.5) * logT - (4327.66332592059) * invT);
  qf[99] *= k_f;
  qr[99] *= k_f * exp(-(g_RT[2] - g_RT[12] + g_RT[14] - g_RT[15]));
  // reaction 89:  CH4 + OH <=> CH3 + H2O
  k_f = 100 * exp((1.6) * logT - (1570.03599731073) * invT);
  qf[100] *= k_f;
  qr[100] *= k_f * exp(-(g_RT[2] - g_RT[12] + g_RT[15] - g_RT[17]));
  // reaction 90:  CH2 + CH4 <=> 2 CH3
  k_f = 2.46 * exp((2) * logT - (4161.60182620503) * invT);
  qf[101] *= k_f;
  qr[101] *= k_f * exp(-(g_RT[2] - 2.000000 * g_RT[12] + g_RT[20]));
  // reaction 91:  H + HCCO <=> CH2* + CO
  k_f = 100000000;
  qf[102] *= k_f;
  qr[102] *= k_f * exp(-(-g_RT[8] + g_RT[19] - g_RT[21] + g_RT[28]));
  // reaction 92:  HCCO + O <=> 2 CO + H
  k_f = 100000000;
  qf[103] *= k_f;
  qr[103] *= k_f *
             exp(-(-2.000000 * g_RT[8] + g_RT[14] - g_RT[19] + g_RT[28])) *
             (refCinv);
  // reaction 93:  HCCO + O2 <=> 2 CO + OH
  k_f = 1600000 * exp(-(429.747032597231) * invT);
  qf[104] *= k_f;
  qr[104] *= k_f *
             exp(-(-2.000000 * g_RT[8] + g_RT[13] - g_RT[15] + g_RT[28])) *
             (refCinv);
  // reaction 94:  CH2 + HCCO <=> C2H3 + CO
  k_f = 30000000;
  qf[105] *= k_f;
  qr[105] *= k_f * exp(-(-g_RT[8] + g_RT[20] - g_RT[26] + g_RT[28]));
  // reaction 95:  C2H3 (+M) <=> C2H2 + H (+M)
  k_f = 386000000 * exp((1.62) * logT - (18643.2716780664) * invT);
  Corr = mixture + (2) * sc[1] + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] +
         (2) * sc[10] + (5) * sc[17] + sc[25];
  redP = Corr / k_f * 2.565e+21 * exp(-3.4 * logT - (18014.5125184767) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (-0.9816) * exp(-T * 0.000185745862510913) +
    1.9816 * exp(-T * 0.232926488400261) + exp(0.0795 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[9] *= Corr * k_f;
  qr[9] *= Corr * k_f * exp(-(-g_RT[10] - g_RT[19] + g_RT[26])) * (refCinv);
  // reaction 96:  C2H2 + O <=> CH2 + CO
  k_f = 4.08 * exp((2) * logT - (956.111665028967) * invT);
  qf[106] *= k_f;
  qr[106] *= k_f * exp(-(-g_RT[8] + g_RT[10] + g_RT[14] - g_RT[20]));
  // reaction 97:  C2H2 + O <=> H + HCCO
  k_f = 16.32 * exp((2) * logT - (956.111665028967) * invT);
  qf[107] *= k_f;
  qr[107] *= k_f * exp(-(g_RT[10] + g_RT[14] - g_RT[19] - g_RT[28]));
  // reaction 98:  C2H2 + OH <=> CH2CO + H
  k_f = 2.18e-10 * exp((4.5) * logT - (-503.21666580472) * invT);
  qf[108] *= k_f;
  qr[108] *= k_f * exp(-(g_RT[10] + g_RT[15] - g_RT[19] - g_RT[29]));
  // reaction 99:  C2H2 + OH <=> CH3 + CO
  k_f = 4.83e-10 * exp((4) * logT - (-1006.43333160944) * invT);
  qf[109] *= k_f;
  qr[109] *= k_f * exp(-(-g_RT[8] + g_RT[10] - g_RT[12] + g_RT[15]));
  // reaction 100:  C2H2 + HCO <=> C2H3 + CO
  k_f = 10 * exp((2) * logT - (3019.29999482832) * invT);
  qf[110] *= k_f;
  qr[110] *= k_f * exp(-(-g_RT[8] + g_RT[10] + g_RT[22] - g_RT[26]));
  // reaction 101:  C2H2 + CH2 <=> C3H3 + H
  k_f = 12000000 * exp(-(3331.29432762724) * invT);
  qf[111] *= k_f;
  qr[111] *= k_f * exp(-(g_RT[10] - g_RT[19] + g_RT[20] - g_RT[31]));
  // reaction 102:  C2H2 + CH2* <=> C3H3 + H
  k_f = 20000000;
  qf[112] *= k_f;
  qr[112] *= k_f * exp(-(g_RT[10] - g_RT[19] + g_RT[21] - g_RT[31]));
  // reaction 103:  C2H2 + CH3 <=> aC3H5
  k_f = 2.68e+47 * exp((-12.82) * logT - (17979.9314692026) * invT);
  qf[113] *= k_f;
  qr[113] *= k_f * exp(-(g_RT[10] + g_RT[12] - g_RT[32])) * (refC);
  // reaction 104:  CH2CO + H (+M) <=> CH2CHO (+M)
  k_f = 330000000 * exp((-0.06) * logT - (4277.34165934012) * invT);
  Corr = mixture + (2) * sc[1] + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] +
         (2) * sc[10] + (5) * sc[17] + sc[25];
  redP = Corr / k_f * 3.8e+29 * exp(-7.64 * logT - (5988.27832307616) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.663) * exp(-T * 0.000585823081429408) + 0.337 * exp(-T * 0.0003125) +
    exp(-4131 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[10] *= Corr * k_f;
  qr[10] *= Corr * k_f * exp(-(g_RT[19] + g_RT[29] - g_RT[30])) * (refC);
  // reaction 105:  CH2CO + H <=> H2 + HCCO
  k_f = 50000000 * exp(-(4025.73332643776) * invT);
  qf[114] *= k_f;
  qr[114] *= k_f * exp(-(-g_RT[6] + g_RT[19] - g_RT[28] + g_RT[29]));
  // reaction 106:  CH2CO + H <=> CH3 + CO
  k_f = 1500 * exp((1.43) * logT - (1353.6528310147) * invT);
  qf[115] *= k_f;
  qr[115] *= k_f * exp(-(-g_RT[8] - g_RT[12] + g_RT[19] + g_RT[29]));
  // reaction 107:  CH2CO + O <=> HCCO + OH
  k_f = 10000000 * exp(-(4025.73332643776) * invT);
  qf[116] *= k_f;
  qr[116] *= k_f * exp(-(g_RT[14] - g_RT[15] - g_RT[28] + g_RT[29]));
  // reaction 108:  CH2CO + O <=> CH2 + CO2
  k_f = 1750000 * exp(-(679.342498836372) * invT);
  qf[117] *= k_f;
  qr[117] *= k_f * exp(-(g_RT[14] - g_RT[20] - g_RT[25] + g_RT[29]));
  // reaction 109:  CH2CO + OH <=> H2O + HCCO
  k_f = 7500000 * exp(-(1006.43333160944) * invT);
  qf[118] *= k_f;
  qr[118] *= k_f * exp(-(g_RT[15] - g_RT[17] - g_RT[28] + g_RT[29]));
  // reaction 110:  C2H3 + H (+M) <=> C2H4 (+M)
  k_f = 6080000 * exp((0.27) * logT - (140.900666425322) * invT);
  Corr = mixture + (2) * sc[1] + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] +
         (2) * sc[10] + (5) * sc[17] + sc[25];
  redP = Corr / k_f * 1.4e+18 * exp(-3.86 * logT - (1670.67933047167) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.218) * exp(-T * 0.00481927710843374) +
    0.782 * exp(-T * 0.000375516334960571) + exp(-6095 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[11] *= Corr * k_f;
  qr[11] *= Corr * k_f * exp(-(-g_RT[1] + g_RT[19] + g_RT[26])) * (refC);
  // reaction 111:  C2H3 + H <=> C2H2 + H2
  k_f = 90000000;
  qf[119] *= k_f;
  qr[119] *= k_f * exp(-(-g_RT[6] - g_RT[10] + g_RT[19] + g_RT[26]));
  // reaction 112:  C2H3 + O <=> CH2CO + H
  k_f = 48000000;
  qf[120] *= k_f;
  qr[120] *= k_f * exp(-(g_RT[14] - g_RT[19] + g_RT[26] - g_RT[29]));
  // reaction 113:  C2H3 + O <=> CH3 + CO
  k_f = 48000000;
  qf[121] *= k_f;
  qr[121] *= k_f * exp(-(-g_RT[8] - g_RT[12] + g_RT[14] + g_RT[26]));
  // reaction 114:  C2H3 + OH <=> C2H2 + H2O
  k_f = 30110000;
  qf[122] *= k_f;
  qr[122] *= k_f * exp(-(-g_RT[10] + g_RT[15] - g_RT[17] + g_RT[26]));
  // reaction 115:  C2H3 + O2 <=> C2H2 + HO2
  k_f = 1.34 * exp((1.61) * logT - (-192.93326966953) * invT);
  qf[123] *= k_f;
  qr[123] *= k_f * exp(-(-g_RT[10] + g_RT[13] - g_RT[16] + g_RT[26]));
  // reaction 116:  C2H3 + O2 <=> CH2CHO + O
  k_f = 300000 * exp((0.29) * logT - (5.53538332385192) * invT);
  qf[124] *= k_f;
  qr[124] *= k_f * exp(-(g_RT[13] - g_RT[14] + g_RT[26] - g_RT[30]));
  // reaction 117:  C2H3 + O2 <=> CH2O + HCO
  k_f = 46000000000 * exp((-1.39) * logT - (508.248832462767) * invT);
  qf[125] *= k_f;
  qr[125] *= k_f * exp(-(g_RT[13] - g_RT[22] - g_RT[23] + g_RT[26]));
  // reaction 118:  C2H3 + CH3 (+M) <=> C3H6 (+M)
  k_f = 25000000;
  Corr = mixture + (2) * sc[1] + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] +
         (2) * sc[10] + (5) * sc[17] + sc[25];
  redP = Corr / k_f * 4.27e+46 * exp(-11.94 * logT - (4916.32618157895) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.825) * exp(-T * 0.000745934656124124) +
    0.175 * exp(-T * 1.66666666666667e-05) + exp(-10139.8 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[12] *= Corr * k_f;
  qr[12] *= Corr * k_f * exp(-(-g_RT[3] + g_RT[12] + g_RT[26])) * (refC);
  // reaction 119:  C2H3 + CH3 <=> H + aC3H5
  k_f = 1.5e+18 * exp((-2.83) * logT - (9368.88788395227) * invT);
  qf[126] *= k_f;
  qr[126] *= k_f * exp(-(g_RT[12] - g_RT[19] + g_RT[26] - g_RT[32]));
  // reaction 120:  CH2CHO <=> CH3 + CO
  k_f = 7.8e+41 * exp((-9.147) * logT - (23600.8616262414) * invT);
  qf[127] *= k_f;
  qr[127] *= k_f * exp(-(-g_RT[8] - g_RT[12] + g_RT[30])) * (refCinv);
  // reaction 121:  CH2CHO + H <=> CH3 + HCO
  k_f = 90000000;
  qf[128] *= k_f;
  qr[128] *= k_f * exp(-(-g_RT[12] + g_RT[19] - g_RT[22] + g_RT[30]));
  // reaction 122:  CH2CHO + H <=> CH2CO + H2
  k_f = 20000000 * exp(-(2012.86666321888) * invT);
  qf[129] *= k_f;
  qr[129] *= k_f * exp(-(-g_RT[6] + g_RT[19] - g_RT[29] + g_RT[30]));
  // reaction 123:  CH2CHO + O <=> CH2CO + OH
  k_f = 20000000 * exp(-(2012.86666321888) * invT);
  qf[130] *= k_f;
  qr[130] *= k_f * exp(-(g_RT[14] - g_RT[15] - g_RT[29] + g_RT[30]));
  // reaction 124:  CH2CHO + OH <=> CH2CO + H2O
  k_f = 10000000 * exp(-(1006.43333160944) * invT);
  qf[131] *= k_f;
  qr[131] *= k_f * exp(-(g_RT[15] - g_RT[17] - g_RT[29] + g_RT[30]));
  // reaction 125:  CH2CHO + O2 <=> CH2CO + HO2
  k_f = 140000;
  qf[132] *= k_f;
  qr[132] *= k_f * exp(-(g_RT[13] - g_RT[16] - g_RT[29] + g_RT[30]));
  // reaction 126:  C2H4 + H (+M) <=> C2H5 (+M)
  k_f = 1370 * exp((1.463) * logT - (681.858582165395) * invT);
  Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] + (5) * sc[17] +
         sc[25];
  redP = Corr / k_f * 2.9e+27 * exp(-6.642 * logT - (2903.05694502743) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (-0.569) * exp(-T * -0.000109325461900077) +
    1.569 * exp(-T * 0.00334448160535117) + exp(-152.4 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[13] *= Corr * k_f;
  qr[13] *= Corr * k_f * exp(-(g_RT[1] + g_RT[19] - g_RT[27])) * (refC);
  // reaction 127:  C2H4 + H <=> C2H3 + H2
  k_f = 50.7 * exp((1.9) * logT - (6516.65582217112) * invT);
  qf[133] *= k_f;
  qr[133] *= k_f * exp(-(g_RT[1] - g_RT[6] + g_RT[19] - g_RT[26]));
  // reaction 128:  C2H4 + O <=> C2H3 + OH
  k_f = 15.1 * exp((1.9) * logT - (1882.03033010965) * invT);
  qf[134] *= k_f;
  qr[134] *= k_f * exp(-(g_RT[1] + g_RT[14] - g_RT[15] - g_RT[26]));
  // reaction 129:  C2H4 + O <=> CH3 + HCO
  k_f = 19.2 * exp((1.83) * logT - (110.707666477038) * invT);
  qf[135] *= k_f;
  qr[135] *= k_f * exp(-(g_RT[1] - g_RT[12] + g_RT[14] - g_RT[22]));
  // reaction 130:  C2H4 + O <=> CH2 + CH2O
  k_f = 0.384 * exp((1.83) * logT - (110.707666477038) * invT);
  qf[136] *= k_f;
  qr[136] *= k_f * exp(-(g_RT[1] + g_RT[14] - g_RT[20] - g_RT[23]));
  // reaction 131:  C2H4 + OH <=> C2H3 + H2O
  k_f = 3.6 * exp((2) * logT - (1258.0416645118) * invT);
  qf[137] *= k_f;
  qr[137] *= k_f * exp(-(g_RT[1] + g_RT[15] - g_RT[17] - g_RT[26]));
  // reaction 132:  C2H4 + HCO <=> C2H5 + CO
  k_f = 10 * exp((2) * logT - (4025.73332643776) * invT);
  qf[138] *= k_f;
  qr[138] *= k_f * exp(-(g_RT[1] - g_RT[8] + g_RT[22] - g_RT[27]));
  // reaction 133:  C2H4 + CH2 <=> H + aC3H5
  k_f = 20000000 * exp(-(3019.29999482832) * invT);
  qf[139] *= k_f;
  qr[139] *= k_f * exp(-(g_RT[1] - g_RT[19] + g_RT[20] - g_RT[32]));
  // reaction 134:  C2H4 + CH2* <=> H + aC3H5
  k_f = 50000000;
  qf[140] *= k_f;
  qr[140] *= k_f * exp(-(g_RT[1] - g_RT[19] + g_RT[21] - g_RT[32]));
  // reaction 135:  C2H4 + CH3 <=> C2H3 + CH4
  k_f = 0.227 * exp((2) * logT - (4629.59332540342) * invT);
  qf[141] *= k_f;
  qr[141] *= k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[12] - g_RT[26]));
  // reaction 136:  C2H4 + O2 <=> C2H3 + HO2
  k_f = 42200000 * exp(-(30595.573280927) * invT);
  qf[142] *= k_f;
  qr[142] *= k_f * exp(-(g_RT[1] + g_RT[13] - g_RT[16] - g_RT[26]));
  // reaction 137:  C2H5 + H (+M) <=> C2H6 (+M)
  k_f = 521000000000 * exp((-0.99) * logT - (795.082331971457) * invT);
  Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] + (5) * sc[17] +
         sc[25];
  redP = Corr / k_f * 1.99e+29 * exp(-7.08 * logT - (3364.00341090455) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.1578) * exp(-T * 0.008) + 0.8422 * exp(-T * 0.000450653447498873) +
    exp(-6882 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[14] *= Corr * k_f;
  qr[14] *= Corr * k_f * exp(-(-g_RT[7] + g_RT[19] + g_RT[27])) * (refC);
  // reaction 138:  C2H5 + O <=> CH2O + CH3
  k_f = 16040000;
  qf[143] *= k_f;
  qr[143] *= k_f * exp(-(-g_RT[12] + g_RT[14] - g_RT[23] + g_RT[27]));
  // reaction 139:  C2H5 + O2 <=> C2H4 + HO2
  k_f = 20000;
  qf[144] *= k_f;
  qr[144] *= k_f * exp(-(-g_RT[1] + g_RT[13] - g_RT[16] + g_RT[27]));
  // reaction 140:  C2H5 + HO2 <=> CH2O + CH3 + OH
  k_f = 24000000;
  qf[145] *= k_f;
  qr[145] *= k_f *
             exp(-(-g_RT[12] - g_RT[15] + g_RT[16] - g_RT[23] + g_RT[27])) *
             (refCinv);
  // reaction 141:  C2H3 + C2H5 (+M) <=> C4H81 (+M)
  k_f = 15000000;
  Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] + (5) * sc[17] +
         sc[25];
  redP = Corr / k_f * 1.55e+44 * exp(-11.79 * logT - (4521.1501339225) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.802) * exp(-T * 0.000439000834101585) +
    0.198 * exp(-T * 1.66666666666667e-05) + exp(-5723.2 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[15] *= Corr * k_f;
  qr[15] *= Corr * k_f * exp(-(-g_RT[5] + g_RT[26] + g_RT[27])) * (refC);
  // reaction 142:  C2H6 + H <=> C2H5 + H2
  k_f = 115 * exp((1.9) * logT - (3789.22149350954) * invT);
  qf[146] *= k_f;
  qr[146] *= k_f * exp(-(-g_RT[6] + g_RT[7] + g_RT[19] - g_RT[27]));
  // reaction 143:  C2H6 + O <=> C2H5 + OH
  k_f = 89.8 * exp((1.92) * logT - (2863.30282842885) * invT);
  qf[147] *= k_f;
  qr[147] *= k_f * exp(-(g_RT[7] + g_RT[14] - g_RT[15] - g_RT[27]));
  // reaction 144:  C2H6 + OH <=> C2H5 + H2O
  k_f = 3.54 * exp((2.12) * logT - (437.798499250106) * invT);
  qf[148] *= k_f;
  qr[148] *= k_f * exp(-(g_RT[7] + g_RT[15] - g_RT[17] - g_RT[27]));
  // reaction 145:  C2H6 + CH3 <=> C2H5 + CH4
  k_f = 6.14 * exp((1.74) * logT - (5258.61415765932) * invT);
  qf[149] *= k_f;
  qr[149] *= k_f * exp(-(-g_RT[2] + g_RT[7] + g_RT[12] - g_RT[27]));
  // reaction 146:  C3H3 + O2 <=> CH2CO + HCO
  k_f = 30000 * exp(-(1443.22539752794) * invT);
  qf[150] *= k_f;
  qr[150] *= k_f * exp(-(g_RT[13] - g_RT[22] - g_RT[29] + g_RT[31]));
  // reaction 147:  C3H3 + HO2 <=> C2H3 + CO + OH
  k_f = 800000;
  qf[151] *= k_f;
  qr[151] *= k_f *
             exp(-(-g_RT[8] - g_RT[15] + g_RT[16] - g_RT[26] + g_RT[31])) *
             (refCinv);
  // reaction 148:  C2H2 + C3H3 <=> C5H5
  k_f = 6.87e+49 * exp((-12.5) * logT - (21147.6803804433) * invT);
  qf[152] *= k_f;
  qr[152] *= k_f * exp(-(g_RT[10] + g_RT[31] - g_RT[34])) * (refC);
  // reaction 149:  2 C3H3 => C6H5 + H
  k_f = 5000000;
  qf[153] *= k_f;
  qr[153] *= k_f * exp(-(-g_RT[19] + 2.000000 * g_RT[31] - g_RT[35]));
  // reaction 150:  2 C3H3 => C6H6
  k_f = 2000000;
  qf[154] *= k_f;
  qr[154] *= k_f * exp(-(-g_RT[9] + 2.000000 * g_RT[31])) * (refC);
  // reaction 151:  H + aC3H5 (+M) <=> C3H6 (+M)
  k_f = 200000000;
  Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] + (5) * sc[17] +
         sc[25];
  redP = Corr / k_f * 1.33e+48 * exp(-12 * logT - (3003.09641818941) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.98) * exp(-T * 0.000911909538573774) +
    0.02 * exp(-T * 0.000911909538573774) + exp(-6859.5 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[16] *= Corr * k_f;
  qr[16] *= Corr * k_f * exp(-(-g_RT[3] + g_RT[19] + g_RT[32])) * (refC);
  // reaction 152:  HO2 + aC3H5 <=> C3H6 + O2
  k_f = 2660000;
  qf[155] *= k_f;
  qr[155] *= k_f * exp(-(-g_RT[3] - g_RT[13] + g_RT[16] + g_RT[32]));
  // reaction 153:  HO2 + aC3H5 <=> C2H3 + CH2O + OH
  k_f = 6600000;
  qf[156] *= k_f;
  qr[156] *= k_f *
             exp(-(-g_RT[15] + g_RT[16] - g_RT[23] - g_RT[26] + g_RT[32])) *
             (refCinv);
  // reaction 154:  HCO + aC3H5 <=> C3H6 + CO
  k_f = 60000000;
  qf[157] *= k_f;
  qr[157] *= k_f * exp(-(-g_RT[3] - g_RT[8] + g_RT[22] + g_RT[32]));
  // reaction 155:  CH3 + aC3H5 (+M) <=> C4H81 (+M)
  k_f = 100000000 * exp((-0.32) * logT - (-131.993731440578) * invT);
  Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] + (5) * sc[17] +
         sc[25];
  redP = Corr / k_f * 3.91e+48 * exp(-12.81 * logT - (3145.1041612795) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.896) * exp(-T * 0.00062266500622665) +
    0.104 * exp(-T * 1.66666666666667e-05) + exp(-6118.4 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[17] *= Corr * k_f;
  qr[17] *= Corr * k_f * exp(-(-g_RT[5] + g_RT[12] + g_RT[32])) * (refC);
  // reaction 156:  C3H6 + H <=> C2H4 + CH3
  k_f = 8e+15 * exp((-2.39) * logT - (5625.96232369677) * invT);
  qf[158] *= k_f;
  qr[158] *= k_f * exp(-(-g_RT[1] + g_RT[3] - g_RT[12] + g_RT[19]));
  // reaction 157:  C3H6 + H <=> H2 + aC3H5
  k_f = 1.92 * exp((2.309) * logT - (2352.03469597126) * invT);
  qf[159] *= k_f;
  qr[159] *= k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[19] - g_RT[32]));
  // reaction 158:  C3H6 + O <=> CH2CO + CH3 + H
  k_f = 80 * exp((1.65) * logT - (164.551849718143) * invT);
  qf[160] *= k_f;
  qr[160] *= k_f * exp(-(g_RT[3] - g_RT[12] + g_RT[14] - g_RT[19] - g_RT[29])) *
             (refCinv);
  // reaction 159:  C3H6 + O <=> C2H5 + HCO
  k_f = 35 * exp((1.65) * logT - (-489.126599162188) * invT);
  qf[161] *= k_f;
  qr[161] *= k_f * exp(-(g_RT[3] + g_RT[14] - g_RT[22] - g_RT[27]));
  // reaction 160:  C3H6 + O <=> OH + aC3H5
  k_f = 180000 * exp((0.7) * logT - (2958.91399493175) * invT);
  qf[162] *= k_f;
  qr[162] *= k_f * exp(-(g_RT[3] + g_RT[14] - g_RT[15] - g_RT[32]));
  // reaction 161:  C3H6 + OH <=> H2O + aC3H5
  k_f = 3.1 * exp((2) * logT - (-149.958566409806) * invT);
  qf[163] *= k_f;
  qr[163] *= k_f * exp(-(g_RT[3] + g_RT[15] - g_RT[17] - g_RT[32]));
  // reaction 162:  C3H6 + CH3 <=> CH4 + aC3H5
  k_f = 4.54e-05 * exp((3.268) * logT - (3599.00559383536) * invT);
  qf[164] *= k_f;
  qr[164] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[12] - g_RT[32]));
  // reaction 163:  C4H81 + H <=> C2H4 + C2H5
  k_f = 1.6e+16 * exp((-2.39) * logT - (5625.96232369677) * invT);
  qf[165] *= k_f;
  qr[165] *= k_f * exp(-(-g_RT[1] + g_RT[5] + g_RT[19] - g_RT[27]));
  // reaction 164:  C4H81 + H <=> C3H6 + CH3
  k_f = 3.2e+16 * exp((-2.39) * logT - (5625.96232369677) * invT);
  qf[166] *= k_f;
  qr[166] *= k_f * exp(-(-g_RT[3] + g_RT[5] - g_RT[12] + g_RT[19]));
  // reaction 165:  H + iC4H8 <=> C3H6 + CH3
  k_f = 6.16e+16 * exp((-2.538) * logT - (5851.90660664309) * invT);
  qf[167] *= k_f;
  qr[167] *= k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[12] + g_RT[19]));
  // reaction 166:  O + iC4H8 <=> CH2CO + 2 CH3
  k_f = 240 * exp((1.65) * logT - (164.551849718143) * invT);
  qf[168] *= k_f;
  qr[168] *= k_f * exp(-(g_RT[4] - 2.000000 * g_RT[12] + g_RT[14] - g_RT[29])) *
             (refCinv);
  // reaction 167:  C6H5 + CH3 <=> C6H5CH3
  k_f = 13800000 * exp(-(23.1479666270171) * invT);
  qf[169] *= k_f;
  qr[169] *= k_f * exp(-(-g_RT[11] + g_RT[12] + g_RT[35])) * (refC);
  // reaction 168:  C6H5CH3 + O2 <=> C6H5CH2 + HO2
  k_f = 300000000 * exp(-(21634.2908962765) * invT);
  qf[170] *= k_f;
  qr[170] *= k_f * exp(-(g_RT[11] + g_RT[13] - g_RT[16] - g_RT[36]));
  // reaction 169:  C6H5CH3 + OH <=> C6H5CH2 + H2O
  k_f = 16200000 * exp(-(1393.91016427907) * invT);
  qf[171] *= k_f;
  qr[171] *= k_f * exp(-(g_RT[11] + g_RT[15] - g_RT[17] - g_RT[36]));
  // reaction 170:  C6H5CH3 + H <=> C6H5CH2 + H2
  k_f = 125900000 * exp(-(4206.38810946165) * invT);
  qf[172] *= k_f;
  qr[172] *= k_f * exp(-(-g_RT[6] + g_RT[11] + g_RT[19] - g_RT[36]));
  // reaction 171:  C6H5CH3 + H <=> C6H6 + CH3
  k_f = 1.93 * exp((2.17) * logT - (2094.89097974505) * invT);
  qf[173] *= k_f;
  qr[173] *= k_f * exp(-(-g_RT[9] + g_RT[11] - g_RT[12] + g_RT[19]));
  // reaction 172:  C6H5CH3 + CH3 <=> C6H5CH2 + CH4
  k_f = 316000 * exp(-(4780.55832514484) * invT);
  qf[174] *= k_f;
  qr[174] *= k_f * exp(-(-g_RT[2] + g_RT[11] + g_RT[12] - g_RT[36]));
  // reaction 173:  C6H5CH2 + H (+M) <=> C6H5CH3 (+M)
  k_f = 100000000;
  Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] + (5) * sc[17] +
         sc[25];
  redP = Corr / k_f * 1.1e+91 * exp(-24.63 * logT - (7341.93115409086) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.569) * exp(-T * 0.00261096605744125) +
    0.431 * exp(-T * 0.00657894736842105) + exp(-4730 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[18] *= Corr * k_f;
  qr[18] *= Corr * k_f * exp(-(-g_RT[11] + g_RT[19] + g_RT[36])) * (refC);
  // reaction 174:  C6H5CH2 + H <=> C6H5 + CH3
  k_f = 1.5e+60 * exp((-13.94) * logT - (32497.7322776688) * invT);
  qf[175] *= k_f;
  qr[175] *= k_f * exp(-(-g_RT[12] + g_RT[19] - g_RT[35] + g_RT[36]));
  // reaction 175:  C6H5CH2 + O <=> C6H5CHO + H
  k_f = 400000000;
  qf[176] *= k_f;
  qr[176] *= k_f * exp(-(g_RT[14] - g_RT[19] + g_RT[36] - g_RT[39]));
  // reaction 176:  C6H5CH2 + HO2 <=> C6H5CHO + H + OH
  k_f = 5000000;
  qf[177] *= k_f;
  qr[177] *= k_f *
             exp(-(-g_RT[15] + g_RT[16] - g_RT[19] + g_RT[36] - g_RT[39])) *
             (refCinv);
  // reaction 177:  C6H5 + HCO <=> C6H5CHO
  k_f = 10000000;
  qf[178] *= k_f;
  qr[178] *= k_f * exp(-(g_RT[22] + g_RT[35] - g_RT[39])) * (refC);
  // reaction 178:  C6H5CHO <=> C6H5CO + H
  k_f = 3.98e+15 * exp(-(43729.5282584301) * invT);
  qf[179] *= k_f;
  qr[179] *= k_f * exp(-(-g_RT[19] - g_RT[38] + g_RT[39])) * (refCinv);
  // reaction 179:  C6H5CHO + O2 <=> C6H5CO + HO2
  k_f = 10200000 * exp(-(19600.2891330938) * invT);
  qf[180] *= k_f;
  qr[180] *= k_f * exp(-(g_RT[13] - g_RT[16] - g_RT[38] + g_RT[39]));
  // reaction 180:  C6H5CHO + OH <=> C6H5CO + H2O
  k_f = 23500 * exp((0.73) * logT - (-558.570499043239) * invT);
  qf[181] *= k_f;
  qr[181] *= k_f * exp(-(g_RT[15] - g_RT[17] - g_RT[38] + g_RT[39]));
  // reaction 181:  C6H5CHO + H <=> C6H5CO + H2
  k_f = 4100 * exp((1.16) * logT - (1207.71999793133) * invT);
  qf[182] *= k_f;
  qr[182] *= k_f * exp(-(-g_RT[6] + g_RT[19] - g_RT[38] + g_RT[39]));
  // reaction 182:  C6H5CHO + H <=> C6H6 + HCO
  k_f = 1.93 * exp((2.17) * logT - (2094.89097974505) * invT);
  qf[183] *= k_f;
  qr[183] *= k_f * exp(-(-g_RT[9] + g_RT[19] - g_RT[22] + g_RT[39]));
  // reaction 183:  C6H5CHO + O <=> C6H5CO + OH
  k_f = 5800000 * exp(-(905.789998448495) * invT);
  qf[184] *= k_f;
  qr[184] *= k_f * exp(-(g_RT[14] - g_RT[15] - g_RT[38] + g_RT[39]));
  // reaction 184:  C6H5CHO + CH3 <=> C6H5CO + CH4
  k_f = 2e-12 * exp((5.6) * logT - (1237.91299787961) * invT);
  qf[185] *= k_f;
  qr[185] *= k_f * exp(-(-g_RT[2] + g_RT[12] - g_RT[38] + g_RT[39]));
  // reaction 185:  C6H5CO + H2O2 <=> C6H5CHO + HO2
  k_f = 180000 * exp(-(4139.46029290962) * invT);
  qf[186] *= k_f;
  qr[186] *= k_f * exp(-(-g_RT[16] + g_RT[18] + g_RT[38] - g_RT[39]));
  // reaction 186:  C6H5CO <=> C6H5 + CO
  k_f = 527000000000000 * exp(-(14599.8251249923) * invT);
  qf[187] *= k_f;
  qr[187] *= k_f * exp(-(-g_RT[8] - g_RT[35] + g_RT[38])) * (refCinv);
  // reaction 187:  C6H5 + H (+M) <=> C6H6 (+M)
  k_f = 100000000;
  Corr = mixture + sc[2] + sc[6] + (0.5) * sc[8] + (5) * sc[17] + sc[25];
  redP = Corr / k_f * 6.6e+63 * exp(-16.3 * logT - (3522.51666063304) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-T * 0.0017096939647803) + exp(-6113 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[19] *= Corr * k_f;
  qr[19] *= Corr * k_f * exp(-(-g_RT[9] + g_RT[19] + g_RT[35])) * (refC);
  // reaction 188:  C6H6 + OH <=> C6H5 + H2O
  k_f = 0.3985 * exp((2.286) * logT - (532.403232421393) * invT);
  qf[188] *= k_f;
  qr[188] *= k_f * exp(-(g_RT[9] + g_RT[15] - g_RT[17] - g_RT[35]));
  // reaction 189:  C6H6 + O <=> C6H5O + H
  k_f = 13900000 * exp(-(2470.79382910117) * invT);
  qf[189] *= k_f;
  qr[189] *= k_f * exp(-(g_RT[9] + g_RT[14] - g_RT[19] - g_RT[37]));
  // reaction 190:  C6H6 + O <=> C5H5 + HCO
  k_f = 13900000 * exp(-(2279.57149609538) * invT);
  qf[190] *= k_f;
  qr[190] *= k_f * exp(-(g_RT[9] + g_RT[14] - g_RT[22] - g_RT[34]));
  // reaction 191:  C6H5 + H2 <=> C6H6 + H
  k_f = 0.05707 * exp((2.43) * logT - (3156.67814459301) * invT);
  qf[191] *= k_f;
  qr[191] *= k_f * exp(-(g_RT[6] - g_RT[9] - g_RT[19] + g_RT[35]));
  // reaction 192:  C6H5 + O2 <=> C6H5O + O
  k_f = 26000000 * exp(-(3079.68599472488) * invT);
  qf[192] *= k_f;
  qr[192] *= k_f * exp(-(g_RT[13] - g_RT[14] + g_RT[35] - g_RT[37]));
  // reaction 193:  C6H5 + O <=> C5H5 + CO
  k_f = 100000000;
  qf[193] *= k_f;
  qr[193] *= k_f * exp(-(-g_RT[8] + g_RT[14] - g_RT[34] + g_RT[35]));
  // reaction 194:  C6H5 + OH <=> C6H5O + H
  k_f = 30000000;
  qf[194] *= k_f;
  qr[194] *= k_f * exp(-(g_RT[15] - g_RT[19] + g_RT[35] - g_RT[37]));
  // reaction 195:  C6H5 + HO2 <=> C6H6 + O2
  k_f = 1000000;
  qf[195] *= k_f;
  qr[195] *= k_f * exp(-(-g_RT[9] - g_RT[13] + g_RT[16] + g_RT[35]));
  // reaction 196:  C6H5 + CH4 <=> C6H6 + CH3
  k_f = 3.89e-09 * exp((4.57) * logT - (2644.90679546961) * invT);
  qf[196] *= k_f;
  qr[196] *= k_f * exp(-(g_RT[2] - g_RT[9] - g_RT[12] + g_RT[35]));
  // reaction 197:  C6H5O <=> C5H5 + CO
  k_f = 3.76e+54 * exp((-12.06) * logT - (36634.1732705836) * invT);
  qf[197] *= k_f;
  qr[197] *= k_f * exp(-(-g_RT[8] - g_RT[34] + g_RT[37])) * (refCinv);
  // reaction 198:  C5H5 + O <=> C5H4O + H
  k_f = 58100000 * exp((-0.02) * logT - (10.0643333160944) * invT);
  qf[198] *= k_f;
  qr[198] *= k_f * exp(-(g_RT[14] - g_RT[19] - g_RT[33] + g_RT[34]));
  // reaction 199:  C5H5 + O2 <=> C5H4O + OH
  k_f = 1800000 * exp((0.08) * logT - (9057.89998448495) * invT);
  qf[199] *= k_f;
  qr[199] *= k_f * exp(-(g_RT[13] - g_RT[15] - g_RT[33] + g_RT[34]));
  // reaction 200:  C5H4O <=> 2 C2H2 + CO
  k_f = 6.2e+41 * exp((-7.87) * logT - (49667.4849149258) * invT);
  qf[200] *= k_f;
  qr[200] *= k_f * exp(-(-g_RT[8] - 2.000000 * g_RT[10] + g_RT[33])) *
             ((refCinv * refCinv));
  // reaction 201:  C5H4O + O <=> C3H3 + CO + HCO
  k_f = 620 * exp((1.45) * logT - (-431.75989926045) * invT);
  qf[201] *= k_f;
  qr[201] *= k_f *
             exp(-(-g_RT[8] + g_RT[14] - g_RT[22] - g_RT[31] + g_RT[33])) *
             (refCinv);
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
productionRate(amrex::Real* wdot, const amrex::Real* sc, const amrex::Real T)
{
  const amrex::Real invT = 1.0 / T;
  const amrex::Real logT = log(T);

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;

  for (int i = 0; i < 41; ++i) {
    wdot[i] = 0.0;
  }

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 41; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[41];
  gibbs(g_RT, T);

  {
    // reaction 16:  H + O2 (+M) <=> HO2 (+M)
    const amrex::Real k_f = 5116000 * exp((0.44) * logT);
    amrex::Real Corr = mixture + (0.0900000000000001) * sc[8] +
                       (-0.15) * sc[13] + (10.89) * sc[17] + (1.18) * sc[25];
    const amrex::Real redP = Corr / k_f * 63280000 * exp(-1.4 * logT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(0.5 * exp(-T * 1e+30) + 0.5 * exp(-T * 1e-30) + 0.0);
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[13] * sc[19]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[13] - g_RT[16] + g_RT[19])) * (refC) * (sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[16] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 18:  2 OH (+M) <=> H2O2 (+M)
    const amrex::Real k_f = 111000000 * exp((-0.37) * logT);
    amrex::Real Corr =
      mixture + sc[6] + (0.75) * sc[8] + (5) * sc[17] + (2.6) * sc[25];
    const amrex::Real redP =
      Corr / k_f * 201000 * exp(-0.584 * logT - -1153.87581469022 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2654 * exp(-T * 0.0106382978723404) +
      0.7346 * exp(-T * 0.000569476082004556) + exp(-5182 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[15] * sc[15]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[15] - g_RT[18])) * (refC) * (sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= 2.000000 * qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 42:  CO + H2 (+M) <=> CH2O (+M)
    const amrex::Real k_f = 43 * exp((1.5) * logT - (40056.0465980557) * invT);
    amrex::Real Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] +
                       (5) * sc[17] + sc[25];
    const amrex::Real redP =
      Corr / k_f * 5.07e+15 * exp(-3.42 * logT - 42446.3257606281 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0679999999999999 * exp(-T * 0.0050761421319797) +
      0.932 * exp(-T * 0.000649350649350649) + exp(-10300 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[6] * sc[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[6] + g_RT[8] - g_RT[23])) * (refC) * (sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[8] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 43:  H + HCO (+M) <=> CH2O (+M)
    const amrex::Real k_f =
      1090000 * exp((0.48) * logT - (-130.836333109227) * invT);
    amrex::Real Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] +
                       (5) * sc[17] + sc[25];
    const amrex::Real redP =
      Corr / k_f * 1350000000000 * exp(-2.57 * logT - 717.083748771726 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2176 * exp(-T * 0.003690036900369) +
      0.7824 * exp(-T * 0.000362976406533575) + exp(-6570 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[19] * sc[22]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[19] + g_RT[22] - g_RT[23])) * (refC) * (sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[19] -= qdot;
    wdot[22] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 44:  CH2 + H (+M) <=> CH3 (+M)
    const amrex::Real k_f = 25000000000 * exp((-0.8) * logT);
    amrex::Real Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] +
                       (5) * sc[17] + sc[25];
    const amrex::Real redP =
      Corr / k_f * 3.2e+15 * exp(-3.14 * logT - 618.956498939805 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.32 * exp(-T * 0.0128205128205128) +
      0.68 * exp(-T * 0.00050125313283208) + exp(-5590 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[19] * sc[20]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[12] + g_RT[19] + g_RT[20])) * (refC) * (sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[19] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 50:  CH2 + CO (+M) <=> CH2CO (+M)
    const amrex::Real k_f =
      810000 * exp((0.5) * logT - (2269.50716277929) * invT);
    amrex::Real Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] +
                       (5) * sc[17] + sc[25];
    const amrex::Real redP =
      Corr / k_f * 2.69e+21 * exp(-5.11 * logT - 3570.32224388449 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4093 * exp(-T * 0.00363636363636364) +
      0.5907 * exp(-T * 0.000815660685154976) + exp(-5185 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc[20]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] + g_RT[20] - g_RT[29])) * (refC) * (sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[20] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 61:  CH2O + H (+M) <=> CH3O (+M)
    const amrex::Real k_f =
      540000 * exp((0.454) * logT - (1308.36333109227) * invT);
    amrex::Real Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] +
                       (5) * sc[17] + sc[25];
    const amrex::Real redP =
      Corr / k_f * 2.2e+18 * exp(-4.8 * logT - 2797.88466187424 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.242 * exp(-T * 0.0106382978723404) +
      0.758 * exp(-T * 0.000643086816720257) + exp(-4200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[19] * sc[23]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[19] + g_RT[23] - g_RT[24])) * (refC) * (sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[19] -= qdot;
    wdot[23] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 67:  CH3 + H (+M) <=> CH4 (+M)
    const amrex::Real k_f =
      12700000000 * exp((-0.63) * logT - (192.731983003208) * invT);
    amrex::Real Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] +
                       (5) * sc[17] + sc[25];
    const amrex::Real redP =
      Corr / k_f * 2.477e+21 * exp(-4.76 * logT - 1227.84866456352 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.217 * exp(-T * 0.0135135135135135) +
      0.783 * exp(-T * 0.000340020401224073) + exp(-6964 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[12] * sc[19]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[2] + g_RT[12] + g_RT[19])) * (refC) * (sc[2]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[12] -= qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 79:  2 CH3 (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      21200000000 * exp((-0.97) * logT - (311.994332798926) * invT);
    amrex::Real Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] +
                       (5) * sc[17] + sc[25];
    const amrex::Real redP =
      Corr / k_f * 1.77e+38 * exp(-9.67 * logT - 3130.00766130536 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4675 * exp(-T * 0.00662251655629139) +
      0.5325 * exp(-T * 0.000963391136801541) + exp(-4970 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[12] * sc[12]));
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[7] + 2.000000 * g_RT[12])) * (refC) * (sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[12] -= 2.000000 * qdot;
  }

  {
    // reaction 95:  C2H3 (+M) <=> C2H2 + H (+M)
    const amrex::Real k_f =
      386000000 * exp((1.62) * logT - (18643.2716780664) * invT);
    amrex::Real Corr = mixture + (2) * sc[1] + sc[2] + sc[6] + (2) * sc[7] +
                       (0.5) * sc[8] + (2) * sc[10] + (5) * sc[17] + sc[25];
    const amrex::Real redP =
      Corr / k_f * 2.565e+21 * exp(-3.4 * logT - 18014.5125184767 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      -0.9816 * exp(-T * 0.000185745862510913) +
      1.9816 * exp(-T * 0.232926488400261) + exp(0.0795 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[26]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[10] - g_RT[19] + g_RT[26])) * (refCinv) *
                           (sc[10] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[19] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 104:  CH2CO + H (+M) <=> CH2CHO (+M)
    const amrex::Real k_f =
      330000000 * exp((-0.06) * logT - (4277.34165934012) * invT);
    amrex::Real Corr = mixture + (2) * sc[1] + sc[2] + sc[6] + (2) * sc[7] +
                       (0.5) * sc[8] + (2) * sc[10] + (5) * sc[17] + sc[25];
    const amrex::Real redP =
      Corr / k_f * 3.8e+29 * exp(-7.64 * logT - 5988.27832307616 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.663 * exp(-T * 0.000585823081429408) + 0.337 * exp(-T * 0.0003125) +
      exp(-4131 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[19] * sc[29]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[19] + g_RT[29] - g_RT[30])) * (refC) * (sc[30]);
    const amrex::Real qdot = qf - qr;
    wdot[19] -= qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 110:  C2H3 + H (+M) <=> C2H4 (+M)
    const amrex::Real k_f =
      6080000 * exp((0.27) * logT - (140.900666425322) * invT);
    amrex::Real Corr = mixture + (2) * sc[1] + sc[2] + sc[6] + (2) * sc[7] +
                       (0.5) * sc[8] + (2) * sc[10] + (5) * sc[17] + sc[25];
    const amrex::Real redP =
      Corr / k_f * 1.4e+18 * exp(-3.86 * logT - 1670.67933047167 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-T * 0.00481927710843374) +
      0.782 * exp(-T * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[19] * sc[26]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[1] + g_RT[19] + g_RT[26])) * (refC) * (sc[1]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[19] -= qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 118:  C2H3 + CH3 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 25000000;
    amrex::Real Corr = mixture + (2) * sc[1] + sc[2] + sc[6] + (2) * sc[7] +
                       (0.5) * sc[8] + (2) * sc[10] + (5) * sc[17] + sc[25];
    const amrex::Real redP =
      Corr / k_f * 4.27e+46 * exp(-11.94 * logT - 4916.32618157895 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.825 * exp(-T * 0.000745934656124124) +
      0.175 * exp(-T * 1.66666666666667e-05) + exp(-10139.8 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[12] * sc[26]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[3] + g_RT[12] + g_RT[26])) * (refC) * (sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[12] -= qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 126:  C2H4 + H (+M) <=> C2H5 (+M)
    const amrex::Real k_f =
      1370 * exp((1.463) * logT - (681.858582165395) * invT);
    amrex::Real Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] +
                       (5) * sc[17] + sc[25];
    const amrex::Real redP =
      Corr / k_f * 2.9e+27 * exp(-6.642 * logT - 2903.05694502743 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      -0.569 * exp(-T * -0.000109325461900077) +
      1.569 * exp(-T * 0.00334448160535117) + exp(-152.4 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[19]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[19] - g_RT[27])) * (refC) * (sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 137:  C2H5 + H (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      521000000000 * exp((-0.99) * logT - (795.082331971457) * invT);
    amrex::Real Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] +
                       (5) * sc[17] + sc[25];
    const amrex::Real redP =
      Corr / k_f * 1.99e+29 * exp(-7.08 * logT - 3364.00341090455 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.1578 * exp(-T * 0.008) + 0.8422 * exp(-T * 0.000450653447498873) +
      exp(-6882 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[19] * sc[27]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[7] + g_RT[19] + g_RT[27])) * (refC) * (sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[19] -= qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 141:  C2H3 + C2H5 (+M) <=> C4H81 (+M)
    const amrex::Real k_f = 15000000;
    amrex::Real Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] +
                       (5) * sc[17] + sc[25];
    const amrex::Real redP =
      Corr / k_f * 1.55e+44 * exp(-11.79 * logT - 4521.1501339225 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.802 * exp(-T * 0.000439000834101585) +
      0.198 * exp(-T * 1.66666666666667e-05) + exp(-5723.2 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[26] * sc[27]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[5] + g_RT[26] + g_RT[27])) * (refC) * (sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[26] -= qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 151:  H + aC3H5 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 200000000;
    amrex::Real Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] +
                       (5) * sc[17] + sc[25];
    const amrex::Real redP =
      Corr / k_f * 1.33e+48 * exp(-12 * logT - 3003.09641818941 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.98 * exp(-T * 0.000911909538573774) +
      0.02 * exp(-T * 0.000911909538573774) + exp(-6859.5 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[19] * sc[32]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[3] + g_RT[19] + g_RT[32])) * (refC) * (sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[19] -= qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 155:  CH3 + aC3H5 (+M) <=> C4H81 (+M)
    const amrex::Real k_f =
      100000000 * exp((-0.32) * logT - (-131.993731440578) * invT);
    amrex::Real Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] +
                       (5) * sc[17] + sc[25];
    const amrex::Real redP =
      Corr / k_f * 3.91e+48 * exp(-12.81 * logT - 3145.1041612795 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.896 * exp(-T * 0.00062266500622665) +
      0.104 * exp(-T * 1.66666666666667e-05) + exp(-6118.4 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[12] * sc[32]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[5] + g_RT[12] + g_RT[32])) * (refC) * (sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[12] -= qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 173:  C6H5CH2 + H (+M) <=> C6H5CH3 (+M)
    const amrex::Real k_f = 100000000;
    amrex::Real Corr = mixture + sc[2] + sc[6] + (2) * sc[7] + (0.5) * sc[8] +
                       (5) * sc[17] + sc[25];
    const amrex::Real redP =
      Corr / k_f * 1.1e+91 * exp(-24.63 * logT - 7341.93115409086 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.569 * exp(-T * 0.00261096605744125) +
      0.431 * exp(-T * 0.00657894736842105) + exp(-4730 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[19] * sc[36]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[11] + g_RT[19] + g_RT[36])) * (refC) * (sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[19] -= qdot;
    wdot[36] -= qdot;
  }

  {
    // reaction 187:  C6H5 + H (+M) <=> C6H6 (+M)
    const amrex::Real k_f = 100000000;
    amrex::Real Corr =
      mixture + sc[2] + sc[6] + (0.5) * sc[8] + (5) * sc[17] + sc[25];
    const amrex::Real redP =
      Corr / k_f * 6.6e+63 * exp(-16.3 * logT - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-T * 0.0017096939647803) + exp(-6113 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[19] * sc[35]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[9] + g_RT[19] + g_RT[35])) * (refC) * (sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[19] -= qdot;
    wdot[35] -= qdot;
  }

  {
    // reaction 30:  CO + O (+M) <=> CO2 (+M)
    const amrex::Real k_f = 13620 * exp(-(1199.66853127845) * invT);
    amrex::Real Corr =
      mixture + sc[6] + (0.75) * sc[8] + (11) * sc[17] + (2.6) * sc[25];
    const amrex::Real redP =
      Corr / k_f * 1173000000000 * exp(-2.79 * logT - 2108.98104638758 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[8] * sc[14]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] + g_RT[14] - g_RT[25])) * (refC) * (sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[14] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 11:  2 H + M <=> H2 + M
    const amrex::Real k_f = 1780000 * exp((-1) * logT);
    const amrex::Real Corr =
      mixture + (-1) * sc[6] + (-1) * sc[17] + (-1) * sc[25];
    const amrex::Real qf = Corr * k_f * ((sc[19] * sc[19]));
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[6] + 2.000000 * g_RT[19])) * (refC) * (sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[19] -= 2.000000 * qdot;
  }

  {
    // reaction 12:  2 H + H2O <=> H2 + H2O
    const amrex::Real k_f = 56240000 * exp((-1.25) * logT);
    const amrex::Real qf = k_f * (sc[17] * (sc[19] * sc[19]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[6] + 2.000000 * g_RT[19])) * (refC) * (sc[6] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[19] -= 2.000000 * qdot;
  }

  {
    // reaction 13:  H + OH + M <=> H2O + M
    const amrex::Real k_f = 44000000000 * exp((-2) * logT);
    const amrex::Real Corr =
      mixture + sc[6] + (0.75) * sc[8] + (5.3) * sc[17] + (2.6) * sc[25];
    const amrex::Real qf = Corr * k_f * (sc[15] * sc[19]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[15] - g_RT[17] + g_RT[19])) * (refC) * (sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 14:  H + O + M <=> OH + M
    const amrex::Real k_f = 9428000 * exp((-1) * logT);
    const amrex::Real Corr =
      mixture + sc[6] + (0.75) * sc[8] + (11) * sc[17] + (2.6) * sc[25];
    const amrex::Real qf = Corr * k_f * (sc[14] * sc[19]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[14] - g_RT[15] + g_RT[19])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[15] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 15:  2 O + M <=> O2 + M
    const amrex::Real k_f = 120000 * exp((-1) * logT);
    const amrex::Real Corr = mixture + (1.4) * sc[6] + (0.75) * sc[8] +
                             (14.4) * sc[17] + (2.6) * sc[25];
    const amrex::Real qf = Corr * k_f * ((sc[14] * sc[14]));
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[13] + 2.000000 * g_RT[14])) * (refC) * (sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[14] -= 2.000000 * qdot;
  }

  {
    // reaction 39:  HCO + M <=> CO + H + M
    const amrex::Real k_f =
      187000000000 * exp((-1) * logT - (8554.68331868023) * invT);
    const amrex::Real Corr =
      mixture + sc[6] + (0.75) * sc[8] + (-1) * sc[17] + (2.6) * sc[25];
    const amrex::Real qf = Corr * k_f * (sc[22]);
    const amrex::Real qr = Corr * k_f * exp(-(-g_RT[8] - g_RT[19] + g_RT[22])) *
                           (refCinv) * (sc[8] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[19] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 40:  HCO + H2O <=> CO + H + H2O
    const amrex::Real k_f =
      2244000000000 * exp((-1) * logT - (8554.68331868023) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[22]);
    const amrex::Real qr = k_f * exp(-(-g_RT[8] - g_RT[19] + g_RT[22])) *
                           (refCinv) * (sc[8] * sc[17] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[19] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 0:  POSF10325 => 1.74268 C2H4 + 0.819058 C3H6 + 0.261401 C4H81 +
    // 0.163333 C6H5CH3 + 0.17 C6H6 + 1.5 CH3 + 0.5 H + 0.0871338 iC4H8
    const amrex::Real k_f =
      1.53e+27 * exp((-2.58) * logT - (44130.5919410765) * invT);
    const amrex::Real qf = k_f * (sc[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += 1.742676 * qdot;
    wdot[3] += 0.819058 * qdot;
    wdot[4] += 0.087134 * qdot;
    wdot[5] += 0.261401 * qdot;
    wdot[9] += 0.170000 * qdot;
    wdot[11] += 0.163333 * qdot;
    wdot[12] += 1.500000 * qdot;
    wdot[19] += 0.500000 * qdot;
  }

  {
    // reaction 1:  H + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186
    // C4H81 + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + H2
    // + 0.0797288 iC4H8
    const amrex::Real k_f =
      7.66e-08 * exp((4.76) * logT - (651.615260550532) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += 1.594576 * qdot;
    wdot[2] += 0.450000 * qdot;
    wdot[3] += 0.749451 * qdot;
    wdot[4] += 0.079729 * qdot;
    wdot[5] += 0.239186 * qdot;
    wdot[6] += qdot;
    wdot[9] += 0.246500 * qdot;
    wdot[11] += 0.236833 * qdot;
    wdot[12] += 0.700000 * qdot;
    wdot[19] += 0.300000 * qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 2:  CH3 + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186
    // C4H81 + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 1.45 CH4 + 0.3 H +
    // 0.0797288 iC4H8
    const amrex::Real k_f =
      3.17e-13 * exp((5.95) * logT - (2892.69068171185) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += 1.594576 * qdot;
    wdot[2] += 1.450000 * qdot;
    wdot[3] += 0.749451 * qdot;
    wdot[4] += 0.079729 * qdot;
    wdot[5] += 0.239186 * qdot;
    wdot[9] += 0.246500 * qdot;
    wdot[11] += 0.236833 * qdot;
    wdot[12] -= qdot;
    wdot[12] += 0.700000 * qdot;
    wdot[19] += 0.300000 * qdot;
  }

  {
    // reaction 3:  OH + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186
    // C4H81 + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + H2O
    // + 0.0797288 iC4H8
    const amrex::Real k_f =
      2960 * exp((1.02) * logT - (107.285793149566) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += 1.594576 * qdot;
    wdot[2] += 0.450000 * qdot;
    wdot[3] += 0.749451 * qdot;
    wdot[4] += 0.079729 * qdot;
    wdot[5] += 0.239186 * qdot;
    wdot[9] += 0.246500 * qdot;
    wdot[11] += 0.236833 * qdot;
    wdot[12] += 0.700000 * qdot;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[19] += 0.300000 * qdot;
  }

  {
    // reaction 4:  O2 + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186
    // C4H81 + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + HO2
    // + 0.0797288 iC4H8
    const amrex::Real k_f =
      1780000000 * exp((0.06) * logT - (22409.5464916153) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += 1.594576 * qdot;
    wdot[2] += 0.450000 * qdot;
    wdot[3] += 0.749451 * qdot;
    wdot[4] += 0.079729 * qdot;
    wdot[5] += 0.239186 * qdot;
    wdot[9] += 0.246500 * qdot;
    wdot[11] += 0.236833 * qdot;
    wdot[12] += 0.700000 * qdot;
    wdot[13] -= qdot;
    wdot[16] += qdot;
    wdot[19] += 0.300000 * qdot;
  }

  {
    // reaction 5:  HO2 + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186
    // C4H81 + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H +
    // H2O2 + 0.0797288 iC4H8
    const amrex::Real k_f =
      0.0698 * exp((2.94) * logT - (6446.20548895846) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += 1.594576 * qdot;
    wdot[2] += 0.450000 * qdot;
    wdot[3] += 0.749451 * qdot;
    wdot[4] += 0.079729 * qdot;
    wdot[5] += 0.239186 * qdot;
    wdot[9] += 0.246500 * qdot;
    wdot[11] += 0.236833 * qdot;
    wdot[12] += 0.700000 * qdot;
    wdot[16] -= qdot;
    wdot[18] += qdot;
    wdot[19] += 0.300000 * qdot;
  }

  {
    // reaction 6:  O + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186
    // C4H81 + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + OH
    // + 0.0797288 iC4H8
    const amrex::Real k_f =
      8.94e-05 * exp((3.86) * logT - (385.011071007191) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += 1.594576 * qdot;
    wdot[2] += 0.450000 * qdot;
    wdot[3] += 0.749451 * qdot;
    wdot[4] += 0.079729 * qdot;
    wdot[5] += 0.239186 * qdot;
    wdot[9] += 0.246500 * qdot;
    wdot[11] += 0.236833 * qdot;
    wdot[12] += 0.700000 * qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
    wdot[19] += 0.300000 * qdot;
  }

  {
    // reaction 7:  H + O2 <=> O + OH
    const amrex::Real k_f =
      26440000000 * exp((-0.6707) * logT - (8575.31520197823) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[13] - g_RT[14] - g_RT[15] + g_RT[19])) *
                           (sc[14] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[14] += qdot;
    wdot[15] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 8:  H2 + O <=> H + OH
    const amrex::Real k_f =
      0.04589 * exp((2.7) * logT - (3150.13632793755) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] + g_RT[14] - g_RT[15] - g_RT[19])) *
                           (sc[15] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 9:  H2 + OH <=> H + H2O
    const amrex::Real k_f =
      173.4 * exp((1.51) * logT - (1726.03316371019) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] + g_RT[15] - g_RT[17] - g_RT[19])) *
                           (sc[17] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 10:  2 OH <=> H2O + O
    const amrex::Real k_f =
      0.03973 * exp((2.4) * logT - (-1061.78716484796) * invT);
    const amrex::Real qf = k_f * ((sc[15] * sc[15]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[14] + 2.000000 * g_RT[15] - g_RT[17])) *
                           (sc[14] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[15] -= 2.000000 * qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 17:  H2 + O2 <=> H + HO2
    const amrex::Real k_f =
      0.5916 * exp((2.433) * logT - (26923.0980538841) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] + g_RT[13] - g_RT[16] - g_RT[19])) *
                           (sc[16] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[13] -= qdot;
    wdot[16] += qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 19:  H + HO2 <=> 2 OH
    const amrex::Real k_f = 74850000 * exp(-(148.448916412392) * invT);
    const amrex::Real qf = k_f * (sc[16] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(-2.000000 * g_RT[15] + g_RT[16] + g_RT[19])) *
                           ((sc[15] * sc[15]));
    const amrex::Real qdot = qf - qr;
    wdot[15] += 2.000000 * qdot;
    wdot[16] -= qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 20:  HO2 + O <=> O2 + OH
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[14] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[13] + g_RT[14] - g_RT[15] + g_RT[16])) *
                           (sc[13] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 21:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 130000 * exp(-(-820.243165261693) * invT);
    const amrex::Real qf = k_f * ((sc[16] * sc[16]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[13] + 2.000000 * g_RT[16] - g_RT[18])) *
                           (sc[13] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[16] -= 2.000000 * qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 22:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 365800000 * exp(-(6038.59998965664) * invT);
    const amrex::Real qf = k_f * ((sc[16] * sc[16]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[13] + 2.000000 * g_RT[16] - g_RT[18])) *
                           (sc[13] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[16] -= 2.000000 * qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 23:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f =
      1410000000000 * exp((-1.76) * logT - (30.1929999482832) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[13] + g_RT[15] + g_RT[16] - g_RT[17])) *
                           (sc[13] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[15] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 24:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f =
      5.37e+64 * exp((-16.72) * logT - (16555.8283049753) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[13] + g_RT[15] + g_RT[16] - g_RT[17])) *
                           (sc[13] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[15] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 25:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f =
      2510000 * exp((2) * logT - (20128.6666321888) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[13] + g_RT[15] + g_RT[16] - g_RT[17])) *
                           (sc[13] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[15] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 26:  H + H2O2 <=> H2 + HO2
    const amrex::Real k_f = 6.05 * exp((2) * logT - (2616.72666218454) * invT);
    const amrex::Real qf = k_f * (sc[18] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] - g_RT[16] + g_RT[18] + g_RT[19])) *
                           (sc[6] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[16] += qdot;
    wdot[18] -= qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 27:  H + H2O2 <=> H2O + OH
    const amrex::Real k_f = 24100000 * exp(-(1997.77016324474) * invT);
    const amrex::Real qf = k_f * (sc[18] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[15] - g_RT[17] + g_RT[18] + g_RT[19])) *
                           (sc[15] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[17] += qdot;
    wdot[18] -= qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 28:  H2O2 + O <=> HO2 + OH
    const amrex::Real k_f = 9.63 * exp((2) * logT - (1997.77016324474) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[18]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[14] - g_RT[15] - g_RT[16] + g_RT[18])) *
                           (sc[15] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[15] += qdot;
    wdot[16] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 29:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f =
      2.67e+35 * exp((-7) * logT - (18920.9466342575) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[18]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[15] - g_RT[16] - g_RT[17] + g_RT[18])) *
                           (sc[16] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[16] += qdot;
    wdot[17] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 31:  CO + OH <=> CO2 + H
    const amrex::Real k_f =
      0.07046 * exp((2.053) * logT - (-178.979071526765) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] + g_RT[15] - g_RT[19] - g_RT[25])) *
                           (sc[19] * sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[15] -= qdot;
    wdot[19] += qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 32:  CO + OH <=> CO2 + H
    const amrex::Real k_f =
      5757000 * exp((-0.664) * logT - (166.98238621398) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] + g_RT[15] - g_RT[19] - g_RT[25])) *
                           (sc[19] * sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[15] -= qdot;
    wdot[19] += qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 33:  CO + O2 <=> CO2 + O
    const amrex::Real k_f = 1119000 * exp(-(24003.4349588851) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] + g_RT[13] - g_RT[14] - g_RT[25])) *
                           (sc[14] * sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[13] -= qdot;
    wdot[14] += qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 34:  CO + HO2 <=> CO2 + OH
    const amrex::Real k_f =
      0.157 * exp((2.18) * logT - (9029.02038003442) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[15] + g_RT[16] - g_RT[25])) *
                           (sc[15] * sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[15] += qdot;
    wdot[16] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 35:  H + HCO <=> CO + H2
    const amrex::Real k_f = 120000000;
    const amrex::Real qf = k_f * (sc[19] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[6] - g_RT[8] + g_RT[19] + g_RT[22])) * (sc[6] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[8] += qdot;
    wdot[19] -= qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 36:  HCO + O <=> CO + OH
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[14] * sc[22]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[8] + g_RT[14] - g_RT[15] + g_RT[22])) *
                           (sc[8] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 37:  HCO + O <=> CO2 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[14] * sc[22]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[14] - g_RT[19] + g_RT[22] - g_RT[25])) *
                           (sc[19] * sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[19] += qdot;
    wdot[22] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 38:  HCO + OH <=> CO + H2O
    const amrex::Real k_f = 30200000;
    const amrex::Real qf = k_f * (sc[15] * sc[22]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[8] + g_RT[15] - g_RT[17] + g_RT[22])) *
                           (sc[8] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 41:  HCO + O2 <=> CO + HO2
    const amrex::Real k_f =
      12040 * exp((0.807) * logT - (-365.838516040031) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[22]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[8] + g_RT[13] - g_RT[16] + g_RT[22])) *
                           (sc[8] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[13] -= qdot;
    wdot[16] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 45:  CH2 + O <=> H + HCO
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[14] * sc[20]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[14] - g_RT[19] + g_RT[20] - g_RT[22])) *
                           (sc[19] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 46:  CH2 + OH <=> CH2O + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[15] * sc[20]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[15] - g_RT[19] + g_RT[20] - g_RT[23])) *
                           (sc[19] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 47:  CH2 + H2 <=> CH3 + H
    const amrex::Real k_f = 0.5 * exp((2) * logT - (3638.25649376812) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[20]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[12] - g_RT[19] + g_RT[20])) *
                           (sc[12] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[12] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 48:  CH2 + O2 <=> HCO + OH
    const amrex::Real k_f = 10600000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[20]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[13] - g_RT[15] + g_RT[20] - g_RT[22])) *
                           (sc[15] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[20] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 49:  CH2 + O2 <=> CO2 + 2 H
    const amrex::Real k_f = 2640000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[13] - 2.000000 * g_RT[19] + g_RT[20] - g_RT[25])) *
      (refCinv) * ((sc[19] * sc[19]) * sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[19] += 2.000000 * qdot;
    wdot[20] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 51:  CH2* + N2 <=> CH2 + N2
    const amrex::Real k_f = 15000000 * exp(-(301.929999482832) * invT);
    const amrex::Real qf = k_f * (sc[21] * sc[40]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[20] + g_RT[21] + g_RT[40] - g_RT[40])) *
                           (sc[20] * sc[40]);
    const amrex::Real qdot = qf - qr;
    wdot[20] += qdot;
    wdot[21] -= qdot;
    wdot[40] -= qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 52:  CH2* + O <=> CO + H2
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[14] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[6] - g_RT[8] + g_RT[14] + g_RT[21])) * (sc[6] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[8] += qdot;
    wdot[14] -= qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 53:  CH2* + OH <=> CH2O + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[15] * sc[21]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[15] - g_RT[19] + g_RT[21] - g_RT[23])) *
                           (sc[19] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[19] += qdot;
    wdot[21] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 54:  CH2* + H2 <=> CH3 + H
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[6] * sc[21]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[12] - g_RT[19] + g_RT[21])) *
                           (sc[12] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[12] += qdot;
    wdot[19] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 55:  CH2* + O2 <=> CO + H + OH
    const amrex::Real k_f = 28000000;
    const amrex::Real qf = k_f * (sc[13] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[8] + g_RT[13] - g_RT[15] - g_RT[19] + g_RT[21])) *
      (refCinv) * (sc[8] * sc[15] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[19] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 56:  CH2* + O2 <=> CO + H2O
    const amrex::Real k_f = 12000000;
    const amrex::Real qf = k_f * (sc[13] * sc[21]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[8] + g_RT[13] - g_RT[17] + g_RT[21])) *
                           (sc[8] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[13] -= qdot;
    wdot[17] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 57:  CH2* + H2O <=> CH2 + H2O
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[17] * sc[21]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[17] - g_RT[17] - g_RT[20] + g_RT[21])) *
                           (sc[17] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[17] -= qdot;
    wdot[17] += qdot;
    wdot[20] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 58:  CH2* + CO <=> CH2 + CO
    const amrex::Real k_f = 9000000;
    const amrex::Real qf = k_f * (sc[8] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[8] - g_RT[8] - g_RT[20] + g_RT[21])) * (sc[8] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[8] += qdot;
    wdot[20] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 59:  CH2* + CO2 <=> CH2 + CO2
    const amrex::Real k_f = 7000000;
    const amrex::Real qf = k_f * (sc[21] * sc[25]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[20] + g_RT[21] + g_RT[25] - g_RT[25])) *
                           (sc[20] * sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[20] += qdot;
    wdot[21] -= qdot;
    wdot[25] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 60:  CH2* + CO2 <=> CH2O + CO
    const amrex::Real k_f = 14000000;
    const amrex::Real qf = k_f * (sc[21] * sc[25]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[8] + g_RT[21] - g_RT[23] + g_RT[25])) *
                           (sc[8] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[21] -= qdot;
    wdot[23] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 62:  CH2O + H <=> H2 + HCO
    const amrex::Real k_f =
      23000 * exp((1.05) * logT - (1648.03458051046) * invT);
    const amrex::Real qf = k_f * (sc[19] * sc[23]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[19] - g_RT[22] + g_RT[23])) *
                           (sc[6] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[19] -= qdot;
    wdot[22] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 63:  CH2O + O <=> HCO + OH
    const amrex::Real k_f = 39000000 * exp(-(1781.38699694871) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[23]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[14] - g_RT[15] - g_RT[22] + g_RT[23])) *
                           (sc[15] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[15] += qdot;
    wdot[22] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 64:  CH2O + OH <=> H2O + HCO
    const amrex::Real k_f =
      3430 * exp((1.18) * logT - (-224.93784961471) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[23]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[15] - g_RT[17] - g_RT[22] + g_RT[23])) *
                           (sc[17] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[22] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 65:  CH2O + O2 <=> HCO + HO2
    const amrex::Real k_f = 100000000 * exp(-(20128.6666321888) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[23]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[13] - g_RT[16] - g_RT[22] + g_RT[23])) *
                           (sc[16] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[16] += qdot;
    wdot[22] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 66:  CH2O + HO2 <=> H2O2 + HCO
    const amrex::Real k_f = 1000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[16] * sc[23]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[16] - g_RT[18] - g_RT[22] + g_RT[23])) *
                           (sc[18] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[16] -= qdot;
    wdot[18] += qdot;
    wdot[22] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 68:  CH3 + O <=> CH2O + H
    const amrex::Real k_f = 84300000;
    const amrex::Real qf = k_f * (sc[12] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[12] + g_RT[14] - g_RT[19] - g_RT[23])) *
                           (sc[19] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[12] -= qdot;
    wdot[14] -= qdot;
    wdot[19] += qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 69:  CH3 + OH <=> CH2 + H2O
    const amrex::Real k_f = 56 * exp((1.6) * logT - (2727.43432866158) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[12] + g_RT[15] - g_RT[17] - g_RT[20])) *
                           (sc[17] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[12] -= qdot;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 70:  CH3 + OH <=> CH2* + H2O
    const amrex::Real k_f = 25010000;
    const amrex::Real qf = k_f * (sc[12] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[12] + g_RT[15] - g_RT[17] - g_RT[21])) *
                           (sc[17] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[12] -= qdot;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 71:  CH3 + O2 <=> CH3O + O
    const amrex::Real k_f = 30830000 * exp(-(14492.6399751759) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[12] + g_RT[13] - g_RT[14] - g_RT[24])) *
                           (sc[14] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[12] -= qdot;
    wdot[13] -= qdot;
    wdot[14] += qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 72:  CH3 + O2 <=> CH2O + OH
    const amrex::Real k_f = 36000 * exp(-(4498.75699229419) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[12] + g_RT[13] - g_RT[15] - g_RT[23])) *
                           (sc[15] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[12] -= qdot;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 73:  CH3 + HO2 <=> CH4 + O2
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[12] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[12] - g_RT[13] + g_RT[16])) *
                           (sc[2] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[12] -= qdot;
    wdot[13] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 74:  CH3 + HO2 <=> CH3O + OH
    const amrex::Real k_f = 13400000;
    const amrex::Real qf = k_f * (sc[12] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[12] - g_RT[15] + g_RT[16] - g_RT[24])) *
                           (sc[15] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[12] -= qdot;
    wdot[15] += qdot;
    wdot[16] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 75:  CH3 + H2O2 <=> CH4 + HO2
    const amrex::Real k_f =
      0.0245 * exp((2.47) * logT - (2606.66232886845) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[18]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[12] - g_RT[16] + g_RT[18])) *
                           (sc[2] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[12] -= qdot;
    wdot[16] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 76:  CH3 + HCO <=> CH4 + CO
    const amrex::Real k_f = 8480000;
    const amrex::Real qf = k_f * (sc[12] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] - g_RT[8] + g_RT[12] + g_RT[22])) * (sc[2] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[8] += qdot;
    wdot[12] -= qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 77:  CH2O + CH3 <=> CH4 + HCO
    const amrex::Real k_f =
      0.00332 * exp((2.81) * logT - (2948.84966161566) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[23]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[12] - g_RT[22] + g_RT[23])) *
                           (sc[2] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[12] -= qdot;
    wdot[22] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 78:  CH2 + CH3 <=> C2H4 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[12] * sc[20]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[12] - g_RT[19] + g_RT[20])) *
                           (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[12] -= qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 80:  2 CH3 <=> C2H5 + H
    const amrex::Real k_f =
      4990000 * exp((0.1) * logT - (5334.09665753003) * invT);
    const amrex::Real qf = k_f * ((sc[12] * sc[12]));
    const amrex::Real qr = k_f *
                           exp(-(2.000000 * g_RT[12] - g_RT[19] - g_RT[27])) *
                           (sc[19] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[12] -= 2.000000 * qdot;
    wdot[19] += qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 81:  CH3 + HCCO <=> C2H4 + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[12] * sc[28]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] - g_RT[8] + g_RT[12] + g_RT[28])) * (sc[1] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] += qdot;
    wdot[12] -= qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 82:  CH3O + H <=> CH2O + H2
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[19] * sc[24]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[19] - g_RT[23] + g_RT[24])) *
                           (sc[6] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[19] -= qdot;
    wdot[23] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 83:  CH3O + H <=> CH3 + OH
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc[19] * sc[24]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[12] - g_RT[15] + g_RT[19] + g_RT[24])) *
                           (sc[12] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[15] += qdot;
    wdot[19] -= qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 84:  CH3O + H <=> CH2* + H2O
    const amrex::Real k_f = 16000000;
    const amrex::Real qf = k_f * (sc[19] * sc[24]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[17] + g_RT[19] - g_RT[21] + g_RT[24])) *
                           (sc[17] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[17] += qdot;
    wdot[19] -= qdot;
    wdot[21] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 85:  CH3O + OH <=> CH2O + H2O
    const amrex::Real k_f = 5000000;
    const amrex::Real qf = k_f * (sc[15] * sc[24]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[15] - g_RT[17] - g_RT[23] + g_RT[24])) *
                           (sc[17] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[23] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 86:  CH3O + O2 <=> CH2O + HO2
    const amrex::Real k_f =
      4.28e-19 * exp((7.6) * logT - (-1776.35483029066) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[24]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[13] - g_RT[16] - g_RT[23] + g_RT[24])) *
                           (sc[16] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[16] += qdot;
    wdot[23] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 87:  CH4 + H <=> CH3 + H2
    const amrex::Real k_f =
      660 * exp((1.62) * logT - (5454.86865732316) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[12] + g_RT[19])) * (sc[6] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[12] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 88:  CH4 + O <=> CH3 + OH
    const amrex::Real k_f =
      1020 * exp((1.5) * logT - (4327.66332592059) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[12] + g_RT[14] - g_RT[15])) *
                           (sc[12] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 89:  CH4 + OH <=> CH3 + H2O
    const amrex::Real k_f = 100 * exp((1.6) * logT - (1570.03599731073) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[12] + g_RT[15] - g_RT[17])) *
                           (sc[12] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
    wdot[15] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 90:  CH2 + CH4 <=> 2 CH3
    const amrex::Real k_f = 2.46 * exp((2) * logT - (4161.60182620503) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - 2.000000 * g_RT[12] + g_RT[20])) *
                           ((sc[12] * sc[12]));
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += 2.000000 * qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 91:  H + HCCO <=> CH2* + CO
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[19] * sc[28]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[8] + g_RT[19] - g_RT[21] + g_RT[28])) *
                           (sc[8] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[19] -= qdot;
    wdot[21] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 92:  HCCO + O <=> 2 CO + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[14] * sc[28]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[8] + g_RT[14] - g_RT[19] + g_RT[28])) *
      (refCinv) * ((sc[8] * sc[8]) * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += 2.000000 * qdot;
    wdot[14] -= qdot;
    wdot[19] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 93:  HCCO + O2 <=> 2 CO + OH
    const amrex::Real k_f = 1600000 * exp(-(429.747032597231) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[28]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[8] + g_RT[13] - g_RT[15] + g_RT[28])) *
      (refCinv) * ((sc[8] * sc[8]) * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += 2.000000 * qdot;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 94:  CH2 + HCCO <=> C2H3 + CO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[20] * sc[28]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[8] + g_RT[20] - g_RT[26] + g_RT[28])) *
                           (sc[8] * sc[26]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[20] -= qdot;
    wdot[26] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 96:  C2H2 + O <=> CH2 + CO
    const amrex::Real k_f = 4.08 * exp((2) * logT - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[8] + g_RT[10] + g_RT[14] - g_RT[20])) *
                           (sc[8] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[10] -= qdot;
    wdot[14] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 97:  C2H2 + O <=> H + HCCO
    const amrex::Real k_f = 16.32 * exp((2) * logT - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] + g_RT[14] - g_RT[19] - g_RT[28])) *
                           (sc[19] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[14] -= qdot;
    wdot[19] += qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 98:  C2H2 + OH <=> CH2CO + H
    const amrex::Real k_f =
      2.18e-10 * exp((4.5) * logT - (-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] + g_RT[15] - g_RT[19] - g_RT[29])) *
                           (sc[19] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[15] -= qdot;
    wdot[19] += qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 99:  C2H2 + OH <=> CH3 + CO
    const amrex::Real k_f =
      4.83e-10 * exp((4) * logT - (-1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[8] + g_RT[10] - g_RT[12] + g_RT[15])) *
                           (sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[10] -= qdot;
    wdot[12] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 100:  C2H2 + HCO <=> C2H3 + CO
    const amrex::Real k_f = 10 * exp((2) * logT - (3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[22]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[8] + g_RT[10] + g_RT[22] - g_RT[26])) *
                           (sc[8] * sc[26]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[10] -= qdot;
    wdot[22] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 101:  C2H2 + CH2 <=> C3H3 + H
    const amrex::Real k_f = 12000000 * exp(-(3331.29432762724) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[20]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[19] + g_RT[20] - g_RT[31])) *
                           (sc[19] * sc[31]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 102:  C2H2 + CH2* <=> C3H3 + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[10] * sc[21]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[10] - g_RT[19] + g_RT[21] - g_RT[31])) *
                           (sc[19] * sc[31]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[19] += qdot;
    wdot[21] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 103:  C2H2 + CH3 <=> aC3H5
    const amrex::Real k_f =
      2.68e+47 * exp((-12.82) * logT - (17979.9314692026) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[10] + g_RT[12] - g_RT[32])) * (refC) * (sc[32]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[12] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 105:  CH2CO + H <=> H2 + HCCO
    const amrex::Real k_f = 50000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[19] * sc[29]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[19] - g_RT[28] + g_RT[29])) *
                           (sc[6] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[19] -= qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 106:  CH2CO + H <=> CH3 + CO
    const amrex::Real k_f =
      1500 * exp((1.43) * logT - (1353.6528310147) * invT);
    const amrex::Real qf = k_f * (sc[19] * sc[29]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[8] - g_RT[12] + g_RT[19] + g_RT[29])) *
                           (sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[12] += qdot;
    wdot[19] -= qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 107:  CH2CO + O <=> HCCO + OH
    const amrex::Real k_f = 10000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[29]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[14] - g_RT[15] - g_RT[28] + g_RT[29])) *
                           (sc[15] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[15] += qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 108:  CH2CO + O <=> CH2 + CO2
    const amrex::Real k_f = 1750000 * exp(-(679.342498836372) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[29]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[14] - g_RT[20] - g_RT[25] + g_RT[29])) *
                           (sc[20] * sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[20] += qdot;
    wdot[25] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 109:  CH2CO + OH <=> H2O + HCCO
    const amrex::Real k_f = 7500000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[29]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[15] - g_RT[17] - g_RT[28] + g_RT[29])) *
                           (sc[17] * sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 111:  C2H3 + H <=> C2H2 + H2
    const amrex::Real k_f = 90000000;
    const amrex::Real qf = k_f * (sc[19] * sc[26]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] - g_RT[10] + g_RT[19] + g_RT[26])) *
                           (sc[6] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[10] += qdot;
    wdot[19] -= qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 112:  C2H3 + O <=> CH2CO + H
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[14] * sc[26]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[14] - g_RT[19] + g_RT[26] - g_RT[29])) *
                           (sc[19] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[19] += qdot;
    wdot[26] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 113:  C2H3 + O <=> CH3 + CO
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[14] * sc[26]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[8] - g_RT[12] + g_RT[14] + g_RT[26])) *
                           (sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[12] += qdot;
    wdot[14] -= qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 114:  C2H3 + OH <=> C2H2 + H2O
    const amrex::Real k_f = 30110000;
    const amrex::Real qf = k_f * (sc[15] * sc[26]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[10] + g_RT[15] - g_RT[17] + g_RT[26])) *
                           (sc[10] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 115:  C2H3 + O2 <=> C2H2 + HO2
    const amrex::Real k_f =
      1.34 * exp((1.61) * logT - (-192.93326966953) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[26]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[10] + g_RT[13] - g_RT[16] + g_RT[26])) *
                           (sc[10] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[13] -= qdot;
    wdot[16] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 116:  C2H3 + O2 <=> CH2CHO + O
    const amrex::Real k_f =
      300000 * exp((0.29) * logT - (5.53538332385192) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[26]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[13] - g_RT[14] + g_RT[26] - g_RT[30])) *
                           (sc[14] * sc[30]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[14] += qdot;
    wdot[26] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 117:  C2H3 + O2 <=> CH2O + HCO
    const amrex::Real k_f =
      46000000000 * exp((-1.39) * logT - (508.248832462767) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[26]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[13] - g_RT[22] - g_RT[23] + g_RT[26])) *
                           (sc[22] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[22] += qdot;
    wdot[23] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 119:  C2H3 + CH3 <=> H + aC3H5
    const amrex::Real k_f =
      1.5e+18 * exp((-2.83) * logT - (9368.88788395227) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[26]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[12] - g_RT[19] + g_RT[26] - g_RT[32])) *
                           (sc[19] * sc[32]);
    const amrex::Real qdot = qf - qr;
    wdot[12] -= qdot;
    wdot[19] += qdot;
    wdot[26] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 120:  CH2CHO <=> CH3 + CO
    const amrex::Real k_f =
      7.8e+41 * exp((-9.147) * logT - (23600.8616262414) * invT);
    const amrex::Real qf = k_f * (sc[30]);
    const amrex::Real qr = k_f * exp(-(-g_RT[8] - g_RT[12] + g_RT[30])) *
                           (refCinv) * (sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[12] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 121:  CH2CHO + H <=> CH3 + HCO
    const amrex::Real k_f = 90000000;
    const amrex::Real qf = k_f * (sc[19] * sc[30]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[12] + g_RT[19] - g_RT[22] + g_RT[30])) *
                           (sc[12] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[19] -= qdot;
    wdot[22] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 122:  CH2CHO + H <=> CH2CO + H2
    const amrex::Real k_f = 20000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[19] * sc[30]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[19] - g_RT[29] + g_RT[30])) *
                           (sc[6] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[19] -= qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 123:  CH2CHO + O <=> CH2CO + OH
    const amrex::Real k_f = 20000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[30]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[14] - g_RT[15] - g_RT[29] + g_RT[30])) *
                           (sc[15] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[15] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 124:  CH2CHO + OH <=> CH2CO + H2O
    const amrex::Real k_f = 10000000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[30]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[15] - g_RT[17] - g_RT[29] + g_RT[30])) *
                           (sc[17] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 125:  CH2CHO + O2 <=> CH2CO + HO2
    const amrex::Real k_f = 140000;
    const amrex::Real qf = k_f * (sc[13] * sc[30]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[13] - g_RT[16] - g_RT[29] + g_RT[30])) *
                           (sc[16] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[16] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 127:  C2H4 + H <=> C2H3 + H2
    const amrex::Real k_f =
      50.7 * exp((1.9) * logT - (6516.65582217112) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[6] + g_RT[19] - g_RT[26])) * (sc[6] * sc[26]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[6] += qdot;
    wdot[19] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 128:  C2H4 + O <=> C2H3 + OH
    const amrex::Real k_f =
      15.1 * exp((1.9) * logT - (1882.03033010965) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] + g_RT[14] - g_RT[15] - g_RT[26])) *
                           (sc[15] * sc[26]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 129:  C2H4 + O <=> CH3 + HCO
    const amrex::Real k_f =
      19.2 * exp((1.83) * logT - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[12] + g_RT[14] - g_RT[22])) *
                           (sc[12] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[12] += qdot;
    wdot[14] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 130:  C2H4 + O <=> CH2 + CH2O
    const amrex::Real k_f =
      0.384 * exp((1.83) * logT - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] + g_RT[14] - g_RT[20] - g_RT[23])) *
                           (sc[20] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[14] -= qdot;
    wdot[20] += qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 131:  C2H4 + OH <=> C2H3 + H2O
    const amrex::Real k_f = 3.6 * exp((2) * logT - (1258.0416645118) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] + g_RT[15] - g_RT[17] - g_RT[26])) *
                           (sc[17] * sc[26]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 132:  C2H4 + HCO <=> C2H5 + CO
    const amrex::Real k_f = 10 * exp((2) * logT - (4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] + g_RT[22] - g_RT[27])) * (sc[8] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[22] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 133:  C2H4 + CH2 <=> H + aC3H5
    const amrex::Real k_f = 20000000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[20]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[19] + g_RT[20] - g_RT[32])) *
                           (sc[19] * sc[32]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 134:  C2H4 + CH2* <=> H + aC3H5
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[1] * sc[21]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[19] + g_RT[21] - g_RT[32])) *
                           (sc[19] * sc[32]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] += qdot;
    wdot[21] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 135:  C2H4 + CH3 <=> C2H3 + CH4
    const amrex::Real k_f = 0.227 * exp((2) * logT - (4629.59332540342) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[12] - g_RT[26])) * (sc[2] * sc[26]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[12] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 136:  C2H4 + O2 <=> C2H3 + HO2
    const amrex::Real k_f = 42200000 * exp(-(30595.573280927) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] + g_RT[13] - g_RT[16] - g_RT[26])) *
                           (sc[16] * sc[26]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[13] -= qdot;
    wdot[16] += qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 138:  C2H5 + O <=> CH2O + CH3
    const amrex::Real k_f = 16040000;
    const amrex::Real qf = k_f * (sc[14] * sc[27]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[12] + g_RT[14] - g_RT[23] + g_RT[27])) *
                           (sc[12] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[14] -= qdot;
    wdot[23] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 139:  C2H5 + O2 <=> C2H4 + HO2
    const amrex::Real k_f = 20000;
    const amrex::Real qf = k_f * (sc[13] * sc[27]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[13] - g_RT[16] + g_RT[27])) *
                           (sc[1] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[13] -= qdot;
    wdot[16] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 140:  C2H5 + HO2 <=> CH2O + CH3 + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[16] * sc[27]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[12] - g_RT[15] + g_RT[16] - g_RT[23] + g_RT[27])) *
      (refCinv) * (sc[12] * sc[15] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[15] += qdot;
    wdot[16] -= qdot;
    wdot[23] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 142:  C2H6 + H <=> C2H5 + H2
    const amrex::Real k_f = 115 * exp((1.9) * logT - (3789.22149350954) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[6] + g_RT[7] + g_RT[19] - g_RT[27])) * (sc[6] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[19] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 143:  C2H6 + O <=> C2H5 + OH
    const amrex::Real k_f =
      89.8 * exp((1.92) * logT - (2863.30282842885) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[7] + g_RT[14] - g_RT[15] - g_RT[27])) *
                           (sc[15] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 144:  C2H6 + OH <=> C2H5 + H2O
    const amrex::Real k_f =
      3.54 * exp((2.12) * logT - (437.798499250106) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[7] + g_RT[15] - g_RT[17] - g_RT[27])) *
                           (sc[17] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 145:  C2H6 + CH3 <=> C2H5 + CH4
    const amrex::Real k_f =
      6.14 * exp((1.74) * logT - (5258.61415765932) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[7] + g_RT[12] - g_RT[27])) * (sc[2] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[7] -= qdot;
    wdot[12] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 146:  C3H3 + O2 <=> CH2CO + HCO
    const amrex::Real k_f = 30000 * exp(-(1443.22539752794) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[31]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[13] - g_RT[22] - g_RT[29] + g_RT[31])) *
                           (sc[22] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[22] += qdot;
    wdot[29] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 147:  C3H3 + HO2 <=> C2H3 + CO + OH
    const amrex::Real k_f = 800000;
    const amrex::Real qf = k_f * (sc[16] * sc[31]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[8] - g_RT[15] + g_RT[16] - g_RT[26] + g_RT[31])) *
      (refCinv) * (sc[8] * sc[15] * sc[26]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[15] += qdot;
    wdot[16] -= qdot;
    wdot[26] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 148:  C2H2 + C3H3 <=> C5H5
    const amrex::Real k_f =
      6.87e+49 * exp((-12.5) * logT - (21147.6803804433) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[31]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[10] + g_RT[31] - g_RT[34])) * (refC) * (sc[34]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[31] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 149:  2 C3H3 => C6H5 + H
    const amrex::Real k_f = 5000000;
    const amrex::Real qf = k_f * ((sc[31] * sc[31]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[19] += qdot;
    wdot[31] -= 2.000000 * qdot;
    wdot[35] += qdot;
  }

  {
    // reaction 150:  2 C3H3 => C6H6
    const amrex::Real k_f = 2000000;
    const amrex::Real qf = k_f * ((sc[31] * sc[31]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[31] -= 2.000000 * qdot;
  }

  {
    // reaction 152:  HO2 + aC3H5 <=> C3H6 + O2
    const amrex::Real k_f = 2660000;
    const amrex::Real qf = k_f * (sc[16] * sc[32]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] - g_RT[13] + g_RT[16] + g_RT[32])) *
                           (sc[3] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[13] += qdot;
    wdot[16] -= qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 153:  HO2 + aC3H5 <=> C2H3 + CH2O + OH
    const amrex::Real k_f = 6600000;
    const amrex::Real qf = k_f * (sc[16] * sc[32]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[15] + g_RT[16] - g_RT[23] - g_RT[26] + g_RT[32])) *
      (refCinv) * (sc[15] * sc[23] * sc[26]);
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[16] -= qdot;
    wdot[23] += qdot;
    wdot[26] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 154:  HCO + aC3H5 <=> C3H6 + CO
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[22] * sc[32]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] - g_RT[8] + g_RT[22] + g_RT[32])) * (sc[3] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] += qdot;
    wdot[22] -= qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 156:  C3H6 + H <=> C2H4 + CH3
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * logT - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[3] - g_RT[12] + g_RT[19])) * (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[12] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 157:  C3H6 + H <=> H2 + aC3H5
    const amrex::Real k_f =
      1.92 * exp((2.309) * logT - (2352.03469597126) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[19] - g_RT[32])) * (sc[6] * sc[32]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[19] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 158:  C3H6 + O <=> CH2CO + CH3 + H
    const amrex::Real k_f = 80 * exp((1.65) * logT - (164.551849718143) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[12] + g_RT[14] - g_RT[19] - g_RT[29])) *
      (refCinv) * (sc[12] * sc[19] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[12] += qdot;
    wdot[14] -= qdot;
    wdot[19] += qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 159:  C3H6 + O <=> C2H5 + HCO
    const amrex::Real k_f =
      35 * exp((1.65) * logT - (-489.126599162188) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] + g_RT[14] - g_RT[22] - g_RT[27])) *
                           (sc[22] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[14] -= qdot;
    wdot[22] += qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 160:  C3H6 + O <=> OH + aC3H5
    const amrex::Real k_f =
      180000 * exp((0.7) * logT - (2958.91399493175) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] + g_RT[14] - g_RT[15] - g_RT[32])) *
                           (sc[15] * sc[32]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 161:  C3H6 + OH <=> H2O + aC3H5
    const amrex::Real k_f = 3.1 * exp((2) * logT - (-149.958566409806) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] + g_RT[15] - g_RT[17] - g_RT[32])) *
                           (sc[17] * sc[32]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 162:  C3H6 + CH3 <=> CH4 + aC3H5
    const amrex::Real k_f =
      4.54e-05 * exp((3.268) * logT - (3599.00559383536) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[12] - g_RT[32])) * (sc[2] * sc[32]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[12] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 163:  C4H81 + H <=> C2H4 + C2H5
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * logT - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[5] + g_RT[19] - g_RT[27])) * (sc[1] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[5] -= qdot;
    wdot[19] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 164:  C4H81 + H <=> C3H6 + CH3
    const amrex::Real k_f =
      3.2e+16 * exp((-2.39) * logT - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[5] - g_RT[12] + g_RT[19])) * (sc[3] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[5] -= qdot;
    wdot[12] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 165:  H + iC4H8 <=> C3H6 + CH3
    const amrex::Real k_f =
      6.16e+16 * exp((-2.538) * logT - (5851.90660664309) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[12] + g_RT[19])) * (sc[3] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 166:  O + iC4H8 <=> CH2CO + 2 CH3
    const amrex::Real k_f =
      240 * exp((1.65) * logT - (164.551849718143) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - 2.000000 * g_RT[12] + g_RT[14] - g_RT[29])) *
      (refCinv) * ((sc[12] * sc[12]) * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[12] += 2.000000 * qdot;
    wdot[14] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 167:  C6H5 + CH3 <=> C6H5CH3
    const amrex::Real k_f = 13800000 * exp(-(23.1479666270171) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[35]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[11] + g_RT[12] + g_RT[35])) * (refC) * (sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[12] -= qdot;
    wdot[35] -= qdot;
  }

  {
    // reaction 168:  C6H5CH3 + O2 <=> C6H5CH2 + HO2
    const amrex::Real k_f = 300000000 * exp(-(21634.2908962765) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[11] + g_RT[13] - g_RT[16] - g_RT[36])) *
                           (sc[16] * sc[36]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[13] -= qdot;
    wdot[16] += qdot;
    wdot[36] += qdot;
  }

  {
    // reaction 169:  C6H5CH3 + OH <=> C6H5CH2 + H2O
    const amrex::Real k_f = 16200000 * exp(-(1393.91016427907) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[11] + g_RT[15] - g_RT[17] - g_RT[36])) *
                           (sc[17] * sc[36]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[36] += qdot;
  }

  {
    // reaction 170:  C6H5CH3 + H <=> C6H5CH2 + H2
    const amrex::Real k_f = 125900000 * exp(-(4206.38810946165) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[11] + g_RT[19] - g_RT[36])) *
                           (sc[6] * sc[36]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[11] -= qdot;
    wdot[19] -= qdot;
    wdot[36] += qdot;
  }

  {
    // reaction 171:  C6H5CH3 + H <=> C6H6 + CH3
    const amrex::Real k_f =
      1.93 * exp((2.17) * logT - (2094.89097974505) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[9] + g_RT[11] - g_RT[12] + g_RT[19])) *
                           (sc[9] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 172:  C6H5CH3 + CH3 <=> C6H5CH2 + CH4
    const amrex::Real k_f = 316000 * exp(-(4780.55832514484) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[11] + g_RT[12] - g_RT[36])) *
                           (sc[2] * sc[36]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[11] -= qdot;
    wdot[12] -= qdot;
    wdot[36] += qdot;
  }

  {
    // reaction 174:  C6H5CH2 + H <=> C6H5 + CH3
    const amrex::Real k_f =
      1.5e+60 * exp((-13.94) * logT - (32497.7322776688) * invT);
    const amrex::Real qf = k_f * (sc[19] * sc[36]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[12] + g_RT[19] - g_RT[35] + g_RT[36])) *
                           (sc[12] * sc[35]);
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[19] -= qdot;
    wdot[35] += qdot;
    wdot[36] -= qdot;
  }

  {
    // reaction 175:  C6H5CH2 + O <=> C6H5CHO + H
    const amrex::Real k_f = 400000000;
    const amrex::Real qf = k_f * (sc[14] * sc[36]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[14] - g_RT[19] + g_RT[36] - g_RT[39])) *
                           (sc[19] * sc[39]);
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[19] += qdot;
    wdot[36] -= qdot;
    wdot[39] += qdot;
  }

  {
    // reaction 176:  C6H5CH2 + HO2 <=> C6H5CHO + H + OH
    const amrex::Real k_f = 5000000;
    const amrex::Real qf = k_f * (sc[16] * sc[36]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[15] + g_RT[16] - g_RT[19] + g_RT[36] - g_RT[39])) *
      (refCinv) * (sc[15] * sc[19] * sc[39]);
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[16] -= qdot;
    wdot[19] += qdot;
    wdot[36] -= qdot;
    wdot[39] += qdot;
  }

  {
    // reaction 177:  C6H5 + HCO <=> C6H5CHO
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[22] * sc[35]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[22] + g_RT[35] - g_RT[39])) * (refC) * (sc[39]);
    const amrex::Real qdot = qf - qr;
    wdot[22] -= qdot;
    wdot[35] -= qdot;
    wdot[39] += qdot;
  }

  {
    // reaction 178:  C6H5CHO <=> C6H5CO + H
    const amrex::Real k_f = 3.98e+15 * exp(-(43729.5282584301) * invT);
    const amrex::Real qf = k_f * (sc[39]);
    const amrex::Real qr = k_f * exp(-(-g_RT[19] - g_RT[38] + g_RT[39])) *
                           (refCinv) * (sc[19] * sc[38]);
    const amrex::Real qdot = qf - qr;
    wdot[19] += qdot;
    wdot[38] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 179:  C6H5CHO + O2 <=> C6H5CO + HO2
    const amrex::Real k_f = 10200000 * exp(-(19600.2891330938) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[39]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[13] - g_RT[16] - g_RT[38] + g_RT[39])) *
                           (sc[16] * sc[38]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[16] += qdot;
    wdot[38] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 180:  C6H5CHO + OH <=> C6H5CO + H2O
    const amrex::Real k_f =
      23500 * exp((0.73) * logT - (-558.570499043239) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[39]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[15] - g_RT[17] - g_RT[38] + g_RT[39])) *
                           (sc[17] * sc[38]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[38] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 181:  C6H5CHO + H <=> C6H5CO + H2
    const amrex::Real k_f =
      4100 * exp((1.16) * logT - (1207.71999793133) * invT);
    const amrex::Real qf = k_f * (sc[19] * sc[39]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[19] - g_RT[38] + g_RT[39])) *
                           (sc[6] * sc[38]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[19] -= qdot;
    wdot[38] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 182:  C6H5CHO + H <=> C6H6 + HCO
    const amrex::Real k_f =
      1.93 * exp((2.17) * logT - (2094.89097974505) * invT);
    const amrex::Real qf = k_f * (sc[19] * sc[39]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[9] + g_RT[19] - g_RT[22] + g_RT[39])) *
                           (sc[9] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[19] -= qdot;
    wdot[22] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 183:  C6H5CHO + O <=> C6H5CO + OH
    const amrex::Real k_f = 5800000 * exp(-(905.789998448495) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[39]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[14] - g_RT[15] - g_RT[38] + g_RT[39])) *
                           (sc[15] * sc[38]);
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[15] += qdot;
    wdot[38] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 184:  C6H5CHO + CH3 <=> C6H5CO + CH4
    const amrex::Real k_f =
      2e-12 * exp((5.6) * logT - (1237.91299787961) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[39]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[12] - g_RT[38] + g_RT[39])) *
                           (sc[2] * sc[38]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[12] -= qdot;
    wdot[38] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 185:  C6H5CO + H2O2 <=> C6H5CHO + HO2
    const amrex::Real k_f = 180000 * exp(-(4139.46029290962) * invT);
    const amrex::Real qf = k_f * (sc[18] * sc[38]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[16] + g_RT[18] + g_RT[38] - g_RT[39])) *
                           (sc[16] * sc[39]);
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[18] -= qdot;
    wdot[38] -= qdot;
    wdot[39] += qdot;
  }

  {
    // reaction 186:  C6H5CO <=> C6H5 + CO
    const amrex::Real k_f = 527000000000000 * exp(-(14599.8251249923) * invT);
    const amrex::Real qf = k_f * (sc[38]);
    const amrex::Real qr = k_f * exp(-(-g_RT[8] - g_RT[35] + g_RT[38])) *
                           (refCinv) * (sc[8] * sc[35]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[35] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 188:  C6H6 + OH <=> C6H5 + H2O
    const amrex::Real k_f =
      0.3985 * exp((2.286) * logT - (532.403232421393) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] + g_RT[15] - g_RT[17] - g_RT[35])) *
                           (sc[17] * sc[35]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[35] += qdot;
  }

  {
    // reaction 189:  C6H6 + O <=> C6H5O + H
    const amrex::Real k_f = 13900000 * exp(-(2470.79382910117) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] + g_RT[14] - g_RT[19] - g_RT[37])) *
                           (sc[19] * sc[37]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[14] -= qdot;
    wdot[19] += qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 190:  C6H6 + O <=> C5H5 + HCO
    const amrex::Real k_f = 13900000 * exp(-(2279.57149609538) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] + g_RT[14] - g_RT[22] - g_RT[34])) *
                           (sc[22] * sc[34]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[14] -= qdot;
    wdot[22] += qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 191:  C6H5 + H2 <=> C6H6 + H
    const amrex::Real k_f =
      0.05707 * exp((2.43) * logT - (3156.67814459301) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[35]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[6] - g_RT[9] - g_RT[19] + g_RT[35])) * (sc[9] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[9] += qdot;
    wdot[19] += qdot;
    wdot[35] -= qdot;
  }

  {
    // reaction 192:  C6H5 + O2 <=> C6H5O + O
    const amrex::Real k_f = 26000000 * exp(-(3079.68599472488) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[35]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[13] - g_RT[14] + g_RT[35] - g_RT[37])) *
                           (sc[14] * sc[37]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[14] += qdot;
    wdot[35] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 193:  C6H5 + O <=> C5H5 + CO
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[14] * sc[35]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[8] + g_RT[14] - g_RT[34] + g_RT[35])) *
                           (sc[8] * sc[34]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[14] -= qdot;
    wdot[34] += qdot;
    wdot[35] -= qdot;
  }

  {
    // reaction 194:  C6H5 + OH <=> C6H5O + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[15] * sc[35]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[15] - g_RT[19] + g_RT[35] - g_RT[37])) *
                           (sc[19] * sc[37]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[19] += qdot;
    wdot[35] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 195:  C6H5 + HO2 <=> C6H6 + O2
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[16] * sc[35]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[9] - g_RT[13] + g_RT[16] + g_RT[35])) *
                           (sc[9] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[13] += qdot;
    wdot[16] -= qdot;
    wdot[35] -= qdot;
  }

  {
    // reaction 196:  C6H5 + CH4 <=> C6H6 + CH3
    const amrex::Real k_f =
      3.89e-09 * exp((4.57) * logT - (2644.90679546961) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[35]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[9] - g_RT[12] + g_RT[35])) * (sc[9] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[9] += qdot;
    wdot[12] += qdot;
    wdot[35] -= qdot;
  }

  {
    // reaction 197:  C6H5O <=> C5H5 + CO
    const amrex::Real k_f =
      3.76e+54 * exp((-12.06) * logT - (36634.1732705836) * invT);
    const amrex::Real qf = k_f * (sc[37]);
    const amrex::Real qr = k_f * exp(-(-g_RT[8] - g_RT[34] + g_RT[37])) *
                           (refCinv) * (sc[8] * sc[34]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[34] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 198:  C5H5 + O <=> C5H4O + H
    const amrex::Real k_f =
      58100000 * exp((-0.02) * logT - (10.0643333160944) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[34]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[14] - g_RT[19] - g_RT[33] + g_RT[34])) *
                           (sc[19] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[19] += qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 199:  C5H5 + O2 <=> C5H4O + OH
    const amrex::Real k_f =
      1800000 * exp((0.08) * logT - (9057.89998448495) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[34]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[13] - g_RT[15] - g_RT[33] + g_RT[34])) *
                           (sc[15] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 200:  C5H4O <=> 2 C2H2 + CO
    const amrex::Real k_f =
      6.2e+41 * exp((-7.87) * logT - (49667.4849149258) * invT);
    const amrex::Real qf = k_f * (sc[33]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[8] - 2.000000 * g_RT[10] + g_RT[33])) *
                           ((refCinv * refCinv)) * (sc[8] * (sc[10] * sc[10]));
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[10] += 2.000000 * qdot;
    wdot[33] -= qdot;
  }

  {
    // reaction 201:  C5H4O + O <=> C3H3 + CO + HCO
    const amrex::Real k_f =
      620 * exp((1.45) * logT - (-431.75989926045) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[33]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[8] + g_RT[14] - g_RT[22] - g_RT[31] + g_RT[33])) *
      (refCinv) * (sc[8] * sc[22] * sc[31]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[14] -= qdot;
    wdot[22] += qdot;
    wdot[31] += qdot;
    wdot[33] -= qdot;
  }
}

// compute the production rate for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWC(const amrex::Real T, amrex::Real C[], amrex::Real wdot[])
{

  // convert to SI
  for (int id = 0; id < 41; ++id) {
    C[id] *= 1.0e6;
  }

  // convert to chemkin units
  productionRate(wdot, C, T);

  // convert to chemkin units
  for (int id = 0; id < 41; ++id) {
    C[id] *= 1.0e-6;
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real wdot[])
{
  amrex::Real c[41]; // temporary storage
  amrex::Real YOW = 0;
  amrex::Real PWORT;

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 41; i++) {
    YOW += y[i] * imw(i);
  }
  // PW/RT (see Eq. 7)
  PWORT = P / (YOW * 8.31446261815324e+07 * T);
  // multiply by 1e6 so c goes to SI
  PWORT *= 1e6;
  // Now compute conversion (and go to SI)
  for (int i = 0; i < 41; i++) {
    c[i] = PWORT * y[i] * imw(i);
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 41; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real wdot[])
{
  amrex::Real c[41]; // temporary storage
  amrex::Real PORT =
    1e6 * P / (8.31446261815324e+07 * T); // 1e6 * P/RT so c goes to SI units

  // Compute conversion, see Eq 10
  for (int id = 0; id < 41; ++id) {
    c[id] = x[id] * PORT;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 41; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYR(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real wdot[])
{
  amrex::Real c[41]; // temporary storage

  // See Eq 8 with an extra 1e6 so c goes to SI
  for (int i = 0; i < 41; i++) {
    c[i] = 1e6 * rho * y[i] * imw(i);
  }

  // call productionRate
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 41; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXR(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real wdot[])
{
  amrex::Real c[41];  // temporary storage
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 154.297000;  // POSF10325
  XW += x[1] * 28.054000;   // C2H4
  XW += x[2] * 16.043000;   // CH4
  XW += x[3] * 42.081000;   // C3H6
  XW += x[4] * 56.108000;   // iC4H8
  XW += x[5] * 56.108000;   // C4H81
  XW += x[6] * 2.016000;    // H2
  XW += x[7] * 30.070000;   // C2H6
  XW += x[8] * 28.010000;   // CO
  XW += x[9] * 78.114000;   // C6H6
  XW += x[10] * 26.038000;  // C2H2
  XW += x[11] * 92.141000;  // C6H5CH3
  XW += x[12] * 15.035000;  // CH3
  XW += x[13] * 31.998000;  // O2
  XW += x[14] * 15.999000;  // O
  XW += x[15] * 17.007000;  // OH
  XW += x[16] * 33.006000;  // HO2
  XW += x[17] * 18.015000;  // H2O
  XW += x[18] * 34.014000;  // H2O2
  XW += x[19] * 1.008000;   // H
  XW += x[20] * 14.027000;  // CH2
  XW += x[21] * 14.027000;  // CH2*
  XW += x[22] * 29.018000;  // HCO
  XW += x[23] * 30.026000;  // CH2O
  XW += x[24] * 31.034000;  // CH3O
  XW += x[25] * 44.009000;  // CO2
  XW += x[26] * 27.046000;  // C2H3
  XW += x[27] * 29.062000;  // C2H5
  XW += x[28] * 41.029000;  // HCCO
  XW += x[29] * 42.037000;  // CH2CO
  XW += x[30] * 43.045000;  // CH2CHO
  XW += x[31] * 39.057000;  // C3H3
  XW += x[32] * 41.073000;  // aC3H5
  XW += x[33] * 80.086000;  // C5H4O
  XW += x[34] * 65.095000;  // C5H5
  XW += x[35] * 77.106000;  // C6H5
  XW += x[36] * 91.133000;  // C6H5CH2
  XW += x[37] * 93.105000;  // C6H5O
  XW += x[38] * 105.116000; // C6H5CO
  XW += x[39] * 106.124000; // C6H5CHO
  XW += x[40] * 28.014000;  // N2
  // Extra 1e6 factor to take c to SI
  ROW = 1e6 * rho / XW;

  // Compute conversion, see Eq 11
  for (int id = 0; id < 41; ++id) {
    c[id] = x[id] * ROW;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 41; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

//  species unit charge number
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRG(int kcharge[])
{
  kcharge[0] = 0;  // POSF10325
  kcharge[1] = 0;  // C2H4
  kcharge[2] = 0;  // CH4
  kcharge[3] = 0;  // C3H6
  kcharge[4] = 0;  // iC4H8
  kcharge[5] = 0;  // C4H81
  kcharge[6] = 0;  // H2
  kcharge[7] = 0;  // C2H6
  kcharge[8] = 0;  // CO
  kcharge[9] = 0;  // C6H6
  kcharge[10] = 0; // C2H2
  kcharge[11] = 0; // C6H5CH3
  kcharge[12] = 0; // CH3
  kcharge[13] = 0; // O2
  kcharge[14] = 0; // O
  kcharge[15] = 0; // OH
  kcharge[16] = 0; // HO2
  kcharge[17] = 0; // H2O
  kcharge[18] = 0; // H2O2
  kcharge[19] = 0; // H
  kcharge[20] = 0; // CH2
  kcharge[21] = 0; // CH2*
  kcharge[22] = 0; // HCO
  kcharge[23] = 0; // CH2O
  kcharge[24] = 0; // CH3O
  kcharge[25] = 0; // CO2
  kcharge[26] = 0; // C2H3
  kcharge[27] = 0; // C2H5
  kcharge[28] = 0; // HCCO
  kcharge[29] = 0; // CH2CO
  kcharge[30] = 0; // CH2CHO
  kcharge[31] = 0; // C3H3
  kcharge[32] = 0; // aC3H5
  kcharge[33] = 0; // C5H4O
  kcharge[34] = 0; // C5H5
  kcharge[35] = 0; // C6H5
  kcharge[36] = 0; // C6H5CH2
  kcharge[37] = 0; // C6H5O
  kcharge[38] = 0; // C6H5CO
  kcharge[39] = 0; // C6H5CHO
  kcharge[40] = 0; // N2
}

//  species charge per unit mass
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRGMASS(amrex::Real zk[])
{

  int kchrg[41];
  CKCHRG(kchrg);

  for (int id = 0; id < 41; ++id) {
    zk[id] = 6.02214076e+23 * 1.60217663e-19 * kchrg[id] * imw(id);
  }
}

// compute an approx to the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian_precond(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real T, const int HP)
{

#if defined(PELE_COMPILE_AJACOBIAN) || !defined(AMREX_USE_HIP)
  for (int i = 0; i < 1764; i++) {
    J[i] = 0.0;
  }

  amrex::Real wdot[41];
  for (auto& val : wdot) {
    val = 0.0;
  }

  const amrex::Real invT = 1.0 / T;
  const amrex::Real invT2 = invT * invT;
  const amrex::Real logT = log(T);

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  amrex::Real refC = 101325 / 8.31446 / T;
  amrex::Real refCinv = 1.0 / refC;

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int k = 0; k < 41; ++k) {
    mixture += sc[k];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[41];
  gibbs(g_RT, T);

  // compute the species enthalpy
  amrex::Real h_RT[41];
  speciesEnthalpy(h_RT, T);

  amrex::Real phi_f, k_f, k_r, phi_r, Kc, q, q_nocor, Corr, alpha;
  amrex::Real dlnkfdT, dlnk0dT, dlnKcdT, dkrdT, dqdT;
  amrex::Real dqdci, dcdc_fac, dqdc[41];
  amrex::Real Pr, fPr, F, k_0, logPr;
  amrex::Real logFcent, troe_c, troe_n, troePr_den, troePr, troe;
  amrex::Real Fcent1, Fcent2, Fcent3, Fcent;
  amrex::Real dlogFdc, dlogFdn, dlogFdcn_fac;
  amrex::Real dlogPrdT, dlogfPrdT, dlogFdT, dlogFcentdT, dlogFdlogPr, dlnCorrdT;
  const amrex::Real ln10 = log(10.0);
  const amrex::Real log10e = 1.0 / log(10.0);
  // reaction 16: H + O2 (+M) <=> HO2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (1.09 - 1) * sc[8] + (0.85 - 1) * sc[13] +
          (11.89 - 1) * sc[17] + (2.18 - 1) * sc[25];
  // forward
  phi_f = sc[13] * sc[19];
  k_f = 5116000 * exp(0.44 * logT);
  dlnkfdT = 0.44 * invT;
  // pressure-fall-off
  k_0 = 6.328e+19 * exp(-1.4 * logT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -1.4 * invT;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.5) * exp(-T / 1e-30);
  Fcent2 = 0.5 * exp(-T / 1e+30);
  Fcent3 = 0.;
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent * (-Fcent1 / 1e-30 - Fcent2 / 1e+30);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[16];
  Kc = refCinv * exp(g_RT[13] - g_RT[16] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[19]) + (h_RT[16]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[13] -= q; // O2
  wdot[16] += q; // HO2
  wdot[19] -= q; // H
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = 1.09 * dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = 0.85 * dcdc_fac + k_f * sc[19];
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac - k_r;
  dqdc[17] = 11.89 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac + k_f * sc[13];
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = 2.18 * dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 13] -= dqdc[k];
    J[42 * k + 16] += dqdc[k];
    J[42 * k + 19] -= dqdc[k];
  }
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 18: 2 OH (+M) <=> H2O2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[6] + (1.75 - 1) * sc[8] + (6 - 1) * sc[17] +
          (3.6 - 1) * sc[25];
  // forward
  phi_f = (sc[15] * sc[15]);
  k_f = 111000000 * exp(-0.37 * logT);
  dlnkfdT = -0.37 * invT;
  // pressure-fall-off
  k_0 = 2.01e+17 * exp(-0.584 * logT - (-1153.87581469022) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -0.584 * invT + (-1153.87581469022) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.7346) * exp(-T / 94);
  Fcent2 = 0.7346 * exp(-T / 1756);
  Fcent3 = exp(-5182 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 94 - Fcent2 / 1756 + Fcent3 * 5182 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[18];
  Kc = refCinv * exp(2.000000 * g_RT[15] - g_RT[18]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[15]) + (h_RT[18]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[15] -= 2 * q; // OH
  wdot[18] += q;     // H2O2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = 1.75 * dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac + k_f * 2.000000 * sc[15];
  dqdc[16] = dcdc_fac;
  dqdc[17] = 6 * dcdc_fac;
  dqdc[18] = dcdc_fac - k_r;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = 3.6 * dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 15] += -2 * dqdc[k];
    J[42 * k + 18] += dqdc[k];
  }
  J[1737] += -2 * dqdT; // dwdot[OH]/dT
  J[1740] += dqdT;      // dwdot[H2O2]/dT

  // reaction 42: CO + H2 (+M) <=> CH2O (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[6] * sc[8];
  k_f = 43 * exp(1.5 * logT - (40056.0465980557) * invT);
  dlnkfdT = 1.5 * invT + (40056.0465980557) * invT2;
  // pressure-fall-off
  k_0 = 5.07e+27 * exp(-3.42 * logT - (42446.3257606281) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -3.42 * invT + (42446.3257606281) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.932) * exp(-T / 197);
  Fcent2 = 0.932 * exp(-T / 1540);
  Fcent3 = exp(-10300 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 197 - Fcent2 / 1540 + Fcent3 * 10300 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[23];
  Kc = refCinv * exp(g_RT[6] + g_RT[8] - g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[8]) + (h_RT[23]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[6] -= q;  // H2
  wdot[8] -= q;  // CO
  wdot[23] += q; // CH2O
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = 2 * dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 2 * dcdc_fac + k_f * sc[8];
  dqdc[7] = 3 * dcdc_fac;
  dqdc[8] = 1.5 * dcdc_fac + k_f * sc[6];
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = 6 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac - k_r;
  dqdc[24] = dcdc_fac;
  dqdc[25] = 2 * dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 6] -= dqdc[k];
    J[42 * k + 8] -= dqdc[k];
    J[42 * k + 23] += dqdc[k];
  }
  J[1728] -= dqdT; // dwdot[H2]/dT
  J[1730] -= dqdT; // dwdot[CO]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT

  // reaction 43: H + HCO (+M) <=> CH2O (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[19] * sc[22];
  k_f = 1090000 * exp(0.48 * logT - (-130.836333109227) * invT);
  dlnkfdT = 0.48 * invT + (-130.836333109227) * invT2;
  // pressure-fall-off
  k_0 = 1.35e+24 * exp(-2.57 * logT - (717.083748771726) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -2.57 * invT + (717.083748771726) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.7824) * exp(-T / 271);
  Fcent2 = 0.7824 * exp(-T / 2755);
  Fcent3 = exp(-6570 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 271 - Fcent2 / 2755 + Fcent3 * 6570 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[23];
  Kc = refCinv * exp(g_RT[19] + g_RT[22] - g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[22]) + (h_RT[23]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[19] -= q; // H
  wdot[22] -= q; // HCO
  wdot[23] += q; // CH2O
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = 2 * dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = 3 * dcdc_fac;
  dqdc[8] = 1.5 * dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = 6 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac + k_f * sc[22];
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac + k_f * sc[19];
  dqdc[23] = dcdc_fac - k_r;
  dqdc[24] = dcdc_fac;
  dqdc[25] = 2 * dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 19] -= dqdc[k];
    J[42 * k + 22] -= dqdc[k];
    J[42 * k + 23] += dqdc[k];
  }
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT

  // reaction 44: CH2 + H (+M) <=> CH3 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[19] * sc[20];
  k_f = 25000000000 * exp(-0.8 * logT);
  dlnkfdT = -0.8 * invT;
  // pressure-fall-off
  k_0 = 3.2e+27 * exp(-3.14 * logT - (618.956498939805) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -3.14 * invT + (618.956498939805) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.68) * exp(-T / 78);
  Fcent2 = 0.68 * exp(-T / 1995);
  Fcent3 = exp(-5590 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 78 - Fcent2 / 1995 + Fcent3 * 5590 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[12];
  Kc = refCinv * exp(-g_RT[12] + g_RT[19] + g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[20]) + (h_RT[12]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[12] += q; // CH3
  wdot[19] -= q; // H
  wdot[20] -= q; // CH2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = 2 * dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = 3 * dcdc_fac;
  dqdc[8] = 1.5 * dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac - k_r;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = 6 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac + k_f * sc[20];
  dqdc[20] = dcdc_fac + k_f * sc[19];
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = 2 * dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 12] += dqdc[k];
    J[42 * k + 19] -= dqdc[k];
    J[42 * k + 20] -= dqdc[k];
  }
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1742] -= dqdT; // dwdot[CH2]/dT

  // reaction 50: CH2 + CO (+M) <=> CH2CO (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[8] * sc[20];
  k_f = 810000 * exp(0.5 * logT - (2269.50716277929) * invT);
  dlnkfdT = 0.5 * invT + (2269.50716277929) * invT2;
  // pressure-fall-off
  k_0 = 2.69e+33 * exp(-5.11 * logT - (3570.32224388449) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -5.11 * invT + (3570.32224388449) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.5907) * exp(-T / 275);
  Fcent2 = 0.5907 * exp(-T / 1226);
  Fcent3 = exp(-5185 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 275 - Fcent2 / 1226 + Fcent3 * 5185 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[29];
  Kc = refCinv * exp(g_RT[8] + g_RT[20] - g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[20]) + (h_RT[29]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[8] -= q;  // CO
  wdot[20] -= q; // CH2
  wdot[29] += q; // CH2CO
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = 2 * dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = 3 * dcdc_fac;
  dqdc[8] = 1.5 * dcdc_fac + k_f * sc[20];
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = 6 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac + k_f * sc[8];
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = 2 * dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac - k_r;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 8] -= dqdc[k];
    J[42 * k + 20] -= dqdc[k];
    J[42 * k + 29] += dqdc[k];
  }
  J[1730] -= dqdT; // dwdot[CO]/dT
  J[1742] -= dqdT; // dwdot[CH2]/dT
  J[1751] += dqdT; // dwdot[CH2CO]/dT

  // reaction 61: CH2O + H (+M) <=> CH3O (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[19] * sc[23];
  k_f = 540000 * exp(0.454 * logT - (1308.36333109227) * invT);
  dlnkfdT = 0.454 * invT + (1308.36333109227) * invT2;
  // pressure-fall-off
  k_0 = 2.2e+30 * exp(-4.8 * logT - (2797.88466187424) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -4.8 * invT + (2797.88466187424) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.758) * exp(-T / 94);
  Fcent2 = 0.758 * exp(-T / 1555);
  Fcent3 = exp(-4200 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 94 - Fcent2 / 1555 + Fcent3 * 4200 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[24];
  Kc = refCinv * exp(g_RT[19] + g_RT[23] - g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[23]) + (h_RT[24]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[19] -= q; // H
  wdot[23] -= q; // CH2O
  wdot[24] += q; // CH3O
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = 2 * dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = 3 * dcdc_fac;
  dqdc[8] = 1.5 * dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = 6 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac + k_f * sc[23];
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac + k_f * sc[19];
  dqdc[24] = dcdc_fac - k_r;
  dqdc[25] = 2 * dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 19] -= dqdc[k];
    J[42 * k + 23] -= dqdc[k];
    J[42 * k + 24] += dqdc[k];
  }
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1745] -= dqdT; // dwdot[CH2O]/dT
  J[1746] += dqdT; // dwdot[CH3O]/dT

  // reaction 67: CH3 + H (+M) <=> CH4 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[12] * sc[19];
  k_f = 12700000000 * exp(-0.63 * logT - (192.731983003208) * invT);
  dlnkfdT = -0.63 * invT + (192.731983003208) * invT2;
  // pressure-fall-off
  k_0 = 2.477e+33 * exp(-4.76 * logT - (1227.84866456352) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -4.76 * invT + (1227.84866456352) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.783) * exp(-T / 74);
  Fcent2 = 0.783 * exp(-T / 2941);
  Fcent3 = exp(-6964 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 74 - Fcent2 / 2941 + Fcent3 * 6964 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[2];
  Kc = refCinv * exp(-g_RT[2] + g_RT[12] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[19]) + (h_RT[2]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[2] += q;  // CH4
  wdot[12] -= q; // CH3
  wdot[19] -= q; // H
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = 2 * dcdc_fac - k_r;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = 3 * dcdc_fac;
  dqdc[8] = 1.5 * dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac + k_f * sc[19];
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = 6 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac + k_f * sc[12];
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = 2 * dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 2] += dqdc[k];
    J[42 * k + 12] -= dqdc[k];
    J[42 * k + 19] -= dqdc[k];
  }
  J[1724] += dqdT; // dwdot[CH4]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 79: 2 CH3 (+M) <=> C2H6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = (sc[12] * sc[12]);
  k_f = 21200000000 * exp(-0.97 * logT - (311.994332798926) * invT);
  dlnkfdT = -0.97 * invT + (311.994332798926) * invT2;
  // pressure-fall-off
  k_0 = 1.77e+50 * exp(-9.67 * logT - (3130.00766130536) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -9.67 * invT + (3130.00766130536) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.5325) * exp(-T / 151);
  Fcent2 = 0.5325 * exp(-T / 1038);
  Fcent3 = exp(-4970 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 151 - Fcent2 / 1038 + Fcent3 * 4970 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[7];
  Kc = refCinv * exp(-g_RT[7] + 2.000000 * g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[12]) + (h_RT[7]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[7] += q;      // C2H6
  wdot[12] -= 2 * q; // CH3
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = 2 * dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = 3 * dcdc_fac - k_r;
  dqdc[8] = 1.5 * dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac + k_f * 2.000000 * sc[12];
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = 6 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = 2 * dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 7] += dqdc[k];
    J[42 * k + 12] += -2 * dqdc[k];
  }
  J[1729] += dqdT;      // dwdot[C2H6]/dT
  J[1734] += -2 * dqdT; // dwdot[CH3]/dT

  // reaction 95: C2H3 (+M) <=> C2H2 + H (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (3 - 1) * sc[1] + sc[2] + sc[6] + (3 - 1) * sc[7] +
          (1.5 - 1) * sc[8] + (3 - 1) * sc[10] + (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[26];
  k_f = 386000000 * exp(1.62 * logT - (18643.2716780664) * invT);
  dlnkfdT = 1.62 * invT + (18643.2716780664) * invT2;
  // pressure-fall-off
  k_0 = 2.565e+27 * exp(-3.4 * logT - (18014.5125184767) * invT);
  Pr = 1e-6 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -3.4 * invT + (18014.5125184767) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1.9816) * exp(-T / 5383.7);
  Fcent2 = 1.9816 * exp(-T / 4.2932);
  Fcent3 = exp(0.0795 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 5383.7 - Fcent2 / 4.2932 + Fcent3 * -0.0795 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[10] * sc[19];
  Kc = refC * exp(-g_RT[10] - g_RT[19] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[26]) + (h_RT[10] + h_RT[19]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[10] += q; // C2H2
  wdot[19] += q; // H
  wdot[26] -= q; // C2H3
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = 3 * dcdc_fac;
  dqdc[2] = 2 * dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = 3 * dcdc_fac;
  dqdc[8] = 1.5 * dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = 3 * dcdc_fac - k_r * sc[19];
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = 6 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac - k_r * sc[10];
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = 2 * dcdc_fac;
  dqdc[26] = dcdc_fac + k_f;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 10] += dqdc[k];
    J[42 * k + 19] += dqdc[k];
    J[42 * k + 26] -= dqdc[k];
  }
  J[1732] += dqdT; // dwdot[C2H2]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT

  // reaction 104: CH2CO + H (+M) <=> CH2CHO (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (3 - 1) * sc[1] + sc[2] + sc[6] + (3 - 1) * sc[7] +
          (1.5 - 1) * sc[8] + (3 - 1) * sc[10] + (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[19] * sc[29];
  k_f = 330000000 * exp(-0.06 * logT - (4277.34165934012) * invT);
  dlnkfdT = -0.06 * invT + (4277.34165934012) * invT2;
  // pressure-fall-off
  k_0 = 3.8e+41 * exp(-7.64 * logT - (5988.27832307616) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -7.64 * invT + (5988.27832307616) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.337) * exp(-T / 1707);
  Fcent2 = 0.337 * exp(-T / 3200);
  Fcent3 = exp(-4131 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1707 - Fcent2 / 3200 + Fcent3 * 4131 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[30];
  Kc = refCinv * exp(g_RT[19] + g_RT[29] - g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[29]) + (h_RT[30]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[19] -= q; // H
  wdot[29] -= q; // CH2CO
  wdot[30] += q; // CH2CHO
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = 3 * dcdc_fac;
  dqdc[2] = 2 * dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = 3 * dcdc_fac;
  dqdc[8] = 1.5 * dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = 3 * dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = 6 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac + k_f * sc[29];
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = 2 * dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac + k_f * sc[19];
  dqdc[30] = dcdc_fac - k_r;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 19] -= dqdc[k];
    J[42 * k + 29] -= dqdc[k];
    J[42 * k + 30] += dqdc[k];
  }
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1751] -= dqdT; // dwdot[CH2CO]/dT
  J[1752] += dqdT; // dwdot[CH2CHO]/dT

  // reaction 110: C2H3 + H (+M) <=> C2H4 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (3 - 1) * sc[1] + sc[2] + sc[6] + (3 - 1) * sc[7] +
          (1.5 - 1) * sc[8] + (3 - 1) * sc[10] + (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[19] * sc[26];
  k_f = 6080000 * exp(0.27 * logT - (140.900666425322) * invT);
  dlnkfdT = 0.27 * invT + (140.900666425322) * invT2;
  // pressure-fall-off
  k_0 = 1.4e+30 * exp(-3.86 * logT - (1670.67933047167) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -3.86 * invT + (1670.67933047167) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.782) * exp(-T / 207.5);
  Fcent2 = 0.782 * exp(-T / 2663);
  Fcent3 = exp(-6095 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 207.5 - Fcent2 / 2663 + Fcent3 * 6095 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[1];
  Kc = refCinv * exp(-g_RT[1] + g_RT[19] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[26]) + (h_RT[1]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] += q;  // C2H4
  wdot[19] -= q; // H
  wdot[26] -= q; // C2H3
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = 3 * dcdc_fac - k_r;
  dqdc[2] = 2 * dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = 3 * dcdc_fac;
  dqdc[8] = 1.5 * dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = 3 * dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = 6 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac + k_f * sc[26];
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = 2 * dcdc_fac;
  dqdc[26] = dcdc_fac + k_f * sc[19];
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 1] += dqdc[k];
    J[42 * k + 19] -= dqdc[k];
    J[42 * k + 26] -= dqdc[k];
  }
  J[1723] += dqdT; // dwdot[C2H4]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT

  // reaction 118: C2H3 + CH3 (+M) <=> C3H6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (3 - 1) * sc[1] + sc[2] + sc[6] + (3 - 1) * sc[7] +
          (1.5 - 1) * sc[8] + (3 - 1) * sc[10] + (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[12] * sc[26];
  k_f = 25000000;
  dlnkfdT = 0.0;
  // pressure-fall-off
  k_0 = 4.27e+58 * exp(-11.94 * logT - (4916.32618157895) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -11.94 * invT + (4916.32618157895) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.175) * exp(-T / 1340.6);
  Fcent2 = 0.175 * exp(-T / 60000);
  Fcent3 = exp(-10139.8 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 1340.6 - Fcent2 / 60000 + Fcent3 * 10139.8 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[3];
  Kc = refCinv * exp(-g_RT[3] + g_RT[12] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[26]) + (h_RT[3]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[3] += q;  // C3H6
  wdot[12] -= q; // CH3
  wdot[26] -= q; // C2H3
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = 3 * dcdc_fac;
  dqdc[2] = 2 * dcdc_fac;
  dqdc[3] = dcdc_fac - k_r;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = 3 * dcdc_fac;
  dqdc[8] = 1.5 * dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = 3 * dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac + k_f * sc[26];
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = 6 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = 2 * dcdc_fac;
  dqdc[26] = dcdc_fac + k_f * sc[12];
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 3] += dqdc[k];
    J[42 * k + 12] -= dqdc[k];
    J[42 * k + 26] -= dqdc[k];
  }
  J[1725] += dqdT; // dwdot[C3H6]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT

  // reaction 126: C2H4 + H (+M) <=> C2H5 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[1] * sc[19];
  k_f = 1370 * exp(1.463 * logT - (681.858582165395) * invT);
  dlnkfdT = 1.463 * invT + (681.858582165395) * invT2;
  // pressure-fall-off
  k_0 = 2.9e+39 * exp(-6.642 * logT - (2903.05694502743) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.642 * invT + (2903.05694502743) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1.569) * exp(-T / -9147);
  Fcent2 = 1.569 * exp(-T / 299);
  Fcent3 = exp(-152.4 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / -9147 - Fcent2 / 299 + Fcent3 * 152.4 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[27];
  Kc = refCinv * exp(g_RT[1] + g_RT[19] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[19]) + (h_RT[27]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // C2H4
  wdot[19] -= q; // H
  wdot[27] += q; // C2H5
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac + k_f * sc[19];
  dqdc[2] = 2 * dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = 3 * dcdc_fac;
  dqdc[8] = 1.5 * dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = 6 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac + k_f * sc[1];
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = 2 * dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac - k_r;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 1] -= dqdc[k];
    J[42 * k + 19] -= dqdc[k];
    J[42 * k + 27] += dqdc[k];
  }
  J[1723] -= dqdT; // dwdot[C2H4]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1749] += dqdT; // dwdot[C2H5]/dT

  // reaction 137: C2H5 + H (+M) <=> C2H6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[19] * sc[27];
  k_f = 521000000000 * exp(-0.99 * logT - (795.082331971457) * invT);
  dlnkfdT = -0.99 * invT + (795.082331971457) * invT2;
  // pressure-fall-off
  k_0 = 1.99e+41 * exp(-7.08 * logT - (3364.00341090455) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -7.08 * invT + (3364.00341090455) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.8422) * exp(-T / 125);
  Fcent2 = 0.8422 * exp(-T / 2219);
  Fcent3 = exp(-6882 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 125 - Fcent2 / 2219 + Fcent3 * 6882 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[7];
  Kc = refCinv * exp(-g_RT[7] + g_RT[19] + g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[27]) + (h_RT[7]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[7] += q;  // C2H6
  wdot[19] -= q; // H
  wdot[27] -= q; // C2H5
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = 2 * dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = 3 * dcdc_fac - k_r;
  dqdc[8] = 1.5 * dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = 6 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac + k_f * sc[27];
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = 2 * dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac + k_f * sc[19];
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 7] += dqdc[k];
    J[42 * k + 19] -= dqdc[k];
    J[42 * k + 27] -= dqdc[k];
  }
  J[1729] += dqdT; // dwdot[C2H6]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1749] -= dqdT; // dwdot[C2H5]/dT

  // reaction 141: C2H3 + C2H5 (+M) <=> C4H81 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[26] * sc[27];
  k_f = 15000000;
  dlnkfdT = 0.0;
  // pressure-fall-off
  k_0 = 1.55e+56 * exp(-11.79 * logT - (4521.1501339225) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -11.79 * invT + (4521.1501339225) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.198) * exp(-T / 2277.9);
  Fcent2 = 0.198 * exp(-T / 60000);
  Fcent3 = exp(-5723.2 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 2277.9 - Fcent2 / 60000 + Fcent3 * 5723.2 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[5];
  Kc = refCinv * exp(-g_RT[5] + g_RT[26] + g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[26] + h_RT[27]) + (h_RT[5]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[5] += q;  // C4H81
  wdot[26] -= q; // C2H3
  wdot[27] -= q; // C2H5
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = 2 * dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac - k_r;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = 3 * dcdc_fac;
  dqdc[8] = 1.5 * dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = 6 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = 2 * dcdc_fac;
  dqdc[26] = dcdc_fac + k_f * sc[27];
  dqdc[27] = dcdc_fac + k_f * sc[26];
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 5] += dqdc[k];
    J[42 * k + 26] -= dqdc[k];
    J[42 * k + 27] -= dqdc[k];
  }
  J[1727] += dqdT; // dwdot[C4H81]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT
  J[1749] -= dqdT; // dwdot[C2H5]/dT

  // reaction 151: H + aC3H5 (+M) <=> C3H6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[19] * sc[32];
  k_f = 200000000;
  dlnkfdT = 0.0;
  // pressure-fall-off
  k_0 = 1.33e+60 * exp(-12 * logT - (3003.09641818941) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -12 * invT + (3003.09641818941) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.02) * exp(-T / 1096.6);
  Fcent2 = 0.02 * exp(-T / 1096.6);
  Fcent3 = exp(-6859.5 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 1096.6 - Fcent2 / 1096.6 + Fcent3 * 6859.5 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[3];
  Kc = refCinv * exp(-g_RT[3] + g_RT[19] + g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[32]) + (h_RT[3]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[3] += q;  // C3H6
  wdot[19] -= q; // H
  wdot[32] -= q; // aC3H5
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = 2 * dcdc_fac;
  dqdc[3] = dcdc_fac - k_r;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = 3 * dcdc_fac;
  dqdc[8] = 1.5 * dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = 6 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac + k_f * sc[32];
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = 2 * dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac + k_f * sc[19];
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 3] += dqdc[k];
    J[42 * k + 19] -= dqdc[k];
    J[42 * k + 32] -= dqdc[k];
  }
  J[1725] += dqdT; // dwdot[C3H6]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1754] -= dqdT; // dwdot[aC3H5]/dT

  // reaction 155: CH3 + aC3H5 (+M) <=> C4H81 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[12] * sc[32];
  k_f = 100000000 * exp(-0.32 * logT - (-131.993731440578) * invT);
  dlnkfdT = -0.32 * invT + (-131.993731440578) * invT2;
  // pressure-fall-off
  k_0 = 3.91e+60 * exp(-12.81 * logT - (3145.1041612795) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -12.81 * invT + (3145.1041612795) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.104) * exp(-T / 1606);
  Fcent2 = 0.104 * exp(-T / 60000);
  Fcent3 = exp(-6118.4 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 1606 - Fcent2 / 60000 + Fcent3 * 6118.4 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[5];
  Kc = refCinv * exp(-g_RT[5] + g_RT[12] + g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[32]) + (h_RT[5]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[5] += q;  // C4H81
  wdot[12] -= q; // CH3
  wdot[32] -= q; // aC3H5
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = 2 * dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac - k_r;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = 3 * dcdc_fac;
  dqdc[8] = 1.5 * dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac + k_f * sc[32];
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = 6 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = 2 * dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac + k_f * sc[12];
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 5] += dqdc[k];
    J[42 * k + 12] -= dqdc[k];
    J[42 * k + 32] -= dqdc[k];
  }
  J[1727] += dqdT; // dwdot[C4H81]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1754] -= dqdT; // dwdot[aC3H5]/dT

  // reaction 173: C6H5CH2 + H (+M) <=> C6H5CH3 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[19] * sc[36];
  k_f = 100000000;
  dlnkfdT = 0.0;
  // pressure-fall-off
  k_0 = 1.1e+103 * exp(-24.63 * logT - (7341.93115409086) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -24.63 * invT + (7341.93115409086) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.431) * exp(-T / 383);
  Fcent2 = 0.431 * exp(-T / 152);
  Fcent3 = exp(-4730 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 383 - Fcent2 / 152 + Fcent3 * 4730 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[11];
  Kc = refCinv * exp(-g_RT[11] + g_RT[19] + g_RT[36]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[36]) + (h_RT[11]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[11] += q; // C6H5CH3
  wdot[19] -= q; // H
  wdot[36] -= q; // C6H5CH2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = 2 * dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = 3 * dcdc_fac;
  dqdc[8] = 1.5 * dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac - k_r;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = 6 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac + k_f * sc[36];
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = 2 * dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac + k_f * sc[19];
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 11] += dqdc[k];
    J[42 * k + 19] -= dqdc[k];
    J[42 * k + 36] -= dqdc[k];
  }
  J[1733] += dqdT; // dwdot[C6H5CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1758] -= dqdT; // dwdot[C6H5CH2]/dT

  // reaction 187: C6H5 + H (+M) <=> C6H6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha =
    mixture + sc[2] + sc[6] + (1.5 - 1) * sc[8] + (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[19] * sc[35];
  k_f = 100000000;
  dlnkfdT = 0.0;
  // pressure-fall-off
  k_0 = 6.6e+75 * exp(-16.3 * logT - (3522.51666063304) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -16.3 * invT + (3522.51666063304) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 0.1);
  Fcent2 = 1 * exp(-T / 584.9);
  Fcent3 = exp(-6113 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 0.1 - Fcent2 / 584.9 + Fcent3 * 6113 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[9];
  Kc = refCinv * exp(-g_RT[9] + g_RT[19] + g_RT[35]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[35]) + (h_RT[9]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[9] += q;  // C6H6
  wdot[19] -= q; // H
  wdot[35] -= q; // C6H5
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = 2 * dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = 1.5 * dcdc_fac;
  dqdc[9] = dcdc_fac - k_r;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = 6 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac + k_f * sc[35];
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = 2 * dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac + k_f * sc[19];
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 9] += dqdc[k];
    J[42 * k + 19] -= dqdc[k];
    J[42 * k + 35] -= dqdc[k];
  }
  J[1731] += dqdT; // dwdot[C6H6]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1757] -= dqdT; // dwdot[C6H5]/dT

  // reaction 30: CO + O (+M) <=> CO2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[6] + (1.75 - 1) * sc[8] + (12 - 1) * sc[17] +
          (3.6 - 1) * sc[25];
  // forward
  phi_f = sc[8] * sc[14];
  k_f = 13620 * exp(-(1199.66853127845) * invT);
  dlnkfdT = (1199.66853127845) * invT2;
  // pressure-fall-off
  k_0 = 1.173e+24 * exp(-2.79 * logT - (2108.98104638758) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -2.79 * invT + (2108.98104638758) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Lindemann form
  F = 1.0;
  // dlogFdlogPr is 0.0 and unused
  dlogFdT = 0.0;
  // reverse
  phi_r = sc[25];
  Kc = refCinv * exp(g_RT[8] + g_RT[14] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[14]) + (h_RT[25]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[8] -= q;  // CO
  wdot[14] -= q; // O
  wdot[25] += q; // CO2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = 1.75 * dcdc_fac + k_f * sc[14];
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac + k_f * sc[8];
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = 12 * dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = 3.6 * dcdc_fac - k_r;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 8] -= dqdc[k];
    J[42 * k + 14] -= dqdc[k];
    J[42 * k + 25] += dqdc[k];
  }
  J[1730] -= dqdT; // dwdot[CO]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1747] += dqdT; // dwdot[CO2]/dT

  // reaction 11: 2 H + M <=> H2 + M
  // a third-body and non-pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (0 - 1) * sc[6] + (0 - 1) * sc[17] + (0 - 1) * sc[25];
  // forward
  phi_f = (sc[19] * sc[19]);
  k_f = 1780000 * exp(-1 * logT);
  dlnkfdT = -1 * invT;
  // reverse
  phi_r = sc[6];
  Kc = refCinv * exp(-g_RT[6] + 2.000000 * g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[19]) + (h_RT[6]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  q = alpha * q_nocor;
  dqdT = alpha * (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;      // H2
  wdot[19] -= 2 * q; // H
  // for convenience
  k_f *= alpha;
  k_r *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = -k_r;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = 0.0;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor + k_f * 2.000000 * sc[19];
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = 0.0;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 6] += dqdc[k];
    J[42 * k + 19] += -2 * dqdc[k];
  }
  J[1728] += dqdT;      // dwdot[H2]/dT
  J[1741] += -2 * dqdT; // dwdot[H]/dT

  // reaction 12: 2 H + H2O <=> H2 + H2O
  // a third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * (sc[19] * sc[19]);
  k_f = 56240000 * exp(-1.25 * logT);
  dlnkfdT = -1.25 * invT;
  // reverse
  phi_r = sc[6] * sc[17];
  Kc = refCinv * exp(-g_RT[6] + 2.000000 * g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[17] + 2.000000 * h_RT[19]) + (h_RT[6] + h_RT[17]) +
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;      // H2
  wdot[19] -= 2 * q; // H
  // d()/d[H2]
  dqdci = -k_r * sc[17];
  J[258] += dqdci;      // dwdot[H2]/d[H2]
  J[271] += -2 * dqdci; // dwdot[H]/d[H2]
  // d()/d[H2O]
  dqdci = +k_f * sc[19] * sc[19] - k_r * sc[6];
  J[720] += dqdci;      // dwdot[H2]/d[H2O]
  J[733] += -2 * dqdci; // dwdot[H]/d[H2O]
  // d()/d[H]
  dqdci = +k_f * sc[17] * 2.000000 * sc[19];
  J[804] += dqdci;      // dwdot[H2]/d[H]
  J[817] += -2 * dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1728] += dqdT;      // dwdot[H2]/dT
  J[1741] += -2 * dqdT; // dwdot[H]/dT

  // reaction 13: H + OH + M <=> H2O + M
  // a third-body and non-pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[6] + (1.75 - 1) * sc[8] + (6.3 - 1) * sc[17] +
          (3.6 - 1) * sc[25];
  // forward
  phi_f = sc[15] * sc[19];
  k_f = 44000000000 * exp(-2 * logT);
  dlnkfdT = -2 * invT;
  // reverse
  phi_r = sc[17];
  Kc = refCinv * exp(g_RT[15] - g_RT[17] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[19]) + (h_RT[17]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  q = alpha * q_nocor;
  dqdT = alpha * (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[19] -= q; // H
  // for convenience
  k_f *= alpha;
  k_r *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = 2 * q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = 1.75 * q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor + k_f * sc[19];
  dqdc[16] = q_nocor;
  dqdc[17] = 6.3 * q_nocor - k_r;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor + k_f * sc[15];
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = 3.6 * q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 15] -= dqdc[k];
    J[42 * k + 17] += dqdc[k];
    J[42 * k + 19] -= dqdc[k];
  }
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 14: H + O + M <=> OH + M
  // a third-body and non-pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[6] + (1.75 - 1) * sc[8] + (12 - 1) * sc[17] +
          (3.6 - 1) * sc[25];
  // forward
  phi_f = sc[14] * sc[19];
  k_f = 9428000 * exp(-1 * logT);
  dlnkfdT = -1 * invT;
  // reverse
  phi_r = sc[15];
  Kc = refCinv * exp(g_RT[14] - g_RT[15] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[19]) + (h_RT[15]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  q = alpha * q_nocor;
  dqdT = alpha * (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[19] -= q; // H
  // for convenience
  k_f *= alpha;
  k_r *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = 2 * q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = 1.75 * q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor + k_f * sc[19];
  dqdc[15] = q_nocor - k_r;
  dqdc[16] = q_nocor;
  dqdc[17] = 12 * q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor + k_f * sc[14];
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = 3.6 * q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 14] -= dqdc[k];
    J[42 * k + 15] += dqdc[k];
    J[42 * k + 19] -= dqdc[k];
  }
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 15: 2 O + M <=> O2 + M
  // a third-body and non-pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (2.4 - 1) * sc[6] + (1.75 - 1) * sc[8] +
          (15.4 - 1) * sc[17] + (3.6 - 1) * sc[25];
  // forward
  phi_f = (sc[14] * sc[14]);
  k_f = 120000 * exp(-1 * logT);
  dlnkfdT = -1 * invT;
  // reverse
  phi_r = sc[13];
  Kc = refCinv * exp(-g_RT[13] + 2.000000 * g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[14]) + (h_RT[13]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  q = alpha * q_nocor;
  dqdT = alpha * (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] += q;     // O2
  wdot[14] -= 2 * q; // O
  // for convenience
  k_f *= alpha;
  k_r *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = 2.4 * q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = 1.75 * q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor - k_r;
  dqdc[14] = q_nocor + k_f * 2.000000 * sc[14];
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = 15.4 * q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = 3.6 * q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 13] += dqdc[k];
    J[42 * k + 14] += -2 * dqdc[k];
  }
  J[1735] += dqdT;      // dwdot[O2]/dT
  J[1736] += -2 * dqdT; // dwdot[O]/dT

  // reaction 39: HCO + M <=> CO + H + M
  // a third-body and non-pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[6] + (1.75 - 1) * sc[8] + (0 - 1) * sc[17] +
          (3.6 - 1) * sc[25];
  // forward
  phi_f = sc[22];
  k_f = 187000000000 * exp(-1 * logT - (8554.68331868023) * invT);
  dlnkfdT = -1 * invT + (8554.68331868023) * invT2;
  // reverse
  phi_r = sc[8] * sc[19];
  Kc = refC * exp(-g_RT[8] - g_RT[19] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[22]) + (h_RT[8] + h_RT[19]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  q = alpha * q_nocor;
  dqdT = alpha * (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[19] += q; // H
  wdot[22] -= q; // HCO
  // for convenience
  k_f *= alpha;
  k_r *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = 2 * q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = 1.75 * q_nocor - k_r * sc[19];
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = 0.0;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor - k_r * sc[8];
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor + k_f;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = 3.6 * q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  for (int k = 0; k < 41; k++) {
    J[42 * k + 8] += dqdc[k];
    J[42 * k + 19] += dqdc[k];
    J[42 * k + 22] -= dqdc[k];
  }
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT

  // reaction 40: HCO + H2O <=> CO + H + H2O
  // a third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[22];
  k_f = 2244000000000 * exp(-1 * logT - (8554.68331868023) * invT);
  dlnkfdT = -1 * invT + (8554.68331868023) * invT2;
  // reverse
  phi_r = sc[8] * sc[17] * sc[19];
  Kc = refC * exp(-g_RT[8] - g_RT[19] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[17] + h_RT[22]) + (h_RT[8] + h_RT[17] + h_RT[19]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[19] += q; // H
  wdot[22] -= q; // HCO
  // d()/d[CO]
  dqdci = -k_r * sc[17] * sc[19];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[355] += dqdci; // dwdot[H]/d[CO]
  J[358] -= dqdci; // dwdot[HCO]/d[CO]
  // d()/d[H2O]
  dqdci = +k_f * sc[22] - k_r * sc[8] * sc[19];
  J[722] += dqdci; // dwdot[CO]/d[H2O]
  J[733] += dqdci; // dwdot[H]/d[H2O]
  J[736] -= dqdci; // dwdot[HCO]/d[H2O]
  // d()/d[H]
  dqdci = -k_r * sc[8] * sc[17];
  J[806] += dqdci; // dwdot[CO]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[820] -= dqdci; // dwdot[HCO]/d[H]
  // d()/d[HCO]
  dqdci = +k_f * sc[17];
  J[932] += dqdci; // dwdot[CO]/d[HCO]
  J[943] += dqdci; // dwdot[H]/d[HCO]
  J[946] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT

  // reaction 0: POSF10325 => 1.74268 C2H4 + 0.819058 C3H6 + 0.261401 C4H81 +
  // 0.163333 C6H5CH3 + 0.17 C6H6 + 1.5 CH3 + 0.5 H + 0.0871338 iC4H8 a
  // non-third-body and non-pressure-fall-off reaction forward
  phi_f = sc[0];
  k_f = 1.53e+27 * exp(-2.58 * logT - (44130.5919410765) * invT);
  dlnkfdT = -2.58 * invT + (44130.5919410765) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;              // POSF10325
  wdot[1] += 1.7426762 * q;  // C2H4
  wdot[3] += 0.8190578 * q;  // C3H6
  wdot[4] += 0.0871338 * q;  // iC4H8
  wdot[5] += 0.2614014 * q;  // C4H81
  wdot[9] += 0.17 * q;       // C6H6
  wdot[11] += 0.1633333 * q; // C6H5CH3
  wdot[12] += 1.5 * q;       // CH3
  wdot[19] += 0.5 * q;       // H
  // d()/d[POSF10325]
  dqdci = +k_f;
  J[0] -= dqdci;              // dwdot[POSF10325]/d[POSF10325]
  J[1] += 1.7426762 * dqdci;  // dwdot[C2H4]/d[POSF10325]
  J[3] += 0.8190578 * dqdci;  // dwdot[C3H6]/d[POSF10325]
  J[4] += 0.0871338 * dqdci;  // dwdot[iC4H8]/d[POSF10325]
  J[5] += 0.2614014 * dqdci;  // dwdot[C4H81]/d[POSF10325]
  J[9] += 0.17 * dqdci;       // dwdot[C6H6]/d[POSF10325]
  J[11] += 0.1633333 * dqdci; // dwdot[C6H5CH3]/d[POSF10325]
  J[12] += 1.5 * dqdci;       // dwdot[CH3]/d[POSF10325]
  J[19] += 0.5 * dqdci;       // dwdot[H]/d[POSF10325]
  // d()/dT
  J[1722] -= dqdT;             // dwdot[POSF10325]/dT
  J[1723] += 1.7426762 * dqdT; // dwdot[C2H4]/dT
  J[1725] += 0.8190578 * dqdT; // dwdot[C3H6]/dT
  J[1726] += 0.0871338 * dqdT; // dwdot[iC4H8]/dT
  J[1727] += 0.2614014 * dqdT; // dwdot[C4H81]/dT
  J[1731] += 0.17 * dqdT;      // dwdot[C6H6]/dT
  J[1733] += 0.1633333 * dqdT; // dwdot[C6H5CH3]/dT
  J[1734] += 1.5 * dqdT;       // dwdot[CH3]/dT
  J[1741] += 0.5 * dqdT;       // dwdot[H]/dT

  // reaction 1: H + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186 C4H81
  // + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + H2 +
  // 0.0797288 iC4H8 a non-third-body and non-pressure-fall-off reaction forward
  phi_f = sc[0] * sc[19];
  k_f = 7.66e-08 * exp(4.76 * logT - (651.615260550532) * invT);
  dlnkfdT = 4.76 * invT + (651.615260550532) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;              // POSF10325
  wdot[1] += 1.5945764 * q;  // C2H4
  wdot[2] += 0.45 * q;       // CH4
  wdot[3] += 0.7494509 * q;  // C3H6
  wdot[4] += 0.0797288 * q;  // iC4H8
  wdot[5] += 0.2391865 * q;  // C4H81
  wdot[6] += q;              // H2
  wdot[9] += 0.2465 * q;     // C6H6
  wdot[11] += 0.2368333 * q; // C6H5CH3
  wdot[12] += 0.7 * q;       // CH3
  wdot[19] -= 0.7 * q;       // H
  // d()/d[POSF10325]
  dqdci = +k_f * sc[19];
  J[0] -= dqdci;              // dwdot[POSF10325]/d[POSF10325]
  J[1] += 1.5945764 * dqdci;  // dwdot[C2H4]/d[POSF10325]
  J[2] += 0.45 * dqdci;       // dwdot[CH4]/d[POSF10325]
  J[3] += 0.7494509 * dqdci;  // dwdot[C3H6]/d[POSF10325]
  J[4] += 0.0797288 * dqdci;  // dwdot[iC4H8]/d[POSF10325]
  J[5] += 0.2391865 * dqdci;  // dwdot[C4H81]/d[POSF10325]
  J[6] += dqdci;              // dwdot[H2]/d[POSF10325]
  J[9] += 0.2465 * dqdci;     // dwdot[C6H6]/d[POSF10325]
  J[11] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[POSF10325]
  J[12] += 0.7 * dqdci;       // dwdot[CH3]/d[POSF10325]
  J[19] += -0.7 * dqdci;      // dwdot[H]/d[POSF10325]
  // d()/d[H]
  dqdci = +k_f * sc[0];
  J[798] -= dqdci;             // dwdot[POSF10325]/d[H]
  J[799] += 1.5945764 * dqdci; // dwdot[C2H4]/d[H]
  J[800] += 0.45 * dqdci;      // dwdot[CH4]/d[H]
  J[801] += 0.7494509 * dqdci; // dwdot[C3H6]/d[H]
  J[802] += 0.0797288 * dqdci; // dwdot[iC4H8]/d[H]
  J[803] += 0.2391865 * dqdci; // dwdot[C4H81]/d[H]
  J[804] += dqdci;             // dwdot[H2]/d[H]
  J[807] += 0.2465 * dqdci;    // dwdot[C6H6]/d[H]
  J[809] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[H]
  J[810] += 0.7 * dqdci;       // dwdot[CH3]/d[H]
  J[817] += -0.7 * dqdci;      // dwdot[H]/d[H]
  // d()/dT
  J[1722] -= dqdT;             // dwdot[POSF10325]/dT
  J[1723] += 1.5945764 * dqdT; // dwdot[C2H4]/dT
  J[1724] += 0.45 * dqdT;      // dwdot[CH4]/dT
  J[1725] += 0.7494509 * dqdT; // dwdot[C3H6]/dT
  J[1726] += 0.0797288 * dqdT; // dwdot[iC4H8]/dT
  J[1727] += 0.2391865 * dqdT; // dwdot[C4H81]/dT
  J[1728] += dqdT;             // dwdot[H2]/dT
  J[1731] += 0.2465 * dqdT;    // dwdot[C6H6]/dT
  J[1733] += 0.2368333 * dqdT; // dwdot[C6H5CH3]/dT
  J[1734] += 0.7 * dqdT;       // dwdot[CH3]/dT
  J[1741] += -0.7 * dqdT;      // dwdot[H]/dT

  // reaction 2: CH3 + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186
  // C4H81 + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 1.45 CH4 + 0.3 H +
  // 0.0797288 iC4H8 a non-third-body and non-pressure-fall-off reaction forward
  phi_f = sc[0] * sc[12];
  k_f = 3.17e-13 * exp(5.95 * logT - (2892.69068171185) * invT);
  dlnkfdT = 5.95 * invT + (2892.69068171185) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;              // POSF10325
  wdot[1] += 1.5945764 * q;  // C2H4
  wdot[2] += 1.45 * q;       // CH4
  wdot[3] += 0.7494509 * q;  // C3H6
  wdot[4] += 0.0797288 * q;  // iC4H8
  wdot[5] += 0.2391865 * q;  // C4H81
  wdot[9] += 0.2465 * q;     // C6H6
  wdot[11] += 0.2368333 * q; // C6H5CH3
  wdot[12] -= 0.3 * q;       // CH3
  wdot[19] += 0.3 * q;       // H
  // d()/d[POSF10325]
  dqdci = +k_f * sc[12];
  J[0] -= dqdci;              // dwdot[POSF10325]/d[POSF10325]
  J[1] += 1.5945764 * dqdci;  // dwdot[C2H4]/d[POSF10325]
  J[2] += 1.45 * dqdci;       // dwdot[CH4]/d[POSF10325]
  J[3] += 0.7494509 * dqdci;  // dwdot[C3H6]/d[POSF10325]
  J[4] += 0.0797288 * dqdci;  // dwdot[iC4H8]/d[POSF10325]
  J[5] += 0.2391865 * dqdci;  // dwdot[C4H81]/d[POSF10325]
  J[9] += 0.2465 * dqdci;     // dwdot[C6H6]/d[POSF10325]
  J[11] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[POSF10325]
  J[12] += -0.3 * dqdci;      // dwdot[CH3]/d[POSF10325]
  J[19] += 0.3 * dqdci;       // dwdot[H]/d[POSF10325]
  // d()/d[CH3]
  dqdci = +k_f * sc[0];
  J[504] -= dqdci;             // dwdot[POSF10325]/d[CH3]
  J[505] += 1.5945764 * dqdci; // dwdot[C2H4]/d[CH3]
  J[506] += 1.45 * dqdci;      // dwdot[CH4]/d[CH3]
  J[507] += 0.7494509 * dqdci; // dwdot[C3H6]/d[CH3]
  J[508] += 0.0797288 * dqdci; // dwdot[iC4H8]/d[CH3]
  J[509] += 0.2391865 * dqdci; // dwdot[C4H81]/d[CH3]
  J[513] += 0.2465 * dqdci;    // dwdot[C6H6]/d[CH3]
  J[515] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[CH3]
  J[516] += -0.3 * dqdci;      // dwdot[CH3]/d[CH3]
  J[523] += 0.3 * dqdci;       // dwdot[H]/d[CH3]
  // d()/dT
  J[1722] -= dqdT;             // dwdot[POSF10325]/dT
  J[1723] += 1.5945764 * dqdT; // dwdot[C2H4]/dT
  J[1724] += 1.45 * dqdT;      // dwdot[CH4]/dT
  J[1725] += 0.7494509 * dqdT; // dwdot[C3H6]/dT
  J[1726] += 0.0797288 * dqdT; // dwdot[iC4H8]/dT
  J[1727] += 0.2391865 * dqdT; // dwdot[C4H81]/dT
  J[1731] += 0.2465 * dqdT;    // dwdot[C6H6]/dT
  J[1733] += 0.2368333 * dqdT; // dwdot[C6H5CH3]/dT
  J[1734] += -0.3 * dqdT;      // dwdot[CH3]/dT
  J[1741] += 0.3 * dqdT;       // dwdot[H]/dT

  // reaction 3: OH + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186 C4H81
  // + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + H2O +
  // 0.0797288 iC4H8 a non-third-body and non-pressure-fall-off reaction forward
  phi_f = sc[0] * sc[15];
  k_f = 2960 * exp(1.02 * logT - (107.285793149566) * invT);
  dlnkfdT = 1.02 * invT + (107.285793149566) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;              // POSF10325
  wdot[1] += 1.5945764 * q;  // C2H4
  wdot[2] += 0.45 * q;       // CH4
  wdot[3] += 0.7494509 * q;  // C3H6
  wdot[4] += 0.0797288 * q;  // iC4H8
  wdot[5] += 0.2391865 * q;  // C4H81
  wdot[9] += 0.2465 * q;     // C6H6
  wdot[11] += 0.2368333 * q; // C6H5CH3
  wdot[12] += 0.7 * q;       // CH3
  wdot[15] -= q;             // OH
  wdot[17] += q;             // H2O
  wdot[19] += 0.3 * q;       // H
  // d()/d[POSF10325]
  dqdci = +k_f * sc[15];
  J[0] -= dqdci;              // dwdot[POSF10325]/d[POSF10325]
  J[1] += 1.5945764 * dqdci;  // dwdot[C2H4]/d[POSF10325]
  J[2] += 0.45 * dqdci;       // dwdot[CH4]/d[POSF10325]
  J[3] += 0.7494509 * dqdci;  // dwdot[C3H6]/d[POSF10325]
  J[4] += 0.0797288 * dqdci;  // dwdot[iC4H8]/d[POSF10325]
  J[5] += 0.2391865 * dqdci;  // dwdot[C4H81]/d[POSF10325]
  J[9] += 0.2465 * dqdci;     // dwdot[C6H6]/d[POSF10325]
  J[11] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[POSF10325]
  J[12] += 0.7 * dqdci;       // dwdot[CH3]/d[POSF10325]
  J[15] -= dqdci;             // dwdot[OH]/d[POSF10325]
  J[17] += dqdci;             // dwdot[H2O]/d[POSF10325]
  J[19] += 0.3 * dqdci;       // dwdot[H]/d[POSF10325]
  // d()/d[OH]
  dqdci = +k_f * sc[0];
  J[630] -= dqdci;             // dwdot[POSF10325]/d[OH]
  J[631] += 1.5945764 * dqdci; // dwdot[C2H4]/d[OH]
  J[632] += 0.45 * dqdci;      // dwdot[CH4]/d[OH]
  J[633] += 0.7494509 * dqdci; // dwdot[C3H6]/d[OH]
  J[634] += 0.0797288 * dqdci; // dwdot[iC4H8]/d[OH]
  J[635] += 0.2391865 * dqdci; // dwdot[C4H81]/d[OH]
  J[639] += 0.2465 * dqdci;    // dwdot[C6H6]/d[OH]
  J[641] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[OH]
  J[642] += 0.7 * dqdci;       // dwdot[CH3]/d[OH]
  J[645] -= dqdci;             // dwdot[OH]/d[OH]
  J[647] += dqdci;             // dwdot[H2O]/d[OH]
  J[649] += 0.3 * dqdci;       // dwdot[H]/d[OH]
  // d()/dT
  J[1722] -= dqdT;             // dwdot[POSF10325]/dT
  J[1723] += 1.5945764 * dqdT; // dwdot[C2H4]/dT
  J[1724] += 0.45 * dqdT;      // dwdot[CH4]/dT
  J[1725] += 0.7494509 * dqdT; // dwdot[C3H6]/dT
  J[1726] += 0.0797288 * dqdT; // dwdot[iC4H8]/dT
  J[1727] += 0.2391865 * dqdT; // dwdot[C4H81]/dT
  J[1731] += 0.2465 * dqdT;    // dwdot[C6H6]/dT
  J[1733] += 0.2368333 * dqdT; // dwdot[C6H5CH3]/dT
  J[1734] += 0.7 * dqdT;       // dwdot[CH3]/dT
  J[1737] -= dqdT;             // dwdot[OH]/dT
  J[1739] += dqdT;             // dwdot[H2O]/dT
  J[1741] += 0.3 * dqdT;       // dwdot[H]/dT

  // reaction 4: O2 + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186 C4H81
  // + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + HO2 +
  // 0.0797288 iC4H8 a non-third-body and non-pressure-fall-off reaction forward
  phi_f = sc[0] * sc[13];
  k_f = 1780000000 * exp(0.06 * logT - (22409.5464916153) * invT);
  dlnkfdT = 0.06 * invT + (22409.5464916153) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;              // POSF10325
  wdot[1] += 1.5945764 * q;  // C2H4
  wdot[2] += 0.45 * q;       // CH4
  wdot[3] += 0.7494509 * q;  // C3H6
  wdot[4] += 0.0797288 * q;  // iC4H8
  wdot[5] += 0.2391865 * q;  // C4H81
  wdot[9] += 0.2465 * q;     // C6H6
  wdot[11] += 0.2368333 * q; // C6H5CH3
  wdot[12] += 0.7 * q;       // CH3
  wdot[13] -= q;             // O2
  wdot[16] += q;             // HO2
  wdot[19] += 0.3 * q;       // H
  // d()/d[POSF10325]
  dqdci = +k_f * sc[13];
  J[0] -= dqdci;              // dwdot[POSF10325]/d[POSF10325]
  J[1] += 1.5945764 * dqdci;  // dwdot[C2H4]/d[POSF10325]
  J[2] += 0.45 * dqdci;       // dwdot[CH4]/d[POSF10325]
  J[3] += 0.7494509 * dqdci;  // dwdot[C3H6]/d[POSF10325]
  J[4] += 0.0797288 * dqdci;  // dwdot[iC4H8]/d[POSF10325]
  J[5] += 0.2391865 * dqdci;  // dwdot[C4H81]/d[POSF10325]
  J[9] += 0.2465 * dqdci;     // dwdot[C6H6]/d[POSF10325]
  J[11] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[POSF10325]
  J[12] += 0.7 * dqdci;       // dwdot[CH3]/d[POSF10325]
  J[13] -= dqdci;             // dwdot[O2]/d[POSF10325]
  J[16] += dqdci;             // dwdot[HO2]/d[POSF10325]
  J[19] += 0.3 * dqdci;       // dwdot[H]/d[POSF10325]
  // d()/d[O2]
  dqdci = +k_f * sc[0];
  J[546] -= dqdci;             // dwdot[POSF10325]/d[O2]
  J[547] += 1.5945764 * dqdci; // dwdot[C2H4]/d[O2]
  J[548] += 0.45 * dqdci;      // dwdot[CH4]/d[O2]
  J[549] += 0.7494509 * dqdci; // dwdot[C3H6]/d[O2]
  J[550] += 0.0797288 * dqdci; // dwdot[iC4H8]/d[O2]
  J[551] += 0.2391865 * dqdci; // dwdot[C4H81]/d[O2]
  J[555] += 0.2465 * dqdci;    // dwdot[C6H6]/d[O2]
  J[557] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[O2]
  J[558] += 0.7 * dqdci;       // dwdot[CH3]/d[O2]
  J[559] -= dqdci;             // dwdot[O2]/d[O2]
  J[562] += dqdci;             // dwdot[HO2]/d[O2]
  J[565] += 0.3 * dqdci;       // dwdot[H]/d[O2]
  // d()/dT
  J[1722] -= dqdT;             // dwdot[POSF10325]/dT
  J[1723] += 1.5945764 * dqdT; // dwdot[C2H4]/dT
  J[1724] += 0.45 * dqdT;      // dwdot[CH4]/dT
  J[1725] += 0.7494509 * dqdT; // dwdot[C3H6]/dT
  J[1726] += 0.0797288 * dqdT; // dwdot[iC4H8]/dT
  J[1727] += 0.2391865 * dqdT; // dwdot[C4H81]/dT
  J[1731] += 0.2465 * dqdT;    // dwdot[C6H6]/dT
  J[1733] += 0.2368333 * dqdT; // dwdot[C6H5CH3]/dT
  J[1734] += 0.7 * dqdT;       // dwdot[CH3]/dT
  J[1735] -= dqdT;             // dwdot[O2]/dT
  J[1738] += dqdT;             // dwdot[HO2]/dT
  J[1741] += 0.3 * dqdT;       // dwdot[H]/dT

  // reaction 5: HO2 + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186
  // C4H81 + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + H2O2
  // + 0.0797288 iC4H8 a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[16];
  k_f = 0.0698 * exp(2.94 * logT - (6446.20548895846) * invT);
  dlnkfdT = 2.94 * invT + (6446.20548895846) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;              // POSF10325
  wdot[1] += 1.5945764 * q;  // C2H4
  wdot[2] += 0.45 * q;       // CH4
  wdot[3] += 0.7494509 * q;  // C3H6
  wdot[4] += 0.0797288 * q;  // iC4H8
  wdot[5] += 0.2391865 * q;  // C4H81
  wdot[9] += 0.2465 * q;     // C6H6
  wdot[11] += 0.2368333 * q; // C6H5CH3
  wdot[12] += 0.7 * q;       // CH3
  wdot[16] -= q;             // HO2
  wdot[18] += q;             // H2O2
  wdot[19] += 0.3 * q;       // H
  // d()/d[POSF10325]
  dqdci = +k_f * sc[16];
  J[0] -= dqdci;              // dwdot[POSF10325]/d[POSF10325]
  J[1] += 1.5945764 * dqdci;  // dwdot[C2H4]/d[POSF10325]
  J[2] += 0.45 * dqdci;       // dwdot[CH4]/d[POSF10325]
  J[3] += 0.7494509 * dqdci;  // dwdot[C3H6]/d[POSF10325]
  J[4] += 0.0797288 * dqdci;  // dwdot[iC4H8]/d[POSF10325]
  J[5] += 0.2391865 * dqdci;  // dwdot[C4H81]/d[POSF10325]
  J[9] += 0.2465 * dqdci;     // dwdot[C6H6]/d[POSF10325]
  J[11] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[POSF10325]
  J[12] += 0.7 * dqdci;       // dwdot[CH3]/d[POSF10325]
  J[16] -= dqdci;             // dwdot[HO2]/d[POSF10325]
  J[18] += dqdci;             // dwdot[H2O2]/d[POSF10325]
  J[19] += 0.3 * dqdci;       // dwdot[H]/d[POSF10325]
  // d()/d[HO2]
  dqdci = +k_f * sc[0];
  J[672] -= dqdci;             // dwdot[POSF10325]/d[HO2]
  J[673] += 1.5945764 * dqdci; // dwdot[C2H4]/d[HO2]
  J[674] += 0.45 * dqdci;      // dwdot[CH4]/d[HO2]
  J[675] += 0.7494509 * dqdci; // dwdot[C3H6]/d[HO2]
  J[676] += 0.0797288 * dqdci; // dwdot[iC4H8]/d[HO2]
  J[677] += 0.2391865 * dqdci; // dwdot[C4H81]/d[HO2]
  J[681] += 0.2465 * dqdci;    // dwdot[C6H6]/d[HO2]
  J[683] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[HO2]
  J[684] += 0.7 * dqdci;       // dwdot[CH3]/d[HO2]
  J[688] -= dqdci;             // dwdot[HO2]/d[HO2]
  J[690] += dqdci;             // dwdot[H2O2]/d[HO2]
  J[691] += 0.3 * dqdci;       // dwdot[H]/d[HO2]
  // d()/dT
  J[1722] -= dqdT;             // dwdot[POSF10325]/dT
  J[1723] += 1.5945764 * dqdT; // dwdot[C2H4]/dT
  J[1724] += 0.45 * dqdT;      // dwdot[CH4]/dT
  J[1725] += 0.7494509 * dqdT; // dwdot[C3H6]/dT
  J[1726] += 0.0797288 * dqdT; // dwdot[iC4H8]/dT
  J[1727] += 0.2391865 * dqdT; // dwdot[C4H81]/dT
  J[1731] += 0.2465 * dqdT;    // dwdot[C6H6]/dT
  J[1733] += 0.2368333 * dqdT; // dwdot[C6H5CH3]/dT
  J[1734] += 0.7 * dqdT;       // dwdot[CH3]/dT
  J[1738] -= dqdT;             // dwdot[HO2]/dT
  J[1740] += dqdT;             // dwdot[H2O2]/dT
  J[1741] += 0.3 * dqdT;       // dwdot[H]/dT

  // reaction 6: O + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186 C4H81
  // + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + OH +
  // 0.0797288 iC4H8 a non-third-body and non-pressure-fall-off reaction forward
  phi_f = sc[0] * sc[14];
  k_f = 8.94e-05 * exp(3.86 * logT - (385.011071007191) * invT);
  dlnkfdT = 3.86 * invT + (385.011071007191) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;              // POSF10325
  wdot[1] += 1.5945764 * q;  // C2H4
  wdot[2] += 0.45 * q;       // CH4
  wdot[3] += 0.7494509 * q;  // C3H6
  wdot[4] += 0.0797288 * q;  // iC4H8
  wdot[5] += 0.2391865 * q;  // C4H81
  wdot[9] += 0.2465 * q;     // C6H6
  wdot[11] += 0.2368333 * q; // C6H5CH3
  wdot[12] += 0.7 * q;       // CH3
  wdot[14] -= q;             // O
  wdot[15] += q;             // OH
  wdot[19] += 0.3 * q;       // H
  // d()/d[POSF10325]
  dqdci = +k_f * sc[14];
  J[0] -= dqdci;              // dwdot[POSF10325]/d[POSF10325]
  J[1] += 1.5945764 * dqdci;  // dwdot[C2H4]/d[POSF10325]
  J[2] += 0.45 * dqdci;       // dwdot[CH4]/d[POSF10325]
  J[3] += 0.7494509 * dqdci;  // dwdot[C3H6]/d[POSF10325]
  J[4] += 0.0797288 * dqdci;  // dwdot[iC4H8]/d[POSF10325]
  J[5] += 0.2391865 * dqdci;  // dwdot[C4H81]/d[POSF10325]
  J[9] += 0.2465 * dqdci;     // dwdot[C6H6]/d[POSF10325]
  J[11] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[POSF10325]
  J[12] += 0.7 * dqdci;       // dwdot[CH3]/d[POSF10325]
  J[14] -= dqdci;             // dwdot[O]/d[POSF10325]
  J[15] += dqdci;             // dwdot[OH]/d[POSF10325]
  J[19] += 0.3 * dqdci;       // dwdot[H]/d[POSF10325]
  // d()/d[O]
  dqdci = +k_f * sc[0];
  J[588] -= dqdci;             // dwdot[POSF10325]/d[O]
  J[589] += 1.5945764 * dqdci; // dwdot[C2H4]/d[O]
  J[590] += 0.45 * dqdci;      // dwdot[CH4]/d[O]
  J[591] += 0.7494509 * dqdci; // dwdot[C3H6]/d[O]
  J[592] += 0.0797288 * dqdci; // dwdot[iC4H8]/d[O]
  J[593] += 0.2391865 * dqdci; // dwdot[C4H81]/d[O]
  J[597] += 0.2465 * dqdci;    // dwdot[C6H6]/d[O]
  J[599] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[O]
  J[600] += 0.7 * dqdci;       // dwdot[CH3]/d[O]
  J[602] -= dqdci;             // dwdot[O]/d[O]
  J[603] += dqdci;             // dwdot[OH]/d[O]
  J[607] += 0.3 * dqdci;       // dwdot[H]/d[O]
  // d()/dT
  J[1722] -= dqdT;             // dwdot[POSF10325]/dT
  J[1723] += 1.5945764 * dqdT; // dwdot[C2H4]/dT
  J[1724] += 0.45 * dqdT;      // dwdot[CH4]/dT
  J[1725] += 0.7494509 * dqdT; // dwdot[C3H6]/dT
  J[1726] += 0.0797288 * dqdT; // dwdot[iC4H8]/dT
  J[1727] += 0.2391865 * dqdT; // dwdot[C4H81]/dT
  J[1731] += 0.2465 * dqdT;    // dwdot[C6H6]/dT
  J[1733] += 0.2368333 * dqdT; // dwdot[C6H5CH3]/dT
  J[1734] += 0.7 * dqdT;       // dwdot[CH3]/dT
  J[1736] -= dqdT;             // dwdot[O]/dT
  J[1737] += dqdT;             // dwdot[OH]/dT
  J[1741] += 0.3 * dqdT;       // dwdot[H]/dT

  // reaction 7: H + O2 <=> O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[19];
  k_f = 26440000000 * exp(-0.6707 * logT - (8575.31520197823) * invT);
  dlnkfdT = -0.6707 * invT + (8575.31520197823) * invT2;
  // reverse
  phi_r = sc[14] * sc[15];
  Kc = exp(g_RT[13] - g_RT[14] - g_RT[15] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[19]) + (h_RT[14] + h_RT[15]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // O2
  wdot[14] += q; // O
  wdot[15] += q; // OH
  wdot[19] -= q; // H
  // d()/d[O2]
  dqdci = +k_f * sc[19];
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[560] += dqdci; // dwdot[O]/d[O2]
  J[561] += dqdci; // dwdot[OH]/d[O2]
  J[565] -= dqdci; // dwdot[H]/d[O2]
  // d()/d[O]
  dqdci = -k_r * sc[15];
  J[601] -= dqdci; // dwdot[O2]/d[O]
  J[602] += dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[607] -= dqdci; // dwdot[H]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[14];
  J[643] -= dqdci; // dwdot[O2]/d[OH]
  J[644] += dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[649] -= dqdci; // dwdot[H]/d[OH]
  // d()/d[H]
  dqdci = +k_f * sc[13];
  J[811] -= dqdci; // dwdot[O2]/d[H]
  J[812] += dqdci; // dwdot[O]/d[H]
  J[813] += dqdci; // dwdot[OH]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1736] += dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 8: H2 + O <=> H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[14];
  k_f = 0.04589 * exp(2.7 * logT - (3150.13632793755) * invT);
  dlnkfdT = 2.7 * invT + (3150.13632793755) * invT2;
  // reverse
  phi_r = sc[15] * sc[19];
  Kc = exp(g_RT[6] + g_RT[14] - g_RT[15] - g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[14]) + (h_RT[15] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] -= q;  // H2
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[19] += q; // H
  // d()/d[H2]
  dqdci = +k_f * sc[14];
  J[258] -= dqdci; // dwdot[H2]/d[H2]
  J[266] -= dqdci; // dwdot[O]/d[H2]
  J[267] += dqdci; // dwdot[OH]/d[H2]
  J[271] += dqdci; // dwdot[H]/d[H2]
  // d()/d[O]
  dqdci = +k_f * sc[6];
  J[594] -= dqdci; // dwdot[H2]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[607] += dqdci; // dwdot[H]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[19];
  J[636] -= dqdci; // dwdot[H2]/d[OH]
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[649] += dqdci; // dwdot[H]/d[OH]
  // d()/d[H]
  dqdci = -k_r * sc[15];
  J[804] -= dqdci; // dwdot[H2]/d[H]
  J[812] -= dqdci; // dwdot[O]/d[H]
  J[813] += dqdci; // dwdot[OH]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1728] -= dqdT; // dwdot[H2]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1741] += dqdT; // dwdot[H]/dT

  // reaction 9: H2 + OH <=> H + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[15];
  k_f = 173.4 * exp(1.51 * logT - (1726.03316371019) * invT);
  dlnkfdT = 1.51 * invT + (1726.03316371019) * invT2;
  // reverse
  phi_r = sc[17] * sc[19];
  Kc = exp(g_RT[6] + g_RT[15] - g_RT[17] - g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[15]) + (h_RT[17] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] -= q;  // H2
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[19] += q; // H
  // d()/d[H2]
  dqdci = +k_f * sc[15];
  J[258] -= dqdci; // dwdot[H2]/d[H2]
  J[267] -= dqdci; // dwdot[OH]/d[H2]
  J[269] += dqdci; // dwdot[H2O]/d[H2]
  J[271] += dqdci; // dwdot[H]/d[H2]
  // d()/d[OH]
  dqdci = +k_f * sc[6];
  J[636] -= dqdci; // dwdot[H2]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[649] += dqdci; // dwdot[H]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[19];
  J[720] -= dqdci; // dwdot[H2]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[733] += dqdci; // dwdot[H]/d[H2O]
  // d()/d[H]
  dqdci = -k_r * sc[17];
  J[804] -= dqdci; // dwdot[H2]/d[H]
  J[813] -= dqdci; // dwdot[OH]/d[H]
  J[815] += dqdci; // dwdot[H2O]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1728] -= dqdT; // dwdot[H2]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1741] += dqdT; // dwdot[H]/dT

  // reaction 10: 2 OH <=> H2O + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[15] * sc[15]);
  k_f = 0.03973 * exp(2.4 * logT - (-1061.78716484796) * invT);
  dlnkfdT = 2.4 * invT + (-1061.78716484796) * invT2;
  // reverse
  phi_r = sc[14] * sc[17];
  Kc = exp(-g_RT[14] + 2.000000 * g_RT[15] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[15]) + (h_RT[14] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] += q;     // O
  wdot[15] -= 2 * q; // OH
  wdot[17] += q;     // H2O
  // d()/d[O]
  dqdci = -k_r * sc[17];
  J[602] += dqdci;      // dwdot[O]/d[O]
  J[603] += -2 * dqdci; // dwdot[OH]/d[O]
  J[605] += dqdci;      // dwdot[H2O]/d[O]
  // d()/d[OH]
  dqdci = +k_f * 2.000000 * sc[15];
  J[644] += dqdci;      // dwdot[O]/d[OH]
  J[645] += -2 * dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci;      // dwdot[H2O]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[14];
  J[728] += dqdci;      // dwdot[O]/d[H2O]
  J[729] += -2 * dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci;      // dwdot[H2O]/d[H2O]
  // d()/dT
  J[1736] += dqdT;      // dwdot[O]/dT
  J[1737] += -2 * dqdT; // dwdot[OH]/dT
  J[1739] += dqdT;      // dwdot[H2O]/dT

  // reaction 17: H2 + O2 <=> H + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[13];
  k_f = 0.5916 * exp(2.433 * logT - (26923.0980538841) * invT);
  dlnkfdT = 2.433 * invT + (26923.0980538841) * invT2;
  // reverse
  phi_r = sc[16] * sc[19];
  Kc = exp(g_RT[6] + g_RT[13] - g_RT[16] - g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[13]) + (h_RT[16] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] -= q;  // H2
  wdot[13] -= q; // O2
  wdot[16] += q; // HO2
  wdot[19] += q; // H
  // d()/d[H2]
  dqdci = +k_f * sc[13];
  J[258] -= dqdci; // dwdot[H2]/d[H2]
  J[265] -= dqdci; // dwdot[O2]/d[H2]
  J[268] += dqdci; // dwdot[HO2]/d[H2]
  J[271] += dqdci; // dwdot[H]/d[H2]
  // d()/d[O2]
  dqdci = +k_f * sc[6];
  J[552] -= dqdci; // dwdot[H2]/d[O2]
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[562] += dqdci; // dwdot[HO2]/d[O2]
  J[565] += dqdci; // dwdot[H]/d[O2]
  // d()/d[HO2]
  dqdci = -k_r * sc[19];
  J[678] -= dqdci; // dwdot[H2]/d[HO2]
  J[685] -= dqdci; // dwdot[O2]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[691] += dqdci; // dwdot[H]/d[HO2]
  // d()/d[H]
  dqdci = -k_r * sc[16];
  J[804] -= dqdci; // dwdot[H2]/d[H]
  J[811] -= dqdci; // dwdot[O2]/d[H]
  J[814] += dqdci; // dwdot[HO2]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1728] -= dqdT; // dwdot[H2]/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1741] += dqdT; // dwdot[H]/dT

  // reaction 19: H + HO2 <=> 2 OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[19];
  k_f = 74850000 * exp(-(148.448916412392) * invT);
  dlnkfdT = (148.448916412392) * invT2;
  // reverse
  phi_r = (sc[15] * sc[15]);
  Kc = exp(-2.000000 * g_RT[15] + g_RT[16] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[16] + h_RT[19]) + (2.000000 * h_RT[15]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] += 2 * q; // OH
  wdot[16] -= q;     // HO2
  wdot[19] -= q;     // H
  // d()/d[OH]
  dqdci = -k_r * 2.000000 * sc[15];
  J[645] += 2 * dqdci; // dwdot[OH]/d[OH]
  J[646] -= dqdci;     // dwdot[HO2]/d[OH]
  J[649] -= dqdci;     // dwdot[H]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[19];
  J[687] += 2 * dqdci; // dwdot[OH]/d[HO2]
  J[688] -= dqdci;     // dwdot[HO2]/d[HO2]
  J[691] -= dqdci;     // dwdot[H]/d[HO2]
  // d()/d[H]
  dqdci = +k_f * sc[16];
  J[813] += 2 * dqdci; // dwdot[OH]/d[H]
  J[814] -= dqdci;     // dwdot[HO2]/d[H]
  J[817] -= dqdci;     // dwdot[H]/d[H]
  // d()/dT
  J[1737] += 2 * dqdT; // dwdot[OH]/dT
  J[1738] -= dqdT;     // dwdot[HO2]/dT
  J[1741] -= dqdT;     // dwdot[H]/dT

  // reaction 20: HO2 + O <=> O2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[16];
  k_f = 40000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[13] * sc[15];
  Kc = exp(-g_RT[13] + g_RT[14] - g_RT[15] + g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[16]) + (h_RT[13] + h_RT[15]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] += q; // O2
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[16] -= q; // HO2
  // d()/d[O2]
  dqdci = -k_r * sc[15];
  J[559] += dqdci; // dwdot[O2]/d[O2]
  J[560] -= dqdci; // dwdot[O]/d[O2]
  J[561] += dqdci; // dwdot[OH]/d[O2]
  J[562] -= dqdci; // dwdot[HO2]/d[O2]
  // d()/d[O]
  dqdci = +k_f * sc[16];
  J[601] += dqdci; // dwdot[O2]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[604] -= dqdci; // dwdot[HO2]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[13];
  J[643] += dqdci; // dwdot[O2]/d[OH]
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[646] -= dqdci; // dwdot[HO2]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[14];
  J[685] += dqdci; // dwdot[O2]/d[HO2]
  J[686] -= dqdci; // dwdot[O]/d[HO2]
  J[687] += dqdci; // dwdot[OH]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[1735] += dqdT; // dwdot[O2]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT

  // reaction 21: 2 HO2 <=> H2O2 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[16] * sc[16]);
  k_f = 130000 * exp(-(-820.243165261693) * invT);
  dlnkfdT = (-820.243165261693) * invT2;
  // reverse
  phi_r = sc[13] * sc[18];
  Kc = exp(-g_RT[13] + 2.000000 * g_RT[16] - g_RT[18]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[16]) + (h_RT[13] + h_RT[18]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] += q;     // O2
  wdot[16] -= 2 * q; // HO2
  wdot[18] += q;     // H2O2
  // d()/d[O2]
  dqdci = -k_r * sc[18];
  J[559] += dqdci;      // dwdot[O2]/d[O2]
  J[562] += -2 * dqdci; // dwdot[HO2]/d[O2]
  J[564] += dqdci;      // dwdot[H2O2]/d[O2]
  // d()/d[HO2]
  dqdci = +k_f * 2.000000 * sc[16];
  J[685] += dqdci;      // dwdot[O2]/d[HO2]
  J[688] += -2 * dqdci; // dwdot[HO2]/d[HO2]
  J[690] += dqdci;      // dwdot[H2O2]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[13];
  J[769] += dqdci;      // dwdot[O2]/d[H2O2]
  J[772] += -2 * dqdci; // dwdot[HO2]/d[H2O2]
  J[774] += dqdci;      // dwdot[H2O2]/d[H2O2]
  // d()/dT
  J[1735] += dqdT;      // dwdot[O2]/dT
  J[1738] += -2 * dqdT; // dwdot[HO2]/dT
  J[1740] += dqdT;      // dwdot[H2O2]/dT

  // reaction 22: 2 HO2 <=> H2O2 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[16] * sc[16]);
  k_f = 365800000 * exp(-(6038.59998965664) * invT);
  dlnkfdT = (6038.59998965664) * invT2;
  // reverse
  phi_r = sc[13] * sc[18];
  Kc = exp(-g_RT[13] + 2.000000 * g_RT[16] - g_RT[18]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[16]) + (h_RT[13] + h_RT[18]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] += q;     // O2
  wdot[16] -= 2 * q; // HO2
  wdot[18] += q;     // H2O2
  // d()/d[O2]
  dqdci = -k_r * sc[18];
  J[559] += dqdci;      // dwdot[O2]/d[O2]
  J[562] += -2 * dqdci; // dwdot[HO2]/d[O2]
  J[564] += dqdci;      // dwdot[H2O2]/d[O2]
  // d()/d[HO2]
  dqdci = +k_f * 2.000000 * sc[16];
  J[685] += dqdci;      // dwdot[O2]/d[HO2]
  J[688] += -2 * dqdci; // dwdot[HO2]/d[HO2]
  J[690] += dqdci;      // dwdot[H2O2]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[13];
  J[769] += dqdci;      // dwdot[O2]/d[H2O2]
  J[772] += -2 * dqdci; // dwdot[HO2]/d[H2O2]
  J[774] += dqdci;      // dwdot[H2O2]/d[H2O2]
  // d()/dT
  J[1735] += dqdT;      // dwdot[O2]/dT
  J[1738] += -2 * dqdT; // dwdot[HO2]/dT
  J[1740] += dqdT;      // dwdot[H2O2]/dT

  // reaction 23: HO2 + OH <=> H2O + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[16];
  k_f = 1410000000000 * exp(-1.76 * logT - (30.1929999482832) * invT);
  dlnkfdT = -1.76 * invT + (30.1929999482832) * invT2;
  // reverse
  phi_r = sc[13] * sc[17];
  Kc = exp(-g_RT[13] + g_RT[15] + g_RT[16] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[16]) + (h_RT[13] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] += q; // O2
  wdot[15] -= q; // OH
  wdot[16] -= q; // HO2
  wdot[17] += q; // H2O
  // d()/d[O2]
  dqdci = -k_r * sc[17];
  J[559] += dqdci; // dwdot[O2]/d[O2]
  J[561] -= dqdci; // dwdot[OH]/d[O2]
  J[562] -= dqdci; // dwdot[HO2]/d[O2]
  J[563] += dqdci; // dwdot[H2O]/d[O2]
  // d()/d[OH]
  dqdci = +k_f * sc[16];
  J[643] += dqdci; // dwdot[O2]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[646] -= dqdci; // dwdot[HO2]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[15];
  J[685] += dqdci; // dwdot[O2]/d[HO2]
  J[687] -= dqdci; // dwdot[OH]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[689] += dqdci; // dwdot[H2O]/d[HO2]
  // d()/d[H2O]
  dqdci = -k_r * sc[13];
  J[727] += dqdci; // dwdot[O2]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[730] -= dqdci; // dwdot[HO2]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  // d()/dT
  J[1735] += dqdT; // dwdot[O2]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT

  // reaction 24: HO2 + OH <=> H2O + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[16];
  k_f = 5.37e+64 * exp(-16.72 * logT - (16555.8283049753) * invT);
  dlnkfdT = -16.72 * invT + (16555.8283049753) * invT2;
  // reverse
  phi_r = sc[13] * sc[17];
  Kc = exp(-g_RT[13] + g_RT[15] + g_RT[16] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[16]) + (h_RT[13] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] += q; // O2
  wdot[15] -= q; // OH
  wdot[16] -= q; // HO2
  wdot[17] += q; // H2O
  // d()/d[O2]
  dqdci = -k_r * sc[17];
  J[559] += dqdci; // dwdot[O2]/d[O2]
  J[561] -= dqdci; // dwdot[OH]/d[O2]
  J[562] -= dqdci; // dwdot[HO2]/d[O2]
  J[563] += dqdci; // dwdot[H2O]/d[O2]
  // d()/d[OH]
  dqdci = +k_f * sc[16];
  J[643] += dqdci; // dwdot[O2]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[646] -= dqdci; // dwdot[HO2]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[15];
  J[685] += dqdci; // dwdot[O2]/d[HO2]
  J[687] -= dqdci; // dwdot[OH]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[689] += dqdci; // dwdot[H2O]/d[HO2]
  // d()/d[H2O]
  dqdci = -k_r * sc[13];
  J[727] += dqdci; // dwdot[O2]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[730] -= dqdci; // dwdot[HO2]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  // d()/dT
  J[1735] += dqdT; // dwdot[O2]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT

  // reaction 25: HO2 + OH <=> H2O + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[16];
  k_f = 2510000 * exp(2 * logT - (20128.6666321888) * invT);
  dlnkfdT = 2 * invT + (20128.6666321888) * invT2;
  // reverse
  phi_r = sc[13] * sc[17];
  Kc = exp(-g_RT[13] + g_RT[15] + g_RT[16] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[16]) + (h_RT[13] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] += q; // O2
  wdot[15] -= q; // OH
  wdot[16] -= q; // HO2
  wdot[17] += q; // H2O
  // d()/d[O2]
  dqdci = -k_r * sc[17];
  J[559] += dqdci; // dwdot[O2]/d[O2]
  J[561] -= dqdci; // dwdot[OH]/d[O2]
  J[562] -= dqdci; // dwdot[HO2]/d[O2]
  J[563] += dqdci; // dwdot[H2O]/d[O2]
  // d()/d[OH]
  dqdci = +k_f * sc[16];
  J[643] += dqdci; // dwdot[O2]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[646] -= dqdci; // dwdot[HO2]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[15];
  J[685] += dqdci; // dwdot[O2]/d[HO2]
  J[687] -= dqdci; // dwdot[OH]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[689] += dqdci; // dwdot[H2O]/d[HO2]
  // d()/d[H2O]
  dqdci = -k_r * sc[13];
  J[727] += dqdci; // dwdot[O2]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[730] -= dqdci; // dwdot[HO2]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  // d()/dT
  J[1735] += dqdT; // dwdot[O2]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT

  // reaction 26: H + H2O2 <=> H2 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[18] * sc[19];
  k_f = 6.05 * exp(2 * logT - (2616.72666218454) * invT);
  dlnkfdT = 2 * invT + (2616.72666218454) * invT2;
  // reverse
  phi_r = sc[6] * sc[16];
  Kc = exp(-g_RT[6] - g_RT[16] + g_RT[18] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[18] + h_RT[19]) + (h_RT[6] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2
  wdot[16] += q; // HO2
  wdot[18] -= q; // H2O2
  wdot[19] -= q; // H
  // d()/d[H2]
  dqdci = -k_r * sc[16];
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[268] += dqdci; // dwdot[HO2]/d[H2]
  J[270] -= dqdci; // dwdot[H2O2]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  // d()/d[HO2]
  dqdci = -k_r * sc[6];
  J[678] += dqdci; // dwdot[H2]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[690] -= dqdci; // dwdot[H2O2]/d[HO2]
  J[691] -= dqdci; // dwdot[H]/d[HO2]
  // d()/d[H2O2]
  dqdci = +k_f * sc[19];
  J[762] += dqdci; // dwdot[H2]/d[H2O2]
  J[772] += dqdci; // dwdot[HO2]/d[H2O2]
  J[774] -= dqdci; // dwdot[H2O2]/d[H2O2]
  J[775] -= dqdci; // dwdot[H]/d[H2O2]
  // d()/d[H]
  dqdci = +k_f * sc[18];
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[814] += dqdci; // dwdot[HO2]/d[H]
  J[816] -= dqdci; // dwdot[H2O2]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1740] -= dqdT; // dwdot[H2O2]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 27: H + H2O2 <=> H2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[18] * sc[19];
  k_f = 24100000 * exp(-(1997.77016324474) * invT);
  dlnkfdT = (1997.77016324474) * invT2;
  // reverse
  phi_r = sc[15] * sc[17];
  Kc = exp(-g_RT[15] - g_RT[17] + g_RT[18] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[18] + h_RT[19]) + (h_RT[15] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] += q; // OH
  wdot[17] += q; // H2O
  wdot[18] -= q; // H2O2
  wdot[19] -= q; // H
  // d()/d[OH]
  dqdci = -k_r * sc[17];
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[648] -= dqdci; // dwdot[H2O2]/d[OH]
  J[649] -= dqdci; // dwdot[H]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[15];
  J[729] += dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[732] -= dqdci; // dwdot[H2O2]/d[H2O]
  J[733] -= dqdci; // dwdot[H]/d[H2O]
  // d()/d[H2O2]
  dqdci = +k_f * sc[19];
  J[771] += dqdci; // dwdot[OH]/d[H2O2]
  J[773] += dqdci; // dwdot[H2O]/d[H2O2]
  J[774] -= dqdci; // dwdot[H2O2]/d[H2O2]
  J[775] -= dqdci; // dwdot[H]/d[H2O2]
  // d()/d[H]
  dqdci = +k_f * sc[18];
  J[813] += dqdci; // dwdot[OH]/d[H]
  J[815] += dqdci; // dwdot[H2O]/d[H]
  J[816] -= dqdci; // dwdot[H2O2]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1740] -= dqdT; // dwdot[H2O2]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 28: H2O2 + O <=> HO2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[18];
  k_f = 9.63 * exp(2 * logT - (1997.77016324474) * invT);
  dlnkfdT = 2 * invT + (1997.77016324474) * invT2;
  // reverse
  phi_r = sc[15] * sc[16];
  Kc = exp(g_RT[14] - g_RT[15] - g_RT[16] + g_RT[18]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[18]) + (h_RT[15] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[16] += q; // HO2
  wdot[18] -= q; // H2O2
  // d()/d[O]
  dqdci = +k_f * sc[18];
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[604] += dqdci; // dwdot[HO2]/d[O]
  J[606] -= dqdci; // dwdot[H2O2]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[16];
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[646] += dqdci; // dwdot[HO2]/d[OH]
  J[648] -= dqdci; // dwdot[H2O2]/d[OH]
  // d()/d[HO2]
  dqdci = -k_r * sc[15];
  J[686] -= dqdci; // dwdot[O]/d[HO2]
  J[687] += dqdci; // dwdot[OH]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[690] -= dqdci; // dwdot[H2O2]/d[HO2]
  // d()/d[H2O2]
  dqdci = +k_f * sc[14];
  J[770] -= dqdci; // dwdot[O]/d[H2O2]
  J[771] += dqdci; // dwdot[OH]/d[H2O2]
  J[772] += dqdci; // dwdot[HO2]/d[H2O2]
  J[774] -= dqdci; // dwdot[H2O2]/d[H2O2]
  // d()/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1740] -= dqdT; // dwdot[H2O2]/dT

  // reaction 29: H2O2 + OH <=> H2O + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[18];
  k_f = 2.67e+35 * exp(-7 * logT - (18920.9466342575) * invT);
  dlnkfdT = -7 * invT + (18920.9466342575) * invT2;
  // reverse
  phi_r = sc[16] * sc[17];
  Kc = exp(g_RT[15] - g_RT[16] - g_RT[17] + g_RT[18]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[18]) + (h_RT[16] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] -= q; // OH
  wdot[16] += q; // HO2
  wdot[17] += q; // H2O
  wdot[18] -= q; // H2O2
  // d()/d[OH]
  dqdci = +k_f * sc[18];
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[646] += dqdci; // dwdot[HO2]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[648] -= dqdci; // dwdot[H2O2]/d[OH]
  // d()/d[HO2]
  dqdci = -k_r * sc[17];
  J[687] -= dqdci; // dwdot[OH]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[689] += dqdci; // dwdot[H2O]/d[HO2]
  J[690] -= dqdci; // dwdot[H2O2]/d[HO2]
  // d()/d[H2O]
  dqdci = -k_r * sc[16];
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[730] += dqdci; // dwdot[HO2]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[732] -= dqdci; // dwdot[H2O2]/d[H2O]
  // d()/d[H2O2]
  dqdci = +k_f * sc[15];
  J[771] -= dqdci; // dwdot[OH]/d[H2O2]
  J[772] += dqdci; // dwdot[HO2]/d[H2O2]
  J[773] += dqdci; // dwdot[H2O]/d[H2O2]
  J[774] -= dqdci; // dwdot[H2O2]/d[H2O2]
  // d()/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1740] -= dqdT; // dwdot[H2O2]/dT

  // reaction 31: CO + OH <=> CO2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[15];
  k_f = 0.07046 * exp(2.053 * logT - (-178.979071526765) * invT);
  dlnkfdT = 2.053 * invT + (-178.979071526765) * invT2;
  // reverse
  phi_r = sc[19] * sc[25];
  Kc = exp(g_RT[8] + g_RT[15] - g_RT[19] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[15]) + (h_RT[19] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] -= q;  // CO
  wdot[15] -= q; // OH
  wdot[19] += q; // H
  wdot[25] += q; // CO2
  // d()/d[CO]
  dqdci = +k_f * sc[15];
  J[344] -= dqdci; // dwdot[CO]/d[CO]
  J[351] -= dqdci; // dwdot[OH]/d[CO]
  J[355] += dqdci; // dwdot[H]/d[CO]
  J[361] += dqdci; // dwdot[CO2]/d[CO]
  // d()/d[OH]
  dqdci = +k_f * sc[8];
  J[638] -= dqdci; // dwdot[CO]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[649] += dqdci; // dwdot[H]/d[OH]
  J[655] += dqdci; // dwdot[CO2]/d[OH]
  // d()/d[H]
  dqdci = -k_r * sc[25];
  J[806] -= dqdci; // dwdot[CO]/d[H]
  J[813] -= dqdci; // dwdot[OH]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[823] += dqdci; // dwdot[CO2]/d[H]
  // d()/d[CO2]
  dqdci = -k_r * sc[19];
  J[1058] -= dqdci; // dwdot[CO]/d[CO2]
  J[1065] -= dqdci; // dwdot[OH]/d[CO2]
  J[1069] += dqdci; // dwdot[H]/d[CO2]
  J[1075] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[1730] -= dqdT; // dwdot[CO]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1747] += dqdT; // dwdot[CO2]/dT

  // reaction 32: CO + OH <=> CO2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[15];
  k_f = 5757000 * exp(-0.664 * logT - (166.98238621398) * invT);
  dlnkfdT = -0.664 * invT + (166.98238621398) * invT2;
  // reverse
  phi_r = sc[19] * sc[25];
  Kc = exp(g_RT[8] + g_RT[15] - g_RT[19] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[15]) + (h_RT[19] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] -= q;  // CO
  wdot[15] -= q; // OH
  wdot[19] += q; // H
  wdot[25] += q; // CO2
  // d()/d[CO]
  dqdci = +k_f * sc[15];
  J[344] -= dqdci; // dwdot[CO]/d[CO]
  J[351] -= dqdci; // dwdot[OH]/d[CO]
  J[355] += dqdci; // dwdot[H]/d[CO]
  J[361] += dqdci; // dwdot[CO2]/d[CO]
  // d()/d[OH]
  dqdci = +k_f * sc[8];
  J[638] -= dqdci; // dwdot[CO]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[649] += dqdci; // dwdot[H]/d[OH]
  J[655] += dqdci; // dwdot[CO2]/d[OH]
  // d()/d[H]
  dqdci = -k_r * sc[25];
  J[806] -= dqdci; // dwdot[CO]/d[H]
  J[813] -= dqdci; // dwdot[OH]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[823] += dqdci; // dwdot[CO2]/d[H]
  // d()/d[CO2]
  dqdci = -k_r * sc[19];
  J[1058] -= dqdci; // dwdot[CO]/d[CO2]
  J[1065] -= dqdci; // dwdot[OH]/d[CO2]
  J[1069] += dqdci; // dwdot[H]/d[CO2]
  J[1075] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[1730] -= dqdT; // dwdot[CO]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1747] += dqdT; // dwdot[CO2]/dT

  // reaction 33: CO + O2 <=> CO2 + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[13];
  k_f = 1119000 * exp(-(24003.4349588851) * invT);
  dlnkfdT = (24003.4349588851) * invT2;
  // reverse
  phi_r = sc[14] * sc[25];
  Kc = exp(g_RT[8] + g_RT[13] - g_RT[14] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[13]) + (h_RT[14] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] -= q;  // CO
  wdot[13] -= q; // O2
  wdot[14] += q; // O
  wdot[25] += q; // CO2
  // d()/d[CO]
  dqdci = +k_f * sc[13];
  J[344] -= dqdci; // dwdot[CO]/d[CO]
  J[349] -= dqdci; // dwdot[O2]/d[CO]
  J[350] += dqdci; // dwdot[O]/d[CO]
  J[361] += dqdci; // dwdot[CO2]/d[CO]
  // d()/d[O2]
  dqdci = +k_f * sc[8];
  J[554] -= dqdci; // dwdot[CO]/d[O2]
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[560] += dqdci; // dwdot[O]/d[O2]
  J[571] += dqdci; // dwdot[CO2]/d[O2]
  // d()/d[O]
  dqdci = -k_r * sc[25];
  J[596] -= dqdci; // dwdot[CO]/d[O]
  J[601] -= dqdci; // dwdot[O2]/d[O]
  J[602] += dqdci; // dwdot[O]/d[O]
  J[613] += dqdci; // dwdot[CO2]/d[O]
  // d()/d[CO2]
  dqdci = -k_r * sc[14];
  J[1058] -= dqdci; // dwdot[CO]/d[CO2]
  J[1063] -= dqdci; // dwdot[O2]/d[CO2]
  J[1064] += dqdci; // dwdot[O]/d[CO2]
  J[1075] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[1730] -= dqdT; // dwdot[CO]/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1736] += dqdT; // dwdot[O]/dT
  J[1747] += dqdT; // dwdot[CO2]/dT

  // reaction 34: CO + HO2 <=> CO2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[16];
  k_f = 0.157 * exp(2.18 * logT - (9029.02038003442) * invT);
  dlnkfdT = 2.18 * invT + (9029.02038003442) * invT2;
  // reverse
  phi_r = sc[15] * sc[25];
  Kc = exp(g_RT[8] - g_RT[15] + g_RT[16] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[16]) + (h_RT[15] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] -= q;  // CO
  wdot[15] += q; // OH
  wdot[16] -= q; // HO2
  wdot[25] += q; // CO2
  // d()/d[CO]
  dqdci = +k_f * sc[16];
  J[344] -= dqdci; // dwdot[CO]/d[CO]
  J[351] += dqdci; // dwdot[OH]/d[CO]
  J[352] -= dqdci; // dwdot[HO2]/d[CO]
  J[361] += dqdci; // dwdot[CO2]/d[CO]
  // d()/d[OH]
  dqdci = -k_r * sc[25];
  J[638] -= dqdci; // dwdot[CO]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[646] -= dqdci; // dwdot[HO2]/d[OH]
  J[655] += dqdci; // dwdot[CO2]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[8];
  J[680] -= dqdci; // dwdot[CO]/d[HO2]
  J[687] += dqdci; // dwdot[OH]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[697] += dqdci; // dwdot[CO2]/d[HO2]
  // d()/d[CO2]
  dqdci = -k_r * sc[15];
  J[1058] -= dqdci; // dwdot[CO]/d[CO2]
  J[1065] += dqdci; // dwdot[OH]/d[CO2]
  J[1066] -= dqdci; // dwdot[HO2]/d[CO2]
  J[1075] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[1730] -= dqdT; // dwdot[CO]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1747] += dqdT; // dwdot[CO2]/dT

  // reaction 35: H + HCO <=> CO + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[22];
  k_f = 120000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[8];
  Kc = exp(-g_RT[6] - g_RT[8] + g_RT[19] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[22]) + (h_RT[6] + h_RT[8]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2
  wdot[8] += q;  // CO
  wdot[19] -= q; // H
  wdot[22] -= q; // HCO
  // d()/d[H2]
  dqdci = -k_r * sc[8];
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[260] += dqdci; // dwdot[CO]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[274] -= dqdci; // dwdot[HCO]/d[H2]
  // d()/d[CO]
  dqdci = -k_r * sc[6];
  J[342] += dqdci; // dwdot[H2]/d[CO]
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[355] -= dqdci; // dwdot[H]/d[CO]
  J[358] -= dqdci; // dwdot[HCO]/d[CO]
  // d()/d[H]
  dqdci = +k_f * sc[22];
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[806] += dqdci; // dwdot[CO]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[820] -= dqdci; // dwdot[HCO]/d[H]
  // d()/d[HCO]
  dqdci = +k_f * sc[19];
  J[930] += dqdci; // dwdot[H2]/d[HCO]
  J[932] += dqdci; // dwdot[CO]/d[HCO]
  J[943] -= dqdci; // dwdot[H]/d[HCO]
  J[946] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT

  // reaction 36: HCO + O <=> CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[22];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[15];
  Kc = exp(-g_RT[8] + g_RT[14] - g_RT[15] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[22]) + (h_RT[8] + h_RT[15]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[22] -= q; // HCO
  // d()/d[CO]
  dqdci = -k_r * sc[15];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[350] -= dqdci; // dwdot[O]/d[CO]
  J[351] += dqdci; // dwdot[OH]/d[CO]
  J[358] -= dqdci; // dwdot[HCO]/d[CO]
  // d()/d[O]
  dqdci = +k_f * sc[22];
  J[596] += dqdci; // dwdot[CO]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[610] -= dqdci; // dwdot[HCO]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[8];
  J[638] += dqdci; // dwdot[CO]/d[OH]
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[652] -= dqdci; // dwdot[HCO]/d[OH]
  // d()/d[HCO]
  dqdci = +k_f * sc[14];
  J[932] += dqdci; // dwdot[CO]/d[HCO]
  J[938] -= dqdci; // dwdot[O]/d[HCO]
  J[939] += dqdci; // dwdot[OH]/d[HCO]
  J[946] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT

  // reaction 37: HCO + O <=> CO2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[22];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[19] * sc[25];
  Kc = exp(g_RT[14] - g_RT[19] + g_RT[22] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[22]) + (h_RT[19] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[19] += q; // H
  wdot[22] -= q; // HCO
  wdot[25] += q; // CO2
  // d()/d[O]
  dqdci = +k_f * sc[22];
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[607] += dqdci; // dwdot[H]/d[O]
  J[610] -= dqdci; // dwdot[HCO]/d[O]
  J[613] += dqdci; // dwdot[CO2]/d[O]
  // d()/d[H]
  dqdci = -k_r * sc[25];
  J[812] -= dqdci; // dwdot[O]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[820] -= dqdci; // dwdot[HCO]/d[H]
  J[823] += dqdci; // dwdot[CO2]/d[H]
  // d()/d[HCO]
  dqdci = +k_f * sc[14];
  J[938] -= dqdci; // dwdot[O]/d[HCO]
  J[943] += dqdci; // dwdot[H]/d[HCO]
  J[946] -= dqdci; // dwdot[HCO]/d[HCO]
  J[949] += dqdci; // dwdot[CO2]/d[HCO]
  // d()/d[CO2]
  dqdci = -k_r * sc[19];
  J[1064] -= dqdci; // dwdot[O]/d[CO2]
  J[1069] += dqdci; // dwdot[H]/d[CO2]
  J[1072] -= dqdci; // dwdot[HCO]/d[CO2]
  J[1075] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT
  J[1747] += dqdT; // dwdot[CO2]/dT

  // reaction 38: HCO + OH <=> CO + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[22];
  k_f = 30200000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[17];
  Kc = exp(-g_RT[8] + g_RT[15] - g_RT[17] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[22]) + (h_RT[8] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[22] -= q; // HCO
  // d()/d[CO]
  dqdci = -k_r * sc[17];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[351] -= dqdci; // dwdot[OH]/d[CO]
  J[353] += dqdci; // dwdot[H2O]/d[CO]
  J[358] -= dqdci; // dwdot[HCO]/d[CO]
  // d()/d[OH]
  dqdci = +k_f * sc[22];
  J[638] += dqdci; // dwdot[CO]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[652] -= dqdci; // dwdot[HCO]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[8];
  J[722] += dqdci; // dwdot[CO]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[736] -= dqdci; // dwdot[HCO]/d[H2O]
  // d()/d[HCO]
  dqdci = +k_f * sc[15];
  J[932] += dqdci; // dwdot[CO]/d[HCO]
  J[939] -= dqdci; // dwdot[OH]/d[HCO]
  J[941] += dqdci; // dwdot[H2O]/d[HCO]
  J[946] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT

  // reaction 41: HCO + O2 <=> CO + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[22];
  k_f = 12040 * exp(0.807 * logT - (-365.838516040031) * invT);
  dlnkfdT = 0.807 * invT + (-365.838516040031) * invT2;
  // reverse
  phi_r = sc[8] * sc[16];
  Kc = exp(-g_RT[8] + g_RT[13] - g_RT[16] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[22]) + (h_RT[8] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[13] -= q; // O2
  wdot[16] += q; // HO2
  wdot[22] -= q; // HCO
  // d()/d[CO]
  dqdci = -k_r * sc[16];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[349] -= dqdci; // dwdot[O2]/d[CO]
  J[352] += dqdci; // dwdot[HO2]/d[CO]
  J[358] -= dqdci; // dwdot[HCO]/d[CO]
  // d()/d[O2]
  dqdci = +k_f * sc[22];
  J[554] += dqdci; // dwdot[CO]/d[O2]
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[562] += dqdci; // dwdot[HO2]/d[O2]
  J[568] -= dqdci; // dwdot[HCO]/d[O2]
  // d()/d[HO2]
  dqdci = -k_r * sc[8];
  J[680] += dqdci; // dwdot[CO]/d[HO2]
  J[685] -= dqdci; // dwdot[O2]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[694] -= dqdci; // dwdot[HCO]/d[HO2]
  // d()/d[HCO]
  dqdci = +k_f * sc[13];
  J[932] += dqdci; // dwdot[CO]/d[HCO]
  J[937] -= dqdci; // dwdot[O2]/d[HCO]
  J[940] += dqdci; // dwdot[HO2]/d[HCO]
  J[946] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT

  // reaction 45: CH2 + O <=> H + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[20];
  k_f = 80000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[19] * sc[22];
  Kc = exp(g_RT[14] - g_RT[19] + g_RT[20] - g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[20]) + (h_RT[19] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[19] += q; // H
  wdot[20] -= q; // CH2
  wdot[22] += q; // HCO
  // d()/d[O]
  dqdci = +k_f * sc[20];
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[607] += dqdci; // dwdot[H]/d[O]
  J[608] -= dqdci; // dwdot[CH2]/d[O]
  J[610] += dqdci; // dwdot[HCO]/d[O]
  // d()/d[H]
  dqdci = -k_r * sc[22];
  J[812] -= dqdci; // dwdot[O]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[818] -= dqdci; // dwdot[CH2]/d[H]
  J[820] += dqdci; // dwdot[HCO]/d[H]
  // d()/d[CH2]
  dqdci = +k_f * sc[14];
  J[854] -= dqdci; // dwdot[O]/d[CH2]
  J[859] += dqdci; // dwdot[H]/d[CH2]
  J[860] -= dqdci; // dwdot[CH2]/d[CH2]
  J[862] += dqdci; // dwdot[HCO]/d[CH2]
  // d()/d[HCO]
  dqdci = -k_r * sc[19];
  J[938] -= dqdci; // dwdot[O]/d[HCO]
  J[943] += dqdci; // dwdot[H]/d[HCO]
  J[944] -= dqdci; // dwdot[CH2]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1742] -= dqdT; // dwdot[CH2]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT

  // reaction 46: CH2 + OH <=> CH2O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[20];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[19] * sc[23];
  Kc = exp(g_RT[15] - g_RT[19] + g_RT[20] - g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[20]) + (h_RT[19] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] -= q; // OH
  wdot[19] += q; // H
  wdot[20] -= q; // CH2
  wdot[23] += q; // CH2O
  // d()/d[OH]
  dqdci = +k_f * sc[20];
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[649] += dqdci; // dwdot[H]/d[OH]
  J[650] -= dqdci; // dwdot[CH2]/d[OH]
  J[653] += dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[H]
  dqdci = -k_r * sc[23];
  J[813] -= dqdci; // dwdot[OH]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[818] -= dqdci; // dwdot[CH2]/d[H]
  J[821] += dqdci; // dwdot[CH2O]/d[H]
  // d()/d[CH2]
  dqdci = +k_f * sc[15];
  J[855] -= dqdci; // dwdot[OH]/d[CH2]
  J[859] += dqdci; // dwdot[H]/d[CH2]
  J[860] -= dqdci; // dwdot[CH2]/d[CH2]
  J[863] += dqdci; // dwdot[CH2O]/d[CH2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[19];
  J[981] -= dqdci; // dwdot[OH]/d[CH2O]
  J[985] += dqdci; // dwdot[H]/d[CH2O]
  J[986] -= dqdci; // dwdot[CH2]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1742] -= dqdT; // dwdot[CH2]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT

  // reaction 47: CH2 + H2 <=> CH3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[20];
  k_f = 0.5 * exp(2 * logT - (3638.25649376812) * invT);
  dlnkfdT = 2 * invT + (3638.25649376812) * invT2;
  // reverse
  phi_r = sc[12] * sc[19];
  Kc = exp(g_RT[6] - g_RT[12] - g_RT[19] + g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[20]) + (h_RT[12] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] -= q;  // H2
  wdot[12] += q; // CH3
  wdot[19] += q; // H
  wdot[20] -= q; // CH2
  // d()/d[H2]
  dqdci = +k_f * sc[20];
  J[258] -= dqdci; // dwdot[H2]/d[H2]
  J[264] += dqdci; // dwdot[CH3]/d[H2]
  J[271] += dqdci; // dwdot[H]/d[H2]
  J[272] -= dqdci; // dwdot[CH2]/d[H2]
  // d()/d[CH3]
  dqdci = -k_r * sc[19];
  J[510] -= dqdci; // dwdot[H2]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[523] += dqdci; // dwdot[H]/d[CH3]
  J[524] -= dqdci; // dwdot[CH2]/d[CH3]
  // d()/d[H]
  dqdci = -k_r * sc[12];
  J[804] -= dqdci; // dwdot[H2]/d[H]
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[818] -= dqdci; // dwdot[CH2]/d[H]
  // d()/d[CH2]
  dqdci = +k_f * sc[6];
  J[846] -= dqdci; // dwdot[H2]/d[CH2]
  J[852] += dqdci; // dwdot[CH3]/d[CH2]
  J[859] += dqdci; // dwdot[H]/d[CH2]
  J[860] -= dqdci; // dwdot[CH2]/d[CH2]
  // d()/dT
  J[1728] -= dqdT; // dwdot[H2]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1742] -= dqdT; // dwdot[CH2]/dT

  // reaction 48: CH2 + O2 <=> HCO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[20];
  k_f = 10600000 * exp(-(754.82499870708) * invT);
  dlnkfdT = (754.82499870708) * invT2;
  // reverse
  phi_r = sc[15] * sc[22];
  Kc = exp(g_RT[13] - g_RT[15] + g_RT[20] - g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[20]) + (h_RT[15] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // O2
  wdot[15] += q; // OH
  wdot[20] -= q; // CH2
  wdot[22] += q; // HCO
  // d()/d[O2]
  dqdci = +k_f * sc[20];
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[561] += dqdci; // dwdot[OH]/d[O2]
  J[566] -= dqdci; // dwdot[CH2]/d[O2]
  J[568] += dqdci; // dwdot[HCO]/d[O2]
  // d()/d[OH]
  dqdci = -k_r * sc[22];
  J[643] -= dqdci; // dwdot[O2]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[650] -= dqdci; // dwdot[CH2]/d[OH]
  J[652] += dqdci; // dwdot[HCO]/d[OH]
  // d()/d[CH2]
  dqdci = +k_f * sc[13];
  J[853] -= dqdci; // dwdot[O2]/d[CH2]
  J[855] += dqdci; // dwdot[OH]/d[CH2]
  J[860] -= dqdci; // dwdot[CH2]/d[CH2]
  J[862] += dqdci; // dwdot[HCO]/d[CH2]
  // d()/d[HCO]
  dqdci = -k_r * sc[15];
  J[937] -= dqdci; // dwdot[O2]/d[HCO]
  J[939] += dqdci; // dwdot[OH]/d[HCO]
  J[944] -= dqdci; // dwdot[CH2]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1742] -= dqdT; // dwdot[CH2]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT

  // reaction 49: CH2 + O2 <=> CO2 + 2 H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[20];
  k_f = 2640000 * exp(-(754.82499870708) * invT);
  dlnkfdT = (754.82499870708) * invT2;
  // reverse
  phi_r = (sc[19] * sc[19]) * sc[25];
  Kc = refC * exp(g_RT[13] - 2.000000 * g_RT[19] + g_RT[20] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[20]) + (2.000000 * h_RT[19] + h_RT[25]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q;     // O2
  wdot[19] += 2 * q; // H
  wdot[20] -= q;     // CH2
  wdot[25] += q;     // CO2
  // d()/d[O2]
  dqdci = +k_f * sc[20];
  J[559] -= dqdci;     // dwdot[O2]/d[O2]
  J[565] += 2 * dqdci; // dwdot[H]/d[O2]
  J[566] -= dqdci;     // dwdot[CH2]/d[O2]
  J[571] += dqdci;     // dwdot[CO2]/d[O2]
  // d()/d[H]
  dqdci = -k_r * 2.000000 * sc[19] * sc[25];
  J[811] -= dqdci;     // dwdot[O2]/d[H]
  J[817] += 2 * dqdci; // dwdot[H]/d[H]
  J[818] -= dqdci;     // dwdot[CH2]/d[H]
  J[823] += dqdci;     // dwdot[CO2]/d[H]
  // d()/d[CH2]
  dqdci = +k_f * sc[13];
  J[853] -= dqdci;     // dwdot[O2]/d[CH2]
  J[859] += 2 * dqdci; // dwdot[H]/d[CH2]
  J[860] -= dqdci;     // dwdot[CH2]/d[CH2]
  J[865] += dqdci;     // dwdot[CO2]/d[CH2]
  // d()/d[CO2]
  dqdci = -k_r * sc[19] * sc[19];
  J[1063] -= dqdci;     // dwdot[O2]/d[CO2]
  J[1069] += 2 * dqdci; // dwdot[H]/d[CO2]
  J[1070] -= dqdci;     // dwdot[CH2]/d[CO2]
  J[1075] += dqdci;     // dwdot[CO2]/d[CO2]
  // d()/dT
  J[1735] -= dqdT;     // dwdot[O2]/dT
  J[1741] += 2 * dqdT; // dwdot[H]/dT
  J[1742] -= dqdT;     // dwdot[CH2]/dT
  J[1747] += dqdT;     // dwdot[CO2]/dT

  // reaction 51: CH2* + N2 <=> CH2 + N2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[21] * sc[40];
  k_f = 15000000 * exp(-(301.929999482832) * invT);
  dlnkfdT = (301.929999482832) * invT2;
  // reverse
  phi_r = sc[20] * sc[40];
  Kc = exp(-g_RT[20] + g_RT[21] + g_RT[40] - g_RT[40]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[21] + h_RT[40]) + (h_RT[20] + h_RT[40]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[20] += q; // CH2
  wdot[21] -= q; // CH2*
  // d()/d[CH2]
  dqdci = -k_r * sc[40];
  J[860] += dqdci; // dwdot[CH2]/d[CH2]
  J[861] -= dqdci; // dwdot[CH2*]/d[CH2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[40];
  J[902] += dqdci; // dwdot[CH2]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/d[N2]
  dqdci = +k_f * sc[21] - k_r * sc[20];
  J[1700] += dqdci; // dwdot[CH2]/d[N2]
  J[1701] -= dqdci; // dwdot[CH2*]/d[N2]
  // d()/dT
  J[1742] += dqdT; // dwdot[CH2]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT

  // reaction 52: CH2* + O <=> CO + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[21];
  k_f = 15000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[8];
  Kc = exp(-g_RT[6] - g_RT[8] + g_RT[14] + g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[21]) + (h_RT[6] + h_RT[8]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2
  wdot[8] += q;  // CO
  wdot[14] -= q; // O
  wdot[21] -= q; // CH2*
  // d()/d[H2]
  dqdci = -k_r * sc[8];
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[260] += dqdci; // dwdot[CO]/d[H2]
  J[266] -= dqdci; // dwdot[O]/d[H2]
  J[273] -= dqdci; // dwdot[CH2*]/d[H2]
  // d()/d[CO]
  dqdci = -k_r * sc[6];
  J[342] += dqdci; // dwdot[H2]/d[CO]
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[350] -= dqdci; // dwdot[O]/d[CO]
  J[357] -= dqdci; // dwdot[CH2*]/d[CO]
  // d()/d[O]
  dqdci = +k_f * sc[21];
  J[594] += dqdci; // dwdot[H2]/d[O]
  J[596] += dqdci; // dwdot[CO]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[609] -= dqdci; // dwdot[CH2*]/d[O]
  // d()/d[CH2*]
  dqdci = +k_f * sc[14];
  J[888] += dqdci; // dwdot[H2]/d[CH2*]
  J[890] += dqdci; // dwdot[CO]/d[CH2*]
  J[896] -= dqdci; // dwdot[O]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT

  // reaction 53: CH2* + OH <=> CH2O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[21];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[19] * sc[23];
  Kc = exp(g_RT[15] - g_RT[19] + g_RT[21] - g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[21]) + (h_RT[19] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] -= q; // OH
  wdot[19] += q; // H
  wdot[21] -= q; // CH2*
  wdot[23] += q; // CH2O
  // d()/d[OH]
  dqdci = +k_f * sc[21];
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[649] += dqdci; // dwdot[H]/d[OH]
  J[651] -= dqdci; // dwdot[CH2*]/d[OH]
  J[653] += dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[H]
  dqdci = -k_r * sc[23];
  J[813] -= dqdci; // dwdot[OH]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[819] -= dqdci; // dwdot[CH2*]/d[H]
  J[821] += dqdci; // dwdot[CH2O]/d[H]
  // d()/d[CH2*]
  dqdci = +k_f * sc[15];
  J[897] -= dqdci; // dwdot[OH]/d[CH2*]
  J[901] += dqdci; // dwdot[H]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[905] += dqdci; // dwdot[CH2O]/d[CH2*]
  // d()/d[CH2O]
  dqdci = -k_r * sc[19];
  J[981] -= dqdci; // dwdot[OH]/d[CH2O]
  J[985] += dqdci; // dwdot[H]/d[CH2O]
  J[987] -= dqdci; // dwdot[CH2*]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT

  // reaction 54: CH2* + H2 <=> CH3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[21];
  k_f = 70000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[12] * sc[19];
  Kc = exp(g_RT[6] - g_RT[12] - g_RT[19] + g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[21]) + (h_RT[12] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] -= q;  // H2
  wdot[12] += q; // CH3
  wdot[19] += q; // H
  wdot[21] -= q; // CH2*
  // d()/d[H2]
  dqdci = +k_f * sc[21];
  J[258] -= dqdci; // dwdot[H2]/d[H2]
  J[264] += dqdci; // dwdot[CH3]/d[H2]
  J[271] += dqdci; // dwdot[H]/d[H2]
  J[273] -= dqdci; // dwdot[CH2*]/d[H2]
  // d()/d[CH3]
  dqdci = -k_r * sc[19];
  J[510] -= dqdci; // dwdot[H2]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[523] += dqdci; // dwdot[H]/d[CH3]
  J[525] -= dqdci; // dwdot[CH2*]/d[CH3]
  // d()/d[H]
  dqdci = -k_r * sc[12];
  J[804] -= dqdci; // dwdot[H2]/d[H]
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[819] -= dqdci; // dwdot[CH2*]/d[H]
  // d()/d[CH2*]
  dqdci = +k_f * sc[6];
  J[888] -= dqdci; // dwdot[H2]/d[CH2*]
  J[894] += dqdci; // dwdot[CH3]/d[CH2*]
  J[901] += dqdci; // dwdot[H]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/dT
  J[1728] -= dqdT; // dwdot[H2]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT

  // reaction 55: CH2* + O2 <=> CO + H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[21];
  k_f = 28000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[15] * sc[19];
  Kc = refC * exp(-g_RT[8] + g_RT[13] - g_RT[15] - g_RT[19] + g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[21]) + (h_RT[8] + h_RT[15] + h_RT[19]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[13] -= q; // O2
  wdot[15] += q; // OH
  wdot[19] += q; // H
  wdot[21] -= q; // CH2*
  // d()/d[CO]
  dqdci = -k_r * sc[15] * sc[19];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[349] -= dqdci; // dwdot[O2]/d[CO]
  J[351] += dqdci; // dwdot[OH]/d[CO]
  J[355] += dqdci; // dwdot[H]/d[CO]
  J[357] -= dqdci; // dwdot[CH2*]/d[CO]
  // d()/d[O2]
  dqdci = +k_f * sc[21];
  J[554] += dqdci; // dwdot[CO]/d[O2]
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[561] += dqdci; // dwdot[OH]/d[O2]
  J[565] += dqdci; // dwdot[H]/d[O2]
  J[567] -= dqdci; // dwdot[CH2*]/d[O2]
  // d()/d[OH]
  dqdci = -k_r * sc[8] * sc[19];
  J[638] += dqdci; // dwdot[CO]/d[OH]
  J[643] -= dqdci; // dwdot[O2]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[649] += dqdci; // dwdot[H]/d[OH]
  J[651] -= dqdci; // dwdot[CH2*]/d[OH]
  // d()/d[H]
  dqdci = -k_r * sc[8] * sc[15];
  J[806] += dqdci; // dwdot[CO]/d[H]
  J[811] -= dqdci; // dwdot[O2]/d[H]
  J[813] += dqdci; // dwdot[OH]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[819] -= dqdci; // dwdot[CH2*]/d[H]
  // d()/d[CH2*]
  dqdci = +k_f * sc[13];
  J[890] += dqdci; // dwdot[CO]/d[CH2*]
  J[895] -= dqdci; // dwdot[O2]/d[CH2*]
  J[897] += dqdci; // dwdot[OH]/d[CH2*]
  J[901] += dqdci; // dwdot[H]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT

  // reaction 56: CH2* + O2 <=> CO + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[21];
  k_f = 12000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[17];
  Kc = exp(-g_RT[8] + g_RT[13] - g_RT[17] + g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[21]) + (h_RT[8] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[13] -= q; // O2
  wdot[17] += q; // H2O
  wdot[21] -= q; // CH2*
  // d()/d[CO]
  dqdci = -k_r * sc[17];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[349] -= dqdci; // dwdot[O2]/d[CO]
  J[353] += dqdci; // dwdot[H2O]/d[CO]
  J[357] -= dqdci; // dwdot[CH2*]/d[CO]
  // d()/d[O2]
  dqdci = +k_f * sc[21];
  J[554] += dqdci; // dwdot[CO]/d[O2]
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[563] += dqdci; // dwdot[H2O]/d[O2]
  J[567] -= dqdci; // dwdot[CH2*]/d[O2]
  // d()/d[H2O]
  dqdci = -k_r * sc[8];
  J[722] += dqdci; // dwdot[CO]/d[H2O]
  J[727] -= dqdci; // dwdot[O2]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[735] -= dqdci; // dwdot[CH2*]/d[H2O]
  // d()/d[CH2*]
  dqdci = +k_f * sc[13];
  J[890] += dqdci; // dwdot[CO]/d[CH2*]
  J[895] -= dqdci; // dwdot[O2]/d[CH2*]
  J[899] += dqdci; // dwdot[H2O]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT

  // reaction 57: CH2* + H2O <=> CH2 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[21];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[17] * sc[20];
  Kc = exp(g_RT[17] - g_RT[17] - g_RT[20] + g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[17] + h_RT[21]) + (h_RT[17] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[20] += q; // CH2
  wdot[21] -= q; // CH2*
  // d()/d[H2O]
  dqdci = +k_f * sc[21] - k_r * sc[20];
  J[734] += dqdci; // dwdot[CH2]/d[H2O]
  J[735] -= dqdci; // dwdot[CH2*]/d[H2O]
  // d()/d[CH2]
  dqdci = -k_r * sc[17];
  J[860] += dqdci; // dwdot[CH2]/d[CH2]
  J[861] -= dqdci; // dwdot[CH2*]/d[CH2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[17];
  J[902] += dqdci; // dwdot[CH2]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/dT
  J[1742] += dqdT; // dwdot[CH2]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT

  // reaction 58: CH2* + CO <=> CH2 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[21];
  k_f = 9000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[20];
  Kc = exp(g_RT[8] - g_RT[8] - g_RT[20] + g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[21]) + (h_RT[8] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[20] += q; // CH2
  wdot[21] -= q; // CH2*
  // d()/d[CO]
  dqdci = +k_f * sc[21] - k_r * sc[20];
  J[356] += dqdci; // dwdot[CH2]/d[CO]
  J[357] -= dqdci; // dwdot[CH2*]/d[CO]
  // d()/d[CH2]
  dqdci = -k_r * sc[8];
  J[860] += dqdci; // dwdot[CH2]/d[CH2]
  J[861] -= dqdci; // dwdot[CH2*]/d[CH2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[8];
  J[902] += dqdci; // dwdot[CH2]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/dT
  J[1742] += dqdT; // dwdot[CH2]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT

  // reaction 59: CH2* + CO2 <=> CH2 + CO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[21] * sc[25];
  k_f = 7000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[20] * sc[25];
  Kc = exp(-g_RT[20] + g_RT[21] + g_RT[25] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[21] + h_RT[25]) + (h_RT[20] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[20] += q; // CH2
  wdot[21] -= q; // CH2*
  // d()/d[CH2]
  dqdci = -k_r * sc[25];
  J[860] += dqdci; // dwdot[CH2]/d[CH2]
  J[861] -= dqdci; // dwdot[CH2*]/d[CH2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[25];
  J[902] += dqdci; // dwdot[CH2]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/d[CO2]
  dqdci = +k_f * sc[21] - k_r * sc[20];
  J[1070] += dqdci; // dwdot[CH2]/d[CO2]
  J[1071] -= dqdci; // dwdot[CH2*]/d[CO2]
  // d()/dT
  J[1742] += dqdT; // dwdot[CH2]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT

  // reaction 60: CH2* + CO2 <=> CH2O + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[21] * sc[25];
  k_f = 14000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[23];
  Kc = exp(-g_RT[8] + g_RT[21] - g_RT[23] + g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[21] + h_RT[25]) + (h_RT[8] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[21] -= q; // CH2*
  wdot[23] += q; // CH2O
  wdot[25] -= q; // CO2
  // d()/d[CO]
  dqdci = -k_r * sc[23];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[357] -= dqdci; // dwdot[CH2*]/d[CO]
  J[359] += dqdci; // dwdot[CH2O]/d[CO]
  J[361] -= dqdci; // dwdot[CO2]/d[CO]
  // d()/d[CH2*]
  dqdci = +k_f * sc[25];
  J[890] += dqdci; // dwdot[CO]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[905] += dqdci; // dwdot[CH2O]/d[CH2*]
  J[907] -= dqdci; // dwdot[CO2]/d[CH2*]
  // d()/d[CH2O]
  dqdci = -k_r * sc[8];
  J[974] += dqdci; // dwdot[CO]/d[CH2O]
  J[987] -= dqdci; // dwdot[CH2*]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[991] -= dqdci; // dwdot[CO2]/d[CH2O]
  // d()/d[CO2]
  dqdci = +k_f * sc[21];
  J[1058] += dqdci; // dwdot[CO]/d[CO2]
  J[1071] -= dqdci; // dwdot[CH2*]/d[CO2]
  J[1073] += dqdci; // dwdot[CH2O]/d[CO2]
  J[1075] -= dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT
  J[1747] -= dqdT; // dwdot[CO2]/dT

  // reaction 62: CH2O + H <=> H2 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[23];
  k_f = 23000 * exp(1.05 * logT - (1648.03458051046) * invT);
  dlnkfdT = 1.05 * invT + (1648.03458051046) * invT2;
  // reverse
  phi_r = sc[6] * sc[22];
  Kc = exp(-g_RT[6] + g_RT[19] - g_RT[22] + g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[23]) + (h_RT[6] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2
  wdot[19] -= q; // H
  wdot[22] += q; // HCO
  wdot[23] -= q; // CH2O
  // d()/d[H2]
  dqdci = -k_r * sc[22];
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[274] += dqdci; // dwdot[HCO]/d[H2]
  J[275] -= dqdci; // dwdot[CH2O]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[23];
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[820] += dqdci; // dwdot[HCO]/d[H]
  J[821] -= dqdci; // dwdot[CH2O]/d[H]
  // d()/d[HCO]
  dqdci = -k_r * sc[6];
  J[930] += dqdci; // dwdot[H2]/d[HCO]
  J[943] -= dqdci; // dwdot[H]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[947] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[19];
  J[972] += dqdci; // dwdot[H2]/d[CH2O]
  J[985] -= dqdci; // dwdot[H]/d[CH2O]
  J[988] += dqdci; // dwdot[HCO]/d[CH2O]
  J[989] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1745] -= dqdT; // dwdot[CH2O]/dT

  // reaction 63: CH2O + O <=> HCO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[23];
  k_f = 39000000 * exp(-(1781.38699694871) * invT);
  dlnkfdT = (1781.38699694871) * invT2;
  // reverse
  phi_r = sc[15] * sc[22];
  Kc = exp(g_RT[14] - g_RT[15] - g_RT[22] + g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[23]) + (h_RT[15] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[22] += q; // HCO
  wdot[23] -= q; // CH2O
  // d()/d[O]
  dqdci = +k_f * sc[23];
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[610] += dqdci; // dwdot[HCO]/d[O]
  J[611] -= dqdci; // dwdot[CH2O]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[22];
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[652] += dqdci; // dwdot[HCO]/d[OH]
  J[653] -= dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[HCO]
  dqdci = -k_r * sc[15];
  J[938] -= dqdci; // dwdot[O]/d[HCO]
  J[939] += dqdci; // dwdot[OH]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[947] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[14];
  J[980] -= dqdci; // dwdot[O]/d[CH2O]
  J[981] += dqdci; // dwdot[OH]/d[CH2O]
  J[988] += dqdci; // dwdot[HCO]/d[CH2O]
  J[989] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1745] -= dqdT; // dwdot[CH2O]/dT

  // reaction 64: CH2O + OH <=> H2O + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[23];
  k_f = 3430 * exp(1.18 * logT - (-224.93784961471) * invT);
  dlnkfdT = 1.18 * invT + (-224.93784961471) * invT2;
  // reverse
  phi_r = sc[17] * sc[22];
  Kc = exp(g_RT[15] - g_RT[17] - g_RT[22] + g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[23]) + (h_RT[17] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[22] += q; // HCO
  wdot[23] -= q; // CH2O
  // d()/d[OH]
  dqdci = +k_f * sc[23];
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[652] += dqdci; // dwdot[HCO]/d[OH]
  J[653] -= dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[22];
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[736] += dqdci; // dwdot[HCO]/d[H2O]
  J[737] -= dqdci; // dwdot[CH2O]/d[H2O]
  // d()/d[HCO]
  dqdci = -k_r * sc[17];
  J[939] -= dqdci; // dwdot[OH]/d[HCO]
  J[941] += dqdci; // dwdot[H2O]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[947] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[15];
  J[981] -= dqdci; // dwdot[OH]/d[CH2O]
  J[983] += dqdci; // dwdot[H2O]/d[CH2O]
  J[988] += dqdci; // dwdot[HCO]/d[CH2O]
  J[989] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1745] -= dqdT; // dwdot[CH2O]/dT

  // reaction 65: CH2O + O2 <=> HCO + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[23];
  k_f = 100000000 * exp(-(20128.6666321888) * invT);
  dlnkfdT = (20128.6666321888) * invT2;
  // reverse
  phi_r = sc[16] * sc[22];
  Kc = exp(g_RT[13] - g_RT[16] - g_RT[22] + g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[23]) + (h_RT[16] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // O2
  wdot[16] += q; // HO2
  wdot[22] += q; // HCO
  wdot[23] -= q; // CH2O
  // d()/d[O2]
  dqdci = +k_f * sc[23];
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[562] += dqdci; // dwdot[HO2]/d[O2]
  J[568] += dqdci; // dwdot[HCO]/d[O2]
  J[569] -= dqdci; // dwdot[CH2O]/d[O2]
  // d()/d[HO2]
  dqdci = -k_r * sc[22];
  J[685] -= dqdci; // dwdot[O2]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[694] += dqdci; // dwdot[HCO]/d[HO2]
  J[695] -= dqdci; // dwdot[CH2O]/d[HO2]
  // d()/d[HCO]
  dqdci = -k_r * sc[16];
  J[937] -= dqdci; // dwdot[O2]/d[HCO]
  J[940] += dqdci; // dwdot[HO2]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[947] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[13];
  J[979] -= dqdci; // dwdot[O2]/d[CH2O]
  J[982] += dqdci; // dwdot[HO2]/d[CH2O]
  J[988] += dqdci; // dwdot[HCO]/d[CH2O]
  J[989] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1745] -= dqdT; // dwdot[CH2O]/dT

  // reaction 66: CH2O + HO2 <=> H2O2 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[23];
  k_f = 1000000 * exp(-(4025.73332643776) * invT);
  dlnkfdT = (4025.73332643776) * invT2;
  // reverse
  phi_r = sc[18] * sc[22];
  Kc = exp(g_RT[16] - g_RT[18] - g_RT[22] + g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[16] + h_RT[23]) + (h_RT[18] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[16] -= q; // HO2
  wdot[18] += q; // H2O2
  wdot[22] += q; // HCO
  wdot[23] -= q; // CH2O
  // d()/d[HO2]
  dqdci = +k_f * sc[23];
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[690] += dqdci; // dwdot[H2O2]/d[HO2]
  J[694] += dqdci; // dwdot[HCO]/d[HO2]
  J[695] -= dqdci; // dwdot[CH2O]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[22];
  J[772] -= dqdci; // dwdot[HO2]/d[H2O2]
  J[774] += dqdci; // dwdot[H2O2]/d[H2O2]
  J[778] += dqdci; // dwdot[HCO]/d[H2O2]
  J[779] -= dqdci; // dwdot[CH2O]/d[H2O2]
  // d()/d[HCO]
  dqdci = -k_r * sc[18];
  J[940] -= dqdci; // dwdot[HO2]/d[HCO]
  J[942] += dqdci; // dwdot[H2O2]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[947] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[16];
  J[982] -= dqdci; // dwdot[HO2]/d[CH2O]
  J[984] += dqdci; // dwdot[H2O2]/d[CH2O]
  J[988] += dqdci; // dwdot[HCO]/d[CH2O]
  J[989] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1740] += dqdT; // dwdot[H2O2]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1745] -= dqdT; // dwdot[CH2O]/dT

  // reaction 68: CH3 + O <=> CH2O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[14];
  k_f = 84300000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[19] * sc[23];
  Kc = exp(g_RT[12] + g_RT[14] - g_RT[19] - g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[14]) + (h_RT[19] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] -= q; // CH3
  wdot[14] -= q; // O
  wdot[19] += q; // H
  wdot[23] += q; // CH2O
  // d()/d[CH3]
  dqdci = +k_f * sc[14];
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[518] -= dqdci; // dwdot[O]/d[CH3]
  J[523] += dqdci; // dwdot[H]/d[CH3]
  J[527] += dqdci; // dwdot[CH2O]/d[CH3]
  // d()/d[O]
  dqdci = +k_f * sc[12];
  J[600] -= dqdci; // dwdot[CH3]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[607] += dqdci; // dwdot[H]/d[O]
  J[611] += dqdci; // dwdot[CH2O]/d[O]
  // d()/d[H]
  dqdci = -k_r * sc[23];
  J[810] -= dqdci; // dwdot[CH3]/d[H]
  J[812] -= dqdci; // dwdot[O]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[821] += dqdci; // dwdot[CH2O]/d[H]
  // d()/d[CH2O]
  dqdci = -k_r * sc[19];
  J[978] -= dqdci; // dwdot[CH3]/d[CH2O]
  J[980] -= dqdci; // dwdot[O]/d[CH2O]
  J[985] += dqdci; // dwdot[H]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT

  // reaction 69: CH3 + OH <=> CH2 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[15];
  k_f = 56 * exp(1.6 * logT - (2727.43432866158) * invT);
  dlnkfdT = 1.6 * invT + (2727.43432866158) * invT2;
  // reverse
  phi_r = sc[17] * sc[20];
  Kc = exp(g_RT[12] + g_RT[15] - g_RT[17] - g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[15]) + (h_RT[17] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] -= q; // CH3
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[20] += q; // CH2
  // d()/d[CH3]
  dqdci = +k_f * sc[15];
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[519] -= dqdci; // dwdot[OH]/d[CH3]
  J[521] += dqdci; // dwdot[H2O]/d[CH3]
  J[524] += dqdci; // dwdot[CH2]/d[CH3]
  // d()/d[OH]
  dqdci = +k_f * sc[12];
  J[642] -= dqdci; // dwdot[CH3]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[650] += dqdci; // dwdot[CH2]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[20];
  J[726] -= dqdci; // dwdot[CH3]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[734] += dqdci; // dwdot[CH2]/d[H2O]
  // d()/d[CH2]
  dqdci = -k_r * sc[17];
  J[852] -= dqdci; // dwdot[CH3]/d[CH2]
  J[855] -= dqdci; // dwdot[OH]/d[CH2]
  J[857] += dqdci; // dwdot[H2O]/d[CH2]
  J[860] += dqdci; // dwdot[CH2]/d[CH2]
  // d()/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1742] += dqdT; // dwdot[CH2]/dT

  // reaction 70: CH3 + OH <=> CH2* + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[15];
  k_f = 25010000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[17] * sc[21];
  Kc = exp(g_RT[12] + g_RT[15] - g_RT[17] - g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[15]) + (h_RT[17] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] -= q; // CH3
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[21] += q; // CH2*
  // d()/d[CH3]
  dqdci = +k_f * sc[15];
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[519] -= dqdci; // dwdot[OH]/d[CH3]
  J[521] += dqdci; // dwdot[H2O]/d[CH3]
  J[525] += dqdci; // dwdot[CH2*]/d[CH3]
  // d()/d[OH]
  dqdci = +k_f * sc[12];
  J[642] -= dqdci; // dwdot[CH3]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[651] += dqdci; // dwdot[CH2*]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[21];
  J[726] -= dqdci; // dwdot[CH3]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[735] += dqdci; // dwdot[CH2*]/d[H2O]
  // d()/d[CH2*]
  dqdci = -k_r * sc[17];
  J[894] -= dqdci; // dwdot[CH3]/d[CH2*]
  J[897] -= dqdci; // dwdot[OH]/d[CH2*]
  J[899] += dqdci; // dwdot[H2O]/d[CH2*]
  J[903] += dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1743] += dqdT; // dwdot[CH2*]/dT

  // reaction 71: CH3 + O2 <=> CH3O + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[13];
  k_f = 30830000 * exp(-(14492.6399751759) * invT);
  dlnkfdT = (14492.6399751759) * invT2;
  // reverse
  phi_r = sc[14] * sc[24];
  Kc = exp(g_RT[12] + g_RT[13] - g_RT[14] - g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[13]) + (h_RT[14] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] -= q; // CH3
  wdot[13] -= q; // O2
  wdot[14] += q; // O
  wdot[24] += q; // CH3O
  // d()/d[CH3]
  dqdci = +k_f * sc[13];
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[517] -= dqdci; // dwdot[O2]/d[CH3]
  J[518] += dqdci; // dwdot[O]/d[CH3]
  J[528] += dqdci; // dwdot[CH3O]/d[CH3]
  // d()/d[O2]
  dqdci = +k_f * sc[12];
  J[558] -= dqdci; // dwdot[CH3]/d[O2]
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[560] += dqdci; // dwdot[O]/d[O2]
  J[570] += dqdci; // dwdot[CH3O]/d[O2]
  // d()/d[O]
  dqdci = -k_r * sc[24];
  J[600] -= dqdci; // dwdot[CH3]/d[O]
  J[601] -= dqdci; // dwdot[O2]/d[O]
  J[602] += dqdci; // dwdot[O]/d[O]
  J[612] += dqdci; // dwdot[CH3O]/d[O]
  // d()/d[CH3O]
  dqdci = -k_r * sc[14];
  J[1020] -= dqdci; // dwdot[CH3]/d[CH3O]
  J[1021] -= dqdci; // dwdot[O2]/d[CH3O]
  J[1022] += dqdci; // dwdot[O]/d[CH3O]
  J[1032] += dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1736] += dqdT; // dwdot[O]/dT
  J[1746] += dqdT; // dwdot[CH3O]/dT

  // reaction 72: CH3 + O2 <=> CH2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[13];
  k_f = 36000 * exp(-(4498.75699229419) * invT);
  dlnkfdT = (4498.75699229419) * invT2;
  // reverse
  phi_r = sc[15] * sc[23];
  Kc = exp(g_RT[12] + g_RT[13] - g_RT[15] - g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[13]) + (h_RT[15] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] -= q; // CH3
  wdot[13] -= q; // O2
  wdot[15] += q; // OH
  wdot[23] += q; // CH2O
  // d()/d[CH3]
  dqdci = +k_f * sc[13];
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[517] -= dqdci; // dwdot[O2]/d[CH3]
  J[519] += dqdci; // dwdot[OH]/d[CH3]
  J[527] += dqdci; // dwdot[CH2O]/d[CH3]
  // d()/d[O2]
  dqdci = +k_f * sc[12];
  J[558] -= dqdci; // dwdot[CH3]/d[O2]
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[561] += dqdci; // dwdot[OH]/d[O2]
  J[569] += dqdci; // dwdot[CH2O]/d[O2]
  // d()/d[OH]
  dqdci = -k_r * sc[23];
  J[642] -= dqdci; // dwdot[CH3]/d[OH]
  J[643] -= dqdci; // dwdot[O2]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[653] += dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[CH2O]
  dqdci = -k_r * sc[15];
  J[978] -= dqdci; // dwdot[CH3]/d[CH2O]
  J[979] -= dqdci; // dwdot[O2]/d[CH2O]
  J[981] += dqdci; // dwdot[OH]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT

  // reaction 73: CH3 + HO2 <=> CH4 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[16];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[2] * sc[13];
  Kc = exp(-g_RT[2] + g_RT[12] - g_RT[13] + g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[16]) + (h_RT[2] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // CH4
  wdot[12] -= q; // CH3
  wdot[13] += q; // O2
  wdot[16] -= q; // HO2
  // d()/d[CH4]
  dqdci = -k_r * sc[13];
  J[86] += dqdci;  // dwdot[CH4]/d[CH4]
  J[96] -= dqdci;  // dwdot[CH3]/d[CH4]
  J[97] += dqdci;  // dwdot[O2]/d[CH4]
  J[100] -= dqdci; // dwdot[HO2]/d[CH4]
  // d()/d[CH3]
  dqdci = +k_f * sc[16];
  J[506] += dqdci; // dwdot[CH4]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[517] += dqdci; // dwdot[O2]/d[CH3]
  J[520] -= dqdci; // dwdot[HO2]/d[CH3]
  // d()/d[O2]
  dqdci = -k_r * sc[2];
  J[548] += dqdci; // dwdot[CH4]/d[O2]
  J[558] -= dqdci; // dwdot[CH3]/d[O2]
  J[559] += dqdci; // dwdot[O2]/d[O2]
  J[562] -= dqdci; // dwdot[HO2]/d[O2]
  // d()/d[HO2]
  dqdci = +k_f * sc[12];
  J[674] += dqdci; // dwdot[CH4]/d[HO2]
  J[684] -= dqdci; // dwdot[CH3]/d[HO2]
  J[685] += dqdci; // dwdot[O2]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[1724] += dqdT; // dwdot[CH4]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1735] += dqdT; // dwdot[O2]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT

  // reaction 74: CH3 + HO2 <=> CH3O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[16];
  k_f = 13400000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[15] * sc[24];
  Kc = exp(g_RT[12] - g_RT[15] + g_RT[16] - g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[16]) + (h_RT[15] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] -= q; // CH3
  wdot[15] += q; // OH
  wdot[16] -= q; // HO2
  wdot[24] += q; // CH3O
  // d()/d[CH3]
  dqdci = +k_f * sc[16];
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[519] += dqdci; // dwdot[OH]/d[CH3]
  J[520] -= dqdci; // dwdot[HO2]/d[CH3]
  J[528] += dqdci; // dwdot[CH3O]/d[CH3]
  // d()/d[OH]
  dqdci = -k_r * sc[24];
  J[642] -= dqdci; // dwdot[CH3]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[646] -= dqdci; // dwdot[HO2]/d[OH]
  J[654] += dqdci; // dwdot[CH3O]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[12];
  J[684] -= dqdci; // dwdot[CH3]/d[HO2]
  J[687] += dqdci; // dwdot[OH]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[696] += dqdci; // dwdot[CH3O]/d[HO2]
  // d()/d[CH3O]
  dqdci = -k_r * sc[15];
  J[1020] -= dqdci; // dwdot[CH3]/d[CH3O]
  J[1023] += dqdci; // dwdot[OH]/d[CH3O]
  J[1024] -= dqdci; // dwdot[HO2]/d[CH3O]
  J[1032] += dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1746] += dqdT; // dwdot[CH3O]/dT

  // reaction 75: CH3 + H2O2 <=> CH4 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[18];
  k_f = 0.0245 * exp(2.47 * logT - (2606.66232886845) * invT);
  dlnkfdT = 2.47 * invT + (2606.66232886845) * invT2;
  // reverse
  phi_r = sc[2] * sc[16];
  Kc = exp(-g_RT[2] + g_RT[12] - g_RT[16] + g_RT[18]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[18]) + (h_RT[2] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // CH4
  wdot[12] -= q; // CH3
  wdot[16] += q; // HO2
  wdot[18] -= q; // H2O2
  // d()/d[CH4]
  dqdci = -k_r * sc[16];
  J[86] += dqdci;  // dwdot[CH4]/d[CH4]
  J[96] -= dqdci;  // dwdot[CH3]/d[CH4]
  J[100] += dqdci; // dwdot[HO2]/d[CH4]
  J[102] -= dqdci; // dwdot[H2O2]/d[CH4]
  // d()/d[CH3]
  dqdci = +k_f * sc[18];
  J[506] += dqdci; // dwdot[CH4]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[520] += dqdci; // dwdot[HO2]/d[CH3]
  J[522] -= dqdci; // dwdot[H2O2]/d[CH3]
  // d()/d[HO2]
  dqdci = -k_r * sc[2];
  J[674] += dqdci; // dwdot[CH4]/d[HO2]
  J[684] -= dqdci; // dwdot[CH3]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[690] -= dqdci; // dwdot[H2O2]/d[HO2]
  // d()/d[H2O2]
  dqdci = +k_f * sc[12];
  J[758] += dqdci; // dwdot[CH4]/d[H2O2]
  J[768] -= dqdci; // dwdot[CH3]/d[H2O2]
  J[772] += dqdci; // dwdot[HO2]/d[H2O2]
  J[774] -= dqdci; // dwdot[H2O2]/d[H2O2]
  // d()/dT
  J[1724] += dqdT; // dwdot[CH4]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1740] -= dqdT; // dwdot[H2O2]/dT

  // reaction 76: CH3 + HCO <=> CH4 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[22];
  k_f = 8480000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[2] * sc[8];
  Kc = exp(-g_RT[2] - g_RT[8] + g_RT[12] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[22]) + (h_RT[2] + h_RT[8]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // CH4
  wdot[8] += q;  // CO
  wdot[12] -= q; // CH3
  wdot[22] -= q; // HCO
  // d()/d[CH4]
  dqdci = -k_r * sc[8];
  J[86] += dqdci;  // dwdot[CH4]/d[CH4]
  J[92] += dqdci;  // dwdot[CO]/d[CH4]
  J[96] -= dqdci;  // dwdot[CH3]/d[CH4]
  J[106] -= dqdci; // dwdot[HCO]/d[CH4]
  // d()/d[CO]
  dqdci = -k_r * sc[2];
  J[338] += dqdci; // dwdot[CH4]/d[CO]
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[348] -= dqdci; // dwdot[CH3]/d[CO]
  J[358] -= dqdci; // dwdot[HCO]/d[CO]
  // d()/d[CH3]
  dqdci = +k_f * sc[22];
  J[506] += dqdci; // dwdot[CH4]/d[CH3]
  J[512] += dqdci; // dwdot[CO]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[526] -= dqdci; // dwdot[HCO]/d[CH3]
  // d()/d[HCO]
  dqdci = +k_f * sc[12];
  J[926] += dqdci; // dwdot[CH4]/d[HCO]
  J[932] += dqdci; // dwdot[CO]/d[HCO]
  J[936] -= dqdci; // dwdot[CH3]/d[HCO]
  J[946] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1724] += dqdT; // dwdot[CH4]/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT

  // reaction 77: CH2O + CH3 <=> CH4 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[23];
  k_f = 0.00332 * exp(2.81 * logT - (2948.84966161566) * invT);
  dlnkfdT = 2.81 * invT + (2948.84966161566) * invT2;
  // reverse
  phi_r = sc[2] * sc[22];
  Kc = exp(-g_RT[2] + g_RT[12] - g_RT[22] + g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[23]) + (h_RT[2] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // CH4
  wdot[12] -= q; // CH3
  wdot[22] += q; // HCO
  wdot[23] -= q; // CH2O
  // d()/d[CH4]
  dqdci = -k_r * sc[22];
  J[86] += dqdci;  // dwdot[CH4]/d[CH4]
  J[96] -= dqdci;  // dwdot[CH3]/d[CH4]
  J[106] += dqdci; // dwdot[HCO]/d[CH4]
  J[107] -= dqdci; // dwdot[CH2O]/d[CH4]
  // d()/d[CH3]
  dqdci = +k_f * sc[23];
  J[506] += dqdci; // dwdot[CH4]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[526] += dqdci; // dwdot[HCO]/d[CH3]
  J[527] -= dqdci; // dwdot[CH2O]/d[CH3]
  // d()/d[HCO]
  dqdci = -k_r * sc[2];
  J[926] += dqdci; // dwdot[CH4]/d[HCO]
  J[936] -= dqdci; // dwdot[CH3]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[947] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[12];
  J[968] += dqdci; // dwdot[CH4]/d[CH2O]
  J[978] -= dqdci; // dwdot[CH3]/d[CH2O]
  J[988] += dqdci; // dwdot[HCO]/d[CH2O]
  J[989] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[1724] += dqdT; // dwdot[CH4]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1745] -= dqdT; // dwdot[CH2O]/dT

  // reaction 78: CH2 + CH3 <=> C2H4 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[20];
  k_f = 40000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[19];
  Kc = exp(-g_RT[1] + g_RT[12] - g_RT[19] + g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[20]) + (h_RT[1] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // C2H4
  wdot[12] -= q; // CH3
  wdot[19] += q; // H
  wdot[20] -= q; // CH2
  // d()/d[C2H4]
  dqdci = -k_r * sc[19];
  J[43] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[54] -= dqdci; // dwdot[CH3]/d[C2H4]
  J[61] += dqdci; // dwdot[H]/d[C2H4]
  J[62] -= dqdci; // dwdot[CH2]/d[C2H4]
  // d()/d[CH3]
  dqdci = +k_f * sc[20];
  J[505] += dqdci; // dwdot[C2H4]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[523] += dqdci; // dwdot[H]/d[CH3]
  J[524] -= dqdci; // dwdot[CH2]/d[CH3]
  // d()/d[H]
  dqdci = -k_r * sc[1];
  J[799] += dqdci; // dwdot[C2H4]/d[H]
  J[810] -= dqdci; // dwdot[CH3]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[818] -= dqdci; // dwdot[CH2]/d[H]
  // d()/d[CH2]
  dqdci = +k_f * sc[12];
  J[841] += dqdci; // dwdot[C2H4]/d[CH2]
  J[852] -= dqdci; // dwdot[CH3]/d[CH2]
  J[859] += dqdci; // dwdot[H]/d[CH2]
  J[860] -= dqdci; // dwdot[CH2]/d[CH2]
  // d()/dT
  J[1723] += dqdT; // dwdot[C2H4]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1742] -= dqdT; // dwdot[CH2]/dT

  // reaction 80: 2 CH3 <=> C2H5 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[12] * sc[12]);
  k_f = 4990000 * exp(0.1 * logT - (5334.09665753003) * invT);
  dlnkfdT = 0.1 * invT + (5334.09665753003) * invT2;
  // reverse
  phi_r = sc[19] * sc[27];
  Kc = exp(2.000000 * g_RT[12] - g_RT[19] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[12]) + (h_RT[19] + h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] -= 2 * q; // CH3
  wdot[19] += q;     // H
  wdot[27] += q;     // C2H5
  // d()/d[CH3]
  dqdci = +k_f * 2.000000 * sc[12];
  J[516] += -2 * dqdci; // dwdot[CH3]/d[CH3]
  J[523] += dqdci;      // dwdot[H]/d[CH3]
  J[531] += dqdci;      // dwdot[C2H5]/d[CH3]
  // d()/d[H]
  dqdci = -k_r * sc[27];
  J[810] += -2 * dqdci; // dwdot[CH3]/d[H]
  J[817] += dqdci;      // dwdot[H]/d[H]
  J[825] += dqdci;      // dwdot[C2H5]/d[H]
  // d()/d[C2H5]
  dqdci = -k_r * sc[19];
  J[1146] += -2 * dqdci; // dwdot[CH3]/d[C2H5]
  J[1153] += dqdci;      // dwdot[H]/d[C2H5]
  J[1161] += dqdci;      // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1734] += -2 * dqdT; // dwdot[CH3]/dT
  J[1741] += dqdT;      // dwdot[H]/dT
  J[1749] += dqdT;      // dwdot[C2H5]/dT

  // reaction 81: CH3 + HCCO <=> C2H4 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[28];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[8];
  Kc = exp(-g_RT[1] - g_RT[8] + g_RT[12] + g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[28]) + (h_RT[1] + h_RT[8]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // C2H4
  wdot[8] += q;  // CO
  wdot[12] -= q; // CH3
  wdot[28] -= q; // HCCO
  // d()/d[C2H4]
  dqdci = -k_r * sc[8];
  J[43] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[50] += dqdci; // dwdot[CO]/d[C2H4]
  J[54] -= dqdci; // dwdot[CH3]/d[C2H4]
  J[70] -= dqdci; // dwdot[HCCO]/d[C2H4]
  // d()/d[CO]
  dqdci = -k_r * sc[1];
  J[337] += dqdci; // dwdot[C2H4]/d[CO]
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[348] -= dqdci; // dwdot[CH3]/d[CO]
  J[364] -= dqdci; // dwdot[HCCO]/d[CO]
  // d()/d[CH3]
  dqdci = +k_f * sc[28];
  J[505] += dqdci; // dwdot[C2H4]/d[CH3]
  J[512] += dqdci; // dwdot[CO]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[532] -= dqdci; // dwdot[HCCO]/d[CH3]
  // d()/d[HCCO]
  dqdci = +k_f * sc[12];
  J[1177] += dqdci; // dwdot[C2H4]/d[HCCO]
  J[1184] += dqdci; // dwdot[CO]/d[HCCO]
  J[1188] -= dqdci; // dwdot[CH3]/d[HCCO]
  J[1204] -= dqdci; // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[1723] += dqdT; // dwdot[C2H4]/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1750] -= dqdT; // dwdot[HCCO]/dT

  // reaction 82: CH3O + H <=> CH2O + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[24];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[23];
  Kc = exp(-g_RT[6] + g_RT[19] - g_RT[23] + g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[24]) + (h_RT[6] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2
  wdot[19] -= q; // H
  wdot[23] += q; // CH2O
  wdot[24] -= q; // CH3O
  // d()/d[H2]
  dqdci = -k_r * sc[23];
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[CH2O]/d[H2]
  J[276] -= dqdci; // dwdot[CH3O]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[24];
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[821] += dqdci; // dwdot[CH2O]/d[H]
  J[822] -= dqdci; // dwdot[CH3O]/d[H]
  // d()/d[CH2O]
  dqdci = -k_r * sc[6];
  J[972] += dqdci; // dwdot[H2]/d[CH2O]
  J[985] -= dqdci; // dwdot[H]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[990] -= dqdci; // dwdot[CH3O]/d[CH2O]
  // d()/d[CH3O]
  dqdci = +k_f * sc[19];
  J[1014] += dqdci; // dwdot[H2]/d[CH3O]
  J[1027] -= dqdci; // dwdot[H]/d[CH3O]
  J[1031] += dqdci; // dwdot[CH2O]/d[CH3O]
  J[1032] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT
  J[1746] -= dqdT; // dwdot[CH3O]/dT

  // reaction 83: CH3O + H <=> CH3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[24];
  k_f = 32000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[12] * sc[15];
  Kc = exp(-g_RT[12] - g_RT[15] + g_RT[19] + g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[24]) + (h_RT[12] + h_RT[15]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] += q; // CH3
  wdot[15] += q; // OH
  wdot[19] -= q; // H
  wdot[24] -= q; // CH3O
  // d()/d[CH3]
  dqdci = -k_r * sc[15];
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[519] += dqdci; // dwdot[OH]/d[CH3]
  J[523] -= dqdci; // dwdot[H]/d[CH3]
  J[528] -= dqdci; // dwdot[CH3O]/d[CH3]
  // d()/d[OH]
  dqdci = -k_r * sc[12];
  J[642] += dqdci; // dwdot[CH3]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[649] -= dqdci; // dwdot[H]/d[OH]
  J[654] -= dqdci; // dwdot[CH3O]/d[OH]
  // d()/d[H]
  dqdci = +k_f * sc[24];
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[813] += dqdci; // dwdot[OH]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[822] -= dqdci; // dwdot[CH3O]/d[H]
  // d()/d[CH3O]
  dqdci = +k_f * sc[19];
  J[1020] += dqdci; // dwdot[CH3]/d[CH3O]
  J[1023] += dqdci; // dwdot[OH]/d[CH3O]
  J[1027] -= dqdci; // dwdot[H]/d[CH3O]
  J[1032] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1746] -= dqdT; // dwdot[CH3O]/dT

  // reaction 84: CH3O + H <=> CH2* + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[24];
  k_f = 16000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[17] * sc[21];
  Kc = exp(-g_RT[17] + g_RT[19] - g_RT[21] + g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[24]) + (h_RT[17] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[17] += q; // H2O
  wdot[19] -= q; // H
  wdot[21] += q; // CH2*
  wdot[24] -= q; // CH3O
  // d()/d[H2O]
  dqdci = -k_r * sc[21];
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[733] -= dqdci; // dwdot[H]/d[H2O]
  J[735] += dqdci; // dwdot[CH2*]/d[H2O]
  J[738] -= dqdci; // dwdot[CH3O]/d[H2O]
  // d()/d[H]
  dqdci = +k_f * sc[24];
  J[815] += dqdci; // dwdot[H2O]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[819] += dqdci; // dwdot[CH2*]/d[H]
  J[822] -= dqdci; // dwdot[CH3O]/d[H]
  // d()/d[CH2*]
  dqdci = -k_r * sc[17];
  J[899] += dqdci; // dwdot[H2O]/d[CH2*]
  J[901] -= dqdci; // dwdot[H]/d[CH2*]
  J[903] += dqdci; // dwdot[CH2*]/d[CH2*]
  J[906] -= dqdci; // dwdot[CH3O]/d[CH2*]
  // d()/d[CH3O]
  dqdci = +k_f * sc[19];
  J[1025] += dqdci; // dwdot[H2O]/d[CH3O]
  J[1027] -= dqdci; // dwdot[H]/d[CH3O]
  J[1029] += dqdci; // dwdot[CH2*]/d[CH3O]
  J[1032] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1743] += dqdT; // dwdot[CH2*]/dT
  J[1746] -= dqdT; // dwdot[CH3O]/dT

  // reaction 85: CH3O + OH <=> CH2O + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[24];
  k_f = 5000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[17] * sc[23];
  Kc = exp(g_RT[15] - g_RT[17] - g_RT[23] + g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[24]) + (h_RT[17] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[23] += q; // CH2O
  wdot[24] -= q; // CH3O
  // d()/d[OH]
  dqdci = +k_f * sc[24];
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[653] += dqdci; // dwdot[CH2O]/d[OH]
  J[654] -= dqdci; // dwdot[CH3O]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[23];
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[737] += dqdci; // dwdot[CH2O]/d[H2O]
  J[738] -= dqdci; // dwdot[CH3O]/d[H2O]
  // d()/d[CH2O]
  dqdci = -k_r * sc[17];
  J[981] -= dqdci; // dwdot[OH]/d[CH2O]
  J[983] += dqdci; // dwdot[H2O]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[990] -= dqdci; // dwdot[CH3O]/d[CH2O]
  // d()/d[CH3O]
  dqdci = +k_f * sc[15];
  J[1023] -= dqdci; // dwdot[OH]/d[CH3O]
  J[1025] += dqdci; // dwdot[H2O]/d[CH3O]
  J[1031] += dqdci; // dwdot[CH2O]/d[CH3O]
  J[1032] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT
  J[1746] -= dqdT; // dwdot[CH3O]/dT

  // reaction 86: CH3O + O2 <=> CH2O + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[24];
  k_f = 4.28e-19 * exp(7.6 * logT - (-1776.35483029066) * invT);
  dlnkfdT = 7.6 * invT + (-1776.35483029066) * invT2;
  // reverse
  phi_r = sc[16] * sc[23];
  Kc = exp(g_RT[13] - g_RT[16] - g_RT[23] + g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[24]) + (h_RT[16] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // O2
  wdot[16] += q; // HO2
  wdot[23] += q; // CH2O
  wdot[24] -= q; // CH3O
  // d()/d[O2]
  dqdci = +k_f * sc[24];
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[562] += dqdci; // dwdot[HO2]/d[O2]
  J[569] += dqdci; // dwdot[CH2O]/d[O2]
  J[570] -= dqdci; // dwdot[CH3O]/d[O2]
  // d()/d[HO2]
  dqdci = -k_r * sc[23];
  J[685] -= dqdci; // dwdot[O2]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[695] += dqdci; // dwdot[CH2O]/d[HO2]
  J[696] -= dqdci; // dwdot[CH3O]/d[HO2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[16];
  J[979] -= dqdci; // dwdot[O2]/d[CH2O]
  J[982] += dqdci; // dwdot[HO2]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[990] -= dqdci; // dwdot[CH3O]/d[CH2O]
  // d()/d[CH3O]
  dqdci = +k_f * sc[13];
  J[1021] -= dqdci; // dwdot[O2]/d[CH3O]
  J[1024] += dqdci; // dwdot[HO2]/d[CH3O]
  J[1031] += dqdci; // dwdot[CH2O]/d[CH3O]
  J[1032] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT
  J[1746] -= dqdT; // dwdot[CH3O]/dT

  // reaction 87: CH4 + H <=> CH3 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[19];
  k_f = 660 * exp(1.62 * logT - (5454.86865732316) * invT);
  dlnkfdT = 1.62 * invT + (5454.86865732316) * invT2;
  // reverse
  phi_r = sc[6] * sc[12];
  Kc = exp(g_RT[2] - g_RT[6] - g_RT[12] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[19]) + (h_RT[6] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // CH4
  wdot[6] += q;  // H2
  wdot[12] += q; // CH3
  wdot[19] -= q; // H
  // d()/d[CH4]
  dqdci = +k_f * sc[19];
  J[86] -= dqdci;  // dwdot[CH4]/d[CH4]
  J[90] += dqdci;  // dwdot[H2]/d[CH4]
  J[96] += dqdci;  // dwdot[CH3]/d[CH4]
  J[103] -= dqdci; // dwdot[H]/d[CH4]
  // d()/d[H2]
  dqdci = -k_r * sc[12];
  J[254] -= dqdci; // dwdot[CH4]/d[H2]
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[264] += dqdci; // dwdot[CH3]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  // d()/d[CH3]
  dqdci = -k_r * sc[6];
  J[506] -= dqdci; // dwdot[CH4]/d[CH3]
  J[510] += dqdci; // dwdot[H2]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[523] -= dqdci; // dwdot[H]/d[CH3]
  // d()/d[H]
  dqdci = +k_f * sc[2];
  J[800] -= dqdci; // dwdot[CH4]/d[H]
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1724] -= dqdT; // dwdot[CH4]/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 88: CH4 + O <=> CH3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[14];
  k_f = 1020 * exp(1.5 * logT - (4327.66332592059) * invT);
  dlnkfdT = 1.5 * invT + (4327.66332592059) * invT2;
  // reverse
  phi_r = sc[12] * sc[15];
  Kc = exp(g_RT[2] - g_RT[12] + g_RT[14] - g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[14]) + (h_RT[12] + h_RT[15]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // CH4
  wdot[12] += q; // CH3
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  // d()/d[CH4]
  dqdci = +k_f * sc[14];
  J[86] -= dqdci; // dwdot[CH4]/d[CH4]
  J[96] += dqdci; // dwdot[CH3]/d[CH4]
  J[98] -= dqdci; // dwdot[O]/d[CH4]
  J[99] += dqdci; // dwdot[OH]/d[CH4]
  // d()/d[CH3]
  dqdci = -k_r * sc[15];
  J[506] -= dqdci; // dwdot[CH4]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[518] -= dqdci; // dwdot[O]/d[CH3]
  J[519] += dqdci; // dwdot[OH]/d[CH3]
  // d()/d[O]
  dqdci = +k_f * sc[2];
  J[590] -= dqdci; // dwdot[CH4]/d[O]
  J[600] += dqdci; // dwdot[CH3]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[12];
  J[632] -= dqdci; // dwdot[CH4]/d[OH]
  J[642] += dqdci; // dwdot[CH3]/d[OH]
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  // d()/dT
  J[1724] -= dqdT; // dwdot[CH4]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT

  // reaction 89: CH4 + OH <=> CH3 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[15];
  k_f = 100 * exp(1.6 * logT - (1570.03599731073) * invT);
  dlnkfdT = 1.6 * invT + (1570.03599731073) * invT2;
  // reverse
  phi_r = sc[12] * sc[17];
  Kc = exp(g_RT[2] - g_RT[12] + g_RT[15] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[15]) + (h_RT[12] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // CH4
  wdot[12] += q; // CH3
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  // d()/d[CH4]
  dqdci = +k_f * sc[15];
  J[86] -= dqdci;  // dwdot[CH4]/d[CH4]
  J[96] += dqdci;  // dwdot[CH3]/d[CH4]
  J[99] -= dqdci;  // dwdot[OH]/d[CH4]
  J[101] += dqdci; // dwdot[H2O]/d[CH4]
  // d()/d[CH3]
  dqdci = -k_r * sc[17];
  J[506] -= dqdci; // dwdot[CH4]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[519] -= dqdci; // dwdot[OH]/d[CH3]
  J[521] += dqdci; // dwdot[H2O]/d[CH3]
  // d()/d[OH]
  dqdci = +k_f * sc[2];
  J[632] -= dqdci; // dwdot[CH4]/d[OH]
  J[642] += dqdci; // dwdot[CH3]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[12];
  J[716] -= dqdci; // dwdot[CH4]/d[H2O]
  J[726] += dqdci; // dwdot[CH3]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  // d()/dT
  J[1724] -= dqdT; // dwdot[CH4]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT

  // reaction 90: CH2 + CH4 <=> 2 CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[20];
  k_f = 2.46 * exp(2 * logT - (4161.60182620503) * invT);
  dlnkfdT = 2 * invT + (4161.60182620503) * invT2;
  // reverse
  phi_r = (sc[12] * sc[12]);
  Kc = exp(g_RT[2] - 2.000000 * g_RT[12] + g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[20]) + (2.000000 * h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;      // CH4
  wdot[12] += 2 * q; // CH3
  wdot[20] -= q;     // CH2
  // d()/d[CH4]
  dqdci = +k_f * sc[20];
  J[86] -= dqdci;     // dwdot[CH4]/d[CH4]
  J[96] += 2 * dqdci; // dwdot[CH3]/d[CH4]
  J[104] -= dqdci;    // dwdot[CH2]/d[CH4]
  // d()/d[CH3]
  dqdci = -k_r * 2.000000 * sc[12];
  J[506] -= dqdci;     // dwdot[CH4]/d[CH3]
  J[516] += 2 * dqdci; // dwdot[CH3]/d[CH3]
  J[524] -= dqdci;     // dwdot[CH2]/d[CH3]
  // d()/d[CH2]
  dqdci = +k_f * sc[2];
  J[842] -= dqdci;     // dwdot[CH4]/d[CH2]
  J[852] += 2 * dqdci; // dwdot[CH3]/d[CH2]
  J[860] -= dqdci;     // dwdot[CH2]/d[CH2]
  // d()/dT
  J[1724] -= dqdT;     // dwdot[CH4]/dT
  J[1734] += 2 * dqdT; // dwdot[CH3]/dT
  J[1742] -= dqdT;     // dwdot[CH2]/dT

  // reaction 91: H + HCCO <=> CH2* + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[28];
  k_f = 100000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[21];
  Kc = exp(-g_RT[8] + g_RT[19] - g_RT[21] + g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[28]) + (h_RT[8] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[19] -= q; // H
  wdot[21] += q; // CH2*
  wdot[28] -= q; // HCCO
  // d()/d[CO]
  dqdci = -k_r * sc[21];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[355] -= dqdci; // dwdot[H]/d[CO]
  J[357] += dqdci; // dwdot[CH2*]/d[CO]
  J[364] -= dqdci; // dwdot[HCCO]/d[CO]
  // d()/d[H]
  dqdci = +k_f * sc[28];
  J[806] += dqdci; // dwdot[CO]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[819] += dqdci; // dwdot[CH2*]/d[H]
  J[826] -= dqdci; // dwdot[HCCO]/d[H]
  // d()/d[CH2*]
  dqdci = -k_r * sc[8];
  J[890] += dqdci; // dwdot[CO]/d[CH2*]
  J[901] -= dqdci; // dwdot[H]/d[CH2*]
  J[903] += dqdci; // dwdot[CH2*]/d[CH2*]
  J[910] -= dqdci; // dwdot[HCCO]/d[CH2*]
  // d()/d[HCCO]
  dqdci = +k_f * sc[19];
  J[1184] += dqdci; // dwdot[CO]/d[HCCO]
  J[1195] -= dqdci; // dwdot[H]/d[HCCO]
  J[1197] += dqdci; // dwdot[CH2*]/d[HCCO]
  J[1204] -= dqdci; // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1743] += dqdT; // dwdot[CH2*]/dT
  J[1750] -= dqdT; // dwdot[HCCO]/dT

  // reaction 92: HCCO + O <=> 2 CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[28];
  k_f = 100000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = (sc[8] * sc[8]) * sc[19];
  Kc = refC * exp(-2.000000 * g_RT[8] + g_RT[14] - g_RT[19] + g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[28]) + (2.000000 * h_RT[8] + h_RT[19]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += 2 * q; // CO
  wdot[14] -= q;    // O
  wdot[19] += q;    // H
  wdot[28] -= q;    // HCCO
  // d()/d[CO]
  dqdci = -k_r * 2.000000 * sc[8] * sc[19];
  J[344] += 2 * dqdci; // dwdot[CO]/d[CO]
  J[350] -= dqdci;     // dwdot[O]/d[CO]
  J[355] += dqdci;     // dwdot[H]/d[CO]
  J[364] -= dqdci;     // dwdot[HCCO]/d[CO]
  // d()/d[O]
  dqdci = +k_f * sc[28];
  J[596] += 2 * dqdci; // dwdot[CO]/d[O]
  J[602] -= dqdci;     // dwdot[O]/d[O]
  J[607] += dqdci;     // dwdot[H]/d[O]
  J[616] -= dqdci;     // dwdot[HCCO]/d[O]
  // d()/d[H]
  dqdci = -k_r * sc[8] * sc[8];
  J[806] += 2 * dqdci; // dwdot[CO]/d[H]
  J[812] -= dqdci;     // dwdot[O]/d[H]
  J[817] += dqdci;     // dwdot[H]/d[H]
  J[826] -= dqdci;     // dwdot[HCCO]/d[H]
  // d()/d[HCCO]
  dqdci = +k_f * sc[14];
  J[1184] += 2 * dqdci; // dwdot[CO]/d[HCCO]
  J[1190] -= dqdci;     // dwdot[O]/d[HCCO]
  J[1195] += dqdci;     // dwdot[H]/d[HCCO]
  J[1204] -= dqdci;     // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[1730] += 2 * dqdT; // dwdot[CO]/dT
  J[1736] -= dqdT;     // dwdot[O]/dT
  J[1741] += dqdT;     // dwdot[H]/dT
  J[1750] -= dqdT;     // dwdot[HCCO]/dT

  // reaction 93: HCCO + O2 <=> 2 CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[28];
  k_f = 1600000 * exp(-(429.747032597231) * invT);
  dlnkfdT = (429.747032597231) * invT2;
  // reverse
  phi_r = (sc[8] * sc[8]) * sc[15];
  Kc = refC * exp(-2.000000 * g_RT[8] + g_RT[13] - g_RT[15] + g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[28]) + (2.000000 * h_RT[8] + h_RT[15]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += 2 * q; // CO
  wdot[13] -= q;    // O2
  wdot[15] += q;    // OH
  wdot[28] -= q;    // HCCO
  // d()/d[CO]
  dqdci = -k_r * 2.000000 * sc[8] * sc[15];
  J[344] += 2 * dqdci; // dwdot[CO]/d[CO]
  J[349] -= dqdci;     // dwdot[O2]/d[CO]
  J[351] += dqdci;     // dwdot[OH]/d[CO]
  J[364] -= dqdci;     // dwdot[HCCO]/d[CO]
  // d()/d[O2]
  dqdci = +k_f * sc[28];
  J[554] += 2 * dqdci; // dwdot[CO]/d[O2]
  J[559] -= dqdci;     // dwdot[O2]/d[O2]
  J[561] += dqdci;     // dwdot[OH]/d[O2]
  J[574] -= dqdci;     // dwdot[HCCO]/d[O2]
  // d()/d[OH]
  dqdci = -k_r * sc[8] * sc[8];
  J[638] += 2 * dqdci; // dwdot[CO]/d[OH]
  J[643] -= dqdci;     // dwdot[O2]/d[OH]
  J[645] += dqdci;     // dwdot[OH]/d[OH]
  J[658] -= dqdci;     // dwdot[HCCO]/d[OH]
  // d()/d[HCCO]
  dqdci = +k_f * sc[13];
  J[1184] += 2 * dqdci; // dwdot[CO]/d[HCCO]
  J[1189] -= dqdci;     // dwdot[O2]/d[HCCO]
  J[1191] += dqdci;     // dwdot[OH]/d[HCCO]
  J[1204] -= dqdci;     // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[1730] += 2 * dqdT; // dwdot[CO]/dT
  J[1735] -= dqdT;     // dwdot[O2]/dT
  J[1737] += dqdT;     // dwdot[OH]/dT
  J[1750] -= dqdT;     // dwdot[HCCO]/dT

  // reaction 94: CH2 + HCCO <=> C2H3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[20] * sc[28];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[26];
  Kc = exp(-g_RT[8] + g_RT[20] - g_RT[26] + g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[20] + h_RT[28]) + (h_RT[8] + h_RT[26]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[20] -= q; // CH2
  wdot[26] += q; // C2H3
  wdot[28] -= q; // HCCO
  // d()/d[CO]
  dqdci = -k_r * sc[26];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[356] -= dqdci; // dwdot[CH2]/d[CO]
  J[362] += dqdci; // dwdot[C2H3]/d[CO]
  J[364] -= dqdci; // dwdot[HCCO]/d[CO]
  // d()/d[CH2]
  dqdci = +k_f * sc[28];
  J[848] += dqdci; // dwdot[CO]/d[CH2]
  J[860] -= dqdci; // dwdot[CH2]/d[CH2]
  J[866] += dqdci; // dwdot[C2H3]/d[CH2]
  J[868] -= dqdci; // dwdot[HCCO]/d[CH2]
  // d()/d[C2H3]
  dqdci = -k_r * sc[8];
  J[1100] += dqdci; // dwdot[CO]/d[C2H3]
  J[1112] -= dqdci; // dwdot[CH2]/d[C2H3]
  J[1118] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[1120] -= dqdci; // dwdot[HCCO]/d[C2H3]
  // d()/d[HCCO]
  dqdci = +k_f * sc[20];
  J[1184] += dqdci; // dwdot[CO]/d[HCCO]
  J[1196] -= dqdci; // dwdot[CH2]/d[HCCO]
  J[1202] += dqdci; // dwdot[C2H3]/d[HCCO]
  J[1204] -= dqdci; // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1742] -= dqdT; // dwdot[CH2]/dT
  J[1748] += dqdT; // dwdot[C2H3]/dT
  J[1750] -= dqdT; // dwdot[HCCO]/dT

  // reaction 96: C2H2 + O <=> CH2 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[14];
  k_f = 4.08 * exp(2 * logT - (956.111665028967) * invT);
  dlnkfdT = 2 * invT + (956.111665028967) * invT2;
  // reverse
  phi_r = sc[8] * sc[20];
  Kc = exp(-g_RT[8] + g_RT[10] + g_RT[14] - g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[14]) + (h_RT[8] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[10] -= q; // C2H2
  wdot[14] -= q; // O
  wdot[20] += q; // CH2
  // d()/d[CO]
  dqdci = -k_r * sc[20];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[346] -= dqdci; // dwdot[C2H2]/d[CO]
  J[350] -= dqdci; // dwdot[O]/d[CO]
  J[356] += dqdci; // dwdot[CH2]/d[CO]
  // d()/d[C2H2]
  dqdci = +k_f * sc[14];
  J[428] += dqdci; // dwdot[CO]/d[C2H2]
  J[430] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[434] -= dqdci; // dwdot[O]/d[C2H2]
  J[440] += dqdci; // dwdot[CH2]/d[C2H2]
  // d()/d[O]
  dqdci = +k_f * sc[10];
  J[596] += dqdci; // dwdot[CO]/d[O]
  J[598] -= dqdci; // dwdot[C2H2]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[608] += dqdci; // dwdot[CH2]/d[O]
  // d()/d[CH2]
  dqdci = -k_r * sc[8];
  J[848] += dqdci; // dwdot[CO]/d[CH2]
  J[850] -= dqdci; // dwdot[C2H2]/d[CH2]
  J[854] -= dqdci; // dwdot[O]/d[CH2]
  J[860] += dqdci; // dwdot[CH2]/d[CH2]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1732] -= dqdT; // dwdot[C2H2]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1742] += dqdT; // dwdot[CH2]/dT

  // reaction 97: C2H2 + O <=> H + HCCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[14];
  k_f = 16.32 * exp(2 * logT - (956.111665028967) * invT);
  dlnkfdT = 2 * invT + (956.111665028967) * invT2;
  // reverse
  phi_r = sc[19] * sc[28];
  Kc = exp(g_RT[10] + g_RT[14] - g_RT[19] - g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[14]) + (h_RT[19] + h_RT[28]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[10] -= q; // C2H2
  wdot[14] -= q; // O
  wdot[19] += q; // H
  wdot[28] += q; // HCCO
  // d()/d[C2H2]
  dqdci = +k_f * sc[14];
  J[430] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[434] -= dqdci; // dwdot[O]/d[C2H2]
  J[439] += dqdci; // dwdot[H]/d[C2H2]
  J[448] += dqdci; // dwdot[HCCO]/d[C2H2]
  // d()/d[O]
  dqdci = +k_f * sc[10];
  J[598] -= dqdci; // dwdot[C2H2]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[607] += dqdci; // dwdot[H]/d[O]
  J[616] += dqdci; // dwdot[HCCO]/d[O]
  // d()/d[H]
  dqdci = -k_r * sc[28];
  J[808] -= dqdci; // dwdot[C2H2]/d[H]
  J[812] -= dqdci; // dwdot[O]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[826] += dqdci; // dwdot[HCCO]/d[H]
  // d()/d[HCCO]
  dqdci = -k_r * sc[19];
  J[1186] -= dqdci; // dwdot[C2H2]/d[HCCO]
  J[1190] -= dqdci; // dwdot[O]/d[HCCO]
  J[1195] += dqdci; // dwdot[H]/d[HCCO]
  J[1204] += dqdci; // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[1732] -= dqdT; // dwdot[C2H2]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1750] += dqdT; // dwdot[HCCO]/dT

  // reaction 98: C2H2 + OH <=> CH2CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[15];
  k_f = 2.18e-10 * exp(4.5 * logT - (-503.21666580472) * invT);
  dlnkfdT = 4.5 * invT + (-503.21666580472) * invT2;
  // reverse
  phi_r = sc[19] * sc[29];
  Kc = exp(g_RT[10] + g_RT[15] - g_RT[19] - g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[15]) + (h_RT[19] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[10] -= q; // C2H2
  wdot[15] -= q; // OH
  wdot[19] += q; // H
  wdot[29] += q; // CH2CO
  // d()/d[C2H2]
  dqdci = +k_f * sc[15];
  J[430] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[435] -= dqdci; // dwdot[OH]/d[C2H2]
  J[439] += dqdci; // dwdot[H]/d[C2H2]
  J[449] += dqdci; // dwdot[CH2CO]/d[C2H2]
  // d()/d[OH]
  dqdci = +k_f * sc[10];
  J[640] -= dqdci; // dwdot[C2H2]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[649] += dqdci; // dwdot[H]/d[OH]
  J[659] += dqdci; // dwdot[CH2CO]/d[OH]
  // d()/d[H]
  dqdci = -k_r * sc[29];
  J[808] -= dqdci; // dwdot[C2H2]/d[H]
  J[813] -= dqdci; // dwdot[OH]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[827] += dqdci; // dwdot[CH2CO]/d[H]
  // d()/d[CH2CO]
  dqdci = -k_r * sc[19];
  J[1228] -= dqdci; // dwdot[C2H2]/d[CH2CO]
  J[1233] -= dqdci; // dwdot[OH]/d[CH2CO]
  J[1237] += dqdci; // dwdot[H]/d[CH2CO]
  J[1247] += dqdci; // dwdot[CH2CO]/d[CH2CO]
  // d()/dT
  J[1732] -= dqdT; // dwdot[C2H2]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1751] += dqdT; // dwdot[CH2CO]/dT

  // reaction 99: C2H2 + OH <=> CH3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[15];
  k_f = 4.83e-10 * exp(4 * logT - (-1006.43333160944) * invT);
  dlnkfdT = 4 * invT + (-1006.43333160944) * invT2;
  // reverse
  phi_r = sc[8] * sc[12];
  Kc = exp(-g_RT[8] + g_RT[10] - g_RT[12] + g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[15]) + (h_RT[8] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[10] -= q; // C2H2
  wdot[12] += q; // CH3
  wdot[15] -= q; // OH
  // d()/d[CO]
  dqdci = -k_r * sc[12];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[346] -= dqdci; // dwdot[C2H2]/d[CO]
  J[348] += dqdci; // dwdot[CH3]/d[CO]
  J[351] -= dqdci; // dwdot[OH]/d[CO]
  // d()/d[C2H2]
  dqdci = +k_f * sc[15];
  J[428] += dqdci; // dwdot[CO]/d[C2H2]
  J[430] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[432] += dqdci; // dwdot[CH3]/d[C2H2]
  J[435] -= dqdci; // dwdot[OH]/d[C2H2]
  // d()/d[CH3]
  dqdci = -k_r * sc[8];
  J[512] += dqdci; // dwdot[CO]/d[CH3]
  J[514] -= dqdci; // dwdot[C2H2]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[519] -= dqdci; // dwdot[OH]/d[CH3]
  // d()/d[OH]
  dqdci = +k_f * sc[10];
  J[638] += dqdci; // dwdot[CO]/d[OH]
  J[640] -= dqdci; // dwdot[C2H2]/d[OH]
  J[642] += dqdci; // dwdot[CH3]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1732] -= dqdT; // dwdot[C2H2]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT

  // reaction 100: C2H2 + HCO <=> C2H3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[22];
  k_f = 10 * exp(2 * logT - (3019.29999482832) * invT);
  dlnkfdT = 2 * invT + (3019.29999482832) * invT2;
  // reverse
  phi_r = sc[8] * sc[26];
  Kc = exp(-g_RT[8] + g_RT[10] + g_RT[22] - g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[22]) + (h_RT[8] + h_RT[26]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[10] -= q; // C2H2
  wdot[22] -= q; // HCO
  wdot[26] += q; // C2H3
  // d()/d[CO]
  dqdci = -k_r * sc[26];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[346] -= dqdci; // dwdot[C2H2]/d[CO]
  J[358] -= dqdci; // dwdot[HCO]/d[CO]
  J[362] += dqdci; // dwdot[C2H3]/d[CO]
  // d()/d[C2H2]
  dqdci = +k_f * sc[22];
  J[428] += dqdci; // dwdot[CO]/d[C2H2]
  J[430] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[442] -= dqdci; // dwdot[HCO]/d[C2H2]
  J[446] += dqdci; // dwdot[C2H3]/d[C2H2]
  // d()/d[HCO]
  dqdci = +k_f * sc[10];
  J[932] += dqdci; // dwdot[CO]/d[HCO]
  J[934] -= dqdci; // dwdot[C2H2]/d[HCO]
  J[946] -= dqdci; // dwdot[HCO]/d[HCO]
  J[950] += dqdci; // dwdot[C2H3]/d[HCO]
  // d()/d[C2H3]
  dqdci = -k_r * sc[8];
  J[1100] += dqdci; // dwdot[CO]/d[C2H3]
  J[1102] -= dqdci; // dwdot[C2H2]/d[C2H3]
  J[1114] -= dqdci; // dwdot[HCO]/d[C2H3]
  J[1118] += dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1732] -= dqdT; // dwdot[C2H2]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT
  J[1748] += dqdT; // dwdot[C2H3]/dT

  // reaction 101: C2H2 + CH2 <=> C3H3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[20];
  k_f = 12000000 * exp(-(3331.29432762724) * invT);
  dlnkfdT = (3331.29432762724) * invT2;
  // reverse
  phi_r = sc[19] * sc[31];
  Kc = exp(g_RT[10] - g_RT[19] + g_RT[20] - g_RT[31]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[20]) + (h_RT[19] + h_RT[31]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[10] -= q; // C2H2
  wdot[19] += q; // H
  wdot[20] -= q; // CH2
  wdot[31] += q; // C3H3
  // d()/d[C2H2]
  dqdci = +k_f * sc[20];
  J[430] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[439] += dqdci; // dwdot[H]/d[C2H2]
  J[440] -= dqdci; // dwdot[CH2]/d[C2H2]
  J[451] += dqdci; // dwdot[C3H3]/d[C2H2]
  // d()/d[H]
  dqdci = -k_r * sc[31];
  J[808] -= dqdci; // dwdot[C2H2]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[818] -= dqdci; // dwdot[CH2]/d[H]
  J[829] += dqdci; // dwdot[C3H3]/d[H]
  // d()/d[CH2]
  dqdci = +k_f * sc[10];
  J[850] -= dqdci; // dwdot[C2H2]/d[CH2]
  J[859] += dqdci; // dwdot[H]/d[CH2]
  J[860] -= dqdci; // dwdot[CH2]/d[CH2]
  J[871] += dqdci; // dwdot[C3H3]/d[CH2]
  // d()/d[C3H3]
  dqdci = -k_r * sc[19];
  J[1312] -= dqdci; // dwdot[C2H2]/d[C3H3]
  J[1321] += dqdci; // dwdot[H]/d[C3H3]
  J[1322] -= dqdci; // dwdot[CH2]/d[C3H3]
  J[1333] += dqdci; // dwdot[C3H3]/d[C3H3]
  // d()/dT
  J[1732] -= dqdT; // dwdot[C2H2]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1742] -= dqdT; // dwdot[CH2]/dT
  J[1753] += dqdT; // dwdot[C3H3]/dT

  // reaction 102: C2H2 + CH2* <=> C3H3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[21];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[19] * sc[31];
  Kc = exp(g_RT[10] - g_RT[19] + g_RT[21] - g_RT[31]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[21]) + (h_RT[19] + h_RT[31]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[10] -= q; // C2H2
  wdot[19] += q; // H
  wdot[21] -= q; // CH2*
  wdot[31] += q; // C3H3
  // d()/d[C2H2]
  dqdci = +k_f * sc[21];
  J[430] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[439] += dqdci; // dwdot[H]/d[C2H2]
  J[441] -= dqdci; // dwdot[CH2*]/d[C2H2]
  J[451] += dqdci; // dwdot[C3H3]/d[C2H2]
  // d()/d[H]
  dqdci = -k_r * sc[31];
  J[808] -= dqdci; // dwdot[C2H2]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[819] -= dqdci; // dwdot[CH2*]/d[H]
  J[829] += dqdci; // dwdot[C3H3]/d[H]
  // d()/d[CH2*]
  dqdci = +k_f * sc[10];
  J[892] -= dqdci; // dwdot[C2H2]/d[CH2*]
  J[901] += dqdci; // dwdot[H]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[913] += dqdci; // dwdot[C3H3]/d[CH2*]
  // d()/d[C3H3]
  dqdci = -k_r * sc[19];
  J[1312] -= dqdci; // dwdot[C2H2]/d[C3H3]
  J[1321] += dqdci; // dwdot[H]/d[C3H3]
  J[1323] -= dqdci; // dwdot[CH2*]/d[C3H3]
  J[1333] += dqdci; // dwdot[C3H3]/d[C3H3]
  // d()/dT
  J[1732] -= dqdT; // dwdot[C2H2]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT
  J[1753] += dqdT; // dwdot[C3H3]/dT

  // reaction 103: C2H2 + CH3 <=> aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[12];
  k_f = 2.68e+47 * exp(-12.82 * logT - (17979.9314692026) * invT);
  dlnkfdT = -12.82 * invT + (17979.9314692026) * invT2;
  // reverse
  phi_r = sc[32];
  Kc = refCinv * exp(g_RT[10] + g_RT[12] - g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[12]) + (h_RT[32]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[10] -= q; // C2H2
  wdot[12] -= q; // CH3
  wdot[32] += q; // aC3H5
  // d()/d[C2H2]
  dqdci = +k_f * sc[12];
  J[430] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[432] -= dqdci; // dwdot[CH3]/d[C2H2]
  J[452] += dqdci; // dwdot[aC3H5]/d[C2H2]
  // d()/d[CH3]
  dqdci = +k_f * sc[10];
  J[514] -= dqdci; // dwdot[C2H2]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[536] += dqdci; // dwdot[aC3H5]/d[CH3]
  // d()/d[aC3H5]
  dqdci = -k_r;
  J[1354] -= dqdci; // dwdot[C2H2]/d[aC3H5]
  J[1356] -= dqdci; // dwdot[CH3]/d[aC3H5]
  J[1376] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[1732] -= dqdT; // dwdot[C2H2]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1754] += dqdT; // dwdot[aC3H5]/dT

  // reaction 105: CH2CO + H <=> H2 + HCCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[29];
  k_f = 50000000 * exp(-(4025.73332643776) * invT);
  dlnkfdT = (4025.73332643776) * invT2;
  // reverse
  phi_r = sc[6] * sc[28];
  Kc = exp(-g_RT[6] + g_RT[19] - g_RT[28] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[29]) + (h_RT[6] + h_RT[28]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2
  wdot[19] -= q; // H
  wdot[28] += q; // HCCO
  wdot[29] -= q; // CH2CO
  // d()/d[H2]
  dqdci = -k_r * sc[28];
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[280] += dqdci; // dwdot[HCCO]/d[H2]
  J[281] -= dqdci; // dwdot[CH2CO]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[29];
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[826] += dqdci; // dwdot[HCCO]/d[H]
  J[827] -= dqdci; // dwdot[CH2CO]/d[H]
  // d()/d[HCCO]
  dqdci = -k_r * sc[6];
  J[1182] += dqdci; // dwdot[H2]/d[HCCO]
  J[1195] -= dqdci; // dwdot[H]/d[HCCO]
  J[1204] += dqdci; // dwdot[HCCO]/d[HCCO]
  J[1205] -= dqdci; // dwdot[CH2CO]/d[HCCO]
  // d()/d[CH2CO]
  dqdci = +k_f * sc[19];
  J[1224] += dqdci; // dwdot[H2]/d[CH2CO]
  J[1237] -= dqdci; // dwdot[H]/d[CH2CO]
  J[1246] += dqdci; // dwdot[HCCO]/d[CH2CO]
  J[1247] -= dqdci; // dwdot[CH2CO]/d[CH2CO]
  // d()/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1750] += dqdT; // dwdot[HCCO]/dT
  J[1751] -= dqdT; // dwdot[CH2CO]/dT

  // reaction 106: CH2CO + H <=> CH3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[29];
  k_f = 1500 * exp(1.43 * logT - (1353.6528310147) * invT);
  dlnkfdT = 1.43 * invT + (1353.6528310147) * invT2;
  // reverse
  phi_r = sc[8] * sc[12];
  Kc = exp(-g_RT[8] - g_RT[12] + g_RT[19] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[29]) + (h_RT[8] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[12] += q; // CH3
  wdot[19] -= q; // H
  wdot[29] -= q; // CH2CO
  // d()/d[CO]
  dqdci = -k_r * sc[12];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[348] += dqdci; // dwdot[CH3]/d[CO]
  J[355] -= dqdci; // dwdot[H]/d[CO]
  J[365] -= dqdci; // dwdot[CH2CO]/d[CO]
  // d()/d[CH3]
  dqdci = -k_r * sc[8];
  J[512] += dqdci; // dwdot[CO]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[523] -= dqdci; // dwdot[H]/d[CH3]
  J[533] -= dqdci; // dwdot[CH2CO]/d[CH3]
  // d()/d[H]
  dqdci = +k_f * sc[29];
  J[806] += dqdci; // dwdot[CO]/d[H]
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[827] -= dqdci; // dwdot[CH2CO]/d[H]
  // d()/d[CH2CO]
  dqdci = +k_f * sc[19];
  J[1226] += dqdci; // dwdot[CO]/d[CH2CO]
  J[1230] += dqdci; // dwdot[CH3]/d[CH2CO]
  J[1237] -= dqdci; // dwdot[H]/d[CH2CO]
  J[1247] -= dqdci; // dwdot[CH2CO]/d[CH2CO]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1751] -= dqdT; // dwdot[CH2CO]/dT

  // reaction 107: CH2CO + O <=> HCCO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[29];
  k_f = 10000000 * exp(-(4025.73332643776) * invT);
  dlnkfdT = (4025.73332643776) * invT2;
  // reverse
  phi_r = sc[15] * sc[28];
  Kc = exp(g_RT[14] - g_RT[15] - g_RT[28] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[29]) + (h_RT[15] + h_RT[28]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[28] += q; // HCCO
  wdot[29] -= q; // CH2CO
  // d()/d[O]
  dqdci = +k_f * sc[29];
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[616] += dqdci; // dwdot[HCCO]/d[O]
  J[617] -= dqdci; // dwdot[CH2CO]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[28];
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[658] += dqdci; // dwdot[HCCO]/d[OH]
  J[659] -= dqdci; // dwdot[CH2CO]/d[OH]
  // d()/d[HCCO]
  dqdci = -k_r * sc[15];
  J[1190] -= dqdci; // dwdot[O]/d[HCCO]
  J[1191] += dqdci; // dwdot[OH]/d[HCCO]
  J[1204] += dqdci; // dwdot[HCCO]/d[HCCO]
  J[1205] -= dqdci; // dwdot[CH2CO]/d[HCCO]
  // d()/d[CH2CO]
  dqdci = +k_f * sc[14];
  J[1232] -= dqdci; // dwdot[O]/d[CH2CO]
  J[1233] += dqdci; // dwdot[OH]/d[CH2CO]
  J[1246] += dqdci; // dwdot[HCCO]/d[CH2CO]
  J[1247] -= dqdci; // dwdot[CH2CO]/d[CH2CO]
  // d()/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1750] += dqdT; // dwdot[HCCO]/dT
  J[1751] -= dqdT; // dwdot[CH2CO]/dT

  // reaction 108: CH2CO + O <=> CH2 + CO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[29];
  k_f = 1750000 * exp(-(679.342498836372) * invT);
  dlnkfdT = (679.342498836372) * invT2;
  // reverse
  phi_r = sc[20] * sc[25];
  Kc = exp(g_RT[14] - g_RT[20] - g_RT[25] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[29]) + (h_RT[20] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[20] += q; // CH2
  wdot[25] += q; // CO2
  wdot[29] -= q; // CH2CO
  // d()/d[O]
  dqdci = +k_f * sc[29];
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[608] += dqdci; // dwdot[CH2]/d[O]
  J[613] += dqdci; // dwdot[CO2]/d[O]
  J[617] -= dqdci; // dwdot[CH2CO]/d[O]
  // d()/d[CH2]
  dqdci = -k_r * sc[25];
  J[854] -= dqdci; // dwdot[O]/d[CH2]
  J[860] += dqdci; // dwdot[CH2]/d[CH2]
  J[865] += dqdci; // dwdot[CO2]/d[CH2]
  J[869] -= dqdci; // dwdot[CH2CO]/d[CH2]
  // d()/d[CO2]
  dqdci = -k_r * sc[20];
  J[1064] -= dqdci; // dwdot[O]/d[CO2]
  J[1070] += dqdci; // dwdot[CH2]/d[CO2]
  J[1075] += dqdci; // dwdot[CO2]/d[CO2]
  J[1079] -= dqdci; // dwdot[CH2CO]/d[CO2]
  // d()/d[CH2CO]
  dqdci = +k_f * sc[14];
  J[1232] -= dqdci; // dwdot[O]/d[CH2CO]
  J[1238] += dqdci; // dwdot[CH2]/d[CH2CO]
  J[1243] += dqdci; // dwdot[CO2]/d[CH2CO]
  J[1247] -= dqdci; // dwdot[CH2CO]/d[CH2CO]
  // d()/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1742] += dqdT; // dwdot[CH2]/dT
  J[1747] += dqdT; // dwdot[CO2]/dT
  J[1751] -= dqdT; // dwdot[CH2CO]/dT

  // reaction 109: CH2CO + OH <=> H2O + HCCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[29];
  k_f = 7500000 * exp(-(1006.43333160944) * invT);
  dlnkfdT = (1006.43333160944) * invT2;
  // reverse
  phi_r = sc[17] * sc[28];
  Kc = exp(g_RT[15] - g_RT[17] - g_RT[28] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[29]) + (h_RT[17] + h_RT[28]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[28] += q; // HCCO
  wdot[29] -= q; // CH2CO
  // d()/d[OH]
  dqdci = +k_f * sc[29];
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[658] += dqdci; // dwdot[HCCO]/d[OH]
  J[659] -= dqdci; // dwdot[CH2CO]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[28];
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[742] += dqdci; // dwdot[HCCO]/d[H2O]
  J[743] -= dqdci; // dwdot[CH2CO]/d[H2O]
  // d()/d[HCCO]
  dqdci = -k_r * sc[17];
  J[1191] -= dqdci; // dwdot[OH]/d[HCCO]
  J[1193] += dqdci; // dwdot[H2O]/d[HCCO]
  J[1204] += dqdci; // dwdot[HCCO]/d[HCCO]
  J[1205] -= dqdci; // dwdot[CH2CO]/d[HCCO]
  // d()/d[CH2CO]
  dqdci = +k_f * sc[15];
  J[1233] -= dqdci; // dwdot[OH]/d[CH2CO]
  J[1235] += dqdci; // dwdot[H2O]/d[CH2CO]
  J[1246] += dqdci; // dwdot[HCCO]/d[CH2CO]
  J[1247] -= dqdci; // dwdot[CH2CO]/d[CH2CO]
  // d()/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1750] += dqdT; // dwdot[HCCO]/dT
  J[1751] -= dqdT; // dwdot[CH2CO]/dT

  // reaction 111: C2H3 + H <=> C2H2 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[26];
  k_f = 90000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[10];
  Kc = exp(-g_RT[6] - g_RT[10] + g_RT[19] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[26]) + (h_RT[6] + h_RT[10]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2
  wdot[10] += q; // C2H2
  wdot[19] -= q; // H
  wdot[26] -= q; // C2H3
  // d()/d[H2]
  dqdci = -k_r * sc[10];
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[262] += dqdci; // dwdot[C2H2]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[278] -= dqdci; // dwdot[C2H3]/d[H2]
  // d()/d[C2H2]
  dqdci = -k_r * sc[6];
  J[426] += dqdci; // dwdot[H2]/d[C2H2]
  J[430] += dqdci; // dwdot[C2H2]/d[C2H2]
  J[439] -= dqdci; // dwdot[H]/d[C2H2]
  J[446] -= dqdci; // dwdot[C2H3]/d[C2H2]
  // d()/d[H]
  dqdci = +k_f * sc[26];
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[808] += dqdci; // dwdot[C2H2]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[824] -= dqdci; // dwdot[C2H3]/d[H]
  // d()/d[C2H3]
  dqdci = +k_f * sc[19];
  J[1098] += dqdci; // dwdot[H2]/d[C2H3]
  J[1102] += dqdci; // dwdot[C2H2]/d[C2H3]
  J[1111] -= dqdci; // dwdot[H]/d[C2H3]
  J[1118] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1732] += dqdT; // dwdot[C2H2]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT

  // reaction 112: C2H3 + O <=> CH2CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[26];
  k_f = 48000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[19] * sc[29];
  Kc = exp(g_RT[14] - g_RT[19] + g_RT[26] - g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[26]) + (h_RT[19] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[19] += q; // H
  wdot[26] -= q; // C2H3
  wdot[29] += q; // CH2CO
  // d()/d[O]
  dqdci = +k_f * sc[26];
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[607] += dqdci; // dwdot[H]/d[O]
  J[614] -= dqdci; // dwdot[C2H3]/d[O]
  J[617] += dqdci; // dwdot[CH2CO]/d[O]
  // d()/d[H]
  dqdci = -k_r * sc[29];
  J[812] -= dqdci; // dwdot[O]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[824] -= dqdci; // dwdot[C2H3]/d[H]
  J[827] += dqdci; // dwdot[CH2CO]/d[H]
  // d()/d[C2H3]
  dqdci = +k_f * sc[14];
  J[1106] -= dqdci; // dwdot[O]/d[C2H3]
  J[1111] += dqdci; // dwdot[H]/d[C2H3]
  J[1118] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[1121] += dqdci; // dwdot[CH2CO]/d[C2H3]
  // d()/d[CH2CO]
  dqdci = -k_r * sc[19];
  J[1232] -= dqdci; // dwdot[O]/d[CH2CO]
  J[1237] += dqdci; // dwdot[H]/d[CH2CO]
  J[1244] -= dqdci; // dwdot[C2H3]/d[CH2CO]
  J[1247] += dqdci; // dwdot[CH2CO]/d[CH2CO]
  // d()/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT
  J[1751] += dqdT; // dwdot[CH2CO]/dT

  // reaction 113: C2H3 + O <=> CH3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[26];
  k_f = 48000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[12];
  Kc = exp(-g_RT[8] - g_RT[12] + g_RT[14] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[26]) + (h_RT[8] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[12] += q; // CH3
  wdot[14] -= q; // O
  wdot[26] -= q; // C2H3
  // d()/d[CO]
  dqdci = -k_r * sc[12];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[348] += dqdci; // dwdot[CH3]/d[CO]
  J[350] -= dqdci; // dwdot[O]/d[CO]
  J[362] -= dqdci; // dwdot[C2H3]/d[CO]
  // d()/d[CH3]
  dqdci = -k_r * sc[8];
  J[512] += dqdci; // dwdot[CO]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[518] -= dqdci; // dwdot[O]/d[CH3]
  J[530] -= dqdci; // dwdot[C2H3]/d[CH3]
  // d()/d[O]
  dqdci = +k_f * sc[26];
  J[596] += dqdci; // dwdot[CO]/d[O]
  J[600] += dqdci; // dwdot[CH3]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[614] -= dqdci; // dwdot[C2H3]/d[O]
  // d()/d[C2H3]
  dqdci = +k_f * sc[14];
  J[1100] += dqdci; // dwdot[CO]/d[C2H3]
  J[1104] += dqdci; // dwdot[CH3]/d[C2H3]
  J[1106] -= dqdci; // dwdot[O]/d[C2H3]
  J[1118] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT

  // reaction 114: C2H3 + OH <=> C2H2 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[26];
  k_f = 30110000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[10] * sc[17];
  Kc = exp(-g_RT[10] + g_RT[15] - g_RT[17] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[26]) + (h_RT[10] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[10] += q; // C2H2
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[26] -= q; // C2H3
  // d()/d[C2H2]
  dqdci = -k_r * sc[17];
  J[430] += dqdci; // dwdot[C2H2]/d[C2H2]
  J[435] -= dqdci; // dwdot[OH]/d[C2H2]
  J[437] += dqdci; // dwdot[H2O]/d[C2H2]
  J[446] -= dqdci; // dwdot[C2H3]/d[C2H2]
  // d()/d[OH]
  dqdci = +k_f * sc[26];
  J[640] += dqdci; // dwdot[C2H2]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[656] -= dqdci; // dwdot[C2H3]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[10];
  J[724] += dqdci; // dwdot[C2H2]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[740] -= dqdci; // dwdot[C2H3]/d[H2O]
  // d()/d[C2H3]
  dqdci = +k_f * sc[15];
  J[1102] += dqdci; // dwdot[C2H2]/d[C2H3]
  J[1107] -= dqdci; // dwdot[OH]/d[C2H3]
  J[1109] += dqdci; // dwdot[H2O]/d[C2H3]
  J[1118] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1732] += dqdT; // dwdot[C2H2]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT

  // reaction 115: C2H3 + O2 <=> C2H2 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[26];
  k_f = 1.34 * exp(1.61 * logT - (-192.93326966953) * invT);
  dlnkfdT = 1.61 * invT + (-192.93326966953) * invT2;
  // reverse
  phi_r = sc[10] * sc[16];
  Kc = exp(-g_RT[10] + g_RT[13] - g_RT[16] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[26]) + (h_RT[10] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[10] += q; // C2H2
  wdot[13] -= q; // O2
  wdot[16] += q; // HO2
  wdot[26] -= q; // C2H3
  // d()/d[C2H2]
  dqdci = -k_r * sc[16];
  J[430] += dqdci; // dwdot[C2H2]/d[C2H2]
  J[433] -= dqdci; // dwdot[O2]/d[C2H2]
  J[436] += dqdci; // dwdot[HO2]/d[C2H2]
  J[446] -= dqdci; // dwdot[C2H3]/d[C2H2]
  // d()/d[O2]
  dqdci = +k_f * sc[26];
  J[556] += dqdci; // dwdot[C2H2]/d[O2]
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[562] += dqdci; // dwdot[HO2]/d[O2]
  J[572] -= dqdci; // dwdot[C2H3]/d[O2]
  // d()/d[HO2]
  dqdci = -k_r * sc[10];
  J[682] += dqdci; // dwdot[C2H2]/d[HO2]
  J[685] -= dqdci; // dwdot[O2]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[698] -= dqdci; // dwdot[C2H3]/d[HO2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[13];
  J[1102] += dqdci; // dwdot[C2H2]/d[C2H3]
  J[1105] -= dqdci; // dwdot[O2]/d[C2H3]
  J[1108] += dqdci; // dwdot[HO2]/d[C2H3]
  J[1118] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1732] += dqdT; // dwdot[C2H2]/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT

  // reaction 116: C2H3 + O2 <=> CH2CHO + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[26];
  k_f = 300000 * exp(0.29 * logT - (5.53538332385192) * invT);
  dlnkfdT = 0.29 * invT + (5.53538332385192) * invT2;
  // reverse
  phi_r = sc[14] * sc[30];
  Kc = exp(g_RT[13] - g_RT[14] + g_RT[26] - g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[26]) + (h_RT[14] + h_RT[30]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // O2
  wdot[14] += q; // O
  wdot[26] -= q; // C2H3
  wdot[30] += q; // CH2CHO
  // d()/d[O2]
  dqdci = +k_f * sc[26];
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[560] += dqdci; // dwdot[O]/d[O2]
  J[572] -= dqdci; // dwdot[C2H3]/d[O2]
  J[576] += dqdci; // dwdot[CH2CHO]/d[O2]
  // d()/d[O]
  dqdci = -k_r * sc[30];
  J[601] -= dqdci; // dwdot[O2]/d[O]
  J[602] += dqdci; // dwdot[O]/d[O]
  J[614] -= dqdci; // dwdot[C2H3]/d[O]
  J[618] += dqdci; // dwdot[CH2CHO]/d[O]
  // d()/d[C2H3]
  dqdci = +k_f * sc[13];
  J[1105] -= dqdci; // dwdot[O2]/d[C2H3]
  J[1106] += dqdci; // dwdot[O]/d[C2H3]
  J[1118] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[1122] += dqdci; // dwdot[CH2CHO]/d[C2H3]
  // d()/d[CH2CHO]
  dqdci = -k_r * sc[14];
  J[1273] -= dqdci; // dwdot[O2]/d[CH2CHO]
  J[1274] += dqdci; // dwdot[O]/d[CH2CHO]
  J[1286] -= dqdci; // dwdot[C2H3]/d[CH2CHO]
  J[1290] += dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1736] += dqdT; // dwdot[O]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT
  J[1752] += dqdT; // dwdot[CH2CHO]/dT

  // reaction 117: C2H3 + O2 <=> CH2O + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[26];
  k_f = 46000000000 * exp(-1.39 * logT - (508.248832462767) * invT);
  dlnkfdT = -1.39 * invT + (508.248832462767) * invT2;
  // reverse
  phi_r = sc[22] * sc[23];
  Kc = exp(g_RT[13] - g_RT[22] - g_RT[23] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[26]) + (h_RT[22] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // O2
  wdot[22] += q; // HCO
  wdot[23] += q; // CH2O
  wdot[26] -= q; // C2H3
  // d()/d[O2]
  dqdci = +k_f * sc[26];
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[568] += dqdci; // dwdot[HCO]/d[O2]
  J[569] += dqdci; // dwdot[CH2O]/d[O2]
  J[572] -= dqdci; // dwdot[C2H3]/d[O2]
  // d()/d[HCO]
  dqdci = -k_r * sc[23];
  J[937] -= dqdci; // dwdot[O2]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[947] += dqdci; // dwdot[CH2O]/d[HCO]
  J[950] -= dqdci; // dwdot[C2H3]/d[HCO]
  // d()/d[CH2O]
  dqdci = -k_r * sc[22];
  J[979] -= dqdci; // dwdot[O2]/d[CH2O]
  J[988] += dqdci; // dwdot[HCO]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[992] -= dqdci; // dwdot[C2H3]/d[CH2O]
  // d()/d[C2H3]
  dqdci = +k_f * sc[13];
  J[1105] -= dqdci; // dwdot[O2]/d[C2H3]
  J[1114] += dqdci; // dwdot[HCO]/d[C2H3]
  J[1115] += dqdci; // dwdot[CH2O]/d[C2H3]
  J[1118] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT

  // reaction 119: C2H3 + CH3 <=> H + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[26];
  k_f = 1.5e+18 * exp(-2.83 * logT - (9368.88788395227) * invT);
  dlnkfdT = -2.83 * invT + (9368.88788395227) * invT2;
  // reverse
  phi_r = sc[19] * sc[32];
  Kc = exp(g_RT[12] - g_RT[19] + g_RT[26] - g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[26]) + (h_RT[19] + h_RT[32]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] -= q; // CH3
  wdot[19] += q; // H
  wdot[26] -= q; // C2H3
  wdot[32] += q; // aC3H5
  // d()/d[CH3]
  dqdci = +k_f * sc[26];
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[523] += dqdci; // dwdot[H]/d[CH3]
  J[530] -= dqdci; // dwdot[C2H3]/d[CH3]
  J[536] += dqdci; // dwdot[aC3H5]/d[CH3]
  // d()/d[H]
  dqdci = -k_r * sc[32];
  J[810] -= dqdci; // dwdot[CH3]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[824] -= dqdci; // dwdot[C2H3]/d[H]
  J[830] += dqdci; // dwdot[aC3H5]/d[H]
  // d()/d[C2H3]
  dqdci = +k_f * sc[12];
  J[1104] -= dqdci; // dwdot[CH3]/d[C2H3]
  J[1111] += dqdci; // dwdot[H]/d[C2H3]
  J[1118] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[1124] += dqdci; // dwdot[aC3H5]/d[C2H3]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[19];
  J[1356] -= dqdci; // dwdot[CH3]/d[aC3H5]
  J[1363] += dqdci; // dwdot[H]/d[aC3H5]
  J[1370] -= dqdci; // dwdot[C2H3]/d[aC3H5]
  J[1376] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT
  J[1754] += dqdT; // dwdot[aC3H5]/dT

  // reaction 120: CH2CHO <=> CH3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[30];
  k_f = 7.8e+41 * exp(-9.147 * logT - (23600.8616262414) * invT);
  dlnkfdT = -9.147 * invT + (23600.8616262414) * invT2;
  // reverse
  phi_r = sc[8] * sc[12];
  Kc = refC * exp(-g_RT[8] - g_RT[12] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[30]) + (h_RT[8] + h_RT[12]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[12] += q; // CH3
  wdot[30] -= q; // CH2CHO
  // d()/d[CO]
  dqdci = -k_r * sc[12];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[348] += dqdci; // dwdot[CH3]/d[CO]
  J[366] -= dqdci; // dwdot[CH2CHO]/d[CO]
  // d()/d[CH3]
  dqdci = -k_r * sc[8];
  J[512] += dqdci; // dwdot[CO]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[534] -= dqdci; // dwdot[CH2CHO]/d[CH3]
  // d()/d[CH2CHO]
  dqdci = +k_f;
  J[1268] += dqdci; // dwdot[CO]/d[CH2CHO]
  J[1272] += dqdci; // dwdot[CH3]/d[CH2CHO]
  J[1290] -= dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1752] -= dqdT; // dwdot[CH2CHO]/dT

  // reaction 121: CH2CHO + H <=> CH3 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[30];
  k_f = 90000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[12] * sc[22];
  Kc = exp(-g_RT[12] + g_RT[19] - g_RT[22] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[30]) + (h_RT[12] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] += q; // CH3
  wdot[19] -= q; // H
  wdot[22] += q; // HCO
  wdot[30] -= q; // CH2CHO
  // d()/d[CH3]
  dqdci = -k_r * sc[22];
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[523] -= dqdci; // dwdot[H]/d[CH3]
  J[526] += dqdci; // dwdot[HCO]/d[CH3]
  J[534] -= dqdci; // dwdot[CH2CHO]/d[CH3]
  // d()/d[H]
  dqdci = +k_f * sc[30];
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[820] += dqdci; // dwdot[HCO]/d[H]
  J[828] -= dqdci; // dwdot[CH2CHO]/d[H]
  // d()/d[HCO]
  dqdci = -k_r * sc[12];
  J[936] += dqdci; // dwdot[CH3]/d[HCO]
  J[943] -= dqdci; // dwdot[H]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[954] -= dqdci; // dwdot[CH2CHO]/d[HCO]
  // d()/d[CH2CHO]
  dqdci = +k_f * sc[19];
  J[1272] += dqdci; // dwdot[CH3]/d[CH2CHO]
  J[1279] -= dqdci; // dwdot[H]/d[CH2CHO]
  J[1282] += dqdci; // dwdot[HCO]/d[CH2CHO]
  J[1290] -= dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1752] -= dqdT; // dwdot[CH2CHO]/dT

  // reaction 122: CH2CHO + H <=> CH2CO + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[30];
  k_f = 20000000 * exp(-(2012.86666321888) * invT);
  dlnkfdT = (2012.86666321888) * invT2;
  // reverse
  phi_r = sc[6] * sc[29];
  Kc = exp(-g_RT[6] + g_RT[19] - g_RT[29] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[30]) + (h_RT[6] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2
  wdot[19] -= q; // H
  wdot[29] += q; // CH2CO
  wdot[30] -= q; // CH2CHO
  // d()/d[H2]
  dqdci = -k_r * sc[29];
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[281] += dqdci; // dwdot[CH2CO]/d[H2]
  J[282] -= dqdci; // dwdot[CH2CHO]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[30];
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[827] += dqdci; // dwdot[CH2CO]/d[H]
  J[828] -= dqdci; // dwdot[CH2CHO]/d[H]
  // d()/d[CH2CO]
  dqdci = -k_r * sc[6];
  J[1224] += dqdci; // dwdot[H2]/d[CH2CO]
  J[1237] -= dqdci; // dwdot[H]/d[CH2CO]
  J[1247] += dqdci; // dwdot[CH2CO]/d[CH2CO]
  J[1248] -= dqdci; // dwdot[CH2CHO]/d[CH2CO]
  // d()/d[CH2CHO]
  dqdci = +k_f * sc[19];
  J[1266] += dqdci; // dwdot[H2]/d[CH2CHO]
  J[1279] -= dqdci; // dwdot[H]/d[CH2CHO]
  J[1289] += dqdci; // dwdot[CH2CO]/d[CH2CHO]
  J[1290] -= dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1751] += dqdT; // dwdot[CH2CO]/dT
  J[1752] -= dqdT; // dwdot[CH2CHO]/dT

  // reaction 123: CH2CHO + O <=> CH2CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[30];
  k_f = 20000000 * exp(-(2012.86666321888) * invT);
  dlnkfdT = (2012.86666321888) * invT2;
  // reverse
  phi_r = sc[15] * sc[29];
  Kc = exp(g_RT[14] - g_RT[15] - g_RT[29] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[30]) + (h_RT[15] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[29] += q; // CH2CO
  wdot[30] -= q; // CH2CHO
  // d()/d[O]
  dqdci = +k_f * sc[30];
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[617] += dqdci; // dwdot[CH2CO]/d[O]
  J[618] -= dqdci; // dwdot[CH2CHO]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[29];
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[659] += dqdci; // dwdot[CH2CO]/d[OH]
  J[660] -= dqdci; // dwdot[CH2CHO]/d[OH]
  // d()/d[CH2CO]
  dqdci = -k_r * sc[15];
  J[1232] -= dqdci; // dwdot[O]/d[CH2CO]
  J[1233] += dqdci; // dwdot[OH]/d[CH2CO]
  J[1247] += dqdci; // dwdot[CH2CO]/d[CH2CO]
  J[1248] -= dqdci; // dwdot[CH2CHO]/d[CH2CO]
  // d()/d[CH2CHO]
  dqdci = +k_f * sc[14];
  J[1274] -= dqdci; // dwdot[O]/d[CH2CHO]
  J[1275] += dqdci; // dwdot[OH]/d[CH2CHO]
  J[1289] += dqdci; // dwdot[CH2CO]/d[CH2CHO]
  J[1290] -= dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1751] += dqdT; // dwdot[CH2CO]/dT
  J[1752] -= dqdT; // dwdot[CH2CHO]/dT

  // reaction 124: CH2CHO + OH <=> CH2CO + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[30];
  k_f = 10000000 * exp(-(1006.43333160944) * invT);
  dlnkfdT = (1006.43333160944) * invT2;
  // reverse
  phi_r = sc[17] * sc[29];
  Kc = exp(g_RT[15] - g_RT[17] - g_RT[29] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[30]) + (h_RT[17] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[29] += q; // CH2CO
  wdot[30] -= q; // CH2CHO
  // d()/d[OH]
  dqdci = +k_f * sc[30];
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[659] += dqdci; // dwdot[CH2CO]/d[OH]
  J[660] -= dqdci; // dwdot[CH2CHO]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[29];
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[743] += dqdci; // dwdot[CH2CO]/d[H2O]
  J[744] -= dqdci; // dwdot[CH2CHO]/d[H2O]
  // d()/d[CH2CO]
  dqdci = -k_r * sc[17];
  J[1233] -= dqdci; // dwdot[OH]/d[CH2CO]
  J[1235] += dqdci; // dwdot[H2O]/d[CH2CO]
  J[1247] += dqdci; // dwdot[CH2CO]/d[CH2CO]
  J[1248] -= dqdci; // dwdot[CH2CHO]/d[CH2CO]
  // d()/d[CH2CHO]
  dqdci = +k_f * sc[15];
  J[1275] -= dqdci; // dwdot[OH]/d[CH2CHO]
  J[1277] += dqdci; // dwdot[H2O]/d[CH2CHO]
  J[1289] += dqdci; // dwdot[CH2CO]/d[CH2CHO]
  J[1290] -= dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1751] += dqdT; // dwdot[CH2CO]/dT
  J[1752] -= dqdT; // dwdot[CH2CHO]/dT

  // reaction 125: CH2CHO + O2 <=> CH2CO + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[30];
  k_f = 140000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[16] * sc[29];
  Kc = exp(g_RT[13] - g_RT[16] - g_RT[29] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[30]) + (h_RT[16] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // O2
  wdot[16] += q; // HO2
  wdot[29] += q; // CH2CO
  wdot[30] -= q; // CH2CHO
  // d()/d[O2]
  dqdci = +k_f * sc[30];
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[562] += dqdci; // dwdot[HO2]/d[O2]
  J[575] += dqdci; // dwdot[CH2CO]/d[O2]
  J[576] -= dqdci; // dwdot[CH2CHO]/d[O2]
  // d()/d[HO2]
  dqdci = -k_r * sc[29];
  J[685] -= dqdci; // dwdot[O2]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[701] += dqdci; // dwdot[CH2CO]/d[HO2]
  J[702] -= dqdci; // dwdot[CH2CHO]/d[HO2]
  // d()/d[CH2CO]
  dqdci = -k_r * sc[16];
  J[1231] -= dqdci; // dwdot[O2]/d[CH2CO]
  J[1234] += dqdci; // dwdot[HO2]/d[CH2CO]
  J[1247] += dqdci; // dwdot[CH2CO]/d[CH2CO]
  J[1248] -= dqdci; // dwdot[CH2CHO]/d[CH2CO]
  // d()/d[CH2CHO]
  dqdci = +k_f * sc[13];
  J[1273] -= dqdci; // dwdot[O2]/d[CH2CHO]
  J[1276] += dqdci; // dwdot[HO2]/d[CH2CHO]
  J[1289] += dqdci; // dwdot[CH2CO]/d[CH2CHO]
  J[1290] -= dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1751] += dqdT; // dwdot[CH2CO]/dT
  J[1752] -= dqdT; // dwdot[CH2CHO]/dT

  // reaction 127: C2H4 + H <=> C2H3 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[19];
  k_f = 50.7 * exp(1.9 * logT - (6516.65582217112) * invT);
  dlnkfdT = 1.9 * invT + (6516.65582217112) * invT2;
  // reverse
  phi_r = sc[6] * sc[26];
  Kc = exp(g_RT[1] - g_RT[6] + g_RT[19] - g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[19]) + (h_RT[6] + h_RT[26]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // C2H4
  wdot[6] += q;  // H2
  wdot[19] -= q; // H
  wdot[26] += q; // C2H3
  // d()/d[C2H4]
  dqdci = +k_f * sc[19];
  J[43] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[48] += dqdci; // dwdot[H2]/d[C2H4]
  J[61] -= dqdci; // dwdot[H]/d[C2H4]
  J[68] += dqdci; // dwdot[C2H3]/d[C2H4]
  // d()/d[H2]
  dqdci = -k_r * sc[26];
  J[253] -= dqdci; // dwdot[C2H4]/d[H2]
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[278] += dqdci; // dwdot[C2H3]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[1];
  J[799] -= dqdci; // dwdot[C2H4]/d[H]
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[824] += dqdci; // dwdot[C2H3]/d[H]
  // d()/d[C2H3]
  dqdci = -k_r * sc[6];
  J[1093] -= dqdci; // dwdot[C2H4]/d[C2H3]
  J[1098] += dqdci; // dwdot[H2]/d[C2H3]
  J[1111] -= dqdci; // dwdot[H]/d[C2H3]
  J[1118] += dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1723] -= dqdT; // dwdot[C2H4]/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1748] += dqdT; // dwdot[C2H3]/dT

  // reaction 128: C2H4 + O <=> C2H3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[14];
  k_f = 15.1 * exp(1.9 * logT - (1882.03033010965) * invT);
  dlnkfdT = 1.9 * invT + (1882.03033010965) * invT2;
  // reverse
  phi_r = sc[15] * sc[26];
  Kc = exp(g_RT[1] + g_RT[14] - g_RT[15] - g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[14]) + (h_RT[15] + h_RT[26]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // C2H4
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[26] += q; // C2H3
  // d()/d[C2H4]
  dqdci = +k_f * sc[14];
  J[43] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[56] -= dqdci; // dwdot[O]/d[C2H4]
  J[57] += dqdci; // dwdot[OH]/d[C2H4]
  J[68] += dqdci; // dwdot[C2H3]/d[C2H4]
  // d()/d[O]
  dqdci = +k_f * sc[1];
  J[589] -= dqdci; // dwdot[C2H4]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[614] += dqdci; // dwdot[C2H3]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[26];
  J[631] -= dqdci; // dwdot[C2H4]/d[OH]
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[656] += dqdci; // dwdot[C2H3]/d[OH]
  // d()/d[C2H3]
  dqdci = -k_r * sc[15];
  J[1093] -= dqdci; // dwdot[C2H4]/d[C2H3]
  J[1106] -= dqdci; // dwdot[O]/d[C2H3]
  J[1107] += dqdci; // dwdot[OH]/d[C2H3]
  J[1118] += dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1723] -= dqdT; // dwdot[C2H4]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1748] += dqdT; // dwdot[C2H3]/dT

  // reaction 129: C2H4 + O <=> CH3 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[14];
  k_f = 19.2 * exp(1.83 * logT - (110.707666477038) * invT);
  dlnkfdT = 1.83 * invT + (110.707666477038) * invT2;
  // reverse
  phi_r = sc[12] * sc[22];
  Kc = exp(g_RT[1] - g_RT[12] + g_RT[14] - g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[14]) + (h_RT[12] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // C2H4
  wdot[12] += q; // CH3
  wdot[14] -= q; // O
  wdot[22] += q; // HCO
  // d()/d[C2H4]
  dqdci = +k_f * sc[14];
  J[43] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[54] += dqdci; // dwdot[CH3]/d[C2H4]
  J[56] -= dqdci; // dwdot[O]/d[C2H4]
  J[64] += dqdci; // dwdot[HCO]/d[C2H4]
  // d()/d[CH3]
  dqdci = -k_r * sc[22];
  J[505] -= dqdci; // dwdot[C2H4]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[518] -= dqdci; // dwdot[O]/d[CH3]
  J[526] += dqdci; // dwdot[HCO]/d[CH3]
  // d()/d[O]
  dqdci = +k_f * sc[1];
  J[589] -= dqdci; // dwdot[C2H4]/d[O]
  J[600] += dqdci; // dwdot[CH3]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[610] += dqdci; // dwdot[HCO]/d[O]
  // d()/d[HCO]
  dqdci = -k_r * sc[12];
  J[925] -= dqdci; // dwdot[C2H4]/d[HCO]
  J[936] += dqdci; // dwdot[CH3]/d[HCO]
  J[938] -= dqdci; // dwdot[O]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1723] -= dqdT; // dwdot[C2H4]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT

  // reaction 130: C2H4 + O <=> CH2 + CH2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[14];
  k_f = 0.384 * exp(1.83 * logT - (110.707666477038) * invT);
  dlnkfdT = 1.83 * invT + (110.707666477038) * invT2;
  // reverse
  phi_r = sc[20] * sc[23];
  Kc = exp(g_RT[1] + g_RT[14] - g_RT[20] - g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[14]) + (h_RT[20] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // C2H4
  wdot[14] -= q; // O
  wdot[20] += q; // CH2
  wdot[23] += q; // CH2O
  // d()/d[C2H4]
  dqdci = +k_f * sc[14];
  J[43] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[56] -= dqdci; // dwdot[O]/d[C2H4]
  J[62] += dqdci; // dwdot[CH2]/d[C2H4]
  J[65] += dqdci; // dwdot[CH2O]/d[C2H4]
  // d()/d[O]
  dqdci = +k_f * sc[1];
  J[589] -= dqdci; // dwdot[C2H4]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[608] += dqdci; // dwdot[CH2]/d[O]
  J[611] += dqdci; // dwdot[CH2O]/d[O]
  // d()/d[CH2]
  dqdci = -k_r * sc[23];
  J[841] -= dqdci; // dwdot[C2H4]/d[CH2]
  J[854] -= dqdci; // dwdot[O]/d[CH2]
  J[860] += dqdci; // dwdot[CH2]/d[CH2]
  J[863] += dqdci; // dwdot[CH2O]/d[CH2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[20];
  J[967] -= dqdci; // dwdot[C2H4]/d[CH2O]
  J[980] -= dqdci; // dwdot[O]/d[CH2O]
  J[986] += dqdci; // dwdot[CH2]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[1723] -= dqdT; // dwdot[C2H4]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1742] += dqdT; // dwdot[CH2]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT

  // reaction 131: C2H4 + OH <=> C2H3 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[15];
  k_f = 3.6 * exp(2 * logT - (1258.0416645118) * invT);
  dlnkfdT = 2 * invT + (1258.0416645118) * invT2;
  // reverse
  phi_r = sc[17] * sc[26];
  Kc = exp(g_RT[1] + g_RT[15] - g_RT[17] - g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[15]) + (h_RT[17] + h_RT[26]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // C2H4
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[26] += q; // C2H3
  // d()/d[C2H4]
  dqdci = +k_f * sc[15];
  J[43] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[57] -= dqdci; // dwdot[OH]/d[C2H4]
  J[59] += dqdci; // dwdot[H2O]/d[C2H4]
  J[68] += dqdci; // dwdot[C2H3]/d[C2H4]
  // d()/d[OH]
  dqdci = +k_f * sc[1];
  J[631] -= dqdci; // dwdot[C2H4]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[656] += dqdci; // dwdot[C2H3]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[26];
  J[715] -= dqdci; // dwdot[C2H4]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[740] += dqdci; // dwdot[C2H3]/d[H2O]
  // d()/d[C2H3]
  dqdci = -k_r * sc[17];
  J[1093] -= dqdci; // dwdot[C2H4]/d[C2H3]
  J[1107] -= dqdci; // dwdot[OH]/d[C2H3]
  J[1109] += dqdci; // dwdot[H2O]/d[C2H3]
  J[1118] += dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1723] -= dqdT; // dwdot[C2H4]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1748] += dqdT; // dwdot[C2H3]/dT

  // reaction 132: C2H4 + HCO <=> C2H5 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[22];
  k_f = 10 * exp(2 * logT - (4025.73332643776) * invT);
  dlnkfdT = 2 * invT + (4025.73332643776) * invT2;
  // reverse
  phi_r = sc[8] * sc[27];
  Kc = exp(g_RT[1] - g_RT[8] + g_RT[22] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[22]) + (h_RT[8] + h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // C2H4
  wdot[8] += q;  // CO
  wdot[22] -= q; // HCO
  wdot[27] += q; // C2H5
  // d()/d[C2H4]
  dqdci = +k_f * sc[22];
  J[43] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[50] += dqdci; // dwdot[CO]/d[C2H4]
  J[64] -= dqdci; // dwdot[HCO]/d[C2H4]
  J[69] += dqdci; // dwdot[C2H5]/d[C2H4]
  // d()/d[CO]
  dqdci = -k_r * sc[27];
  J[337] -= dqdci; // dwdot[C2H4]/d[CO]
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[358] -= dqdci; // dwdot[HCO]/d[CO]
  J[363] += dqdci; // dwdot[C2H5]/d[CO]
  // d()/d[HCO]
  dqdci = +k_f * sc[1];
  J[925] -= dqdci; // dwdot[C2H4]/d[HCO]
  J[932] += dqdci; // dwdot[CO]/d[HCO]
  J[946] -= dqdci; // dwdot[HCO]/d[HCO]
  J[951] += dqdci; // dwdot[C2H5]/d[HCO]
  // d()/d[C2H5]
  dqdci = -k_r * sc[8];
  J[1135] -= dqdci; // dwdot[C2H4]/d[C2H5]
  J[1142] += dqdci; // dwdot[CO]/d[C2H5]
  J[1156] -= dqdci; // dwdot[HCO]/d[C2H5]
  J[1161] += dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1723] -= dqdT; // dwdot[C2H4]/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT
  J[1749] += dqdT; // dwdot[C2H5]/dT

  // reaction 133: C2H4 + CH2 <=> H + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[20];
  k_f = 20000000 * exp(-(3019.29999482832) * invT);
  dlnkfdT = (3019.29999482832) * invT2;
  // reverse
  phi_r = sc[19] * sc[32];
  Kc = exp(g_RT[1] - g_RT[19] + g_RT[20] - g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[20]) + (h_RT[19] + h_RT[32]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // C2H4
  wdot[19] += q; // H
  wdot[20] -= q; // CH2
  wdot[32] += q; // aC3H5
  // d()/d[C2H4]
  dqdci = +k_f * sc[20];
  J[43] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[61] += dqdci; // dwdot[H]/d[C2H4]
  J[62] -= dqdci; // dwdot[CH2]/d[C2H4]
  J[74] += dqdci; // dwdot[aC3H5]/d[C2H4]
  // d()/d[H]
  dqdci = -k_r * sc[32];
  J[799] -= dqdci; // dwdot[C2H4]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[818] -= dqdci; // dwdot[CH2]/d[H]
  J[830] += dqdci; // dwdot[aC3H5]/d[H]
  // d()/d[CH2]
  dqdci = +k_f * sc[1];
  J[841] -= dqdci; // dwdot[C2H4]/d[CH2]
  J[859] += dqdci; // dwdot[H]/d[CH2]
  J[860] -= dqdci; // dwdot[CH2]/d[CH2]
  J[872] += dqdci; // dwdot[aC3H5]/d[CH2]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[19];
  J[1345] -= dqdci; // dwdot[C2H4]/d[aC3H5]
  J[1363] += dqdci; // dwdot[H]/d[aC3H5]
  J[1364] -= dqdci; // dwdot[CH2]/d[aC3H5]
  J[1376] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[1723] -= dqdT; // dwdot[C2H4]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1742] -= dqdT; // dwdot[CH2]/dT
  J[1754] += dqdT; // dwdot[aC3H5]/dT

  // reaction 134: C2H4 + CH2* <=> H + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[21];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[19] * sc[32];
  Kc = exp(g_RT[1] - g_RT[19] + g_RT[21] - g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[21]) + (h_RT[19] + h_RT[32]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // C2H4
  wdot[19] += q; // H
  wdot[21] -= q; // CH2*
  wdot[32] += q; // aC3H5
  // d()/d[C2H4]
  dqdci = +k_f * sc[21];
  J[43] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[61] += dqdci; // dwdot[H]/d[C2H4]
  J[63] -= dqdci; // dwdot[CH2*]/d[C2H4]
  J[74] += dqdci; // dwdot[aC3H5]/d[C2H4]
  // d()/d[H]
  dqdci = -k_r * sc[32];
  J[799] -= dqdci; // dwdot[C2H4]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[819] -= dqdci; // dwdot[CH2*]/d[H]
  J[830] += dqdci; // dwdot[aC3H5]/d[H]
  // d()/d[CH2*]
  dqdci = +k_f * sc[1];
  J[883] -= dqdci; // dwdot[C2H4]/d[CH2*]
  J[901] += dqdci; // dwdot[H]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[914] += dqdci; // dwdot[aC3H5]/d[CH2*]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[19];
  J[1345] -= dqdci; // dwdot[C2H4]/d[aC3H5]
  J[1363] += dqdci; // dwdot[H]/d[aC3H5]
  J[1365] -= dqdci; // dwdot[CH2*]/d[aC3H5]
  J[1376] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[1723] -= dqdT; // dwdot[C2H4]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT
  J[1754] += dqdT; // dwdot[aC3H5]/dT

  // reaction 135: C2H4 + CH3 <=> C2H3 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[12];
  k_f = 0.227 * exp(2 * logT - (4629.59332540342) * invT);
  dlnkfdT = 2 * invT + (4629.59332540342) * invT2;
  // reverse
  phi_r = sc[2] * sc[26];
  Kc = exp(g_RT[1] - g_RT[2] + g_RT[12] - g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[12]) + (h_RT[2] + h_RT[26]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // C2H4
  wdot[2] += q;  // CH4
  wdot[12] -= q; // CH3
  wdot[26] += q; // C2H3
  // d()/d[C2H4]
  dqdci = +k_f * sc[12];
  J[43] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[44] += dqdci; // dwdot[CH4]/d[C2H4]
  J[54] -= dqdci; // dwdot[CH3]/d[C2H4]
  J[68] += dqdci; // dwdot[C2H3]/d[C2H4]
  // d()/d[CH4]
  dqdci = -k_r * sc[26];
  J[85] -= dqdci;  // dwdot[C2H4]/d[CH4]
  J[86] += dqdci;  // dwdot[CH4]/d[CH4]
  J[96] -= dqdci;  // dwdot[CH3]/d[CH4]
  J[110] += dqdci; // dwdot[C2H3]/d[CH4]
  // d()/d[CH3]
  dqdci = +k_f * sc[1];
  J[505] -= dqdci; // dwdot[C2H4]/d[CH3]
  J[506] += dqdci; // dwdot[CH4]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[530] += dqdci; // dwdot[C2H3]/d[CH3]
  // d()/d[C2H3]
  dqdci = -k_r * sc[2];
  J[1093] -= dqdci; // dwdot[C2H4]/d[C2H3]
  J[1094] += dqdci; // dwdot[CH4]/d[C2H3]
  J[1104] -= dqdci; // dwdot[CH3]/d[C2H3]
  J[1118] += dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1723] -= dqdT; // dwdot[C2H4]/dT
  J[1724] += dqdT; // dwdot[CH4]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1748] += dqdT; // dwdot[C2H3]/dT

  // reaction 136: C2H4 + O2 <=> C2H3 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[13];
  k_f = 42200000 * exp(-(30595.573280927) * invT);
  dlnkfdT = (30595.573280927) * invT2;
  // reverse
  phi_r = sc[16] * sc[26];
  Kc = exp(g_RT[1] + g_RT[13] - g_RT[16] - g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[13]) + (h_RT[16] + h_RT[26]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // C2H4
  wdot[13] -= q; // O2
  wdot[16] += q; // HO2
  wdot[26] += q; // C2H3
  // d()/d[C2H4]
  dqdci = +k_f * sc[13];
  J[43] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[55] -= dqdci; // dwdot[O2]/d[C2H4]
  J[58] += dqdci; // dwdot[HO2]/d[C2H4]
  J[68] += dqdci; // dwdot[C2H3]/d[C2H4]
  // d()/d[O2]
  dqdci = +k_f * sc[1];
  J[547] -= dqdci; // dwdot[C2H4]/d[O2]
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[562] += dqdci; // dwdot[HO2]/d[O2]
  J[572] += dqdci; // dwdot[C2H3]/d[O2]
  // d()/d[HO2]
  dqdci = -k_r * sc[26];
  J[673] -= dqdci; // dwdot[C2H4]/d[HO2]
  J[685] -= dqdci; // dwdot[O2]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[698] += dqdci; // dwdot[C2H3]/d[HO2]
  // d()/d[C2H3]
  dqdci = -k_r * sc[16];
  J[1093] -= dqdci; // dwdot[C2H4]/d[C2H3]
  J[1105] -= dqdci; // dwdot[O2]/d[C2H3]
  J[1108] += dqdci; // dwdot[HO2]/d[C2H3]
  J[1118] += dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1723] -= dqdT; // dwdot[C2H4]/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1748] += dqdT; // dwdot[C2H3]/dT

  // reaction 138: C2H5 + O <=> CH2O + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[27];
  k_f = 16040000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[12] * sc[23];
  Kc = exp(-g_RT[12] + g_RT[14] - g_RT[23] + g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[27]) + (h_RT[12] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] += q; // CH3
  wdot[14] -= q; // O
  wdot[23] += q; // CH2O
  wdot[27] -= q; // C2H5
  // d()/d[CH3]
  dqdci = -k_r * sc[23];
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[518] -= dqdci; // dwdot[O]/d[CH3]
  J[527] += dqdci; // dwdot[CH2O]/d[CH3]
  J[531] -= dqdci; // dwdot[C2H5]/d[CH3]
  // d()/d[O]
  dqdci = +k_f * sc[27];
  J[600] += dqdci; // dwdot[CH3]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[611] += dqdci; // dwdot[CH2O]/d[O]
  J[615] -= dqdci; // dwdot[C2H5]/d[O]
  // d()/d[CH2O]
  dqdci = -k_r * sc[12];
  J[978] += dqdci; // dwdot[CH3]/d[CH2O]
  J[980] -= dqdci; // dwdot[O]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[993] -= dqdci; // dwdot[C2H5]/d[CH2O]
  // d()/d[C2H5]
  dqdci = +k_f * sc[14];
  J[1146] += dqdci; // dwdot[CH3]/d[C2H5]
  J[1148] -= dqdci; // dwdot[O]/d[C2H5]
  J[1157] += dqdci; // dwdot[CH2O]/d[C2H5]
  J[1161] -= dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT
  J[1749] -= dqdT; // dwdot[C2H5]/dT

  // reaction 139: C2H5 + O2 <=> C2H4 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[27];
  k_f = 20000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[16];
  Kc = exp(-g_RT[1] + g_RT[13] - g_RT[16] + g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[27]) + (h_RT[1] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // C2H4
  wdot[13] -= q; // O2
  wdot[16] += q; // HO2
  wdot[27] -= q; // C2H5
  // d()/d[C2H4]
  dqdci = -k_r * sc[16];
  J[43] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[55] -= dqdci; // dwdot[O2]/d[C2H4]
  J[58] += dqdci; // dwdot[HO2]/d[C2H4]
  J[69] -= dqdci; // dwdot[C2H5]/d[C2H4]
  // d()/d[O2]
  dqdci = +k_f * sc[27];
  J[547] += dqdci; // dwdot[C2H4]/d[O2]
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[562] += dqdci; // dwdot[HO2]/d[O2]
  J[573] -= dqdci; // dwdot[C2H5]/d[O2]
  // d()/d[HO2]
  dqdci = -k_r * sc[1];
  J[673] += dqdci; // dwdot[C2H4]/d[HO2]
  J[685] -= dqdci; // dwdot[O2]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[699] -= dqdci; // dwdot[C2H5]/d[HO2]
  // d()/d[C2H5]
  dqdci = +k_f * sc[13];
  J[1135] += dqdci; // dwdot[C2H4]/d[C2H5]
  J[1147] -= dqdci; // dwdot[O2]/d[C2H5]
  J[1150] += dqdci; // dwdot[HO2]/d[C2H5]
  J[1161] -= dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1723] += dqdT; // dwdot[C2H4]/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1749] -= dqdT; // dwdot[C2H5]/dT

  // reaction 140: C2H5 + HO2 <=> CH2O + CH3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[27];
  k_f = 24000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[12] * sc[15] * sc[23];
  Kc = refC * exp(-g_RT[12] - g_RT[15] + g_RT[16] - g_RT[23] + g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[16] + h_RT[27]) + (h_RT[12] + h_RT[15] + h_RT[23]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] += q; // CH3
  wdot[15] += q; // OH
  wdot[16] -= q; // HO2
  wdot[23] += q; // CH2O
  wdot[27] -= q; // C2H5
  // d()/d[CH3]
  dqdci = -k_r * sc[15] * sc[23];
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[519] += dqdci; // dwdot[OH]/d[CH3]
  J[520] -= dqdci; // dwdot[HO2]/d[CH3]
  J[527] += dqdci; // dwdot[CH2O]/d[CH3]
  J[531] -= dqdci; // dwdot[C2H5]/d[CH3]
  // d()/d[OH]
  dqdci = -k_r * sc[12] * sc[23];
  J[642] += dqdci; // dwdot[CH3]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[646] -= dqdci; // dwdot[HO2]/d[OH]
  J[653] += dqdci; // dwdot[CH2O]/d[OH]
  J[657] -= dqdci; // dwdot[C2H5]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[27];
  J[684] += dqdci; // dwdot[CH3]/d[HO2]
  J[687] += dqdci; // dwdot[OH]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[695] += dqdci; // dwdot[CH2O]/d[HO2]
  J[699] -= dqdci; // dwdot[C2H5]/d[HO2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[12] * sc[15];
  J[978] += dqdci; // dwdot[CH3]/d[CH2O]
  J[981] += dqdci; // dwdot[OH]/d[CH2O]
  J[982] -= dqdci; // dwdot[HO2]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[993] -= dqdci; // dwdot[C2H5]/d[CH2O]
  // d()/d[C2H5]
  dqdci = +k_f * sc[16];
  J[1146] += dqdci; // dwdot[CH3]/d[C2H5]
  J[1149] += dqdci; // dwdot[OH]/d[C2H5]
  J[1150] -= dqdci; // dwdot[HO2]/d[C2H5]
  J[1157] += dqdci; // dwdot[CH2O]/d[C2H5]
  J[1161] -= dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT
  J[1749] -= dqdT; // dwdot[C2H5]/dT

  // reaction 142: C2H6 + H <=> C2H5 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[19];
  k_f = 115 * exp(1.9 * logT - (3789.22149350954) * invT);
  dlnkfdT = 1.9 * invT + (3789.22149350954) * invT2;
  // reverse
  phi_r = sc[6] * sc[27];
  Kc = exp(-g_RT[6] + g_RT[7] + g_RT[19] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[7] + h_RT[19]) + (h_RT[6] + h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2
  wdot[7] -= q;  // C2H6
  wdot[19] -= q; // H
  wdot[27] += q; // C2H5
  // d()/d[H2]
  dqdci = -k_r * sc[27];
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[259] -= dqdci; // dwdot[C2H6]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[279] += dqdci; // dwdot[C2H5]/d[H2]
  // d()/d[C2H6]
  dqdci = +k_f * sc[19];
  J[300] += dqdci; // dwdot[H2]/d[C2H6]
  J[301] -= dqdci; // dwdot[C2H6]/d[C2H6]
  J[313] -= dqdci; // dwdot[H]/d[C2H6]
  J[321] += dqdci; // dwdot[C2H5]/d[C2H6]
  // d()/d[H]
  dqdci = +k_f * sc[7];
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[805] -= dqdci; // dwdot[C2H6]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[825] += dqdci; // dwdot[C2H5]/d[H]
  // d()/d[C2H5]
  dqdci = -k_r * sc[6];
  J[1140] += dqdci; // dwdot[H2]/d[C2H5]
  J[1141] -= dqdci; // dwdot[C2H6]/d[C2H5]
  J[1153] -= dqdci; // dwdot[H]/d[C2H5]
  J[1161] += dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1729] -= dqdT; // dwdot[C2H6]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1749] += dqdT; // dwdot[C2H5]/dT

  // reaction 143: C2H6 + O <=> C2H5 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[14];
  k_f = 89.8 * exp(1.92 * logT - (2863.30282842885) * invT);
  dlnkfdT = 1.92 * invT + (2863.30282842885) * invT2;
  // reverse
  phi_r = sc[15] * sc[27];
  Kc = exp(g_RT[7] + g_RT[14] - g_RT[15] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[7] + h_RT[14]) + (h_RT[15] + h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[7] -= q;  // C2H6
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[27] += q; // C2H5
  // d()/d[C2H6]
  dqdci = +k_f * sc[14];
  J[301] -= dqdci; // dwdot[C2H6]/d[C2H6]
  J[308] -= dqdci; // dwdot[O]/d[C2H6]
  J[309] += dqdci; // dwdot[OH]/d[C2H6]
  J[321] += dqdci; // dwdot[C2H5]/d[C2H6]
  // d()/d[O]
  dqdci = +k_f * sc[7];
  J[595] -= dqdci; // dwdot[C2H6]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[615] += dqdci; // dwdot[C2H5]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[27];
  J[637] -= dqdci; // dwdot[C2H6]/d[OH]
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[657] += dqdci; // dwdot[C2H5]/d[OH]
  // d()/d[C2H5]
  dqdci = -k_r * sc[15];
  J[1141] -= dqdci; // dwdot[C2H6]/d[C2H5]
  J[1148] -= dqdci; // dwdot[O]/d[C2H5]
  J[1149] += dqdci; // dwdot[OH]/d[C2H5]
  J[1161] += dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1729] -= dqdT; // dwdot[C2H6]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1749] += dqdT; // dwdot[C2H5]/dT

  // reaction 144: C2H6 + OH <=> C2H5 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[15];
  k_f = 3.54 * exp(2.12 * logT - (437.798499250106) * invT);
  dlnkfdT = 2.12 * invT + (437.798499250106) * invT2;
  // reverse
  phi_r = sc[17] * sc[27];
  Kc = exp(g_RT[7] + g_RT[15] - g_RT[17] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[7] + h_RT[15]) + (h_RT[17] + h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[7] -= q;  // C2H6
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[27] += q; // C2H5
  // d()/d[C2H6]
  dqdci = +k_f * sc[15];
  J[301] -= dqdci; // dwdot[C2H6]/d[C2H6]
  J[309] -= dqdci; // dwdot[OH]/d[C2H6]
  J[311] += dqdci; // dwdot[H2O]/d[C2H6]
  J[321] += dqdci; // dwdot[C2H5]/d[C2H6]
  // d()/d[OH]
  dqdci = +k_f * sc[7];
  J[637] -= dqdci; // dwdot[C2H6]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[657] += dqdci; // dwdot[C2H5]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[27];
  J[721] -= dqdci; // dwdot[C2H6]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[741] += dqdci; // dwdot[C2H5]/d[H2O]
  // d()/d[C2H5]
  dqdci = -k_r * sc[17];
  J[1141] -= dqdci; // dwdot[C2H6]/d[C2H5]
  J[1149] -= dqdci; // dwdot[OH]/d[C2H5]
  J[1151] += dqdci; // dwdot[H2O]/d[C2H5]
  J[1161] += dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1729] -= dqdT; // dwdot[C2H6]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1749] += dqdT; // dwdot[C2H5]/dT

  // reaction 145: C2H6 + CH3 <=> C2H5 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[12];
  k_f = 6.14 * exp(1.74 * logT - (5258.61415765932) * invT);
  dlnkfdT = 1.74 * invT + (5258.61415765932) * invT2;
  // reverse
  phi_r = sc[2] * sc[27];
  Kc = exp(-g_RT[2] + g_RT[7] + g_RT[12] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[7] + h_RT[12]) + (h_RT[2] + h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // CH4
  wdot[7] -= q;  // C2H6
  wdot[12] -= q; // CH3
  wdot[27] += q; // C2H5
  // d()/d[CH4]
  dqdci = -k_r * sc[27];
  J[86] += dqdci;  // dwdot[CH4]/d[CH4]
  J[91] -= dqdci;  // dwdot[C2H6]/d[CH4]
  J[96] -= dqdci;  // dwdot[CH3]/d[CH4]
  J[111] += dqdci; // dwdot[C2H5]/d[CH4]
  // d()/d[C2H6]
  dqdci = +k_f * sc[12];
  J[296] += dqdci; // dwdot[CH4]/d[C2H6]
  J[301] -= dqdci; // dwdot[C2H6]/d[C2H6]
  J[306] -= dqdci; // dwdot[CH3]/d[C2H6]
  J[321] += dqdci; // dwdot[C2H5]/d[C2H6]
  // d()/d[CH3]
  dqdci = +k_f * sc[7];
  J[506] += dqdci; // dwdot[CH4]/d[CH3]
  J[511] -= dqdci; // dwdot[C2H6]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[531] += dqdci; // dwdot[C2H5]/d[CH3]
  // d()/d[C2H5]
  dqdci = -k_r * sc[2];
  J[1136] += dqdci; // dwdot[CH4]/d[C2H5]
  J[1141] -= dqdci; // dwdot[C2H6]/d[C2H5]
  J[1146] -= dqdci; // dwdot[CH3]/d[C2H5]
  J[1161] += dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1724] += dqdT; // dwdot[CH4]/dT
  J[1729] -= dqdT; // dwdot[C2H6]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1749] += dqdT; // dwdot[C2H5]/dT

  // reaction 146: C3H3 + O2 <=> CH2CO + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[31];
  k_f = 30000 * exp(-(1443.22539752794) * invT);
  dlnkfdT = (1443.22539752794) * invT2;
  // reverse
  phi_r = sc[22] * sc[29];
  Kc = exp(g_RT[13] - g_RT[22] - g_RT[29] + g_RT[31]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[31]) + (h_RT[22] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // O2
  wdot[22] += q; // HCO
  wdot[29] += q; // CH2CO
  wdot[31] -= q; // C3H3
  // d()/d[O2]
  dqdci = +k_f * sc[31];
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[568] += dqdci; // dwdot[HCO]/d[O2]
  J[575] += dqdci; // dwdot[CH2CO]/d[O2]
  J[577] -= dqdci; // dwdot[C3H3]/d[O2]
  // d()/d[HCO]
  dqdci = -k_r * sc[29];
  J[937] -= dqdci; // dwdot[O2]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[953] += dqdci; // dwdot[CH2CO]/d[HCO]
  J[955] -= dqdci; // dwdot[C3H3]/d[HCO]
  // d()/d[CH2CO]
  dqdci = -k_r * sc[22];
  J[1231] -= dqdci; // dwdot[O2]/d[CH2CO]
  J[1240] += dqdci; // dwdot[HCO]/d[CH2CO]
  J[1247] += dqdci; // dwdot[CH2CO]/d[CH2CO]
  J[1249] -= dqdci; // dwdot[C3H3]/d[CH2CO]
  // d()/d[C3H3]
  dqdci = +k_f * sc[13];
  J[1315] -= dqdci; // dwdot[O2]/d[C3H3]
  J[1324] += dqdci; // dwdot[HCO]/d[C3H3]
  J[1331] += dqdci; // dwdot[CH2CO]/d[C3H3]
  J[1333] -= dqdci; // dwdot[C3H3]/d[C3H3]
  // d()/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1751] += dqdT; // dwdot[CH2CO]/dT
  J[1753] -= dqdT; // dwdot[C3H3]/dT

  // reaction 147: C3H3 + HO2 <=> C2H3 + CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[31];
  k_f = 800000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[15] * sc[26];
  Kc = refC * exp(-g_RT[8] - g_RT[15] + g_RT[16] - g_RT[26] + g_RT[31]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[16] + h_RT[31]) + (h_RT[8] + h_RT[15] + h_RT[26]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[15] += q; // OH
  wdot[16] -= q; // HO2
  wdot[26] += q; // C2H3
  wdot[31] -= q; // C3H3
  // d()/d[CO]
  dqdci = -k_r * sc[15] * sc[26];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[351] += dqdci; // dwdot[OH]/d[CO]
  J[352] -= dqdci; // dwdot[HO2]/d[CO]
  J[362] += dqdci; // dwdot[C2H3]/d[CO]
  J[367] -= dqdci; // dwdot[C3H3]/d[CO]
  // d()/d[OH]
  dqdci = -k_r * sc[8] * sc[26];
  J[638] += dqdci; // dwdot[CO]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[646] -= dqdci; // dwdot[HO2]/d[OH]
  J[656] += dqdci; // dwdot[C2H3]/d[OH]
  J[661] -= dqdci; // dwdot[C3H3]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[31];
  J[680] += dqdci; // dwdot[CO]/d[HO2]
  J[687] += dqdci; // dwdot[OH]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[698] += dqdci; // dwdot[C2H3]/d[HO2]
  J[703] -= dqdci; // dwdot[C3H3]/d[HO2]
  // d()/d[C2H3]
  dqdci = -k_r * sc[8] * sc[15];
  J[1100] += dqdci; // dwdot[CO]/d[C2H3]
  J[1107] += dqdci; // dwdot[OH]/d[C2H3]
  J[1108] -= dqdci; // dwdot[HO2]/d[C2H3]
  J[1118] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[1123] -= dqdci; // dwdot[C3H3]/d[C2H3]
  // d()/d[C3H3]
  dqdci = +k_f * sc[16];
  J[1310] += dqdci; // dwdot[CO]/d[C3H3]
  J[1317] += dqdci; // dwdot[OH]/d[C3H3]
  J[1318] -= dqdci; // dwdot[HO2]/d[C3H3]
  J[1328] += dqdci; // dwdot[C2H3]/d[C3H3]
  J[1333] -= dqdci; // dwdot[C3H3]/d[C3H3]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1748] += dqdT; // dwdot[C2H3]/dT
  J[1753] -= dqdT; // dwdot[C3H3]/dT

  // reaction 148: C2H2 + C3H3 <=> C5H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[31];
  k_f = 6.87e+49 * exp(-12.5 * logT - (21147.6803804433) * invT);
  dlnkfdT = -12.5 * invT + (21147.6803804433) * invT2;
  // reverse
  phi_r = sc[34];
  Kc = refCinv * exp(g_RT[10] + g_RT[31] - g_RT[34]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[31]) + (h_RT[34]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[10] -= q; // C2H2
  wdot[31] -= q; // C3H3
  wdot[34] += q; // C5H5
  // d()/d[C2H2]
  dqdci = +k_f * sc[31];
  J[430] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[451] -= dqdci; // dwdot[C3H3]/d[C2H2]
  J[454] += dqdci; // dwdot[C5H5]/d[C2H2]
  // d()/d[C3H3]
  dqdci = +k_f * sc[10];
  J[1312] -= dqdci; // dwdot[C2H2]/d[C3H3]
  J[1333] -= dqdci; // dwdot[C3H3]/d[C3H3]
  J[1336] += dqdci; // dwdot[C5H5]/d[C3H3]
  // d()/d[C5H5]
  dqdci = -k_r;
  J[1438] -= dqdci; // dwdot[C2H2]/d[C5H5]
  J[1459] -= dqdci; // dwdot[C3H3]/d[C5H5]
  J[1462] += dqdci; // dwdot[C5H5]/d[C5H5]
  // d()/dT
  J[1732] -= dqdT; // dwdot[C2H2]/dT
  J[1753] -= dqdT; // dwdot[C3H3]/dT
  J[1756] += dqdT; // dwdot[C5H5]/dT

  // reaction 149: 2 C3H3 => C6H5 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[31] * sc[31]);
  k_f = 5000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[19] += q;     // H
  wdot[31] -= 2 * q; // C3H3
  wdot[35] += q;     // C6H5
  // d()/d[C3H3]
  dqdci = +k_f * 2.000000 * sc[31];
  J[1321] += dqdci;      // dwdot[H]/d[C3H3]
  J[1333] += -2 * dqdci; // dwdot[C3H3]/d[C3H3]
  J[1337] += dqdci;      // dwdot[C6H5]/d[C3H3]
  // d()/dT
  J[1741] += dqdT;      // dwdot[H]/dT
  J[1753] += -2 * dqdT; // dwdot[C3H3]/dT
  J[1757] += dqdT;      // dwdot[C6H5]/dT

  // reaction 150: 2 C3H3 => C6H6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[31] * sc[31]);
  k_f = 2000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;      // C6H6
  wdot[31] -= 2 * q; // C3H3
  // d()/d[C3H3]
  dqdci = +k_f * 2.000000 * sc[31];
  J[1311] += dqdci;      // dwdot[C6H6]/d[C3H3]
  J[1333] += -2 * dqdci; // dwdot[C3H3]/d[C3H3]
  // d()/dT
  J[1731] += dqdT;      // dwdot[C6H6]/dT
  J[1753] += -2 * dqdT; // dwdot[C3H3]/dT

  // reaction 152: HO2 + aC3H5 <=> C3H6 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[32];
  k_f = 2660000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[13];
  Kc = exp(-g_RT[3] - g_RT[13] + g_RT[16] + g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[16] + h_RT[32]) + (h_RT[3] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // C3H6
  wdot[13] += q; // O2
  wdot[16] -= q; // HO2
  wdot[32] -= q; // aC3H5
  // d()/d[C3H6]
  dqdci = -k_r * sc[13];
  J[129] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[139] += dqdci; // dwdot[O2]/d[C3H6]
  J[142] -= dqdci; // dwdot[HO2]/d[C3H6]
  J[158] -= dqdci; // dwdot[aC3H5]/d[C3H6]
  // d()/d[O2]
  dqdci = -k_r * sc[3];
  J[549] += dqdci; // dwdot[C3H6]/d[O2]
  J[559] += dqdci; // dwdot[O2]/d[O2]
  J[562] -= dqdci; // dwdot[HO2]/d[O2]
  J[578] -= dqdci; // dwdot[aC3H5]/d[O2]
  // d()/d[HO2]
  dqdci = +k_f * sc[32];
  J[675] += dqdci; // dwdot[C3H6]/d[HO2]
  J[685] += dqdci; // dwdot[O2]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[704] -= dqdci; // dwdot[aC3H5]/d[HO2]
  // d()/d[aC3H5]
  dqdci = +k_f * sc[16];
  J[1347] += dqdci; // dwdot[C3H6]/d[aC3H5]
  J[1357] += dqdci; // dwdot[O2]/d[aC3H5]
  J[1360] -= dqdci; // dwdot[HO2]/d[aC3H5]
  J[1376] -= dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[1725] += dqdT; // dwdot[C3H6]/dT
  J[1735] += dqdT; // dwdot[O2]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1754] -= dqdT; // dwdot[aC3H5]/dT

  // reaction 153: HO2 + aC3H5 <=> C2H3 + CH2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[32];
  k_f = 6600000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[15] * sc[23] * sc[26];
  Kc = refC * exp(-g_RT[15] + g_RT[16] - g_RT[23] - g_RT[26] + g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[16] + h_RT[32]) + (h_RT[15] + h_RT[23] + h_RT[26]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] += q; // OH
  wdot[16] -= q; // HO2
  wdot[23] += q; // CH2O
  wdot[26] += q; // C2H3
  wdot[32] -= q; // aC3H5
  // d()/d[OH]
  dqdci = -k_r * sc[23] * sc[26];
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[646] -= dqdci; // dwdot[HO2]/d[OH]
  J[653] += dqdci; // dwdot[CH2O]/d[OH]
  J[656] += dqdci; // dwdot[C2H3]/d[OH]
  J[662] -= dqdci; // dwdot[aC3H5]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[32];
  J[687] += dqdci; // dwdot[OH]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[695] += dqdci; // dwdot[CH2O]/d[HO2]
  J[698] += dqdci; // dwdot[C2H3]/d[HO2]
  J[704] -= dqdci; // dwdot[aC3H5]/d[HO2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[15] * sc[26];
  J[981] += dqdci; // dwdot[OH]/d[CH2O]
  J[982] -= dqdci; // dwdot[HO2]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[992] += dqdci; // dwdot[C2H3]/d[CH2O]
  J[998] -= dqdci; // dwdot[aC3H5]/d[CH2O]
  // d()/d[C2H3]
  dqdci = -k_r * sc[15] * sc[23];
  J[1107] += dqdci; // dwdot[OH]/d[C2H3]
  J[1108] -= dqdci; // dwdot[HO2]/d[C2H3]
  J[1115] += dqdci; // dwdot[CH2O]/d[C2H3]
  J[1118] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[1124] -= dqdci; // dwdot[aC3H5]/d[C2H3]
  // d()/d[aC3H5]
  dqdci = +k_f * sc[16];
  J[1359] += dqdci; // dwdot[OH]/d[aC3H5]
  J[1360] -= dqdci; // dwdot[HO2]/d[aC3H5]
  J[1367] += dqdci; // dwdot[CH2O]/d[aC3H5]
  J[1370] += dqdci; // dwdot[C2H3]/d[aC3H5]
  J[1376] -= dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT
  J[1748] += dqdT; // dwdot[C2H3]/dT
  J[1754] -= dqdT; // dwdot[aC3H5]/dT

  // reaction 154: HCO + aC3H5 <=> C3H6 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[22] * sc[32];
  k_f = 60000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[8];
  Kc = exp(-g_RT[3] - g_RT[8] + g_RT[22] + g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[22] + h_RT[32]) + (h_RT[3] + h_RT[8]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // C3H6
  wdot[8] += q;  // CO
  wdot[22] -= q; // HCO
  wdot[32] -= q; // aC3H5
  // d()/d[C3H6]
  dqdci = -k_r * sc[8];
  J[129] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[134] += dqdci; // dwdot[CO]/d[C3H6]
  J[148] -= dqdci; // dwdot[HCO]/d[C3H6]
  J[158] -= dqdci; // dwdot[aC3H5]/d[C3H6]
  // d()/d[CO]
  dqdci = -k_r * sc[3];
  J[339] += dqdci; // dwdot[C3H6]/d[CO]
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[358] -= dqdci; // dwdot[HCO]/d[CO]
  J[368] -= dqdci; // dwdot[aC3H5]/d[CO]
  // d()/d[HCO]
  dqdci = +k_f * sc[32];
  J[927] += dqdci; // dwdot[C3H6]/d[HCO]
  J[932] += dqdci; // dwdot[CO]/d[HCO]
  J[946] -= dqdci; // dwdot[HCO]/d[HCO]
  J[956] -= dqdci; // dwdot[aC3H5]/d[HCO]
  // d()/d[aC3H5]
  dqdci = +k_f * sc[22];
  J[1347] += dqdci; // dwdot[C3H6]/d[aC3H5]
  J[1352] += dqdci; // dwdot[CO]/d[aC3H5]
  J[1366] -= dqdci; // dwdot[HCO]/d[aC3H5]
  J[1376] -= dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[1725] += dqdT; // dwdot[C3H6]/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT
  J[1754] -= dqdT; // dwdot[aC3H5]/dT

  // reaction 156: C3H6 + H <=> C2H4 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[19];
  k_f = 8e+15 * exp(-2.39 * logT - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[1] * sc[12];
  Kc = exp(-g_RT[1] + g_RT[3] - g_RT[12] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[19]) + (h_RT[1] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // C2H4
  wdot[3] -= q;  // C3H6
  wdot[12] += q; // CH3
  wdot[19] -= q; // H
  // d()/d[C2H4]
  dqdci = -k_r * sc[12];
  J[43] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[45] -= dqdci; // dwdot[C3H6]/d[C2H4]
  J[54] += dqdci; // dwdot[CH3]/d[C2H4]
  J[61] -= dqdci; // dwdot[H]/d[C2H4]
  // d()/d[C3H6]
  dqdci = +k_f * sc[19];
  J[127] += dqdci; // dwdot[C2H4]/d[C3H6]
  J[129] -= dqdci; // dwdot[C3H6]/d[C3H6]
  J[138] += dqdci; // dwdot[CH3]/d[C3H6]
  J[145] -= dqdci; // dwdot[H]/d[C3H6]
  // d()/d[CH3]
  dqdci = -k_r * sc[1];
  J[505] += dqdci; // dwdot[C2H4]/d[CH3]
  J[507] -= dqdci; // dwdot[C3H6]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[523] -= dqdci; // dwdot[H]/d[CH3]
  // d()/d[H]
  dqdci = +k_f * sc[3];
  J[799] += dqdci; // dwdot[C2H4]/d[H]
  J[801] -= dqdci; // dwdot[C3H6]/d[H]
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1723] += dqdT; // dwdot[C2H4]/dT
  J[1725] -= dqdT; // dwdot[C3H6]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 157: C3H6 + H <=> H2 + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[19];
  k_f = 1.92 * exp(2.309 * logT - (2352.03469597126) * invT);
  dlnkfdT = 2.309 * invT + (2352.03469597126) * invT2;
  // reverse
  phi_r = sc[6] * sc[32];
  Kc = exp(g_RT[3] - g_RT[6] + g_RT[19] - g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[19]) + (h_RT[6] + h_RT[32]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // C3H6
  wdot[6] += q;  // H2
  wdot[19] -= q; // H
  wdot[32] += q; // aC3H5
  // d()/d[C3H6]
  dqdci = +k_f * sc[19];
  J[129] -= dqdci; // dwdot[C3H6]/d[C3H6]
  J[132] += dqdci; // dwdot[H2]/d[C3H6]
  J[145] -= dqdci; // dwdot[H]/d[C3H6]
  J[158] += dqdci; // dwdot[aC3H5]/d[C3H6]
  // d()/d[H2]
  dqdci = -k_r * sc[32];
  J[255] -= dqdci; // dwdot[C3H6]/d[H2]
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[284] += dqdci; // dwdot[aC3H5]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[3];
  J[801] -= dqdci; // dwdot[C3H6]/d[H]
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[830] += dqdci; // dwdot[aC3H5]/d[H]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[6];
  J[1347] -= dqdci; // dwdot[C3H6]/d[aC3H5]
  J[1350] += dqdci; // dwdot[H2]/d[aC3H5]
  J[1363] -= dqdci; // dwdot[H]/d[aC3H5]
  J[1376] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[1725] -= dqdT; // dwdot[C3H6]/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1754] += dqdT; // dwdot[aC3H5]/dT

  // reaction 158: C3H6 + O <=> CH2CO + CH3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[14];
  k_f = 80 * exp(1.65 * logT - (164.551849718143) * invT);
  dlnkfdT = 1.65 * invT + (164.551849718143) * invT2;
  // reverse
  phi_r = sc[12] * sc[19] * sc[29];
  Kc = refC * exp(g_RT[3] - g_RT[12] + g_RT[14] - g_RT[19] - g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[14]) + (h_RT[12] + h_RT[19] + h_RT[29]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // C3H6
  wdot[12] += q; // CH3
  wdot[14] -= q; // O
  wdot[19] += q; // H
  wdot[29] += q; // CH2CO
  // d()/d[C3H6]
  dqdci = +k_f * sc[14];
  J[129] -= dqdci; // dwdot[C3H6]/d[C3H6]
  J[138] += dqdci; // dwdot[CH3]/d[C3H6]
  J[140] -= dqdci; // dwdot[O]/d[C3H6]
  J[145] += dqdci; // dwdot[H]/d[C3H6]
  J[155] += dqdci; // dwdot[CH2CO]/d[C3H6]
  // d()/d[CH3]
  dqdci = -k_r * sc[19] * sc[29];
  J[507] -= dqdci; // dwdot[C3H6]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[518] -= dqdci; // dwdot[O]/d[CH3]
  J[523] += dqdci; // dwdot[H]/d[CH3]
  J[533] += dqdci; // dwdot[CH2CO]/d[CH3]
  // d()/d[O]
  dqdci = +k_f * sc[3];
  J[591] -= dqdci; // dwdot[C3H6]/d[O]
  J[600] += dqdci; // dwdot[CH3]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[607] += dqdci; // dwdot[H]/d[O]
  J[617] += dqdci; // dwdot[CH2CO]/d[O]
  // d()/d[H]
  dqdci = -k_r * sc[12] * sc[29];
  J[801] -= dqdci; // dwdot[C3H6]/d[H]
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[812] -= dqdci; // dwdot[O]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[827] += dqdci; // dwdot[CH2CO]/d[H]
  // d()/d[CH2CO]
  dqdci = -k_r * sc[12] * sc[19];
  J[1221] -= dqdci; // dwdot[C3H6]/d[CH2CO]
  J[1230] += dqdci; // dwdot[CH3]/d[CH2CO]
  J[1232] -= dqdci; // dwdot[O]/d[CH2CO]
  J[1237] += dqdci; // dwdot[H]/d[CH2CO]
  J[1247] += dqdci; // dwdot[CH2CO]/d[CH2CO]
  // d()/dT
  J[1725] -= dqdT; // dwdot[C3H6]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1751] += dqdT; // dwdot[CH2CO]/dT

  // reaction 159: C3H6 + O <=> C2H5 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[14];
  k_f = 35 * exp(1.65 * logT - (-489.126599162188) * invT);
  dlnkfdT = 1.65 * invT + (-489.126599162188) * invT2;
  // reverse
  phi_r = sc[22] * sc[27];
  Kc = exp(g_RT[3] + g_RT[14] - g_RT[22] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[14]) + (h_RT[22] + h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // C3H6
  wdot[14] -= q; // O
  wdot[22] += q; // HCO
  wdot[27] += q; // C2H5
  // d()/d[C3H6]
  dqdci = +k_f * sc[14];
  J[129] -= dqdci; // dwdot[C3H6]/d[C3H6]
  J[140] -= dqdci; // dwdot[O]/d[C3H6]
  J[148] += dqdci; // dwdot[HCO]/d[C3H6]
  J[153] += dqdci; // dwdot[C2H5]/d[C3H6]
  // d()/d[O]
  dqdci = +k_f * sc[3];
  J[591] -= dqdci; // dwdot[C3H6]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[610] += dqdci; // dwdot[HCO]/d[O]
  J[615] += dqdci; // dwdot[C2H5]/d[O]
  // d()/d[HCO]
  dqdci = -k_r * sc[27];
  J[927] -= dqdci; // dwdot[C3H6]/d[HCO]
  J[938] -= dqdci; // dwdot[O]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[951] += dqdci; // dwdot[C2H5]/d[HCO]
  // d()/d[C2H5]
  dqdci = -k_r * sc[22];
  J[1137] -= dqdci; // dwdot[C3H6]/d[C2H5]
  J[1148] -= dqdci; // dwdot[O]/d[C2H5]
  J[1156] += dqdci; // dwdot[HCO]/d[C2H5]
  J[1161] += dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1725] -= dqdT; // dwdot[C3H6]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1749] += dqdT; // dwdot[C2H5]/dT

  // reaction 160: C3H6 + O <=> OH + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[14];
  k_f = 180000 * exp(0.7 * logT - (2958.91399493175) * invT);
  dlnkfdT = 0.7 * invT + (2958.91399493175) * invT2;
  // reverse
  phi_r = sc[15] * sc[32];
  Kc = exp(g_RT[3] + g_RT[14] - g_RT[15] - g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[14]) + (h_RT[15] + h_RT[32]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // C3H6
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[32] += q; // aC3H5
  // d()/d[C3H6]
  dqdci = +k_f * sc[14];
  J[129] -= dqdci; // dwdot[C3H6]/d[C3H6]
  J[140] -= dqdci; // dwdot[O]/d[C3H6]
  J[141] += dqdci; // dwdot[OH]/d[C3H6]
  J[158] += dqdci; // dwdot[aC3H5]/d[C3H6]
  // d()/d[O]
  dqdci = +k_f * sc[3];
  J[591] -= dqdci; // dwdot[C3H6]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[620] += dqdci; // dwdot[aC3H5]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[32];
  J[633] -= dqdci; // dwdot[C3H6]/d[OH]
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[662] += dqdci; // dwdot[aC3H5]/d[OH]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[15];
  J[1347] -= dqdci; // dwdot[C3H6]/d[aC3H5]
  J[1358] -= dqdci; // dwdot[O]/d[aC3H5]
  J[1359] += dqdci; // dwdot[OH]/d[aC3H5]
  J[1376] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[1725] -= dqdT; // dwdot[C3H6]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1754] += dqdT; // dwdot[aC3H5]/dT

  // reaction 161: C3H6 + OH <=> H2O + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[15];
  k_f = 3.1 * exp(2 * logT - (-149.958566409806) * invT);
  dlnkfdT = 2 * invT + (-149.958566409806) * invT2;
  // reverse
  phi_r = sc[17] * sc[32];
  Kc = exp(g_RT[3] + g_RT[15] - g_RT[17] - g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[15]) + (h_RT[17] + h_RT[32]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // C3H6
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[32] += q; // aC3H5
  // d()/d[C3H6]
  dqdci = +k_f * sc[15];
  J[129] -= dqdci; // dwdot[C3H6]/d[C3H6]
  J[141] -= dqdci; // dwdot[OH]/d[C3H6]
  J[143] += dqdci; // dwdot[H2O]/d[C3H6]
  J[158] += dqdci; // dwdot[aC3H5]/d[C3H6]
  // d()/d[OH]
  dqdci = +k_f * sc[3];
  J[633] -= dqdci; // dwdot[C3H6]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[662] += dqdci; // dwdot[aC3H5]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[32];
  J[717] -= dqdci; // dwdot[C3H6]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[746] += dqdci; // dwdot[aC3H5]/d[H2O]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[17];
  J[1347] -= dqdci; // dwdot[C3H6]/d[aC3H5]
  J[1359] -= dqdci; // dwdot[OH]/d[aC3H5]
  J[1361] += dqdci; // dwdot[H2O]/d[aC3H5]
  J[1376] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[1725] -= dqdT; // dwdot[C3H6]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1754] += dqdT; // dwdot[aC3H5]/dT

  // reaction 162: C3H6 + CH3 <=> CH4 + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[12];
  k_f = 4.54e-05 * exp(3.268 * logT - (3599.00559383536) * invT);
  dlnkfdT = 3.268 * invT + (3599.00559383536) * invT2;
  // reverse
  phi_r = sc[2] * sc[32];
  Kc = exp(-g_RT[2] + g_RT[3] + g_RT[12] - g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[12]) + (h_RT[2] + h_RT[32]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // CH4
  wdot[3] -= q;  // C3H6
  wdot[12] -= q; // CH3
  wdot[32] += q; // aC3H5
  // d()/d[CH4]
  dqdci = -k_r * sc[32];
  J[86] += dqdci;  // dwdot[CH4]/d[CH4]
  J[87] -= dqdci;  // dwdot[C3H6]/d[CH4]
  J[96] -= dqdci;  // dwdot[CH3]/d[CH4]
  J[116] += dqdci; // dwdot[aC3H5]/d[CH4]
  // d()/d[C3H6]
  dqdci = +k_f * sc[12];
  J[128] += dqdci; // dwdot[CH4]/d[C3H6]
  J[129] -= dqdci; // dwdot[C3H6]/d[C3H6]
  J[138] -= dqdci; // dwdot[CH3]/d[C3H6]
  J[158] += dqdci; // dwdot[aC3H5]/d[C3H6]
  // d()/d[CH3]
  dqdci = +k_f * sc[3];
  J[506] += dqdci; // dwdot[CH4]/d[CH3]
  J[507] -= dqdci; // dwdot[C3H6]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[536] += dqdci; // dwdot[aC3H5]/d[CH3]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[2];
  J[1346] += dqdci; // dwdot[CH4]/d[aC3H5]
  J[1347] -= dqdci; // dwdot[C3H6]/d[aC3H5]
  J[1356] -= dqdci; // dwdot[CH3]/d[aC3H5]
  J[1376] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[1724] += dqdT; // dwdot[CH4]/dT
  J[1725] -= dqdT; // dwdot[C3H6]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1754] += dqdT; // dwdot[aC3H5]/dT

  // reaction 163: C4H81 + H <=> C2H4 + C2H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[19];
  k_f = 1.6e+16 * exp(-2.39 * logT - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[1] * sc[27];
  Kc = exp(-g_RT[1] + g_RT[5] + g_RT[19] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[19]) + (h_RT[1] + h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // C2H4
  wdot[5] -= q;  // C4H81
  wdot[19] -= q; // H
  wdot[27] += q; // C2H5
  // d()/d[C2H4]
  dqdci = -k_r * sc[27];
  J[43] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[47] -= dqdci; // dwdot[C4H81]/d[C2H4]
  J[61] -= dqdci; // dwdot[H]/d[C2H4]
  J[69] += dqdci; // dwdot[C2H5]/d[C2H4]
  // d()/d[C4H81]
  dqdci = +k_f * sc[19];
  J[211] += dqdci; // dwdot[C2H4]/d[C4H81]
  J[215] -= dqdci; // dwdot[C4H81]/d[C4H81]
  J[229] -= dqdci; // dwdot[H]/d[C4H81]
  J[237] += dqdci; // dwdot[C2H5]/d[C4H81]
  // d()/d[H]
  dqdci = +k_f * sc[5];
  J[799] += dqdci; // dwdot[C2H4]/d[H]
  J[803] -= dqdci; // dwdot[C4H81]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[825] += dqdci; // dwdot[C2H5]/d[H]
  // d()/d[C2H5]
  dqdci = -k_r * sc[1];
  J[1135] += dqdci; // dwdot[C2H4]/d[C2H5]
  J[1139] -= dqdci; // dwdot[C4H81]/d[C2H5]
  J[1153] -= dqdci; // dwdot[H]/d[C2H5]
  J[1161] += dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1723] += dqdT; // dwdot[C2H4]/dT
  J[1727] -= dqdT; // dwdot[C4H81]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1749] += dqdT; // dwdot[C2H5]/dT

  // reaction 164: C4H81 + H <=> C3H6 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[19];
  k_f = 3.2e+16 * exp(-2.39 * logT - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[3] * sc[12];
  Kc = exp(-g_RT[3] + g_RT[5] - g_RT[12] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[19]) + (h_RT[3] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // C3H6
  wdot[5] -= q;  // C4H81
  wdot[12] += q; // CH3
  wdot[19] -= q; // H
  // d()/d[C3H6]
  dqdci = -k_r * sc[12];
  J[129] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[131] -= dqdci; // dwdot[C4H81]/d[C3H6]
  J[138] += dqdci; // dwdot[CH3]/d[C3H6]
  J[145] -= dqdci; // dwdot[H]/d[C3H6]
  // d()/d[C4H81]
  dqdci = +k_f * sc[19];
  J[213] += dqdci; // dwdot[C3H6]/d[C4H81]
  J[215] -= dqdci; // dwdot[C4H81]/d[C4H81]
  J[222] += dqdci; // dwdot[CH3]/d[C4H81]
  J[229] -= dqdci; // dwdot[H]/d[C4H81]
  // d()/d[CH3]
  dqdci = -k_r * sc[3];
  J[507] += dqdci; // dwdot[C3H6]/d[CH3]
  J[509] -= dqdci; // dwdot[C4H81]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[523] -= dqdci; // dwdot[H]/d[CH3]
  // d()/d[H]
  dqdci = +k_f * sc[5];
  J[801] += dqdci; // dwdot[C3H6]/d[H]
  J[803] -= dqdci; // dwdot[C4H81]/d[H]
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1725] += dqdT; // dwdot[C3H6]/dT
  J[1727] -= dqdT; // dwdot[C4H81]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 165: H + iC4H8 <=> C3H6 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[19];
  k_f = 6.16e+16 * exp(-2.538 * logT - (5851.90660664309) * invT);
  dlnkfdT = -2.538 * invT + (5851.90660664309) * invT2;
  // reverse
  phi_r = sc[3] * sc[12];
  Kc = exp(-g_RT[3] + g_RT[4] - g_RT[12] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[19]) + (h_RT[3] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // C3H6
  wdot[4] -= q;  // iC4H8
  wdot[12] += q; // CH3
  wdot[19] -= q; // H
  // d()/d[C3H6]
  dqdci = -k_r * sc[12];
  J[129] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[130] -= dqdci; // dwdot[iC4H8]/d[C3H6]
  J[138] += dqdci; // dwdot[CH3]/d[C3H6]
  J[145] -= dqdci; // dwdot[H]/d[C3H6]
  // d()/d[iC4H8]
  dqdci = +k_f * sc[19];
  J[171] += dqdci; // dwdot[C3H6]/d[iC4H8]
  J[172] -= dqdci; // dwdot[iC4H8]/d[iC4H8]
  J[180] += dqdci; // dwdot[CH3]/d[iC4H8]
  J[187] -= dqdci; // dwdot[H]/d[iC4H8]
  // d()/d[CH3]
  dqdci = -k_r * sc[3];
  J[507] += dqdci; // dwdot[C3H6]/d[CH3]
  J[508] -= dqdci; // dwdot[iC4H8]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[523] -= dqdci; // dwdot[H]/d[CH3]
  // d()/d[H]
  dqdci = +k_f * sc[4];
  J[801] += dqdci; // dwdot[C3H6]/d[H]
  J[802] -= dqdci; // dwdot[iC4H8]/d[H]
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1725] += dqdT; // dwdot[C3H6]/dT
  J[1726] -= dqdT; // dwdot[iC4H8]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 166: O + iC4H8 <=> CH2CO + 2 CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[14];
  k_f = 240 * exp(1.65 * logT - (164.551849718143) * invT);
  dlnkfdT = 1.65 * invT + (164.551849718143) * invT2;
  // reverse
  phi_r = (sc[12] * sc[12]) * sc[29];
  Kc = refC * exp(g_RT[4] - 2.000000 * g_RT[12] + g_RT[14] - g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[14]) + (2.000000 * h_RT[12] + h_RT[29]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= q;      // iC4H8
  wdot[12] += 2 * q; // CH3
  wdot[14] -= q;     // O
  wdot[29] += q;     // CH2CO
  // d()/d[iC4H8]
  dqdci = +k_f * sc[14];
  J[172] -= dqdci;     // dwdot[iC4H8]/d[iC4H8]
  J[180] += 2 * dqdci; // dwdot[CH3]/d[iC4H8]
  J[182] -= dqdci;     // dwdot[O]/d[iC4H8]
  J[197] += dqdci;     // dwdot[CH2CO]/d[iC4H8]
  // d()/d[CH3]
  dqdci = -k_r * 2.000000 * sc[12] * sc[29];
  J[508] -= dqdci;     // dwdot[iC4H8]/d[CH3]
  J[516] += 2 * dqdci; // dwdot[CH3]/d[CH3]
  J[518] -= dqdci;     // dwdot[O]/d[CH3]
  J[533] += dqdci;     // dwdot[CH2CO]/d[CH3]
  // d()/d[O]
  dqdci = +k_f * sc[4];
  J[592] -= dqdci;     // dwdot[iC4H8]/d[O]
  J[600] += 2 * dqdci; // dwdot[CH3]/d[O]
  J[602] -= dqdci;     // dwdot[O]/d[O]
  J[617] += dqdci;     // dwdot[CH2CO]/d[O]
  // d()/d[CH2CO]
  dqdci = -k_r * sc[12] * sc[12];
  J[1222] -= dqdci;     // dwdot[iC4H8]/d[CH2CO]
  J[1230] += 2 * dqdci; // dwdot[CH3]/d[CH2CO]
  J[1232] -= dqdci;     // dwdot[O]/d[CH2CO]
  J[1247] += dqdci;     // dwdot[CH2CO]/d[CH2CO]
  // d()/dT
  J[1726] -= dqdT;     // dwdot[iC4H8]/dT
  J[1734] += 2 * dqdT; // dwdot[CH3]/dT
  J[1736] -= dqdT;     // dwdot[O]/dT
  J[1751] += dqdT;     // dwdot[CH2CO]/dT

  // reaction 167: C6H5 + CH3 <=> C6H5CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[35];
  k_f = 13800000 * exp(-(23.1479666270171) * invT);
  dlnkfdT = (23.1479666270171) * invT2;
  // reverse
  phi_r = sc[11];
  Kc = refCinv * exp(-g_RT[11] + g_RT[12] + g_RT[35]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[35]) + (h_RT[11]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] += q; // C6H5CH3
  wdot[12] -= q; // CH3
  wdot[35] -= q; // C6H5
  // d()/d[C6H5CH3]
  dqdci = -k_r;
  J[473] += dqdci; // dwdot[C6H5CH3]/d[C6H5CH3]
  J[474] -= dqdci; // dwdot[CH3]/d[C6H5CH3]
  J[497] -= dqdci; // dwdot[C6H5]/d[C6H5CH3]
  // d()/d[CH3]
  dqdci = +k_f * sc[35];
  J[515] += dqdci; // dwdot[C6H5CH3]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[539] -= dqdci; // dwdot[C6H5]/d[CH3]
  // d()/d[C6H5]
  dqdci = +k_f * sc[12];
  J[1481] += dqdci; // dwdot[C6H5CH3]/d[C6H5]
  J[1482] -= dqdci; // dwdot[CH3]/d[C6H5]
  J[1505] -= dqdci; // dwdot[C6H5]/d[C6H5]
  // d()/dT
  J[1733] += dqdT; // dwdot[C6H5CH3]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1757] -= dqdT; // dwdot[C6H5]/dT

  // reaction 168: C6H5CH3 + O2 <=> C6H5CH2 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[13];
  k_f = 300000000 * exp(-(21634.2908962765) * invT);
  dlnkfdT = (21634.2908962765) * invT2;
  // reverse
  phi_r = sc[16] * sc[36];
  Kc = exp(g_RT[11] + g_RT[13] - g_RT[16] - g_RT[36]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[13]) + (h_RT[16] + h_RT[36]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // C6H5CH3
  wdot[13] -= q; // O2
  wdot[16] += q; // HO2
  wdot[36] += q; // C6H5CH2
  // d()/d[C6H5CH3]
  dqdci = +k_f * sc[13];
  J[473] -= dqdci; // dwdot[C6H5CH3]/d[C6H5CH3]
  J[475] -= dqdci; // dwdot[O2]/d[C6H5CH3]
  J[478] += dqdci; // dwdot[HO2]/d[C6H5CH3]
  J[498] += dqdci; // dwdot[C6H5CH2]/d[C6H5CH3]
  // d()/d[O2]
  dqdci = +k_f * sc[11];
  J[557] -= dqdci; // dwdot[C6H5CH3]/d[O2]
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[562] += dqdci; // dwdot[HO2]/d[O2]
  J[582] += dqdci; // dwdot[C6H5CH2]/d[O2]
  // d()/d[HO2]
  dqdci = -k_r * sc[36];
  J[683] -= dqdci; // dwdot[C6H5CH3]/d[HO2]
  J[685] -= dqdci; // dwdot[O2]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[708] += dqdci; // dwdot[C6H5CH2]/d[HO2]
  // d()/d[C6H5CH2]
  dqdci = -k_r * sc[16];
  J[1523] -= dqdci; // dwdot[C6H5CH3]/d[C6H5CH2]
  J[1525] -= dqdci; // dwdot[O2]/d[C6H5CH2]
  J[1528] += dqdci; // dwdot[HO2]/d[C6H5CH2]
  J[1548] += dqdci; // dwdot[C6H5CH2]/d[C6H5CH2]
  // d()/dT
  J[1733] -= dqdT; // dwdot[C6H5CH3]/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1758] += dqdT; // dwdot[C6H5CH2]/dT

  // reaction 169: C6H5CH3 + OH <=> C6H5CH2 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[15];
  k_f = 16200000 * exp(-(1393.91016427907) * invT);
  dlnkfdT = (1393.91016427907) * invT2;
  // reverse
  phi_r = sc[17] * sc[36];
  Kc = exp(g_RT[11] + g_RT[15] - g_RT[17] - g_RT[36]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[15]) + (h_RT[17] + h_RT[36]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // C6H5CH3
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[36] += q; // C6H5CH2
  // d()/d[C6H5CH3]
  dqdci = +k_f * sc[15];
  J[473] -= dqdci; // dwdot[C6H5CH3]/d[C6H5CH3]
  J[477] -= dqdci; // dwdot[OH]/d[C6H5CH3]
  J[479] += dqdci; // dwdot[H2O]/d[C6H5CH3]
  J[498] += dqdci; // dwdot[C6H5CH2]/d[C6H5CH3]
  // d()/d[OH]
  dqdci = +k_f * sc[11];
  J[641] -= dqdci; // dwdot[C6H5CH3]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[666] += dqdci; // dwdot[C6H5CH2]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[36];
  J[725] -= dqdci; // dwdot[C6H5CH3]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[750] += dqdci; // dwdot[C6H5CH2]/d[H2O]
  // d()/d[C6H5CH2]
  dqdci = -k_r * sc[17];
  J[1523] -= dqdci; // dwdot[C6H5CH3]/d[C6H5CH2]
  J[1527] -= dqdci; // dwdot[OH]/d[C6H5CH2]
  J[1529] += dqdci; // dwdot[H2O]/d[C6H5CH2]
  J[1548] += dqdci; // dwdot[C6H5CH2]/d[C6H5CH2]
  // d()/dT
  J[1733] -= dqdT; // dwdot[C6H5CH3]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1758] += dqdT; // dwdot[C6H5CH2]/dT

  // reaction 170: C6H5CH3 + H <=> C6H5CH2 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[19];
  k_f = 125900000 * exp(-(4206.38810946165) * invT);
  dlnkfdT = (4206.38810946165) * invT2;
  // reverse
  phi_r = sc[6] * sc[36];
  Kc = exp(-g_RT[6] + g_RT[11] + g_RT[19] - g_RT[36]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[19]) + (h_RT[6] + h_RT[36]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2
  wdot[11] -= q; // C6H5CH3
  wdot[19] -= q; // H
  wdot[36] += q; // C6H5CH2
  // d()/d[H2]
  dqdci = -k_r * sc[36];
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[263] -= dqdci; // dwdot[C6H5CH3]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[288] += dqdci; // dwdot[C6H5CH2]/d[H2]
  // d()/d[C6H5CH3]
  dqdci = +k_f * sc[19];
  J[468] += dqdci; // dwdot[H2]/d[C6H5CH3]
  J[473] -= dqdci; // dwdot[C6H5CH3]/d[C6H5CH3]
  J[481] -= dqdci; // dwdot[H]/d[C6H5CH3]
  J[498] += dqdci; // dwdot[C6H5CH2]/d[C6H5CH3]
  // d()/d[H]
  dqdci = +k_f * sc[11];
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[809] -= dqdci; // dwdot[C6H5CH3]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[834] += dqdci; // dwdot[C6H5CH2]/d[H]
  // d()/d[C6H5CH2]
  dqdci = -k_r * sc[6];
  J[1518] += dqdci; // dwdot[H2]/d[C6H5CH2]
  J[1523] -= dqdci; // dwdot[C6H5CH3]/d[C6H5CH2]
  J[1531] -= dqdci; // dwdot[H]/d[C6H5CH2]
  J[1548] += dqdci; // dwdot[C6H5CH2]/d[C6H5CH2]
  // d()/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1733] -= dqdT; // dwdot[C6H5CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1758] += dqdT; // dwdot[C6H5CH2]/dT

  // reaction 171: C6H5CH3 + H <=> C6H6 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[19];
  k_f = 1.93 * exp(2.17 * logT - (2094.89097974505) * invT);
  dlnkfdT = 2.17 * invT + (2094.89097974505) * invT2;
  // reverse
  phi_r = sc[9] * sc[12];
  Kc = exp(-g_RT[9] + g_RT[11] - g_RT[12] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[19]) + (h_RT[9] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[9] += q;  // C6H6
  wdot[11] -= q; // C6H5CH3
  wdot[12] += q; // CH3
  wdot[19] -= q; // H
  // d()/d[C6H6]
  dqdci = -k_r * sc[12];
  J[387] += dqdci; // dwdot[C6H6]/d[C6H6]
  J[389] -= dqdci; // dwdot[C6H5CH3]/d[C6H6]
  J[390] += dqdci; // dwdot[CH3]/d[C6H6]
  J[397] -= dqdci; // dwdot[H]/d[C6H6]
  // d()/d[C6H5CH3]
  dqdci = +k_f * sc[19];
  J[471] += dqdci; // dwdot[C6H6]/d[C6H5CH3]
  J[473] -= dqdci; // dwdot[C6H5CH3]/d[C6H5CH3]
  J[474] += dqdci; // dwdot[CH3]/d[C6H5CH3]
  J[481] -= dqdci; // dwdot[H]/d[C6H5CH3]
  // d()/d[CH3]
  dqdci = -k_r * sc[9];
  J[513] += dqdci; // dwdot[C6H6]/d[CH3]
  J[515] -= dqdci; // dwdot[C6H5CH3]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[523] -= dqdci; // dwdot[H]/d[CH3]
  // d()/d[H]
  dqdci = +k_f * sc[11];
  J[807] += dqdci; // dwdot[C6H6]/d[H]
  J[809] -= dqdci; // dwdot[C6H5CH3]/d[H]
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1731] += dqdT; // dwdot[C6H6]/dT
  J[1733] -= dqdT; // dwdot[C6H5CH3]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 172: C6H5CH3 + CH3 <=> C6H5CH2 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[12];
  k_f = 316000 * exp(-(4780.55832514484) * invT);
  dlnkfdT = (4780.55832514484) * invT2;
  // reverse
  phi_r = sc[2] * sc[36];
  Kc = exp(-g_RT[2] + g_RT[11] + g_RT[12] - g_RT[36]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[12]) + (h_RT[2] + h_RT[36]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // CH4
  wdot[11] -= q; // C6H5CH3
  wdot[12] -= q; // CH3
  wdot[36] += q; // C6H5CH2
  // d()/d[CH4]
  dqdci = -k_r * sc[36];
  J[86] += dqdci;  // dwdot[CH4]/d[CH4]
  J[95] -= dqdci;  // dwdot[C6H5CH3]/d[CH4]
  J[96] -= dqdci;  // dwdot[CH3]/d[CH4]
  J[120] += dqdci; // dwdot[C6H5CH2]/d[CH4]
  // d()/d[C6H5CH3]
  dqdci = +k_f * sc[12];
  J[464] += dqdci; // dwdot[CH4]/d[C6H5CH3]
  J[473] -= dqdci; // dwdot[C6H5CH3]/d[C6H5CH3]
  J[474] -= dqdci; // dwdot[CH3]/d[C6H5CH3]
  J[498] += dqdci; // dwdot[C6H5CH2]/d[C6H5CH3]
  // d()/d[CH3]
  dqdci = +k_f * sc[11];
  J[506] += dqdci; // dwdot[CH4]/d[CH3]
  J[515] -= dqdci; // dwdot[C6H5CH3]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[540] += dqdci; // dwdot[C6H5CH2]/d[CH3]
  // d()/d[C6H5CH2]
  dqdci = -k_r * sc[2];
  J[1514] += dqdci; // dwdot[CH4]/d[C6H5CH2]
  J[1523] -= dqdci; // dwdot[C6H5CH3]/d[C6H5CH2]
  J[1524] -= dqdci; // dwdot[CH3]/d[C6H5CH2]
  J[1548] += dqdci; // dwdot[C6H5CH2]/d[C6H5CH2]
  // d()/dT
  J[1724] += dqdT; // dwdot[CH4]/dT
  J[1733] -= dqdT; // dwdot[C6H5CH3]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1758] += dqdT; // dwdot[C6H5CH2]/dT

  // reaction 174: C6H5CH2 + H <=> C6H5 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[36];
  k_f = 1.5e+60 * exp(-13.94 * logT - (32497.7322776688) * invT);
  dlnkfdT = -13.94 * invT + (32497.7322776688) * invT2;
  // reverse
  phi_r = sc[12] * sc[35];
  Kc = exp(-g_RT[12] + g_RT[19] - g_RT[35] + g_RT[36]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[36]) + (h_RT[12] + h_RT[35]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] += q; // CH3
  wdot[19] -= q; // H
  wdot[35] += q; // C6H5
  wdot[36] -= q; // C6H5CH2
  // d()/d[CH3]
  dqdci = -k_r * sc[35];
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[523] -= dqdci; // dwdot[H]/d[CH3]
  J[539] += dqdci; // dwdot[C6H5]/d[CH3]
  J[540] -= dqdci; // dwdot[C6H5CH2]/d[CH3]
  // d()/d[H]
  dqdci = +k_f * sc[36];
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[833] += dqdci; // dwdot[C6H5]/d[H]
  J[834] -= dqdci; // dwdot[C6H5CH2]/d[H]
  // d()/d[C6H5]
  dqdci = -k_r * sc[12];
  J[1482] += dqdci; // dwdot[CH3]/d[C6H5]
  J[1489] -= dqdci; // dwdot[H]/d[C6H5]
  J[1505] += dqdci; // dwdot[C6H5]/d[C6H5]
  J[1506] -= dqdci; // dwdot[C6H5CH2]/d[C6H5]
  // d()/d[C6H5CH2]
  dqdci = +k_f * sc[19];
  J[1524] += dqdci; // dwdot[CH3]/d[C6H5CH2]
  J[1531] -= dqdci; // dwdot[H]/d[C6H5CH2]
  J[1547] += dqdci; // dwdot[C6H5]/d[C6H5CH2]
  J[1548] -= dqdci; // dwdot[C6H5CH2]/d[C6H5CH2]
  // d()/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1757] += dqdT; // dwdot[C6H5]/dT
  J[1758] -= dqdT; // dwdot[C6H5CH2]/dT

  // reaction 175: C6H5CH2 + O <=> C6H5CHO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[36];
  k_f = 400000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[19] * sc[39];
  Kc = exp(g_RT[14] - g_RT[19] + g_RT[36] - g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[36]) + (h_RT[19] + h_RT[39]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[19] += q; // H
  wdot[36] -= q; // C6H5CH2
  wdot[39] += q; // C6H5CHO
  // d()/d[O]
  dqdci = +k_f * sc[36];
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[607] += dqdci; // dwdot[H]/d[O]
  J[624] -= dqdci; // dwdot[C6H5CH2]/d[O]
  J[627] += dqdci; // dwdot[C6H5CHO]/d[O]
  // d()/d[H]
  dqdci = -k_r * sc[39];
  J[812] -= dqdci; // dwdot[O]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[834] -= dqdci; // dwdot[C6H5CH2]/d[H]
  J[837] += dqdci; // dwdot[C6H5CHO]/d[H]
  // d()/d[C6H5CH2]
  dqdci = +k_f * sc[14];
  J[1526] -= dqdci; // dwdot[O]/d[C6H5CH2]
  J[1531] += dqdci; // dwdot[H]/d[C6H5CH2]
  J[1548] -= dqdci; // dwdot[C6H5CH2]/d[C6H5CH2]
  J[1551] += dqdci; // dwdot[C6H5CHO]/d[C6H5CH2]
  // d()/d[C6H5CHO]
  dqdci = -k_r * sc[19];
  J[1652] -= dqdci; // dwdot[O]/d[C6H5CHO]
  J[1657] += dqdci; // dwdot[H]/d[C6H5CHO]
  J[1674] -= dqdci; // dwdot[C6H5CH2]/d[C6H5CHO]
  J[1677] += dqdci; // dwdot[C6H5CHO]/d[C6H5CHO]
  // d()/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1758] -= dqdT; // dwdot[C6H5CH2]/dT
  J[1761] += dqdT; // dwdot[C6H5CHO]/dT

  // reaction 176: C6H5CH2 + HO2 <=> C6H5CHO + H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[36];
  k_f = 5000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[15] * sc[19] * sc[39];
  Kc = refC * exp(-g_RT[15] + g_RT[16] - g_RT[19] + g_RT[36] - g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[16] + h_RT[36]) + (h_RT[15] + h_RT[19] + h_RT[39]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] += q; // OH
  wdot[16] -= q; // HO2
  wdot[19] += q; // H
  wdot[36] -= q; // C6H5CH2
  wdot[39] += q; // C6H5CHO
  // d()/d[OH]
  dqdci = -k_r * sc[19] * sc[39];
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[646] -= dqdci; // dwdot[HO2]/d[OH]
  J[649] += dqdci; // dwdot[H]/d[OH]
  J[666] -= dqdci; // dwdot[C6H5CH2]/d[OH]
  J[669] += dqdci; // dwdot[C6H5CHO]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[36];
  J[687] += dqdci; // dwdot[OH]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[691] += dqdci; // dwdot[H]/d[HO2]
  J[708] -= dqdci; // dwdot[C6H5CH2]/d[HO2]
  J[711] += dqdci; // dwdot[C6H5CHO]/d[HO2]
  // d()/d[H]
  dqdci = -k_r * sc[15] * sc[39];
  J[813] += dqdci; // dwdot[OH]/d[H]
  J[814] -= dqdci; // dwdot[HO2]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[834] -= dqdci; // dwdot[C6H5CH2]/d[H]
  J[837] += dqdci; // dwdot[C6H5CHO]/d[H]
  // d()/d[C6H5CH2]
  dqdci = +k_f * sc[16];
  J[1527] += dqdci; // dwdot[OH]/d[C6H5CH2]
  J[1528] -= dqdci; // dwdot[HO2]/d[C6H5CH2]
  J[1531] += dqdci; // dwdot[H]/d[C6H5CH2]
  J[1548] -= dqdci; // dwdot[C6H5CH2]/d[C6H5CH2]
  J[1551] += dqdci; // dwdot[C6H5CHO]/d[C6H5CH2]
  // d()/d[C6H5CHO]
  dqdci = -k_r * sc[15] * sc[19];
  J[1653] += dqdci; // dwdot[OH]/d[C6H5CHO]
  J[1654] -= dqdci; // dwdot[HO2]/d[C6H5CHO]
  J[1657] += dqdci; // dwdot[H]/d[C6H5CHO]
  J[1674] -= dqdci; // dwdot[C6H5CH2]/d[C6H5CHO]
  J[1677] += dqdci; // dwdot[C6H5CHO]/d[C6H5CHO]
  // d()/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1758] -= dqdT; // dwdot[C6H5CH2]/dT
  J[1761] += dqdT; // dwdot[C6H5CHO]/dT

  // reaction 177: C6H5 + HCO <=> C6H5CHO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[22] * sc[35];
  k_f = 10000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[39];
  Kc = refCinv * exp(g_RT[22] + g_RT[35] - g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[22] + h_RT[35]) + (h_RT[39]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[22] -= q; // HCO
  wdot[35] -= q; // C6H5
  wdot[39] += q; // C6H5CHO
  // d()/d[HCO]
  dqdci = +k_f * sc[35];
  J[946] -= dqdci; // dwdot[HCO]/d[HCO]
  J[959] -= dqdci; // dwdot[C6H5]/d[HCO]
  J[963] += dqdci; // dwdot[C6H5CHO]/d[HCO]
  // d()/d[C6H5]
  dqdci = +k_f * sc[22];
  J[1492] -= dqdci; // dwdot[HCO]/d[C6H5]
  J[1505] -= dqdci; // dwdot[C6H5]/d[C6H5]
  J[1509] += dqdci; // dwdot[C6H5CHO]/d[C6H5]
  // d()/d[C6H5CHO]
  dqdci = -k_r;
  J[1660] -= dqdci; // dwdot[HCO]/d[C6H5CHO]
  J[1673] -= dqdci; // dwdot[C6H5]/d[C6H5CHO]
  J[1677] += dqdci; // dwdot[C6H5CHO]/d[C6H5CHO]
  // d()/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT
  J[1757] -= dqdT; // dwdot[C6H5]/dT
  J[1761] += dqdT; // dwdot[C6H5CHO]/dT

  // reaction 178: C6H5CHO <=> C6H5CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[39];
  k_f = 3.98e+15 * exp(-(43729.5282584301) * invT);
  dlnkfdT = (43729.5282584301) * invT2;
  // reverse
  phi_r = sc[19] * sc[38];
  Kc = refC * exp(-g_RT[19] - g_RT[38] + g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[39]) + (h_RT[19] + h_RT[38]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[19] += q; // H
  wdot[38] += q; // C6H5CO
  wdot[39] -= q; // C6H5CHO
  // d()/d[H]
  dqdci = -k_r * sc[38];
  J[817] += dqdci; // dwdot[H]/d[H]
  J[836] += dqdci; // dwdot[C6H5CO]/d[H]
  J[837] -= dqdci; // dwdot[C6H5CHO]/d[H]
  // d()/d[C6H5CO]
  dqdci = -k_r * sc[19];
  J[1615] += dqdci; // dwdot[H]/d[C6H5CO]
  J[1634] += dqdci; // dwdot[C6H5CO]/d[C6H5CO]
  J[1635] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CO]
  // d()/d[C6H5CHO]
  dqdci = +k_f;
  J[1657] += dqdci; // dwdot[H]/d[C6H5CHO]
  J[1676] += dqdci; // dwdot[C6H5CO]/d[C6H5CHO]
  J[1677] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CHO]
  // d()/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1760] += dqdT; // dwdot[C6H5CO]/dT
  J[1761] -= dqdT; // dwdot[C6H5CHO]/dT

  // reaction 179: C6H5CHO + O2 <=> C6H5CO + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[39];
  k_f = 10200000 * exp(-(19600.2891330938) * invT);
  dlnkfdT = (19600.2891330938) * invT2;
  // reverse
  phi_r = sc[16] * sc[38];
  Kc = exp(g_RT[13] - g_RT[16] - g_RT[38] + g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[39]) + (h_RT[16] + h_RT[38]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // O2
  wdot[16] += q; // HO2
  wdot[38] += q; // C6H5CO
  wdot[39] -= q; // C6H5CHO
  // d()/d[O2]
  dqdci = +k_f * sc[39];
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[562] += dqdci; // dwdot[HO2]/d[O2]
  J[584] += dqdci; // dwdot[C6H5CO]/d[O2]
  J[585] -= dqdci; // dwdot[C6H5CHO]/d[O2]
  // d()/d[HO2]
  dqdci = -k_r * sc[38];
  J[685] -= dqdci; // dwdot[O2]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[710] += dqdci; // dwdot[C6H5CO]/d[HO2]
  J[711] -= dqdci; // dwdot[C6H5CHO]/d[HO2]
  // d()/d[C6H5CO]
  dqdci = -k_r * sc[16];
  J[1609] -= dqdci; // dwdot[O2]/d[C6H5CO]
  J[1612] += dqdci; // dwdot[HO2]/d[C6H5CO]
  J[1634] += dqdci; // dwdot[C6H5CO]/d[C6H5CO]
  J[1635] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CO]
  // d()/d[C6H5CHO]
  dqdci = +k_f * sc[13];
  J[1651] -= dqdci; // dwdot[O2]/d[C6H5CHO]
  J[1654] += dqdci; // dwdot[HO2]/d[C6H5CHO]
  J[1676] += dqdci; // dwdot[C6H5CO]/d[C6H5CHO]
  J[1677] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CHO]
  // d()/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1760] += dqdT; // dwdot[C6H5CO]/dT
  J[1761] -= dqdT; // dwdot[C6H5CHO]/dT

  // reaction 180: C6H5CHO + OH <=> C6H5CO + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[39];
  k_f = 23500 * exp(0.73 * logT - (-558.570499043239) * invT);
  dlnkfdT = 0.73 * invT + (-558.570499043239) * invT2;
  // reverse
  phi_r = sc[17] * sc[38];
  Kc = exp(g_RT[15] - g_RT[17] - g_RT[38] + g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[39]) + (h_RT[17] + h_RT[38]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[38] += q; // C6H5CO
  wdot[39] -= q; // C6H5CHO
  // d()/d[OH]
  dqdci = +k_f * sc[39];
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[668] += dqdci; // dwdot[C6H5CO]/d[OH]
  J[669] -= dqdci; // dwdot[C6H5CHO]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[38];
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[752] += dqdci; // dwdot[C6H5CO]/d[H2O]
  J[753] -= dqdci; // dwdot[C6H5CHO]/d[H2O]
  // d()/d[C6H5CO]
  dqdci = -k_r * sc[17];
  J[1611] -= dqdci; // dwdot[OH]/d[C6H5CO]
  J[1613] += dqdci; // dwdot[H2O]/d[C6H5CO]
  J[1634] += dqdci; // dwdot[C6H5CO]/d[C6H5CO]
  J[1635] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CO]
  // d()/d[C6H5CHO]
  dqdci = +k_f * sc[15];
  J[1653] -= dqdci; // dwdot[OH]/d[C6H5CHO]
  J[1655] += dqdci; // dwdot[H2O]/d[C6H5CHO]
  J[1676] += dqdci; // dwdot[C6H5CO]/d[C6H5CHO]
  J[1677] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CHO]
  // d()/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1760] += dqdT; // dwdot[C6H5CO]/dT
  J[1761] -= dqdT; // dwdot[C6H5CHO]/dT

  // reaction 181: C6H5CHO + H <=> C6H5CO + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[39];
  k_f = 4100 * exp(1.16 * logT - (1207.71999793133) * invT);
  dlnkfdT = 1.16 * invT + (1207.71999793133) * invT2;
  // reverse
  phi_r = sc[6] * sc[38];
  Kc = exp(-g_RT[6] + g_RT[19] - g_RT[38] + g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[39]) + (h_RT[6] + h_RT[38]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2
  wdot[19] -= q; // H
  wdot[38] += q; // C6H5CO
  wdot[39] -= q; // C6H5CHO
  // d()/d[H2]
  dqdci = -k_r * sc[38];
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[290] += dqdci; // dwdot[C6H5CO]/d[H2]
  J[291] -= dqdci; // dwdot[C6H5CHO]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[39];
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[836] += dqdci; // dwdot[C6H5CO]/d[H]
  J[837] -= dqdci; // dwdot[C6H5CHO]/d[H]
  // d()/d[C6H5CO]
  dqdci = -k_r * sc[6];
  J[1602] += dqdci; // dwdot[H2]/d[C6H5CO]
  J[1615] -= dqdci; // dwdot[H]/d[C6H5CO]
  J[1634] += dqdci; // dwdot[C6H5CO]/d[C6H5CO]
  J[1635] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CO]
  // d()/d[C6H5CHO]
  dqdci = +k_f * sc[19];
  J[1644] += dqdci; // dwdot[H2]/d[C6H5CHO]
  J[1657] -= dqdci; // dwdot[H]/d[C6H5CHO]
  J[1676] += dqdci; // dwdot[C6H5CO]/d[C6H5CHO]
  J[1677] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CHO]
  // d()/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1760] += dqdT; // dwdot[C6H5CO]/dT
  J[1761] -= dqdT; // dwdot[C6H5CHO]/dT

  // reaction 182: C6H5CHO + H <=> C6H6 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[39];
  k_f = 1.93 * exp(2.17 * logT - (2094.89097974505) * invT);
  dlnkfdT = 2.17 * invT + (2094.89097974505) * invT2;
  // reverse
  phi_r = sc[9] * sc[22];
  Kc = exp(-g_RT[9] + g_RT[19] - g_RT[22] + g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[39]) + (h_RT[9] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[9] += q;  // C6H6
  wdot[19] -= q; // H
  wdot[22] += q; // HCO
  wdot[39] -= q; // C6H5CHO
  // d()/d[C6H6]
  dqdci = -k_r * sc[22];
  J[387] += dqdci; // dwdot[C6H6]/d[C6H6]
  J[397] -= dqdci; // dwdot[H]/d[C6H6]
  J[400] += dqdci; // dwdot[HCO]/d[C6H6]
  J[417] -= dqdci; // dwdot[C6H5CHO]/d[C6H6]
  // d()/d[H]
  dqdci = +k_f * sc[39];
  J[807] += dqdci; // dwdot[C6H6]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[820] += dqdci; // dwdot[HCO]/d[H]
  J[837] -= dqdci; // dwdot[C6H5CHO]/d[H]
  // d()/d[HCO]
  dqdci = -k_r * sc[9];
  J[933] += dqdci; // dwdot[C6H6]/d[HCO]
  J[943] -= dqdci; // dwdot[H]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[963] -= dqdci; // dwdot[C6H5CHO]/d[HCO]
  // d()/d[C6H5CHO]
  dqdci = +k_f * sc[19];
  J[1647] += dqdci; // dwdot[C6H6]/d[C6H5CHO]
  J[1657] -= dqdci; // dwdot[H]/d[C6H5CHO]
  J[1660] += dqdci; // dwdot[HCO]/d[C6H5CHO]
  J[1677] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CHO]
  // d()/dT
  J[1731] += dqdT; // dwdot[C6H6]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1761] -= dqdT; // dwdot[C6H5CHO]/dT

  // reaction 183: C6H5CHO + O <=> C6H5CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[39];
  k_f = 5800000 * exp(-(905.789998448495) * invT);
  dlnkfdT = (905.789998448495) * invT2;
  // reverse
  phi_r = sc[15] * sc[38];
  Kc = exp(g_RT[14] - g_RT[15] - g_RT[38] + g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[39]) + (h_RT[15] + h_RT[38]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[38] += q; // C6H5CO
  wdot[39] -= q; // C6H5CHO
  // d()/d[O]
  dqdci = +k_f * sc[39];
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[626] += dqdci; // dwdot[C6H5CO]/d[O]
  J[627] -= dqdci; // dwdot[C6H5CHO]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[38];
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[668] += dqdci; // dwdot[C6H5CO]/d[OH]
  J[669] -= dqdci; // dwdot[C6H5CHO]/d[OH]
  // d()/d[C6H5CO]
  dqdci = -k_r * sc[15];
  J[1610] -= dqdci; // dwdot[O]/d[C6H5CO]
  J[1611] += dqdci; // dwdot[OH]/d[C6H5CO]
  J[1634] += dqdci; // dwdot[C6H5CO]/d[C6H5CO]
  J[1635] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CO]
  // d()/d[C6H5CHO]
  dqdci = +k_f * sc[14];
  J[1652] -= dqdci; // dwdot[O]/d[C6H5CHO]
  J[1653] += dqdci; // dwdot[OH]/d[C6H5CHO]
  J[1676] += dqdci; // dwdot[C6H5CO]/d[C6H5CHO]
  J[1677] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CHO]
  // d()/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1760] += dqdT; // dwdot[C6H5CO]/dT
  J[1761] -= dqdT; // dwdot[C6H5CHO]/dT

  // reaction 184: C6H5CHO + CH3 <=> C6H5CO + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[39];
  k_f = 2e-12 * exp(5.6 * logT - (1237.91299787961) * invT);
  dlnkfdT = 5.6 * invT + (1237.91299787961) * invT2;
  // reverse
  phi_r = sc[2] * sc[38];
  Kc = exp(-g_RT[2] + g_RT[12] - g_RT[38] + g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[39]) + (h_RT[2] + h_RT[38]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // CH4
  wdot[12] -= q; // CH3
  wdot[38] += q; // C6H5CO
  wdot[39] -= q; // C6H5CHO
  // d()/d[CH4]
  dqdci = -k_r * sc[38];
  J[86] += dqdci;  // dwdot[CH4]/d[CH4]
  J[96] -= dqdci;  // dwdot[CH3]/d[CH4]
  J[122] += dqdci; // dwdot[C6H5CO]/d[CH4]
  J[123] -= dqdci; // dwdot[C6H5CHO]/d[CH4]
  // d()/d[CH3]
  dqdci = +k_f * sc[39];
  J[506] += dqdci; // dwdot[CH4]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[542] += dqdci; // dwdot[C6H5CO]/d[CH3]
  J[543] -= dqdci; // dwdot[C6H5CHO]/d[CH3]
  // d()/d[C6H5CO]
  dqdci = -k_r * sc[2];
  J[1598] += dqdci; // dwdot[CH4]/d[C6H5CO]
  J[1608] -= dqdci; // dwdot[CH3]/d[C6H5CO]
  J[1634] += dqdci; // dwdot[C6H5CO]/d[C6H5CO]
  J[1635] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CO]
  // d()/d[C6H5CHO]
  dqdci = +k_f * sc[12];
  J[1640] += dqdci; // dwdot[CH4]/d[C6H5CHO]
  J[1650] -= dqdci; // dwdot[CH3]/d[C6H5CHO]
  J[1676] += dqdci; // dwdot[C6H5CO]/d[C6H5CHO]
  J[1677] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CHO]
  // d()/dT
  J[1724] += dqdT; // dwdot[CH4]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1760] += dqdT; // dwdot[C6H5CO]/dT
  J[1761] -= dqdT; // dwdot[C6H5CHO]/dT

  // reaction 185: C6H5CO + H2O2 <=> C6H5CHO + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[18] * sc[38];
  k_f = 180000 * exp(-(4139.46029290962) * invT);
  dlnkfdT = (4139.46029290962) * invT2;
  // reverse
  phi_r = sc[16] * sc[39];
  Kc = exp(-g_RT[16] + g_RT[18] + g_RT[38] - g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[18] + h_RT[38]) + (h_RT[16] + h_RT[39]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[16] += q; // HO2
  wdot[18] -= q; // H2O2
  wdot[38] -= q; // C6H5CO
  wdot[39] += q; // C6H5CHO
  // d()/d[HO2]
  dqdci = -k_r * sc[39];
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[690] -= dqdci; // dwdot[H2O2]/d[HO2]
  J[710] -= dqdci; // dwdot[C6H5CO]/d[HO2]
  J[711] += dqdci; // dwdot[C6H5CHO]/d[HO2]
  // d()/d[H2O2]
  dqdci = +k_f * sc[38];
  J[772] += dqdci; // dwdot[HO2]/d[H2O2]
  J[774] -= dqdci; // dwdot[H2O2]/d[H2O2]
  J[794] -= dqdci; // dwdot[C6H5CO]/d[H2O2]
  J[795] += dqdci; // dwdot[C6H5CHO]/d[H2O2]
  // d()/d[C6H5CO]
  dqdci = +k_f * sc[18];
  J[1612] += dqdci; // dwdot[HO2]/d[C6H5CO]
  J[1614] -= dqdci; // dwdot[H2O2]/d[C6H5CO]
  J[1634] -= dqdci; // dwdot[C6H5CO]/d[C6H5CO]
  J[1635] += dqdci; // dwdot[C6H5CHO]/d[C6H5CO]
  // d()/d[C6H5CHO]
  dqdci = -k_r * sc[16];
  J[1654] += dqdci; // dwdot[HO2]/d[C6H5CHO]
  J[1656] -= dqdci; // dwdot[H2O2]/d[C6H5CHO]
  J[1676] -= dqdci; // dwdot[C6H5CO]/d[C6H5CHO]
  J[1677] += dqdci; // dwdot[C6H5CHO]/d[C6H5CHO]
  // d()/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1740] -= dqdT; // dwdot[H2O2]/dT
  J[1760] -= dqdT; // dwdot[C6H5CO]/dT
  J[1761] += dqdT; // dwdot[C6H5CHO]/dT

  // reaction 186: C6H5CO <=> C6H5 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[38];
  k_f = 527000000000000 * exp(-(14599.8251249923) * invT);
  dlnkfdT = (14599.8251249923) * invT2;
  // reverse
  phi_r = sc[8] * sc[35];
  Kc = refC * exp(-g_RT[8] - g_RT[35] + g_RT[38]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[38]) + (h_RT[8] + h_RT[35]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[35] += q; // C6H5
  wdot[38] -= q; // C6H5CO
  // d()/d[CO]
  dqdci = -k_r * sc[35];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[371] += dqdci; // dwdot[C6H5]/d[CO]
  J[374] -= dqdci; // dwdot[C6H5CO]/d[CO]
  // d()/d[C6H5]
  dqdci = -k_r * sc[8];
  J[1478] += dqdci; // dwdot[CO]/d[C6H5]
  J[1505] += dqdci; // dwdot[C6H5]/d[C6H5]
  J[1508] -= dqdci; // dwdot[C6H5CO]/d[C6H5]
  // d()/d[C6H5CO]
  dqdci = +k_f;
  J[1604] += dqdci; // dwdot[CO]/d[C6H5CO]
  J[1631] += dqdci; // dwdot[C6H5]/d[C6H5CO]
  J[1634] -= dqdci; // dwdot[C6H5CO]/d[C6H5CO]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1757] += dqdT; // dwdot[C6H5]/dT
  J[1760] -= dqdT; // dwdot[C6H5CO]/dT

  // reaction 188: C6H6 + OH <=> C6H5 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[15];
  k_f = 0.3985 * exp(2.286 * logT - (532.403232421393) * invT);
  dlnkfdT = 2.286 * invT + (532.403232421393) * invT2;
  // reverse
  phi_r = sc[17] * sc[35];
  Kc = exp(g_RT[9] + g_RT[15] - g_RT[17] - g_RT[35]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[9] + h_RT[15]) + (h_RT[17] + h_RT[35]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[9] -= q;  // C6H6
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[35] += q; // C6H5
  // d()/d[C6H6]
  dqdci = +k_f * sc[15];
  J[387] -= dqdci; // dwdot[C6H6]/d[C6H6]
  J[393] -= dqdci; // dwdot[OH]/d[C6H6]
  J[395] += dqdci; // dwdot[H2O]/d[C6H6]
  J[413] += dqdci; // dwdot[C6H5]/d[C6H6]
  // d()/d[OH]
  dqdci = +k_f * sc[9];
  J[639] -= dqdci; // dwdot[C6H6]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[665] += dqdci; // dwdot[C6H5]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[35];
  J[723] -= dqdci; // dwdot[C6H6]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[749] += dqdci; // dwdot[C6H5]/d[H2O]
  // d()/d[C6H5]
  dqdci = -k_r * sc[17];
  J[1479] -= dqdci; // dwdot[C6H6]/d[C6H5]
  J[1485] -= dqdci; // dwdot[OH]/d[C6H5]
  J[1487] += dqdci; // dwdot[H2O]/d[C6H5]
  J[1505] += dqdci; // dwdot[C6H5]/d[C6H5]
  // d()/dT
  J[1731] -= dqdT; // dwdot[C6H6]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1757] += dqdT; // dwdot[C6H5]/dT

  // reaction 189: C6H6 + O <=> C6H5O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[14];
  k_f = 13900000 * exp(-(2470.79382910117) * invT);
  dlnkfdT = (2470.79382910117) * invT2;
  // reverse
  phi_r = sc[19] * sc[37];
  Kc = exp(g_RT[9] + g_RT[14] - g_RT[19] - g_RT[37]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[9] + h_RT[14]) + (h_RT[19] + h_RT[37]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[9] -= q;  // C6H6
  wdot[14] -= q; // O
  wdot[19] += q; // H
  wdot[37] += q; // C6H5O
  // d()/d[C6H6]
  dqdci = +k_f * sc[14];
  J[387] -= dqdci; // dwdot[C6H6]/d[C6H6]
  J[392] -= dqdci; // dwdot[O]/d[C6H6]
  J[397] += dqdci; // dwdot[H]/d[C6H6]
  J[415] += dqdci; // dwdot[C6H5O]/d[C6H6]
  // d()/d[O]
  dqdci = +k_f * sc[9];
  J[597] -= dqdci; // dwdot[C6H6]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[607] += dqdci; // dwdot[H]/d[O]
  J[625] += dqdci; // dwdot[C6H5O]/d[O]
  // d()/d[H]
  dqdci = -k_r * sc[37];
  J[807] -= dqdci; // dwdot[C6H6]/d[H]
  J[812] -= dqdci; // dwdot[O]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[835] += dqdci; // dwdot[C6H5O]/d[H]
  // d()/d[C6H5O]
  dqdci = -k_r * sc[19];
  J[1563] -= dqdci; // dwdot[C6H6]/d[C6H5O]
  J[1568] -= dqdci; // dwdot[O]/d[C6H5O]
  J[1573] += dqdci; // dwdot[H]/d[C6H5O]
  J[1591] += dqdci; // dwdot[C6H5O]/d[C6H5O]
  // d()/dT
  J[1731] -= dqdT; // dwdot[C6H6]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1759] += dqdT; // dwdot[C6H5O]/dT

  // reaction 190: C6H6 + O <=> C5H5 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[14];
  k_f = 13900000 * exp(-(2279.57149609538) * invT);
  dlnkfdT = (2279.57149609538) * invT2;
  // reverse
  phi_r = sc[22] * sc[34];
  Kc = exp(g_RT[9] + g_RT[14] - g_RT[22] - g_RT[34]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[9] + h_RT[14]) + (h_RT[22] + h_RT[34]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[9] -= q;  // C6H6
  wdot[14] -= q; // O
  wdot[22] += q; // HCO
  wdot[34] += q; // C5H5
  // d()/d[C6H6]
  dqdci = +k_f * sc[14];
  J[387] -= dqdci; // dwdot[C6H6]/d[C6H6]
  J[392] -= dqdci; // dwdot[O]/d[C6H6]
  J[400] += dqdci; // dwdot[HCO]/d[C6H6]
  J[412] += dqdci; // dwdot[C5H5]/d[C6H6]
  // d()/d[O]
  dqdci = +k_f * sc[9];
  J[597] -= dqdci; // dwdot[C6H6]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[610] += dqdci; // dwdot[HCO]/d[O]
  J[622] += dqdci; // dwdot[C5H5]/d[O]
  // d()/d[HCO]
  dqdci = -k_r * sc[34];
  J[933] -= dqdci; // dwdot[C6H6]/d[HCO]
  J[938] -= dqdci; // dwdot[O]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[958] += dqdci; // dwdot[C5H5]/d[HCO]
  // d()/d[C5H5]
  dqdci = -k_r * sc[22];
  J[1437] -= dqdci; // dwdot[C6H6]/d[C5H5]
  J[1442] -= dqdci; // dwdot[O]/d[C5H5]
  J[1450] += dqdci; // dwdot[HCO]/d[C5H5]
  J[1462] += dqdci; // dwdot[C5H5]/d[C5H5]
  // d()/dT
  J[1731] -= dqdT; // dwdot[C6H6]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1756] += dqdT; // dwdot[C5H5]/dT

  // reaction 191: C6H5 + H2 <=> C6H6 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[35];
  k_f = 0.05707 * exp(2.43 * logT - (3156.67814459301) * invT);
  dlnkfdT = 2.43 * invT + (3156.67814459301) * invT2;
  // reverse
  phi_r = sc[9] * sc[19];
  Kc = exp(g_RT[6] - g_RT[9] - g_RT[19] + g_RT[35]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[35]) + (h_RT[9] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] -= q;  // H2
  wdot[9] += q;  // C6H6
  wdot[19] += q; // H
  wdot[35] -= q; // C6H5
  // d()/d[H2]
  dqdci = +k_f * sc[35];
  J[258] -= dqdci; // dwdot[H2]/d[H2]
  J[261] += dqdci; // dwdot[C6H6]/d[H2]
  J[271] += dqdci; // dwdot[H]/d[H2]
  J[287] -= dqdci; // dwdot[C6H5]/d[H2]
  // d()/d[C6H6]
  dqdci = -k_r * sc[19];
  J[384] -= dqdci; // dwdot[H2]/d[C6H6]
  J[387] += dqdci; // dwdot[C6H6]/d[C6H6]
  J[397] += dqdci; // dwdot[H]/d[C6H6]
  J[413] -= dqdci; // dwdot[C6H5]/d[C6H6]
  // d()/d[H]
  dqdci = -k_r * sc[9];
  J[804] -= dqdci; // dwdot[H2]/d[H]
  J[807] += dqdci; // dwdot[C6H6]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[833] -= dqdci; // dwdot[C6H5]/d[H]
  // d()/d[C6H5]
  dqdci = +k_f * sc[6];
  J[1476] -= dqdci; // dwdot[H2]/d[C6H5]
  J[1479] += dqdci; // dwdot[C6H6]/d[C6H5]
  J[1489] += dqdci; // dwdot[H]/d[C6H5]
  J[1505] -= dqdci; // dwdot[C6H5]/d[C6H5]
  // d()/dT
  J[1728] -= dqdT; // dwdot[H2]/dT
  J[1731] += dqdT; // dwdot[C6H6]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1757] -= dqdT; // dwdot[C6H5]/dT

  // reaction 192: C6H5 + O2 <=> C6H5O + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[35];
  k_f = 26000000 * exp(-(3079.68599472488) * invT);
  dlnkfdT = (3079.68599472488) * invT2;
  // reverse
  phi_r = sc[14] * sc[37];
  Kc = exp(g_RT[13] - g_RT[14] + g_RT[35] - g_RT[37]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[35]) + (h_RT[14] + h_RT[37]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // O2
  wdot[14] += q; // O
  wdot[35] -= q; // C6H5
  wdot[37] += q; // C6H5O
  // d()/d[O2]
  dqdci = +k_f * sc[35];
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[560] += dqdci; // dwdot[O]/d[O2]
  J[581] -= dqdci; // dwdot[C6H5]/d[O2]
  J[583] += dqdci; // dwdot[C6H5O]/d[O2]
  // d()/d[O]
  dqdci = -k_r * sc[37];
  J[601] -= dqdci; // dwdot[O2]/d[O]
  J[602] += dqdci; // dwdot[O]/d[O]
  J[623] -= dqdci; // dwdot[C6H5]/d[O]
  J[625] += dqdci; // dwdot[C6H5O]/d[O]
  // d()/d[C6H5]
  dqdci = +k_f * sc[13];
  J[1483] -= dqdci; // dwdot[O2]/d[C6H5]
  J[1484] += dqdci; // dwdot[O]/d[C6H5]
  J[1505] -= dqdci; // dwdot[C6H5]/d[C6H5]
  J[1507] += dqdci; // dwdot[C6H5O]/d[C6H5]
  // d()/d[C6H5O]
  dqdci = -k_r * sc[14];
  J[1567] -= dqdci; // dwdot[O2]/d[C6H5O]
  J[1568] += dqdci; // dwdot[O]/d[C6H5O]
  J[1589] -= dqdci; // dwdot[C6H5]/d[C6H5O]
  J[1591] += dqdci; // dwdot[C6H5O]/d[C6H5O]
  // d()/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1736] += dqdT; // dwdot[O]/dT
  J[1757] -= dqdT; // dwdot[C6H5]/dT
  J[1759] += dqdT; // dwdot[C6H5O]/dT

  // reaction 193: C6H5 + O <=> C5H5 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[35];
  k_f = 100000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[34];
  Kc = exp(-g_RT[8] + g_RT[14] - g_RT[34] + g_RT[35]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[35]) + (h_RT[8] + h_RT[34]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[14] -= q; // O
  wdot[34] += q; // C5H5
  wdot[35] -= q; // C6H5
  // d()/d[CO]
  dqdci = -k_r * sc[34];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[350] -= dqdci; // dwdot[O]/d[CO]
  J[370] += dqdci; // dwdot[C5H5]/d[CO]
  J[371] -= dqdci; // dwdot[C6H5]/d[CO]
  // d()/d[O]
  dqdci = +k_f * sc[35];
  J[596] += dqdci; // dwdot[CO]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[622] += dqdci; // dwdot[C5H5]/d[O]
  J[623] -= dqdci; // dwdot[C6H5]/d[O]
  // d()/d[C5H5]
  dqdci = -k_r * sc[8];
  J[1436] += dqdci; // dwdot[CO]/d[C5H5]
  J[1442] -= dqdci; // dwdot[O]/d[C5H5]
  J[1462] += dqdci; // dwdot[C5H5]/d[C5H5]
  J[1463] -= dqdci; // dwdot[C6H5]/d[C5H5]
  // d()/d[C6H5]
  dqdci = +k_f * sc[14];
  J[1478] += dqdci; // dwdot[CO]/d[C6H5]
  J[1484] -= dqdci; // dwdot[O]/d[C6H5]
  J[1504] += dqdci; // dwdot[C5H5]/d[C6H5]
  J[1505] -= dqdci; // dwdot[C6H5]/d[C6H5]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1756] += dqdT; // dwdot[C5H5]/dT
  J[1757] -= dqdT; // dwdot[C6H5]/dT

  // reaction 194: C6H5 + OH <=> C6H5O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[35];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[19] * sc[37];
  Kc = exp(g_RT[15] - g_RT[19] + g_RT[35] - g_RT[37]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[35]) + (h_RT[19] + h_RT[37]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] -= q; // OH
  wdot[19] += q; // H
  wdot[35] -= q; // C6H5
  wdot[37] += q; // C6H5O
  // d()/d[OH]
  dqdci = +k_f * sc[35];
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[649] += dqdci; // dwdot[H]/d[OH]
  J[665] -= dqdci; // dwdot[C6H5]/d[OH]
  J[667] += dqdci; // dwdot[C6H5O]/d[OH]
  // d()/d[H]
  dqdci = -k_r * sc[37];
  J[813] -= dqdci; // dwdot[OH]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[833] -= dqdci; // dwdot[C6H5]/d[H]
  J[835] += dqdci; // dwdot[C6H5O]/d[H]
  // d()/d[C6H5]
  dqdci = +k_f * sc[15];
  J[1485] -= dqdci; // dwdot[OH]/d[C6H5]
  J[1489] += dqdci; // dwdot[H]/d[C6H5]
  J[1505] -= dqdci; // dwdot[C6H5]/d[C6H5]
  J[1507] += dqdci; // dwdot[C6H5O]/d[C6H5]
  // d()/d[C6H5O]
  dqdci = -k_r * sc[19];
  J[1569] -= dqdci; // dwdot[OH]/d[C6H5O]
  J[1573] += dqdci; // dwdot[H]/d[C6H5O]
  J[1589] -= dqdci; // dwdot[C6H5]/d[C6H5O]
  J[1591] += dqdci; // dwdot[C6H5O]/d[C6H5O]
  // d()/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1757] -= dqdT; // dwdot[C6H5]/dT
  J[1759] += dqdT; // dwdot[C6H5O]/dT

  // reaction 195: C6H5 + HO2 <=> C6H6 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[35];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[9] * sc[13];
  Kc = exp(-g_RT[9] - g_RT[13] + g_RT[16] + g_RT[35]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[16] + h_RT[35]) + (h_RT[9] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[9] += q;  // C6H6
  wdot[13] += q; // O2
  wdot[16] -= q; // HO2
  wdot[35] -= q; // C6H5
  // d()/d[C6H6]
  dqdci = -k_r * sc[13];
  J[387] += dqdci; // dwdot[C6H6]/d[C6H6]
  J[391] += dqdci; // dwdot[O2]/d[C6H6]
  J[394] -= dqdci; // dwdot[HO2]/d[C6H6]
  J[413] -= dqdci; // dwdot[C6H5]/d[C6H6]
  // d()/d[O2]
  dqdci = -k_r * sc[9];
  J[555] += dqdci; // dwdot[C6H6]/d[O2]
  J[559] += dqdci; // dwdot[O2]/d[O2]
  J[562] -= dqdci; // dwdot[HO2]/d[O2]
  J[581] -= dqdci; // dwdot[C6H5]/d[O2]
  // d()/d[HO2]
  dqdci = +k_f * sc[35];
  J[681] += dqdci; // dwdot[C6H6]/d[HO2]
  J[685] += dqdci; // dwdot[O2]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[707] -= dqdci; // dwdot[C6H5]/d[HO2]
  // d()/d[C6H5]
  dqdci = +k_f * sc[16];
  J[1479] += dqdci; // dwdot[C6H6]/d[C6H5]
  J[1483] += dqdci; // dwdot[O2]/d[C6H5]
  J[1486] -= dqdci; // dwdot[HO2]/d[C6H5]
  J[1505] -= dqdci; // dwdot[C6H5]/d[C6H5]
  // d()/dT
  J[1731] += dqdT; // dwdot[C6H6]/dT
  J[1735] += dqdT; // dwdot[O2]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1757] -= dqdT; // dwdot[C6H5]/dT

  // reaction 196: C6H5 + CH4 <=> C6H6 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[35];
  k_f = 3.89e-09 * exp(4.57 * logT - (2644.90679546961) * invT);
  dlnkfdT = 4.57 * invT + (2644.90679546961) * invT2;
  // reverse
  phi_r = sc[9] * sc[12];
  Kc = exp(g_RT[2] - g_RT[9] - g_RT[12] + g_RT[35]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[35]) + (h_RT[9] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // CH4
  wdot[9] += q;  // C6H6
  wdot[12] += q; // CH3
  wdot[35] -= q; // C6H5
  // d()/d[CH4]
  dqdci = +k_f * sc[35];
  J[86] -= dqdci;  // dwdot[CH4]/d[CH4]
  J[93] += dqdci;  // dwdot[C6H6]/d[CH4]
  J[96] += dqdci;  // dwdot[CH3]/d[CH4]
  J[119] -= dqdci; // dwdot[C6H5]/d[CH4]
  // d()/d[C6H6]
  dqdci = -k_r * sc[12];
  J[380] -= dqdci; // dwdot[CH4]/d[C6H6]
  J[387] += dqdci; // dwdot[C6H6]/d[C6H6]
  J[390] += dqdci; // dwdot[CH3]/d[C6H6]
  J[413] -= dqdci; // dwdot[C6H5]/d[C6H6]
  // d()/d[CH3]
  dqdci = -k_r * sc[9];
  J[506] -= dqdci; // dwdot[CH4]/d[CH3]
  J[513] += dqdci; // dwdot[C6H6]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[539] -= dqdci; // dwdot[C6H5]/d[CH3]
  // d()/d[C6H5]
  dqdci = +k_f * sc[2];
  J[1472] -= dqdci; // dwdot[CH4]/d[C6H5]
  J[1479] += dqdci; // dwdot[C6H6]/d[C6H5]
  J[1482] += dqdci; // dwdot[CH3]/d[C6H5]
  J[1505] -= dqdci; // dwdot[C6H5]/d[C6H5]
  // d()/dT
  J[1724] -= dqdT; // dwdot[CH4]/dT
  J[1731] += dqdT; // dwdot[C6H6]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1757] -= dqdT; // dwdot[C6H5]/dT

  // reaction 197: C6H5O <=> C5H5 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[37];
  k_f = 3.76e+54 * exp(-12.06 * logT - (36634.1732705836) * invT);
  dlnkfdT = -12.06 * invT + (36634.1732705836) * invT2;
  // reverse
  phi_r = sc[8] * sc[34];
  Kc = refC * exp(-g_RT[8] - g_RT[34] + g_RT[37]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[37]) + (h_RT[8] + h_RT[34]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[34] += q; // C5H5
  wdot[37] -= q; // C6H5O
  // d()/d[CO]
  dqdci = -k_r * sc[34];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[370] += dqdci; // dwdot[C5H5]/d[CO]
  J[373] -= dqdci; // dwdot[C6H5O]/d[CO]
  // d()/d[C5H5]
  dqdci = -k_r * sc[8];
  J[1436] += dqdci; // dwdot[CO]/d[C5H5]
  J[1462] += dqdci; // dwdot[C5H5]/d[C5H5]
  J[1465] -= dqdci; // dwdot[C6H5O]/d[C5H5]
  // d()/d[C6H5O]
  dqdci = +k_f;
  J[1562] += dqdci; // dwdot[CO]/d[C6H5O]
  J[1588] += dqdci; // dwdot[C5H5]/d[C6H5O]
  J[1591] -= dqdci; // dwdot[C6H5O]/d[C6H5O]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1756] += dqdT; // dwdot[C5H5]/dT
  J[1759] -= dqdT; // dwdot[C6H5O]/dT

  // reaction 198: C5H5 + O <=> C5H4O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[34];
  k_f = 58100000 * exp(-0.02 * logT - (10.0643333160944) * invT);
  dlnkfdT = -0.02 * invT + (10.0643333160944) * invT2;
  // reverse
  phi_r = sc[19] * sc[33];
  Kc = exp(g_RT[14] - g_RT[19] - g_RT[33] + g_RT[34]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[34]) + (h_RT[19] + h_RT[33]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[19] += q; // H
  wdot[33] += q; // C5H4O
  wdot[34] -= q; // C5H5
  // d()/d[O]
  dqdci = +k_f * sc[34];
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[607] += dqdci; // dwdot[H]/d[O]
  J[621] += dqdci; // dwdot[C5H4O]/d[O]
  J[622] -= dqdci; // dwdot[C5H5]/d[O]
  // d()/d[H]
  dqdci = -k_r * sc[33];
  J[812] -= dqdci; // dwdot[O]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[831] += dqdci; // dwdot[C5H4O]/d[H]
  J[832] -= dqdci; // dwdot[C5H5]/d[H]
  // d()/d[C5H4O]
  dqdci = -k_r * sc[19];
  J[1400] -= dqdci; // dwdot[O]/d[C5H4O]
  J[1405] += dqdci; // dwdot[H]/d[C5H4O]
  J[1419] += dqdci; // dwdot[C5H4O]/d[C5H4O]
  J[1420] -= dqdci; // dwdot[C5H5]/d[C5H4O]
  // d()/d[C5H5]
  dqdci = +k_f * sc[14];
  J[1442] -= dqdci; // dwdot[O]/d[C5H5]
  J[1447] += dqdci; // dwdot[H]/d[C5H5]
  J[1461] += dqdci; // dwdot[C5H4O]/d[C5H5]
  J[1462] -= dqdci; // dwdot[C5H5]/d[C5H5]
  // d()/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1755] += dqdT; // dwdot[C5H4O]/dT
  J[1756] -= dqdT; // dwdot[C5H5]/dT

  // reaction 199: C5H5 + O2 <=> C5H4O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[34];
  k_f = 1800000 * exp(0.08 * logT - (9057.89998448495) * invT);
  dlnkfdT = 0.08 * invT + (9057.89998448495) * invT2;
  // reverse
  phi_r = sc[15] * sc[33];
  Kc = exp(g_RT[13] - g_RT[15] - g_RT[33] + g_RT[34]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[34]) + (h_RT[15] + h_RT[33]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // O2
  wdot[15] += q; // OH
  wdot[33] += q; // C5H4O
  wdot[34] -= q; // C5H5
  // d()/d[O2]
  dqdci = +k_f * sc[34];
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[561] += dqdci; // dwdot[OH]/d[O2]
  J[579] += dqdci; // dwdot[C5H4O]/d[O2]
  J[580] -= dqdci; // dwdot[C5H5]/d[O2]
  // d()/d[OH]
  dqdci = -k_r * sc[33];
  J[643] -= dqdci; // dwdot[O2]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[663] += dqdci; // dwdot[C5H4O]/d[OH]
  J[664] -= dqdci; // dwdot[C5H5]/d[OH]
  // d()/d[C5H4O]
  dqdci = -k_r * sc[15];
  J[1399] -= dqdci; // dwdot[O2]/d[C5H4O]
  J[1401] += dqdci; // dwdot[OH]/d[C5H4O]
  J[1419] += dqdci; // dwdot[C5H4O]/d[C5H4O]
  J[1420] -= dqdci; // dwdot[C5H5]/d[C5H4O]
  // d()/d[C5H5]
  dqdci = +k_f * sc[13];
  J[1441] -= dqdci; // dwdot[O2]/d[C5H5]
  J[1443] += dqdci; // dwdot[OH]/d[C5H5]
  J[1461] += dqdci; // dwdot[C5H4O]/d[C5H5]
  J[1462] -= dqdci; // dwdot[C5H5]/d[C5H5]
  // d()/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1755] += dqdT; // dwdot[C5H4O]/dT
  J[1756] -= dqdT; // dwdot[C5H5]/dT

  // reaction 200: C5H4O <=> 2 C2H2 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[33];
  k_f = 6.2e+41 * exp(-7.87 * logT - (49667.4849149258) * invT);
  dlnkfdT = -7.87 * invT + (49667.4849149258) * invT2;
  // reverse
  phi_r = sc[8] * (sc[10] * sc[10]);
  Kc = (refC * refC) * exp(-g_RT[8] - 2.000000 * g_RT[10] + g_RT[33]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[33]) + (h_RT[8] + 2.000000 * h_RT[10]) - 2.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;      // CO
  wdot[10] += 2 * q; // C2H2
  wdot[33] -= q;     // C5H4O
  // d()/d[CO]
  dqdci = -k_r * sc[10] * sc[10];
  J[344] += dqdci;     // dwdot[CO]/d[CO]
  J[346] += 2 * dqdci; // dwdot[C2H2]/d[CO]
  J[369] -= dqdci;     // dwdot[C5H4O]/d[CO]
  // d()/d[C2H2]
  dqdci = -k_r * sc[8] * 2.000000 * sc[10];
  J[428] += dqdci;     // dwdot[CO]/d[C2H2]
  J[430] += 2 * dqdci; // dwdot[C2H2]/d[C2H2]
  J[453] -= dqdci;     // dwdot[C5H4O]/d[C2H2]
  // d()/d[C5H4O]
  dqdci = +k_f;
  J[1394] += dqdci;     // dwdot[CO]/d[C5H4O]
  J[1396] += 2 * dqdci; // dwdot[C2H2]/d[C5H4O]
  J[1419] -= dqdci;     // dwdot[C5H4O]/d[C5H4O]
  // d()/dT
  J[1730] += dqdT;     // dwdot[CO]/dT
  J[1732] += 2 * dqdT; // dwdot[C2H2]/dT
  J[1755] -= dqdT;     // dwdot[C5H4O]/dT

  // reaction 201: C5H4O + O <=> C3H3 + CO + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[33];
  k_f = 620 * exp(1.45 * logT - (-431.75989926045) * invT);
  dlnkfdT = 1.45 * invT + (-431.75989926045) * invT2;
  // reverse
  phi_r = sc[8] * sc[22] * sc[31];
  Kc = refC * exp(-g_RT[8] + g_RT[14] - g_RT[22] - g_RT[31] + g_RT[33]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[33]) + (h_RT[8] + h_RT[22] + h_RT[31]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[14] -= q; // O
  wdot[22] += q; // HCO
  wdot[31] += q; // C3H3
  wdot[33] -= q; // C5H4O
  // d()/d[CO]
  dqdci = -k_r * sc[22] * sc[31];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[350] -= dqdci; // dwdot[O]/d[CO]
  J[358] += dqdci; // dwdot[HCO]/d[CO]
  J[367] += dqdci; // dwdot[C3H3]/d[CO]
  J[369] -= dqdci; // dwdot[C5H4O]/d[CO]
  // d()/d[O]
  dqdci = +k_f * sc[33];
  J[596] += dqdci; // dwdot[CO]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[610] += dqdci; // dwdot[HCO]/d[O]
  J[619] += dqdci; // dwdot[C3H3]/d[O]
  J[621] -= dqdci; // dwdot[C5H4O]/d[O]
  // d()/d[HCO]
  dqdci = -k_r * sc[8] * sc[31];
  J[932] += dqdci; // dwdot[CO]/d[HCO]
  J[938] -= dqdci; // dwdot[O]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[955] += dqdci; // dwdot[C3H3]/d[HCO]
  J[957] -= dqdci; // dwdot[C5H4O]/d[HCO]
  // d()/d[C3H3]
  dqdci = -k_r * sc[8] * sc[22];
  J[1310] += dqdci; // dwdot[CO]/d[C3H3]
  J[1316] -= dqdci; // dwdot[O]/d[C3H3]
  J[1324] += dqdci; // dwdot[HCO]/d[C3H3]
  J[1333] += dqdci; // dwdot[C3H3]/d[C3H3]
  J[1335] -= dqdci; // dwdot[C5H4O]/d[C3H3]
  // d()/d[C5H4O]
  dqdci = +k_f * sc[14];
  J[1394] += dqdci; // dwdot[CO]/d[C5H4O]
  J[1400] -= dqdci; // dwdot[O]/d[C5H4O]
  J[1408] += dqdci; // dwdot[HCO]/d[C5H4O]
  J[1417] += dqdci; // dwdot[C3H3]/d[C5H4O]
  J[1419] -= dqdci; // dwdot[C5H4O]/d[C5H4O]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1753] += dqdT; // dwdot[C3H3]/dT
  J[1755] -= dqdT; // dwdot[C5H4O]/dT

  amrex::Real c_R[41], dcRdT[41], e_RT[41];
  amrex::Real* eh_RT;
  if (HP == 1) {
    cp_R(c_R, T);
    dcvpRdT(dcRdT, T);
    eh_RT = &h_RT[0];
  } else {
    cv_R(c_R, T);
    dcvpRdT(dcRdT, T);
    speciesInternalEnergy(e_RT, T);
    eh_RT = &e_RT[0];
  }

  amrex::Real cmix = 0.0, ehmix = 0.0, dcmixdT = 0.0, dehmixdT = 0.0;
  for (int k = 0; k < 41; ++k) {
    cmix += c_R[k] * sc[k];
    dcmixdT += dcRdT[k] * sc[k];
    ehmix += eh_RT[k] * wdot[k];
    dehmixdT += invT * (c_R[k] - eh_RT[k]) * wdot[k] + eh_RT[k] * J[1722 + k];
  }

  amrex::Real cmixinv = 1.0 / cmix;
  amrex::Real tmp1 = ehmix * cmixinv;
  amrex::Real tmp3 = cmixinv * T;
  amrex::Real tmp2 = tmp1 * tmp3;
  amrex::Real dehmixdc;
  // dTdot/d[X]
  for (int k = 0; k < 41; ++k) {
    dehmixdc = 0.0;
    for (int m = 0; m < 41; ++m) {
      dehmixdc += eh_RT[m] * J[k * 42 + m];
    }
    J[k * 42 + 41] = tmp2 * c_R[k] - tmp3 * dehmixdc;
  }
  // dTdot/dT
  J[1763] = -tmp1 + tmp2 * dcmixdT - tmp3 * dehmixdT;
#else
  amrex::Abort();
#endif
}

// compute an approx to the reaction Jacobian (for preconditioning)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT_SIMPLIFIED(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real* Tp, const int* HP)
{
  amrex::Real c[41];

  for (int k = 0; k < 41; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian_precond(J, c, *Tp, *HP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 41; k++) {
    J[1722 + k] *= 1.e-6;
    J[k * 42 + 41] *= 1.e6;
  }
}

// compute the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real T, const int consP)
{

#if defined(PELE_COMPILE_AJACOBIAN) || !defined(AMREX_USE_HIP)
  for (int i = 0; i < 1764; i++) {
    J[i] = 0.0;
  }

  amrex::Real wdot[41];
  for (auto& val : wdot) {
    val = 0.0;
  }

  const amrex::Real invT = 1.0 / T;
  const amrex::Real invT2 = invT * invT;
  const amrex::Real logT = log(T);

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  amrex::Real refC = 101325 / 8.31446 / T;
  amrex::Real refCinv = 1.0 / refC;

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int k = 0; k < 41; ++k) {
    mixture += sc[k];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[41];
  gibbs(g_RT, T);

  // compute the species enthalpy
  amrex::Real h_RT[41];
  speciesEnthalpy(h_RT, T);

  amrex::Real phi_f, k_f, k_r, phi_r, Kc, q, q_nocor, Corr, alpha;
  amrex::Real dlnkfdT, dlnk0dT, dlnKcdT, dkrdT, dqdT;
  amrex::Real dqdci, dcdc_fac, dqdc[41];
  amrex::Real Pr, fPr, F, k_0, logPr;
  amrex::Real logFcent, troe_c, troe_n, troePr_den, troePr, troe;
  amrex::Real Fcent1, Fcent2, Fcent3, Fcent;
  amrex::Real dlogFdc, dlogFdn, dlogFdcn_fac;
  amrex::Real dlogPrdT, dlogfPrdT, dlogFdT, dlogFcentdT, dlogFdlogPr, dlnCorrdT;
  const amrex::Real ln10 = log(10.0);
  const amrex::Real log10e = 1.0 / log(10.0);
  // reaction 16: H + O2 (+M) <=> HO2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (1.09 - 1) * sc[8] + (0.85 - 1) * sc[13] +
          (11.89 - 1) * sc[17] + (2.18 - 1) * sc[25];
  // forward
  phi_f = sc[13] * sc[19];
  k_f = 5116000 * exp(0.44 * logT);
  dlnkfdT = 0.44 * invT;
  // pressure-fall-off
  k_0 = 6.328e+19 * exp(-1.4 * logT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -1.4 * invT;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.5) * exp(-T / 1e-30);
  Fcent2 = 0.5 * exp(-T / 1e+30);
  Fcent3 = 0.;
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent * (-Fcent1 / 1e-30 - Fcent2 / 1e+30);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[16];
  Kc = refCinv * exp(g_RT[13] - g_RT[16] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[19]) + (h_RT[16]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[13] -= q; // O2
  wdot[16] += q; // HO2
  wdot[19] -= q; // H
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[CO]
    dqdci = (1.09 - 1) * dcdc_fac;
    J[349] -= dqdci; // dwdot[O2]/d[CO]
    J[352] += dqdci; // dwdot[HO2]/d[CO]
    J[355] -= dqdci; // dwdot[H]/d[CO]
    // d()/d[O2]
    dqdci = (0.85 - 1) * dcdc_fac + k_f * sc[19];
    J[559] -= dqdci; // dwdot[O2]/d[O2]
    J[562] += dqdci; // dwdot[HO2]/d[O2]
    J[565] -= dqdci; // dwdot[H]/d[O2]
    // d()/d[HO2]
    dqdci = -k_r;
    J[685] -= dqdci; // dwdot[O2]/d[HO2]
    J[688] += dqdci; // dwdot[HO2]/d[HO2]
    J[691] -= dqdci; // dwdot[H]/d[HO2]
    // d()/d[H2O]
    dqdci = (11.89 - 1) * dcdc_fac;
    J[727] -= dqdci; // dwdot[O2]/d[H2O]
    J[730] += dqdci; // dwdot[HO2]/d[H2O]
    J[733] -= dqdci; // dwdot[H]/d[H2O]
    // d()/d[H]
    dqdci = +k_f * sc[13];
    J[811] -= dqdci; // dwdot[O2]/d[H]
    J[814] += dqdci; // dwdot[HO2]/d[H]
    J[817] -= dqdci; // dwdot[H]/d[H]
    // d()/d[CO2]
    dqdci = (2.18 - 1) * dcdc_fac;
    J[1063] -= dqdci; // dwdot[O2]/d[CO2]
    J[1066] += dqdci; // dwdot[HO2]/d[CO2]
    J[1069] -= dqdci; // dwdot[H]/d[CO2]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = 1.09 * dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = 0.85 * dcdc_fac + k_f * sc[19];
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac - k_r;
    dqdc[17] = 11.89 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac + k_f * sc[13];
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = 2.18 * dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 13] -= dqdc[k];
      J[42 * k + 16] += dqdc[k];
      J[42 * k + 19] -= dqdc[k];
    }
  }
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 18: 2 OH (+M) <=> H2O2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[6] + (1.75 - 1) * sc[8] + (6 - 1) * sc[17] +
          (3.6 - 1) * sc[25];
  // forward
  phi_f = (sc[15] * sc[15]);
  k_f = 111000000 * exp(-0.37 * logT);
  dlnkfdT = -0.37 * invT;
  // pressure-fall-off
  k_0 = 2.01e+17 * exp(-0.584 * logT - (-1153.87581469022) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -0.584 * invT + (-1153.87581469022) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.7346) * exp(-T / 94);
  Fcent2 = 0.7346 * exp(-T / 1756);
  Fcent3 = exp(-5182 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 94 - Fcent2 / 1756 + Fcent3 * 5182 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[18];
  Kc = refCinv * exp(2.000000 * g_RT[15] - g_RT[18]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[15]) + (h_RT[18]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[15] -= 2 * q; // OH
  wdot[18] += q;     // H2O2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[267] += -2 * dqdci; // dwdot[OH]/d[H2]
    J[270] += dqdci;      // dwdot[H2O2]/d[H2]
    // d()/d[CO]
    dqdci = (1.75 - 1) * dcdc_fac;
    J[351] += -2 * dqdci; // dwdot[OH]/d[CO]
    J[354] += dqdci;      // dwdot[H2O2]/d[CO]
    // d()/d[OH]
    dqdci = +k_f * 2.000000 * sc[15];
    J[645] += -2 * dqdci; // dwdot[OH]/d[OH]
    J[648] += dqdci;      // dwdot[H2O2]/d[OH]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[729] += -2 * dqdci; // dwdot[OH]/d[H2O]
    J[732] += dqdci;      // dwdot[H2O2]/d[H2O]
    // d()/d[H2O2]
    dqdci = -k_r;
    J[771] += -2 * dqdci; // dwdot[OH]/d[H2O2]
    J[774] += dqdci;      // dwdot[H2O2]/d[H2O2]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * dcdc_fac;
    J[1065] += -2 * dqdci; // dwdot[OH]/d[CO2]
    J[1068] += dqdci;      // dwdot[H2O2]/d[CO2]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = 1.75 * dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac + k_f * 2.000000 * sc[15];
    dqdc[16] = dcdc_fac;
    dqdc[17] = 6 * dcdc_fac;
    dqdc[18] = dcdc_fac - k_r;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = 3.6 * dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 15] += -2 * dqdc[k];
      J[42 * k + 18] += dqdc[k];
    }
  }
  J[1737] += -2 * dqdT; // dwdot[OH]/dT
  J[1740] += dqdT;      // dwdot[H2O2]/dT

  // reaction 42: CO + H2 (+M) <=> CH2O (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[6] * sc[8];
  k_f = 43 * exp(1.5 * logT - (40056.0465980557) * invT);
  dlnkfdT = 1.5 * invT + (40056.0465980557) * invT2;
  // pressure-fall-off
  k_0 = 5.07e+27 * exp(-3.42 * logT - (42446.3257606281) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -3.42 * invT + (42446.3257606281) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.932) * exp(-T / 197);
  Fcent2 = 0.932 * exp(-T / 1540);
  Fcent3 = exp(-10300 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 197 - Fcent2 / 1540 + Fcent3 * 10300 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[23];
  Kc = refCinv * exp(g_RT[6] + g_RT[8] - g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[8]) + (h_RT[23]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[6] -= q;  // H2
  wdot[8] -= q;  // CO
  wdot[23] += q; // CH2O
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[90] -= dqdci;  // dwdot[H2]/d[CH4]
    J[92] -= dqdci;  // dwdot[CO]/d[CH4]
    J[107] += dqdci; // dwdot[CH2O]/d[CH4]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac + k_f * sc[8];
    J[258] -= dqdci; // dwdot[H2]/d[H2]
    J[260] -= dqdci; // dwdot[CO]/d[H2]
    J[275] += dqdci; // dwdot[CH2O]/d[H2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[300] -= dqdci; // dwdot[H2]/d[C2H6]
    J[302] -= dqdci; // dwdot[CO]/d[C2H6]
    J[317] += dqdci; // dwdot[CH2O]/d[C2H6]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac + k_f * sc[6];
    J[342] -= dqdci; // dwdot[H2]/d[CO]
    J[344] -= dqdci; // dwdot[CO]/d[CO]
    J[359] += dqdci; // dwdot[CH2O]/d[CO]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[720] -= dqdci; // dwdot[H2]/d[H2O]
    J[722] -= dqdci; // dwdot[CO]/d[H2O]
    J[737] += dqdci; // dwdot[CH2O]/d[H2O]
    // d()/d[CH2O]
    dqdci = -k_r;
    J[972] -= dqdci; // dwdot[H2]/d[CH2O]
    J[974] -= dqdci; // dwdot[CO]/d[CH2O]
    J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[1056] -= dqdci; // dwdot[H2]/d[CO2]
    J[1058] -= dqdci; // dwdot[CO]/d[CO2]
    J[1073] += dqdci; // dwdot[CH2O]/d[CO2]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = 2 * dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 2 * dcdc_fac + k_f * sc[8];
    dqdc[7] = 3 * dcdc_fac;
    dqdc[8] = 1.5 * dcdc_fac + k_f * sc[6];
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = 6 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac - k_r;
    dqdc[24] = dcdc_fac;
    dqdc[25] = 2 * dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 6] -= dqdc[k];
      J[42 * k + 8] -= dqdc[k];
      J[42 * k + 23] += dqdc[k];
    }
  }
  J[1728] -= dqdT; // dwdot[H2]/dT
  J[1730] -= dqdT; // dwdot[CO]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT

  // reaction 43: H + HCO (+M) <=> CH2O (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[19] * sc[22];
  k_f = 1090000 * exp(0.48 * logT - (-130.836333109227) * invT);
  dlnkfdT = 0.48 * invT + (-130.836333109227) * invT2;
  // pressure-fall-off
  k_0 = 1.35e+24 * exp(-2.57 * logT - (717.083748771726) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -2.57 * invT + (717.083748771726) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.7824) * exp(-T / 271);
  Fcent2 = 0.7824 * exp(-T / 2755);
  Fcent3 = exp(-6570 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 271 - Fcent2 / 2755 + Fcent3 * 6570 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[23];
  Kc = refCinv * exp(g_RT[19] + g_RT[22] - g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[22]) + (h_RT[23]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[19] -= q; // H
  wdot[22] -= q; // HCO
  wdot[23] += q; // CH2O
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[103] -= dqdci; // dwdot[H]/d[CH4]
    J[106] -= dqdci; // dwdot[HCO]/d[CH4]
    J[107] += dqdci; // dwdot[CH2O]/d[CH4]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[274] -= dqdci; // dwdot[HCO]/d[H2]
    J[275] += dqdci; // dwdot[CH2O]/d[H2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[313] -= dqdci; // dwdot[H]/d[C2H6]
    J[316] -= dqdci; // dwdot[HCO]/d[C2H6]
    J[317] += dqdci; // dwdot[CH2O]/d[C2H6]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[355] -= dqdci; // dwdot[H]/d[CO]
    J[358] -= dqdci; // dwdot[HCO]/d[CO]
    J[359] += dqdci; // dwdot[CH2O]/d[CO]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[733] -= dqdci; // dwdot[H]/d[H2O]
    J[736] -= dqdci; // dwdot[HCO]/d[H2O]
    J[737] += dqdci; // dwdot[CH2O]/d[H2O]
    // d()/d[H]
    dqdci = +k_f * sc[22];
    J[817] -= dqdci; // dwdot[H]/d[H]
    J[820] -= dqdci; // dwdot[HCO]/d[H]
    J[821] += dqdci; // dwdot[CH2O]/d[H]
    // d()/d[HCO]
    dqdci = +k_f * sc[19];
    J[943] -= dqdci; // dwdot[H]/d[HCO]
    J[946] -= dqdci; // dwdot[HCO]/d[HCO]
    J[947] += dqdci; // dwdot[CH2O]/d[HCO]
    // d()/d[CH2O]
    dqdci = -k_r;
    J[985] -= dqdci; // dwdot[H]/d[CH2O]
    J[988] -= dqdci; // dwdot[HCO]/d[CH2O]
    J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[1069] -= dqdci; // dwdot[H]/d[CO2]
    J[1072] -= dqdci; // dwdot[HCO]/d[CO2]
    J[1073] += dqdci; // dwdot[CH2O]/d[CO2]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = 2 * dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = 3 * dcdc_fac;
    dqdc[8] = 1.5 * dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = 6 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac + k_f * sc[22];
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac + k_f * sc[19];
    dqdc[23] = dcdc_fac - k_r;
    dqdc[24] = dcdc_fac;
    dqdc[25] = 2 * dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 19] -= dqdc[k];
      J[42 * k + 22] -= dqdc[k];
      J[42 * k + 23] += dqdc[k];
    }
  }
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT

  // reaction 44: CH2 + H (+M) <=> CH3 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[19] * sc[20];
  k_f = 25000000000 * exp(-0.8 * logT);
  dlnkfdT = -0.8 * invT;
  // pressure-fall-off
  k_0 = 3.2e+27 * exp(-3.14 * logT - (618.956498939805) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -3.14 * invT + (618.956498939805) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.68) * exp(-T / 78);
  Fcent2 = 0.68 * exp(-T / 1995);
  Fcent3 = exp(-5590 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 78 - Fcent2 / 1995 + Fcent3 * 5590 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[12];
  Kc = refCinv * exp(-g_RT[12] + g_RT[19] + g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[20]) + (h_RT[12]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[12] += q; // CH3
  wdot[19] -= q; // H
  wdot[20] -= q; // CH2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[96] += dqdci;  // dwdot[CH3]/d[CH4]
    J[103] -= dqdci; // dwdot[H]/d[CH4]
    J[104] -= dqdci; // dwdot[CH2]/d[CH4]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[264] += dqdci; // dwdot[CH3]/d[H2]
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[272] -= dqdci; // dwdot[CH2]/d[H2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[306] += dqdci; // dwdot[CH3]/d[C2H6]
    J[313] -= dqdci; // dwdot[H]/d[C2H6]
    J[314] -= dqdci; // dwdot[CH2]/d[C2H6]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[348] += dqdci; // dwdot[CH3]/d[CO]
    J[355] -= dqdci; // dwdot[H]/d[CO]
    J[356] -= dqdci; // dwdot[CH2]/d[CO]
    // d()/d[CH3]
    dqdci = -k_r;
    J[516] += dqdci; // dwdot[CH3]/d[CH3]
    J[523] -= dqdci; // dwdot[H]/d[CH3]
    J[524] -= dqdci; // dwdot[CH2]/d[CH3]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[726] += dqdci; // dwdot[CH3]/d[H2O]
    J[733] -= dqdci; // dwdot[H]/d[H2O]
    J[734] -= dqdci; // dwdot[CH2]/d[H2O]
    // d()/d[H]
    dqdci = +k_f * sc[20];
    J[810] += dqdci; // dwdot[CH3]/d[H]
    J[817] -= dqdci; // dwdot[H]/d[H]
    J[818] -= dqdci; // dwdot[CH2]/d[H]
    // d()/d[CH2]
    dqdci = +k_f * sc[19];
    J[852] += dqdci; // dwdot[CH3]/d[CH2]
    J[859] -= dqdci; // dwdot[H]/d[CH2]
    J[860] -= dqdci; // dwdot[CH2]/d[CH2]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[1062] += dqdci; // dwdot[CH3]/d[CO2]
    J[1069] -= dqdci; // dwdot[H]/d[CO2]
    J[1070] -= dqdci; // dwdot[CH2]/d[CO2]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = 2 * dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = 3 * dcdc_fac;
    dqdc[8] = 1.5 * dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac - k_r;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = 6 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac + k_f * sc[20];
    dqdc[20] = dcdc_fac + k_f * sc[19];
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = 2 * dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 12] += dqdc[k];
      J[42 * k + 19] -= dqdc[k];
      J[42 * k + 20] -= dqdc[k];
    }
  }
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1742] -= dqdT; // dwdot[CH2]/dT

  // reaction 50: CH2 + CO (+M) <=> CH2CO (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[8] * sc[20];
  k_f = 810000 * exp(0.5 * logT - (2269.50716277929) * invT);
  dlnkfdT = 0.5 * invT + (2269.50716277929) * invT2;
  // pressure-fall-off
  k_0 = 2.69e+33 * exp(-5.11 * logT - (3570.32224388449) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -5.11 * invT + (3570.32224388449) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.5907) * exp(-T / 275);
  Fcent2 = 0.5907 * exp(-T / 1226);
  Fcent3 = exp(-5185 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 275 - Fcent2 / 1226 + Fcent3 * 5185 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[29];
  Kc = refCinv * exp(g_RT[8] + g_RT[20] - g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[20]) + (h_RT[29]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[8] -= q;  // CO
  wdot[20] -= q; // CH2
  wdot[29] += q; // CH2CO
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[92] -= dqdci;  // dwdot[CO]/d[CH4]
    J[104] -= dqdci; // dwdot[CH2]/d[CH4]
    J[113] += dqdci; // dwdot[CH2CO]/d[CH4]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[260] -= dqdci; // dwdot[CO]/d[H2]
    J[272] -= dqdci; // dwdot[CH2]/d[H2]
    J[281] += dqdci; // dwdot[CH2CO]/d[H2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[302] -= dqdci; // dwdot[CO]/d[C2H6]
    J[314] -= dqdci; // dwdot[CH2]/d[C2H6]
    J[323] += dqdci; // dwdot[CH2CO]/d[C2H6]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac + k_f * sc[20];
    J[344] -= dqdci; // dwdot[CO]/d[CO]
    J[356] -= dqdci; // dwdot[CH2]/d[CO]
    J[365] += dqdci; // dwdot[CH2CO]/d[CO]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[722] -= dqdci; // dwdot[CO]/d[H2O]
    J[734] -= dqdci; // dwdot[CH2]/d[H2O]
    J[743] += dqdci; // dwdot[CH2CO]/d[H2O]
    // d()/d[CH2]
    dqdci = +k_f * sc[8];
    J[848] -= dqdci; // dwdot[CO]/d[CH2]
    J[860] -= dqdci; // dwdot[CH2]/d[CH2]
    J[869] += dqdci; // dwdot[CH2CO]/d[CH2]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[1058] -= dqdci; // dwdot[CO]/d[CO2]
    J[1070] -= dqdci; // dwdot[CH2]/d[CO2]
    J[1079] += dqdci; // dwdot[CH2CO]/d[CO2]
    // d()/d[CH2CO]
    dqdci = -k_r;
    J[1226] -= dqdci; // dwdot[CO]/d[CH2CO]
    J[1238] -= dqdci; // dwdot[CH2]/d[CH2CO]
    J[1247] += dqdci; // dwdot[CH2CO]/d[CH2CO]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = 2 * dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = 3 * dcdc_fac;
    dqdc[8] = 1.5 * dcdc_fac + k_f * sc[20];
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = 6 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac + k_f * sc[8];
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = 2 * dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac - k_r;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 8] -= dqdc[k];
      J[42 * k + 20] -= dqdc[k];
      J[42 * k + 29] += dqdc[k];
    }
  }
  J[1730] -= dqdT; // dwdot[CO]/dT
  J[1742] -= dqdT; // dwdot[CH2]/dT
  J[1751] += dqdT; // dwdot[CH2CO]/dT

  // reaction 61: CH2O + H (+M) <=> CH3O (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[19] * sc[23];
  k_f = 540000 * exp(0.454 * logT - (1308.36333109227) * invT);
  dlnkfdT = 0.454 * invT + (1308.36333109227) * invT2;
  // pressure-fall-off
  k_0 = 2.2e+30 * exp(-4.8 * logT - (2797.88466187424) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -4.8 * invT + (2797.88466187424) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.758) * exp(-T / 94);
  Fcent2 = 0.758 * exp(-T / 1555);
  Fcent3 = exp(-4200 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 94 - Fcent2 / 1555 + Fcent3 * 4200 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[24];
  Kc = refCinv * exp(g_RT[19] + g_RT[23] - g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[23]) + (h_RT[24]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[19] -= q; // H
  wdot[23] -= q; // CH2O
  wdot[24] += q; // CH3O
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[103] -= dqdci; // dwdot[H]/d[CH4]
    J[107] -= dqdci; // dwdot[CH2O]/d[CH4]
    J[108] += dqdci; // dwdot[CH3O]/d[CH4]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[275] -= dqdci; // dwdot[CH2O]/d[H2]
    J[276] += dqdci; // dwdot[CH3O]/d[H2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[313] -= dqdci; // dwdot[H]/d[C2H6]
    J[317] -= dqdci; // dwdot[CH2O]/d[C2H6]
    J[318] += dqdci; // dwdot[CH3O]/d[C2H6]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[355] -= dqdci; // dwdot[H]/d[CO]
    J[359] -= dqdci; // dwdot[CH2O]/d[CO]
    J[360] += dqdci; // dwdot[CH3O]/d[CO]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[733] -= dqdci; // dwdot[H]/d[H2O]
    J[737] -= dqdci; // dwdot[CH2O]/d[H2O]
    J[738] += dqdci; // dwdot[CH3O]/d[H2O]
    // d()/d[H]
    dqdci = +k_f * sc[23];
    J[817] -= dqdci; // dwdot[H]/d[H]
    J[821] -= dqdci; // dwdot[CH2O]/d[H]
    J[822] += dqdci; // dwdot[CH3O]/d[H]
    // d()/d[CH2O]
    dqdci = +k_f * sc[19];
    J[985] -= dqdci; // dwdot[H]/d[CH2O]
    J[989] -= dqdci; // dwdot[CH2O]/d[CH2O]
    J[990] += dqdci; // dwdot[CH3O]/d[CH2O]
    // d()/d[CH3O]
    dqdci = -k_r;
    J[1027] -= dqdci; // dwdot[H]/d[CH3O]
    J[1031] -= dqdci; // dwdot[CH2O]/d[CH3O]
    J[1032] += dqdci; // dwdot[CH3O]/d[CH3O]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[1069] -= dqdci; // dwdot[H]/d[CO2]
    J[1073] -= dqdci; // dwdot[CH2O]/d[CO2]
    J[1074] += dqdci; // dwdot[CH3O]/d[CO2]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = 2 * dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = 3 * dcdc_fac;
    dqdc[8] = 1.5 * dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = 6 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac + k_f * sc[23];
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac + k_f * sc[19];
    dqdc[24] = dcdc_fac - k_r;
    dqdc[25] = 2 * dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 19] -= dqdc[k];
      J[42 * k + 23] -= dqdc[k];
      J[42 * k + 24] += dqdc[k];
    }
  }
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1745] -= dqdT; // dwdot[CH2O]/dT
  J[1746] += dqdT; // dwdot[CH3O]/dT

  // reaction 67: CH3 + H (+M) <=> CH4 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[12] * sc[19];
  k_f = 12700000000 * exp(-0.63 * logT - (192.731983003208) * invT);
  dlnkfdT = -0.63 * invT + (192.731983003208) * invT2;
  // pressure-fall-off
  k_0 = 2.477e+33 * exp(-4.76 * logT - (1227.84866456352) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -4.76 * invT + (1227.84866456352) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.783) * exp(-T / 74);
  Fcent2 = 0.783 * exp(-T / 2941);
  Fcent3 = exp(-6964 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 74 - Fcent2 / 2941 + Fcent3 * 6964 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[2];
  Kc = refCinv * exp(-g_RT[2] + g_RT[12] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[19]) + (h_RT[2]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[2] += q;  // CH4
  wdot[12] -= q; // CH3
  wdot[19] -= q; // H
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac - k_r;
    J[86] += dqdci;  // dwdot[CH4]/d[CH4]
    J[96] -= dqdci;  // dwdot[CH3]/d[CH4]
    J[103] -= dqdci; // dwdot[H]/d[CH4]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[254] += dqdci; // dwdot[CH4]/d[H2]
    J[264] -= dqdci; // dwdot[CH3]/d[H2]
    J[271] -= dqdci; // dwdot[H]/d[H2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[296] += dqdci; // dwdot[CH4]/d[C2H6]
    J[306] -= dqdci; // dwdot[CH3]/d[C2H6]
    J[313] -= dqdci; // dwdot[H]/d[C2H6]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[338] += dqdci; // dwdot[CH4]/d[CO]
    J[348] -= dqdci; // dwdot[CH3]/d[CO]
    J[355] -= dqdci; // dwdot[H]/d[CO]
    // d()/d[CH3]
    dqdci = +k_f * sc[19];
    J[506] += dqdci; // dwdot[CH4]/d[CH3]
    J[516] -= dqdci; // dwdot[CH3]/d[CH3]
    J[523] -= dqdci; // dwdot[H]/d[CH3]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[716] += dqdci; // dwdot[CH4]/d[H2O]
    J[726] -= dqdci; // dwdot[CH3]/d[H2O]
    J[733] -= dqdci; // dwdot[H]/d[H2O]
    // d()/d[H]
    dqdci = +k_f * sc[12];
    J[800] += dqdci; // dwdot[CH4]/d[H]
    J[810] -= dqdci; // dwdot[CH3]/d[H]
    J[817] -= dqdci; // dwdot[H]/d[H]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[1052] += dqdci; // dwdot[CH4]/d[CO2]
    J[1062] -= dqdci; // dwdot[CH3]/d[CO2]
    J[1069] -= dqdci; // dwdot[H]/d[CO2]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = 2 * dcdc_fac - k_r;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = 3 * dcdc_fac;
    dqdc[8] = 1.5 * dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac + k_f * sc[19];
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = 6 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac + k_f * sc[12];
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = 2 * dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 2] += dqdc[k];
      J[42 * k + 12] -= dqdc[k];
      J[42 * k + 19] -= dqdc[k];
    }
  }
  J[1724] += dqdT; // dwdot[CH4]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 79: 2 CH3 (+M) <=> C2H6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = (sc[12] * sc[12]);
  k_f = 21200000000 * exp(-0.97 * logT - (311.994332798926) * invT);
  dlnkfdT = -0.97 * invT + (311.994332798926) * invT2;
  // pressure-fall-off
  k_0 = 1.77e+50 * exp(-9.67 * logT - (3130.00766130536) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -9.67 * invT + (3130.00766130536) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.5325) * exp(-T / 151);
  Fcent2 = 0.5325 * exp(-T / 1038);
  Fcent3 = exp(-4970 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 151 - Fcent2 / 1038 + Fcent3 * 4970 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[7];
  Kc = refCinv * exp(-g_RT[7] + 2.000000 * g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[12]) + (h_RT[7]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[7] += q;      // C2H6
  wdot[12] -= 2 * q; // CH3
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[91] += dqdci;      // dwdot[C2H6]/d[CH4]
    J[96] += -2 * dqdci; // dwdot[CH3]/d[CH4]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[259] += dqdci;      // dwdot[C2H6]/d[H2]
    J[264] += -2 * dqdci; // dwdot[CH3]/d[H2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac - k_r;
    J[301] += dqdci;      // dwdot[C2H6]/d[C2H6]
    J[306] += -2 * dqdci; // dwdot[CH3]/d[C2H6]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[343] += dqdci;      // dwdot[C2H6]/d[CO]
    J[348] += -2 * dqdci; // dwdot[CH3]/d[CO]
    // d()/d[CH3]
    dqdci = +k_f * 2.000000 * sc[12];
    J[511] += dqdci;      // dwdot[C2H6]/d[CH3]
    J[516] += -2 * dqdci; // dwdot[CH3]/d[CH3]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[721] += dqdci;      // dwdot[C2H6]/d[H2O]
    J[726] += -2 * dqdci; // dwdot[CH3]/d[H2O]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[1057] += dqdci;      // dwdot[C2H6]/d[CO2]
    J[1062] += -2 * dqdci; // dwdot[CH3]/d[CO2]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = 2 * dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = 3 * dcdc_fac - k_r;
    dqdc[8] = 1.5 * dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac + k_f * 2.000000 * sc[12];
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = 6 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = 2 * dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 7] += dqdc[k];
      J[42 * k + 12] += -2 * dqdc[k];
    }
  }
  J[1729] += dqdT;      // dwdot[C2H6]/dT
  J[1734] += -2 * dqdT; // dwdot[CH3]/dT

  // reaction 95: C2H3 (+M) <=> C2H2 + H (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (3 - 1) * sc[1] + sc[2] + sc[6] + (3 - 1) * sc[7] +
          (1.5 - 1) * sc[8] + (3 - 1) * sc[10] + (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[26];
  k_f = 386000000 * exp(1.62 * logT - (18643.2716780664) * invT);
  dlnkfdT = 1.62 * invT + (18643.2716780664) * invT2;
  // pressure-fall-off
  k_0 = 2.565e+27 * exp(-3.4 * logT - (18014.5125184767) * invT);
  Pr = 1e-6 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -3.4 * invT + (18014.5125184767) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1.9816) * exp(-T / 5383.7);
  Fcent2 = 1.9816 * exp(-T / 4.2932);
  Fcent3 = exp(0.0795 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 5383.7 - Fcent2 / 4.2932 + Fcent3 * -0.0795 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[10] * sc[19];
  Kc = refC * exp(-g_RT[10] - g_RT[19] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[26]) + (h_RT[10] + h_RT[19]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[10] += q; // C2H2
  wdot[19] += q; // H
  wdot[26] -= q; // C2H3
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[C2H4]
    dqdci = (3 - 1) * dcdc_fac;
    J[52] += dqdci; // dwdot[C2H2]/d[C2H4]
    J[61] += dqdci; // dwdot[H]/d[C2H4]
    J[68] -= dqdci; // dwdot[C2H3]/d[C2H4]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[94] += dqdci;  // dwdot[C2H2]/d[CH4]
    J[103] += dqdci; // dwdot[H]/d[CH4]
    J[110] -= dqdci; // dwdot[C2H3]/d[CH4]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[262] += dqdci; // dwdot[C2H2]/d[H2]
    J[271] += dqdci; // dwdot[H]/d[H2]
    J[278] -= dqdci; // dwdot[C2H3]/d[H2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[304] += dqdci; // dwdot[C2H2]/d[C2H6]
    J[313] += dqdci; // dwdot[H]/d[C2H6]
    J[320] -= dqdci; // dwdot[C2H3]/d[C2H6]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[346] += dqdci; // dwdot[C2H2]/d[CO]
    J[355] += dqdci; // dwdot[H]/d[CO]
    J[362] -= dqdci; // dwdot[C2H3]/d[CO]
    // d()/d[C2H2]
    dqdci = (3 - 1) * dcdc_fac - k_r * sc[19];
    J[430] += dqdci; // dwdot[C2H2]/d[C2H2]
    J[439] += dqdci; // dwdot[H]/d[C2H2]
    J[446] -= dqdci; // dwdot[C2H3]/d[C2H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[724] += dqdci; // dwdot[C2H2]/d[H2O]
    J[733] += dqdci; // dwdot[H]/d[H2O]
    J[740] -= dqdci; // dwdot[C2H3]/d[H2O]
    // d()/d[H]
    dqdci = -k_r * sc[10];
    J[808] += dqdci; // dwdot[C2H2]/d[H]
    J[817] += dqdci; // dwdot[H]/d[H]
    J[824] -= dqdci; // dwdot[C2H3]/d[H]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[1060] += dqdci; // dwdot[C2H2]/d[CO2]
    J[1069] += dqdci; // dwdot[H]/d[CO2]
    J[1076] -= dqdci; // dwdot[C2H3]/d[CO2]
    // d()/d[C2H3]
    dqdci = +k_f;
    J[1102] += dqdci; // dwdot[C2H2]/d[C2H3]
    J[1111] += dqdci; // dwdot[H]/d[C2H3]
    J[1118] -= dqdci; // dwdot[C2H3]/d[C2H3]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = 3 * dcdc_fac;
    dqdc[2] = 2 * dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = 3 * dcdc_fac;
    dqdc[8] = 1.5 * dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = 3 * dcdc_fac - k_r * sc[19];
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = 6 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac - k_r * sc[10];
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = 2 * dcdc_fac;
    dqdc[26] = dcdc_fac + k_f;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 10] += dqdc[k];
      J[42 * k + 19] += dqdc[k];
      J[42 * k + 26] -= dqdc[k];
    }
  }
  J[1732] += dqdT; // dwdot[C2H2]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT

  // reaction 104: CH2CO + H (+M) <=> CH2CHO (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (3 - 1) * sc[1] + sc[2] + sc[6] + (3 - 1) * sc[7] +
          (1.5 - 1) * sc[8] + (3 - 1) * sc[10] + (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[19] * sc[29];
  k_f = 330000000 * exp(-0.06 * logT - (4277.34165934012) * invT);
  dlnkfdT = -0.06 * invT + (4277.34165934012) * invT2;
  // pressure-fall-off
  k_0 = 3.8e+41 * exp(-7.64 * logT - (5988.27832307616) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -7.64 * invT + (5988.27832307616) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.337) * exp(-T / 1707);
  Fcent2 = 0.337 * exp(-T / 3200);
  Fcent3 = exp(-4131 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1707 - Fcent2 / 3200 + Fcent3 * 4131 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[30];
  Kc = refCinv * exp(g_RT[19] + g_RT[29] - g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[29]) + (h_RT[30]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[19] -= q; // H
  wdot[29] -= q; // CH2CO
  wdot[30] += q; // CH2CHO
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[C2H4]
    dqdci = (3 - 1) * dcdc_fac;
    J[61] -= dqdci; // dwdot[H]/d[C2H4]
    J[71] -= dqdci; // dwdot[CH2CO]/d[C2H4]
    J[72] += dqdci; // dwdot[CH2CHO]/d[C2H4]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[103] -= dqdci; // dwdot[H]/d[CH4]
    J[113] -= dqdci; // dwdot[CH2CO]/d[CH4]
    J[114] += dqdci; // dwdot[CH2CHO]/d[CH4]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[281] -= dqdci; // dwdot[CH2CO]/d[H2]
    J[282] += dqdci; // dwdot[CH2CHO]/d[H2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[313] -= dqdci; // dwdot[H]/d[C2H6]
    J[323] -= dqdci; // dwdot[CH2CO]/d[C2H6]
    J[324] += dqdci; // dwdot[CH2CHO]/d[C2H6]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[355] -= dqdci; // dwdot[H]/d[CO]
    J[365] -= dqdci; // dwdot[CH2CO]/d[CO]
    J[366] += dqdci; // dwdot[CH2CHO]/d[CO]
    // d()/d[C2H2]
    dqdci = (3 - 1) * dcdc_fac;
    J[439] -= dqdci; // dwdot[H]/d[C2H2]
    J[449] -= dqdci; // dwdot[CH2CO]/d[C2H2]
    J[450] += dqdci; // dwdot[CH2CHO]/d[C2H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[733] -= dqdci; // dwdot[H]/d[H2O]
    J[743] -= dqdci; // dwdot[CH2CO]/d[H2O]
    J[744] += dqdci; // dwdot[CH2CHO]/d[H2O]
    // d()/d[H]
    dqdci = +k_f * sc[29];
    J[817] -= dqdci; // dwdot[H]/d[H]
    J[827] -= dqdci; // dwdot[CH2CO]/d[H]
    J[828] += dqdci; // dwdot[CH2CHO]/d[H]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[1069] -= dqdci; // dwdot[H]/d[CO2]
    J[1079] -= dqdci; // dwdot[CH2CO]/d[CO2]
    J[1080] += dqdci; // dwdot[CH2CHO]/d[CO2]
    // d()/d[CH2CO]
    dqdci = +k_f * sc[19];
    J[1237] -= dqdci; // dwdot[H]/d[CH2CO]
    J[1247] -= dqdci; // dwdot[CH2CO]/d[CH2CO]
    J[1248] += dqdci; // dwdot[CH2CHO]/d[CH2CO]
    // d()/d[CH2CHO]
    dqdci = -k_r;
    J[1279] -= dqdci; // dwdot[H]/d[CH2CHO]
    J[1289] -= dqdci; // dwdot[CH2CO]/d[CH2CHO]
    J[1290] += dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = 3 * dcdc_fac;
    dqdc[2] = 2 * dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = 3 * dcdc_fac;
    dqdc[8] = 1.5 * dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = 3 * dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = 6 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac + k_f * sc[29];
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = 2 * dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac + k_f * sc[19];
    dqdc[30] = dcdc_fac - k_r;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 19] -= dqdc[k];
      J[42 * k + 29] -= dqdc[k];
      J[42 * k + 30] += dqdc[k];
    }
  }
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1751] -= dqdT; // dwdot[CH2CO]/dT
  J[1752] += dqdT; // dwdot[CH2CHO]/dT

  // reaction 110: C2H3 + H (+M) <=> C2H4 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (3 - 1) * sc[1] + sc[2] + sc[6] + (3 - 1) * sc[7] +
          (1.5 - 1) * sc[8] + (3 - 1) * sc[10] + (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[19] * sc[26];
  k_f = 6080000 * exp(0.27 * logT - (140.900666425322) * invT);
  dlnkfdT = 0.27 * invT + (140.900666425322) * invT2;
  // pressure-fall-off
  k_0 = 1.4e+30 * exp(-3.86 * logT - (1670.67933047167) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -3.86 * invT + (1670.67933047167) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.782) * exp(-T / 207.5);
  Fcent2 = 0.782 * exp(-T / 2663);
  Fcent3 = exp(-6095 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 207.5 - Fcent2 / 2663 + Fcent3 * 6095 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[1];
  Kc = refCinv * exp(-g_RT[1] + g_RT[19] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[26]) + (h_RT[1]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] += q;  // C2H4
  wdot[19] -= q; // H
  wdot[26] -= q; // C2H3
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[C2H4]
    dqdci = (3 - 1) * dcdc_fac - k_r;
    J[43] += dqdci; // dwdot[C2H4]/d[C2H4]
    J[61] -= dqdci; // dwdot[H]/d[C2H4]
    J[68] -= dqdci; // dwdot[C2H3]/d[C2H4]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[85] += dqdci;  // dwdot[C2H4]/d[CH4]
    J[103] -= dqdci; // dwdot[H]/d[CH4]
    J[110] -= dqdci; // dwdot[C2H3]/d[CH4]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[253] += dqdci; // dwdot[C2H4]/d[H2]
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[278] -= dqdci; // dwdot[C2H3]/d[H2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[295] += dqdci; // dwdot[C2H4]/d[C2H6]
    J[313] -= dqdci; // dwdot[H]/d[C2H6]
    J[320] -= dqdci; // dwdot[C2H3]/d[C2H6]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[337] += dqdci; // dwdot[C2H4]/d[CO]
    J[355] -= dqdci; // dwdot[H]/d[CO]
    J[362] -= dqdci; // dwdot[C2H3]/d[CO]
    // d()/d[C2H2]
    dqdci = (3 - 1) * dcdc_fac;
    J[421] += dqdci; // dwdot[C2H4]/d[C2H2]
    J[439] -= dqdci; // dwdot[H]/d[C2H2]
    J[446] -= dqdci; // dwdot[C2H3]/d[C2H2]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[715] += dqdci; // dwdot[C2H4]/d[H2O]
    J[733] -= dqdci; // dwdot[H]/d[H2O]
    J[740] -= dqdci; // dwdot[C2H3]/d[H2O]
    // d()/d[H]
    dqdci = +k_f * sc[26];
    J[799] += dqdci; // dwdot[C2H4]/d[H]
    J[817] -= dqdci; // dwdot[H]/d[H]
    J[824] -= dqdci; // dwdot[C2H3]/d[H]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[1051] += dqdci; // dwdot[C2H4]/d[CO2]
    J[1069] -= dqdci; // dwdot[H]/d[CO2]
    J[1076] -= dqdci; // dwdot[C2H3]/d[CO2]
    // d()/d[C2H3]
    dqdci = +k_f * sc[19];
    J[1093] += dqdci; // dwdot[C2H4]/d[C2H3]
    J[1111] -= dqdci; // dwdot[H]/d[C2H3]
    J[1118] -= dqdci; // dwdot[C2H3]/d[C2H3]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = 3 * dcdc_fac - k_r;
    dqdc[2] = 2 * dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = 3 * dcdc_fac;
    dqdc[8] = 1.5 * dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = 3 * dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = 6 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac + k_f * sc[26];
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = 2 * dcdc_fac;
    dqdc[26] = dcdc_fac + k_f * sc[19];
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 1] += dqdc[k];
      J[42 * k + 19] -= dqdc[k];
      J[42 * k + 26] -= dqdc[k];
    }
  }
  J[1723] += dqdT; // dwdot[C2H4]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT

  // reaction 118: C2H3 + CH3 (+M) <=> C3H6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (3 - 1) * sc[1] + sc[2] + sc[6] + (3 - 1) * sc[7] +
          (1.5 - 1) * sc[8] + (3 - 1) * sc[10] + (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[12] * sc[26];
  k_f = 25000000;
  dlnkfdT = 0.0;
  // pressure-fall-off
  k_0 = 4.27e+58 * exp(-11.94 * logT - (4916.32618157895) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -11.94 * invT + (4916.32618157895) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.175) * exp(-T / 1340.6);
  Fcent2 = 0.175 * exp(-T / 60000);
  Fcent3 = exp(-10139.8 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 1340.6 - Fcent2 / 60000 + Fcent3 * 10139.8 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[3];
  Kc = refCinv * exp(-g_RT[3] + g_RT[12] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[26]) + (h_RT[3]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[3] += q;  // C3H6
  wdot[12] -= q; // CH3
  wdot[26] -= q; // C2H3
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[C2H4]
    dqdci = (3 - 1) * dcdc_fac;
    J[45] += dqdci; // dwdot[C3H6]/d[C2H4]
    J[54] -= dqdci; // dwdot[CH3]/d[C2H4]
    J[68] -= dqdci; // dwdot[C2H3]/d[C2H4]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[87] += dqdci;  // dwdot[C3H6]/d[CH4]
    J[96] -= dqdci;  // dwdot[CH3]/d[CH4]
    J[110] -= dqdci; // dwdot[C2H3]/d[CH4]
    // d()/d[C3H6]
    dqdci = -k_r;
    J[129] += dqdci; // dwdot[C3H6]/d[C3H6]
    J[138] -= dqdci; // dwdot[CH3]/d[C3H6]
    J[152] -= dqdci; // dwdot[C2H3]/d[C3H6]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[255] += dqdci; // dwdot[C3H6]/d[H2]
    J[264] -= dqdci; // dwdot[CH3]/d[H2]
    J[278] -= dqdci; // dwdot[C2H3]/d[H2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[297] += dqdci; // dwdot[C3H6]/d[C2H6]
    J[306] -= dqdci; // dwdot[CH3]/d[C2H6]
    J[320] -= dqdci; // dwdot[C2H3]/d[C2H6]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[339] += dqdci; // dwdot[C3H6]/d[CO]
    J[348] -= dqdci; // dwdot[CH3]/d[CO]
    J[362] -= dqdci; // dwdot[C2H3]/d[CO]
    // d()/d[C2H2]
    dqdci = (3 - 1) * dcdc_fac;
    J[423] += dqdci; // dwdot[C3H6]/d[C2H2]
    J[432] -= dqdci; // dwdot[CH3]/d[C2H2]
    J[446] -= dqdci; // dwdot[C2H3]/d[C2H2]
    // d()/d[CH3]
    dqdci = +k_f * sc[26];
    J[507] += dqdci; // dwdot[C3H6]/d[CH3]
    J[516] -= dqdci; // dwdot[CH3]/d[CH3]
    J[530] -= dqdci; // dwdot[C2H3]/d[CH3]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[717] += dqdci; // dwdot[C3H6]/d[H2O]
    J[726] -= dqdci; // dwdot[CH3]/d[H2O]
    J[740] -= dqdci; // dwdot[C2H3]/d[H2O]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[1053] += dqdci; // dwdot[C3H6]/d[CO2]
    J[1062] -= dqdci; // dwdot[CH3]/d[CO2]
    J[1076] -= dqdci; // dwdot[C2H3]/d[CO2]
    // d()/d[C2H3]
    dqdci = +k_f * sc[12];
    J[1095] += dqdci; // dwdot[C3H6]/d[C2H3]
    J[1104] -= dqdci; // dwdot[CH3]/d[C2H3]
    J[1118] -= dqdci; // dwdot[C2H3]/d[C2H3]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = 3 * dcdc_fac;
    dqdc[2] = 2 * dcdc_fac;
    dqdc[3] = dcdc_fac - k_r;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = 3 * dcdc_fac;
    dqdc[8] = 1.5 * dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = 3 * dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac + k_f * sc[26];
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = 6 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = 2 * dcdc_fac;
    dqdc[26] = dcdc_fac + k_f * sc[12];
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 3] += dqdc[k];
      J[42 * k + 12] -= dqdc[k];
      J[42 * k + 26] -= dqdc[k];
    }
  }
  J[1725] += dqdT; // dwdot[C3H6]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT

  // reaction 126: C2H4 + H (+M) <=> C2H5 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[1] * sc[19];
  k_f = 1370 * exp(1.463 * logT - (681.858582165395) * invT);
  dlnkfdT = 1.463 * invT + (681.858582165395) * invT2;
  // pressure-fall-off
  k_0 = 2.9e+39 * exp(-6.642 * logT - (2903.05694502743) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.642 * invT + (2903.05694502743) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1.569) * exp(-T / -9147);
  Fcent2 = 1.569 * exp(-T / 299);
  Fcent3 = exp(-152.4 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / -9147 - Fcent2 / 299 + Fcent3 * 152.4 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[27];
  Kc = refCinv * exp(g_RT[1] + g_RT[19] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[19]) + (h_RT[27]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // C2H4
  wdot[19] -= q; // H
  wdot[27] += q; // C2H5
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[C2H4]
    dqdci = +k_f * sc[19];
    J[43] -= dqdci; // dwdot[C2H4]/d[C2H4]
    J[61] -= dqdci; // dwdot[H]/d[C2H4]
    J[69] += dqdci; // dwdot[C2H5]/d[C2H4]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[85] -= dqdci;  // dwdot[C2H4]/d[CH4]
    J[103] -= dqdci; // dwdot[H]/d[CH4]
    J[111] += dqdci; // dwdot[C2H5]/d[CH4]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[253] -= dqdci; // dwdot[C2H4]/d[H2]
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[279] += dqdci; // dwdot[C2H5]/d[H2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[295] -= dqdci; // dwdot[C2H4]/d[C2H6]
    J[313] -= dqdci; // dwdot[H]/d[C2H6]
    J[321] += dqdci; // dwdot[C2H5]/d[C2H6]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[337] -= dqdci; // dwdot[C2H4]/d[CO]
    J[355] -= dqdci; // dwdot[H]/d[CO]
    J[363] += dqdci; // dwdot[C2H5]/d[CO]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[715] -= dqdci; // dwdot[C2H4]/d[H2O]
    J[733] -= dqdci; // dwdot[H]/d[H2O]
    J[741] += dqdci; // dwdot[C2H5]/d[H2O]
    // d()/d[H]
    dqdci = +k_f * sc[1];
    J[799] -= dqdci; // dwdot[C2H4]/d[H]
    J[817] -= dqdci; // dwdot[H]/d[H]
    J[825] += dqdci; // dwdot[C2H5]/d[H]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[1051] -= dqdci; // dwdot[C2H4]/d[CO2]
    J[1069] -= dqdci; // dwdot[H]/d[CO2]
    J[1077] += dqdci; // dwdot[C2H5]/d[CO2]
    // d()/d[C2H5]
    dqdci = -k_r;
    J[1135] -= dqdci; // dwdot[C2H4]/d[C2H5]
    J[1153] -= dqdci; // dwdot[H]/d[C2H5]
    J[1161] += dqdci; // dwdot[C2H5]/d[C2H5]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac + k_f * sc[19];
    dqdc[2] = 2 * dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = 3 * dcdc_fac;
    dqdc[8] = 1.5 * dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = 6 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac + k_f * sc[1];
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = 2 * dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac - k_r;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 1] -= dqdc[k];
      J[42 * k + 19] -= dqdc[k];
      J[42 * k + 27] += dqdc[k];
    }
  }
  J[1723] -= dqdT; // dwdot[C2H4]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1749] += dqdT; // dwdot[C2H5]/dT

  // reaction 137: C2H5 + H (+M) <=> C2H6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[19] * sc[27];
  k_f = 521000000000 * exp(-0.99 * logT - (795.082331971457) * invT);
  dlnkfdT = -0.99 * invT + (795.082331971457) * invT2;
  // pressure-fall-off
  k_0 = 1.99e+41 * exp(-7.08 * logT - (3364.00341090455) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -7.08 * invT + (3364.00341090455) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.8422) * exp(-T / 125);
  Fcent2 = 0.8422 * exp(-T / 2219);
  Fcent3 = exp(-6882 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 125 - Fcent2 / 2219 + Fcent3 * 6882 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[7];
  Kc = refCinv * exp(-g_RT[7] + g_RT[19] + g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[27]) + (h_RT[7]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[7] += q;  // C2H6
  wdot[19] -= q; // H
  wdot[27] -= q; // C2H5
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[91] += dqdci;  // dwdot[C2H6]/d[CH4]
    J[103] -= dqdci; // dwdot[H]/d[CH4]
    J[111] -= dqdci; // dwdot[C2H5]/d[CH4]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[259] += dqdci; // dwdot[C2H6]/d[H2]
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[279] -= dqdci; // dwdot[C2H5]/d[H2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac - k_r;
    J[301] += dqdci; // dwdot[C2H6]/d[C2H6]
    J[313] -= dqdci; // dwdot[H]/d[C2H6]
    J[321] -= dqdci; // dwdot[C2H5]/d[C2H6]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[343] += dqdci; // dwdot[C2H6]/d[CO]
    J[355] -= dqdci; // dwdot[H]/d[CO]
    J[363] -= dqdci; // dwdot[C2H5]/d[CO]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[721] += dqdci; // dwdot[C2H6]/d[H2O]
    J[733] -= dqdci; // dwdot[H]/d[H2O]
    J[741] -= dqdci; // dwdot[C2H5]/d[H2O]
    // d()/d[H]
    dqdci = +k_f * sc[27];
    J[805] += dqdci; // dwdot[C2H6]/d[H]
    J[817] -= dqdci; // dwdot[H]/d[H]
    J[825] -= dqdci; // dwdot[C2H5]/d[H]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[1057] += dqdci; // dwdot[C2H6]/d[CO2]
    J[1069] -= dqdci; // dwdot[H]/d[CO2]
    J[1077] -= dqdci; // dwdot[C2H5]/d[CO2]
    // d()/d[C2H5]
    dqdci = +k_f * sc[19];
    J[1141] += dqdci; // dwdot[C2H6]/d[C2H5]
    J[1153] -= dqdci; // dwdot[H]/d[C2H5]
    J[1161] -= dqdci; // dwdot[C2H5]/d[C2H5]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = 2 * dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = 3 * dcdc_fac - k_r;
    dqdc[8] = 1.5 * dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = 6 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac + k_f * sc[27];
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = 2 * dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac + k_f * sc[19];
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 7] += dqdc[k];
      J[42 * k + 19] -= dqdc[k];
      J[42 * k + 27] -= dqdc[k];
    }
  }
  J[1729] += dqdT; // dwdot[C2H6]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1749] -= dqdT; // dwdot[C2H5]/dT

  // reaction 141: C2H3 + C2H5 (+M) <=> C4H81 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[26] * sc[27];
  k_f = 15000000;
  dlnkfdT = 0.0;
  // pressure-fall-off
  k_0 = 1.55e+56 * exp(-11.79 * logT - (4521.1501339225) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -11.79 * invT + (4521.1501339225) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.198) * exp(-T / 2277.9);
  Fcent2 = 0.198 * exp(-T / 60000);
  Fcent3 = exp(-5723.2 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 2277.9 - Fcent2 / 60000 + Fcent3 * 5723.2 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[5];
  Kc = refCinv * exp(-g_RT[5] + g_RT[26] + g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[26] + h_RT[27]) + (h_RT[5]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[5] += q;  // C4H81
  wdot[26] -= q; // C2H3
  wdot[27] -= q; // C2H5
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[89] += dqdci;  // dwdot[C4H81]/d[CH4]
    J[110] -= dqdci; // dwdot[C2H3]/d[CH4]
    J[111] -= dqdci; // dwdot[C2H5]/d[CH4]
    // d()/d[C4H81]
    dqdci = -k_r;
    J[215] += dqdci; // dwdot[C4H81]/d[C4H81]
    J[236] -= dqdci; // dwdot[C2H3]/d[C4H81]
    J[237] -= dqdci; // dwdot[C2H5]/d[C4H81]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[257] += dqdci; // dwdot[C4H81]/d[H2]
    J[278] -= dqdci; // dwdot[C2H3]/d[H2]
    J[279] -= dqdci; // dwdot[C2H5]/d[H2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[299] += dqdci; // dwdot[C4H81]/d[C2H6]
    J[320] -= dqdci; // dwdot[C2H3]/d[C2H6]
    J[321] -= dqdci; // dwdot[C2H5]/d[C2H6]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[341] += dqdci; // dwdot[C4H81]/d[CO]
    J[362] -= dqdci; // dwdot[C2H3]/d[CO]
    J[363] -= dqdci; // dwdot[C2H5]/d[CO]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[719] += dqdci; // dwdot[C4H81]/d[H2O]
    J[740] -= dqdci; // dwdot[C2H3]/d[H2O]
    J[741] -= dqdci; // dwdot[C2H5]/d[H2O]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[1055] += dqdci; // dwdot[C4H81]/d[CO2]
    J[1076] -= dqdci; // dwdot[C2H3]/d[CO2]
    J[1077] -= dqdci; // dwdot[C2H5]/d[CO2]
    // d()/d[C2H3]
    dqdci = +k_f * sc[27];
    J[1097] += dqdci; // dwdot[C4H81]/d[C2H3]
    J[1118] -= dqdci; // dwdot[C2H3]/d[C2H3]
    J[1119] -= dqdci; // dwdot[C2H5]/d[C2H3]
    // d()/d[C2H5]
    dqdci = +k_f * sc[26];
    J[1139] += dqdci; // dwdot[C4H81]/d[C2H5]
    J[1160] -= dqdci; // dwdot[C2H3]/d[C2H5]
    J[1161] -= dqdci; // dwdot[C2H5]/d[C2H5]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = 2 * dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac - k_r;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = 3 * dcdc_fac;
    dqdc[8] = 1.5 * dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = 6 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = 2 * dcdc_fac;
    dqdc[26] = dcdc_fac + k_f * sc[27];
    dqdc[27] = dcdc_fac + k_f * sc[26];
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 5] += dqdc[k];
      J[42 * k + 26] -= dqdc[k];
      J[42 * k + 27] -= dqdc[k];
    }
  }
  J[1727] += dqdT; // dwdot[C4H81]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT
  J[1749] -= dqdT; // dwdot[C2H5]/dT

  // reaction 151: H + aC3H5 (+M) <=> C3H6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[19] * sc[32];
  k_f = 200000000;
  dlnkfdT = 0.0;
  // pressure-fall-off
  k_0 = 1.33e+60 * exp(-12 * logT - (3003.09641818941) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -12 * invT + (3003.09641818941) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.02) * exp(-T / 1096.6);
  Fcent2 = 0.02 * exp(-T / 1096.6);
  Fcent3 = exp(-6859.5 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 1096.6 - Fcent2 / 1096.6 + Fcent3 * 6859.5 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[3];
  Kc = refCinv * exp(-g_RT[3] + g_RT[19] + g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[32]) + (h_RT[3]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[3] += q;  // C3H6
  wdot[19] -= q; // H
  wdot[32] -= q; // aC3H5
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[87] += dqdci;  // dwdot[C3H6]/d[CH4]
    J[103] -= dqdci; // dwdot[H]/d[CH4]
    J[116] -= dqdci; // dwdot[aC3H5]/d[CH4]
    // d()/d[C3H6]
    dqdci = -k_r;
    J[129] += dqdci; // dwdot[C3H6]/d[C3H6]
    J[145] -= dqdci; // dwdot[H]/d[C3H6]
    J[158] -= dqdci; // dwdot[aC3H5]/d[C3H6]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[255] += dqdci; // dwdot[C3H6]/d[H2]
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[284] -= dqdci; // dwdot[aC3H5]/d[H2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[297] += dqdci; // dwdot[C3H6]/d[C2H6]
    J[313] -= dqdci; // dwdot[H]/d[C2H6]
    J[326] -= dqdci; // dwdot[aC3H5]/d[C2H6]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[339] += dqdci; // dwdot[C3H6]/d[CO]
    J[355] -= dqdci; // dwdot[H]/d[CO]
    J[368] -= dqdci; // dwdot[aC3H5]/d[CO]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[717] += dqdci; // dwdot[C3H6]/d[H2O]
    J[733] -= dqdci; // dwdot[H]/d[H2O]
    J[746] -= dqdci; // dwdot[aC3H5]/d[H2O]
    // d()/d[H]
    dqdci = +k_f * sc[32];
    J[801] += dqdci; // dwdot[C3H6]/d[H]
    J[817] -= dqdci; // dwdot[H]/d[H]
    J[830] -= dqdci; // dwdot[aC3H5]/d[H]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[1053] += dqdci; // dwdot[C3H6]/d[CO2]
    J[1069] -= dqdci; // dwdot[H]/d[CO2]
    J[1082] -= dqdci; // dwdot[aC3H5]/d[CO2]
    // d()/d[aC3H5]
    dqdci = +k_f * sc[19];
    J[1347] += dqdci; // dwdot[C3H6]/d[aC3H5]
    J[1363] -= dqdci; // dwdot[H]/d[aC3H5]
    J[1376] -= dqdci; // dwdot[aC3H5]/d[aC3H5]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = 2 * dcdc_fac;
    dqdc[3] = dcdc_fac - k_r;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = 3 * dcdc_fac;
    dqdc[8] = 1.5 * dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = 6 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac + k_f * sc[32];
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = 2 * dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac + k_f * sc[19];
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 3] += dqdc[k];
      J[42 * k + 19] -= dqdc[k];
      J[42 * k + 32] -= dqdc[k];
    }
  }
  J[1725] += dqdT; // dwdot[C3H6]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1754] -= dqdT; // dwdot[aC3H5]/dT

  // reaction 155: CH3 + aC3H5 (+M) <=> C4H81 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[12] * sc[32];
  k_f = 100000000 * exp(-0.32 * logT - (-131.993731440578) * invT);
  dlnkfdT = -0.32 * invT + (-131.993731440578) * invT2;
  // pressure-fall-off
  k_0 = 3.91e+60 * exp(-12.81 * logT - (3145.1041612795) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -12.81 * invT + (3145.1041612795) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.104) * exp(-T / 1606);
  Fcent2 = 0.104 * exp(-T / 60000);
  Fcent3 = exp(-6118.4 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 1606 - Fcent2 / 60000 + Fcent3 * 6118.4 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[5];
  Kc = refCinv * exp(-g_RT[5] + g_RT[12] + g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[32]) + (h_RT[5]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[5] += q;  // C4H81
  wdot[12] -= q; // CH3
  wdot[32] -= q; // aC3H5
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[89] += dqdci;  // dwdot[C4H81]/d[CH4]
    J[96] -= dqdci;  // dwdot[CH3]/d[CH4]
    J[116] -= dqdci; // dwdot[aC3H5]/d[CH4]
    // d()/d[C4H81]
    dqdci = -k_r;
    J[215] += dqdci; // dwdot[C4H81]/d[C4H81]
    J[222] -= dqdci; // dwdot[CH3]/d[C4H81]
    J[242] -= dqdci; // dwdot[aC3H5]/d[C4H81]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[257] += dqdci; // dwdot[C4H81]/d[H2]
    J[264] -= dqdci; // dwdot[CH3]/d[H2]
    J[284] -= dqdci; // dwdot[aC3H5]/d[H2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[299] += dqdci; // dwdot[C4H81]/d[C2H6]
    J[306] -= dqdci; // dwdot[CH3]/d[C2H6]
    J[326] -= dqdci; // dwdot[aC3H5]/d[C2H6]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[341] += dqdci; // dwdot[C4H81]/d[CO]
    J[348] -= dqdci; // dwdot[CH3]/d[CO]
    J[368] -= dqdci; // dwdot[aC3H5]/d[CO]
    // d()/d[CH3]
    dqdci = +k_f * sc[32];
    J[509] += dqdci; // dwdot[C4H81]/d[CH3]
    J[516] -= dqdci; // dwdot[CH3]/d[CH3]
    J[536] -= dqdci; // dwdot[aC3H5]/d[CH3]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[719] += dqdci; // dwdot[C4H81]/d[H2O]
    J[726] -= dqdci; // dwdot[CH3]/d[H2O]
    J[746] -= dqdci; // dwdot[aC3H5]/d[H2O]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[1055] += dqdci; // dwdot[C4H81]/d[CO2]
    J[1062] -= dqdci; // dwdot[CH3]/d[CO2]
    J[1082] -= dqdci; // dwdot[aC3H5]/d[CO2]
    // d()/d[aC3H5]
    dqdci = +k_f * sc[12];
    J[1349] += dqdci; // dwdot[C4H81]/d[aC3H5]
    J[1356] -= dqdci; // dwdot[CH3]/d[aC3H5]
    J[1376] -= dqdci; // dwdot[aC3H5]/d[aC3H5]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = 2 * dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac - k_r;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = 3 * dcdc_fac;
    dqdc[8] = 1.5 * dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac + k_f * sc[32];
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = 6 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = 2 * dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac + k_f * sc[12];
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 5] += dqdc[k];
      J[42 * k + 12] -= dqdc[k];
      J[42 * k + 32] -= dqdc[k];
    }
  }
  J[1727] += dqdT; // dwdot[C4H81]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1754] -= dqdT; // dwdot[aC3H5]/dT

  // reaction 173: C6H5CH2 + H (+M) <=> C6H5CH3 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[2] + sc[6] + (3 - 1) * sc[7] + (1.5 - 1) * sc[8] +
          (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[19] * sc[36];
  k_f = 100000000;
  dlnkfdT = 0.0;
  // pressure-fall-off
  k_0 = 1.1e+103 * exp(-24.63 * logT - (7341.93115409086) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -24.63 * invT + (7341.93115409086) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.431) * exp(-T / 383);
  Fcent2 = 0.431 * exp(-T / 152);
  Fcent3 = exp(-4730 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 383 - Fcent2 / 152 + Fcent3 * 4730 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[11];
  Kc = refCinv * exp(-g_RT[11] + g_RT[19] + g_RT[36]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[36]) + (h_RT[11]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[11] += q; // C6H5CH3
  wdot[19] -= q; // H
  wdot[36] -= q; // C6H5CH2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[95] += dqdci;  // dwdot[C6H5CH3]/d[CH4]
    J[103] -= dqdci; // dwdot[H]/d[CH4]
    J[120] -= dqdci; // dwdot[C6H5CH2]/d[CH4]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[263] += dqdci; // dwdot[C6H5CH3]/d[H2]
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[288] -= dqdci; // dwdot[C6H5CH2]/d[H2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[305] += dqdci; // dwdot[C6H5CH3]/d[C2H6]
    J[313] -= dqdci; // dwdot[H]/d[C2H6]
    J[330] -= dqdci; // dwdot[C6H5CH2]/d[C2H6]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[347] += dqdci; // dwdot[C6H5CH3]/d[CO]
    J[355] -= dqdci; // dwdot[H]/d[CO]
    J[372] -= dqdci; // dwdot[C6H5CH2]/d[CO]
    // d()/d[C6H5CH3]
    dqdci = -k_r;
    J[473] += dqdci; // dwdot[C6H5CH3]/d[C6H5CH3]
    J[481] -= dqdci; // dwdot[H]/d[C6H5CH3]
    J[498] -= dqdci; // dwdot[C6H5CH2]/d[C6H5CH3]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[725] += dqdci; // dwdot[C6H5CH3]/d[H2O]
    J[733] -= dqdci; // dwdot[H]/d[H2O]
    J[750] -= dqdci; // dwdot[C6H5CH2]/d[H2O]
    // d()/d[H]
    dqdci = +k_f * sc[36];
    J[809] += dqdci; // dwdot[C6H5CH3]/d[H]
    J[817] -= dqdci; // dwdot[H]/d[H]
    J[834] -= dqdci; // dwdot[C6H5CH2]/d[H]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[1061] += dqdci; // dwdot[C6H5CH3]/d[CO2]
    J[1069] -= dqdci; // dwdot[H]/d[CO2]
    J[1086] -= dqdci; // dwdot[C6H5CH2]/d[CO2]
    // d()/d[C6H5CH2]
    dqdci = +k_f * sc[19];
    J[1523] += dqdci; // dwdot[C6H5CH3]/d[C6H5CH2]
    J[1531] -= dqdci; // dwdot[H]/d[C6H5CH2]
    J[1548] -= dqdci; // dwdot[C6H5CH2]/d[C6H5CH2]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = 2 * dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = 3 * dcdc_fac;
    dqdc[8] = 1.5 * dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac - k_r;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = 6 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac + k_f * sc[36];
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = 2 * dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac + k_f * sc[19];
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 11] += dqdc[k];
      J[42 * k + 19] -= dqdc[k];
      J[42 * k + 36] -= dqdc[k];
    }
  }
  J[1733] += dqdT; // dwdot[C6H5CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1758] -= dqdT; // dwdot[C6H5CH2]/dT

  // reaction 187: C6H5 + H (+M) <=> C6H6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha =
    mixture + sc[2] + sc[6] + (1.5 - 1) * sc[8] + (6 - 1) * sc[17] + sc[25];
  // forward
  phi_f = sc[19] * sc[35];
  k_f = 100000000;
  dlnkfdT = 0.0;
  // pressure-fall-off
  k_0 = 6.6e+75 * exp(-16.3 * logT - (3522.51666063304) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -16.3 * invT + (3522.51666063304) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 0.1);
  Fcent2 = 1 * exp(-T / 584.9);
  Fcent3 = exp(-6113 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 0.1 - Fcent2 / 584.9 + Fcent3 * 6113 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[9];
  Kc = refCinv * exp(-g_RT[9] + g_RT[19] + g_RT[35]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[35]) + (h_RT[9]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[9] += q;  // C6H6
  wdot[19] -= q; // H
  wdot[35] -= q; // C6H5
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[93] += dqdci;  // dwdot[C6H6]/d[CH4]
    J[103] -= dqdci; // dwdot[H]/d[CH4]
    J[119] -= dqdci; // dwdot[C6H5]/d[CH4]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[261] += dqdci; // dwdot[C6H6]/d[H2]
    J[271] -= dqdci; // dwdot[H]/d[H2]
    J[287] -= dqdci; // dwdot[C6H5]/d[H2]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[345] += dqdci; // dwdot[C6H6]/d[CO]
    J[355] -= dqdci; // dwdot[H]/d[CO]
    J[371] -= dqdci; // dwdot[C6H5]/d[CO]
    // d()/d[C6H6]
    dqdci = -k_r;
    J[387] += dqdci; // dwdot[C6H6]/d[C6H6]
    J[397] -= dqdci; // dwdot[H]/d[C6H6]
    J[413] -= dqdci; // dwdot[C6H5]/d[C6H6]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[723] += dqdci; // dwdot[C6H6]/d[H2O]
    J[733] -= dqdci; // dwdot[H]/d[H2O]
    J[749] -= dqdci; // dwdot[C6H5]/d[H2O]
    // d()/d[H]
    dqdci = +k_f * sc[35];
    J[807] += dqdci; // dwdot[C6H6]/d[H]
    J[817] -= dqdci; // dwdot[H]/d[H]
    J[833] -= dqdci; // dwdot[C6H5]/d[H]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[1059] += dqdci; // dwdot[C6H6]/d[CO2]
    J[1069] -= dqdci; // dwdot[H]/d[CO2]
    J[1085] -= dqdci; // dwdot[C6H5]/d[CO2]
    // d()/d[C6H5]
    dqdci = +k_f * sc[19];
    J[1479] += dqdci; // dwdot[C6H6]/d[C6H5]
    J[1489] -= dqdci; // dwdot[H]/d[C6H5]
    J[1505] -= dqdci; // dwdot[C6H5]/d[C6H5]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = 2 * dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = 1.5 * dcdc_fac;
    dqdc[9] = dcdc_fac - k_r;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = 6 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac + k_f * sc[35];
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = 2 * dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac + k_f * sc[19];
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 9] += dqdc[k];
      J[42 * k + 19] -= dqdc[k];
      J[42 * k + 35] -= dqdc[k];
    }
  }
  J[1731] += dqdT; // dwdot[C6H6]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1757] -= dqdT; // dwdot[C6H5]/dT

  // reaction 30: CO + O (+M) <=> CO2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[6] + (1.75 - 1) * sc[8] + (12 - 1) * sc[17] +
          (3.6 - 1) * sc[25];
  // forward
  phi_f = sc[8] * sc[14];
  k_f = 13620 * exp(-(1199.66853127845) * invT);
  dlnkfdT = (1199.66853127845) * invT2;
  // pressure-fall-off
  k_0 = 1.173e+24 * exp(-2.79 * logT - (2108.98104638758) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -2.79 * invT + (2108.98104638758) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Lindemann form
  F = 1.0;
  dlogFdlogPr = 0.0;
  dlogFdT = 0.0;
  // reverse
  phi_r = sc[25];
  Kc = refCinv * exp(g_RT[8] + g_RT[14] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[14]) + (h_RT[25]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[8] -= q;  // CO
  wdot[14] -= q; // O
  wdot[25] += q; // CO2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[260] -= dqdci; // dwdot[CO]/d[H2]
    J[266] -= dqdci; // dwdot[O]/d[H2]
    J[277] += dqdci; // dwdot[CO2]/d[H2]
    // d()/d[CO]
    dqdci = (1.75 - 1) * dcdc_fac + k_f * sc[14];
    J[344] -= dqdci; // dwdot[CO]/d[CO]
    J[350] -= dqdci; // dwdot[O]/d[CO]
    J[361] += dqdci; // dwdot[CO2]/d[CO]
    // d()/d[O]
    dqdci = +k_f * sc[8];
    J[596] -= dqdci; // dwdot[CO]/d[O]
    J[602] -= dqdci; // dwdot[O]/d[O]
    J[613] += dqdci; // dwdot[CO2]/d[O]
    // d()/d[H2O]
    dqdci = (12 - 1) * dcdc_fac;
    J[722] -= dqdci; // dwdot[CO]/d[H2O]
    J[728] -= dqdci; // dwdot[O]/d[H2O]
    J[739] += dqdci; // dwdot[CO2]/d[H2O]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * dcdc_fac - k_r;
    J[1058] -= dqdci; // dwdot[CO]/d[CO2]
    J[1064] -= dqdci; // dwdot[O]/d[CO2]
    J[1075] += dqdci; // dwdot[CO2]/d[CO2]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = 1.75 * dcdc_fac + k_f * sc[14];
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac + k_f * sc[8];
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = 12 * dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = 3.6 * dcdc_fac - k_r;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 8] -= dqdc[k];
      J[42 * k + 14] -= dqdc[k];
      J[42 * k + 25] += dqdc[k];
    }
  }
  J[1730] -= dqdT; // dwdot[CO]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1747] += dqdT; // dwdot[CO2]/dT

  // reaction 11: 2 H + M <=> H2 + M
  // a third-body and non-pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (0 - 1) * sc[6] + (0 - 1) * sc[17] + (0 - 1) * sc[25];
  // forward
  phi_f = (sc[19] * sc[19]);
  k_f = 1780000 * exp(-1 * logT);
  dlnkfdT = -1 * invT;
  // reverse
  phi_r = sc[6];
  Kc = refCinv * exp(-g_RT[6] + 2.000000 * g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[19]) + (h_RT[6]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  q = alpha * q_nocor;
  dqdT = alpha * (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;      // H2
  wdot[19] -= 2 * q; // H
  // for convenience
  k_f *= alpha;
  k_r *= alpha;
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (0 - 1) * q_nocor - k_r;
    J[258] += dqdci;      // dwdot[H2]/d[H2]
    J[271] += -2 * dqdci; // dwdot[H]/d[H2]
    // d()/d[H2O]
    dqdci = (0 - 1) * q_nocor;
    J[720] += dqdci;      // dwdot[H2]/d[H2O]
    J[733] += -2 * dqdci; // dwdot[H]/d[H2O]
    // d()/d[H]
    dqdci = +k_f * 2.000000 * sc[19];
    J[804] += dqdci;      // dwdot[H2]/d[H]
    J[817] += -2 * dqdci; // dwdot[H]/d[H]
    // d()/d[CO2]
    dqdci = (0 - 1) * q_nocor;
    J[1056] += dqdci;      // dwdot[H2]/d[CO2]
    J[1069] += -2 * dqdci; // dwdot[H]/d[CO2]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = -k_r;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor + k_f * 2.000000 * sc[19];
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 6] += dqdc[k];
      J[42 * k + 19] += -2 * dqdc[k];
    }
  }
  J[1728] += dqdT;      // dwdot[H2]/dT
  J[1741] += -2 * dqdT; // dwdot[H]/dT

  // reaction 12: 2 H + H2O <=> H2 + H2O
  // a third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * (sc[19] * sc[19]);
  k_f = 56240000 * exp(-1.25 * logT);
  dlnkfdT = -1.25 * invT;
  // reverse
  phi_r = sc[6] * sc[17];
  Kc = refCinv * exp(-g_RT[6] + 2.000000 * g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[17] + 2.000000 * h_RT[19]) + (h_RT[6] + h_RT[17]) +
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;      // H2
  wdot[19] -= 2 * q; // H
  // d()/d[H2]
  dqdci = -k_r * sc[17];
  J[258] += dqdci;      // dwdot[H2]/d[H2]
  J[271] += -2 * dqdci; // dwdot[H]/d[H2]
  // d()/d[H2O]
  dqdci = +k_f * sc[19] * sc[19] - k_r * sc[6];
  J[720] += dqdci;      // dwdot[H2]/d[H2O]
  J[733] += -2 * dqdci; // dwdot[H]/d[H2O]
  // d()/d[H]
  dqdci = +k_f * sc[17] * 2.000000 * sc[19];
  J[804] += dqdci;      // dwdot[H2]/d[H]
  J[817] += -2 * dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1728] += dqdT;      // dwdot[H2]/dT
  J[1741] += -2 * dqdT; // dwdot[H]/dT

  // reaction 13: H + OH + M <=> H2O + M
  // a third-body and non-pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[6] + (1.75 - 1) * sc[8] + (6.3 - 1) * sc[17] +
          (3.6 - 1) * sc[25];
  // forward
  phi_f = sc[15] * sc[19];
  k_f = 44000000000 * exp(-2 * logT);
  dlnkfdT = -2 * invT;
  // reverse
  phi_r = sc[17];
  Kc = refCinv * exp(g_RT[15] - g_RT[17] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[19]) + (h_RT[17]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  q = alpha * q_nocor;
  dqdT = alpha * (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[19] -= q; // H
  // for convenience
  k_f *= alpha;
  k_r *= alpha;
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * q_nocor;
    J[267] -= dqdci; // dwdot[OH]/d[H2]
    J[269] += dqdci; // dwdot[H2O]/d[H2]
    J[271] -= dqdci; // dwdot[H]/d[H2]
    // d()/d[CO]
    dqdci = (1.75 - 1) * q_nocor;
    J[351] -= dqdci; // dwdot[OH]/d[CO]
    J[353] += dqdci; // dwdot[H2O]/d[CO]
    J[355] -= dqdci; // dwdot[H]/d[CO]
    // d()/d[OH]
    dqdci = +k_f * sc[19];
    J[645] -= dqdci; // dwdot[OH]/d[OH]
    J[647] += dqdci; // dwdot[H2O]/d[OH]
    J[649] -= dqdci; // dwdot[H]/d[OH]
    // d()/d[H2O]
    dqdci = (6.3 - 1) * q_nocor - k_r;
    J[729] -= dqdci; // dwdot[OH]/d[H2O]
    J[731] += dqdci; // dwdot[H2O]/d[H2O]
    J[733] -= dqdci; // dwdot[H]/d[H2O]
    // d()/d[H]
    dqdci = +k_f * sc[15];
    J[813] -= dqdci; // dwdot[OH]/d[H]
    J[815] += dqdci; // dwdot[H2O]/d[H]
    J[817] -= dqdci; // dwdot[H]/d[H]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * q_nocor;
    J[1065] -= dqdci; // dwdot[OH]/d[CO2]
    J[1067] += dqdci; // dwdot[H2O]/d[CO2]
    J[1069] -= dqdci; // dwdot[H]/d[CO2]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = 2 * q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = 1.75 * q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor + k_f * sc[19];
    dqdc[16] = q_nocor;
    dqdc[17] = 6.3 * q_nocor - k_r;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor + k_f * sc[15];
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = 3.6 * q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 15] -= dqdc[k];
      J[42 * k + 17] += dqdc[k];
      J[42 * k + 19] -= dqdc[k];
    }
  }
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 14: H + O + M <=> OH + M
  // a third-body and non-pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[6] + (1.75 - 1) * sc[8] + (12 - 1) * sc[17] +
          (3.6 - 1) * sc[25];
  // forward
  phi_f = sc[14] * sc[19];
  k_f = 9428000 * exp(-1 * logT);
  dlnkfdT = -1 * invT;
  // reverse
  phi_r = sc[15];
  Kc = refCinv * exp(g_RT[14] - g_RT[15] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[19]) + (h_RT[15]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  q = alpha * q_nocor;
  dqdT = alpha * (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[19] -= q; // H
  // for convenience
  k_f *= alpha;
  k_r *= alpha;
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * q_nocor;
    J[266] -= dqdci; // dwdot[O]/d[H2]
    J[267] += dqdci; // dwdot[OH]/d[H2]
    J[271] -= dqdci; // dwdot[H]/d[H2]
    // d()/d[CO]
    dqdci = (1.75 - 1) * q_nocor;
    J[350] -= dqdci; // dwdot[O]/d[CO]
    J[351] += dqdci; // dwdot[OH]/d[CO]
    J[355] -= dqdci; // dwdot[H]/d[CO]
    // d()/d[O]
    dqdci = +k_f * sc[19];
    J[602] -= dqdci; // dwdot[O]/d[O]
    J[603] += dqdci; // dwdot[OH]/d[O]
    J[607] -= dqdci; // dwdot[H]/d[O]
    // d()/d[OH]
    dqdci = -k_r;
    J[644] -= dqdci; // dwdot[O]/d[OH]
    J[645] += dqdci; // dwdot[OH]/d[OH]
    J[649] -= dqdci; // dwdot[H]/d[OH]
    // d()/d[H2O]
    dqdci = (12 - 1) * q_nocor;
    J[728] -= dqdci; // dwdot[O]/d[H2O]
    J[729] += dqdci; // dwdot[OH]/d[H2O]
    J[733] -= dqdci; // dwdot[H]/d[H2O]
    // d()/d[H]
    dqdci = +k_f * sc[14];
    J[812] -= dqdci; // dwdot[O]/d[H]
    J[813] += dqdci; // dwdot[OH]/d[H]
    J[817] -= dqdci; // dwdot[H]/d[H]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * q_nocor;
    J[1064] -= dqdci; // dwdot[O]/d[CO2]
    J[1065] += dqdci; // dwdot[OH]/d[CO2]
    J[1069] -= dqdci; // dwdot[H]/d[CO2]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = 2 * q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = 1.75 * q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor + k_f * sc[19];
    dqdc[15] = q_nocor - k_r;
    dqdc[16] = q_nocor;
    dqdc[17] = 12 * q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor + k_f * sc[14];
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = 3.6 * q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 14] -= dqdc[k];
      J[42 * k + 15] += dqdc[k];
      J[42 * k + 19] -= dqdc[k];
    }
  }
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 15: 2 O + M <=> O2 + M
  // a third-body and non-pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (2.4 - 1) * sc[6] + (1.75 - 1) * sc[8] +
          (15.4 - 1) * sc[17] + (3.6 - 1) * sc[25];
  // forward
  phi_f = (sc[14] * sc[14]);
  k_f = 120000 * exp(-1 * logT);
  dlnkfdT = -1 * invT;
  // reverse
  phi_r = sc[13];
  Kc = refCinv * exp(-g_RT[13] + 2.000000 * g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[14]) + (h_RT[13]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  q = alpha * q_nocor;
  dqdT = alpha * (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] += q;     // O2
  wdot[14] -= 2 * q; // O
  // for convenience
  k_f *= alpha;
  k_r *= alpha;
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2.4 - 1) * q_nocor;
    J[265] += dqdci;      // dwdot[O2]/d[H2]
    J[266] += -2 * dqdci; // dwdot[O]/d[H2]
    // d()/d[CO]
    dqdci = (1.75 - 1) * q_nocor;
    J[349] += dqdci;      // dwdot[O2]/d[CO]
    J[350] += -2 * dqdci; // dwdot[O]/d[CO]
    // d()/d[O2]
    dqdci = -k_r;
    J[559] += dqdci;      // dwdot[O2]/d[O2]
    J[560] += -2 * dqdci; // dwdot[O]/d[O2]
    // d()/d[O]
    dqdci = +k_f * 2.000000 * sc[14];
    J[601] += dqdci;      // dwdot[O2]/d[O]
    J[602] += -2 * dqdci; // dwdot[O]/d[O]
    // d()/d[H2O]
    dqdci = (15.4 - 1) * q_nocor;
    J[727] += dqdci;      // dwdot[O2]/d[H2O]
    J[728] += -2 * dqdci; // dwdot[O]/d[H2O]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * q_nocor;
    J[1063] += dqdci;      // dwdot[O2]/d[CO2]
    J[1064] += -2 * dqdci; // dwdot[O]/d[CO2]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = 2.4 * q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = 1.75 * q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor - k_r;
    dqdc[14] = q_nocor + k_f * 2.000000 * sc[14];
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = 15.4 * q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = 3.6 * q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 13] += dqdc[k];
      J[42 * k + 14] += -2 * dqdc[k];
    }
  }
  J[1735] += dqdT;      // dwdot[O2]/dT
  J[1736] += -2 * dqdT; // dwdot[O]/dT

  // reaction 39: HCO + M <=> CO + H + M
  // a third-body and non-pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[6] + (1.75 - 1) * sc[8] + (0 - 1) * sc[17] +
          (3.6 - 1) * sc[25];
  // forward
  phi_f = sc[22];
  k_f = 187000000000 * exp(-1 * logT - (8554.68331868023) * invT);
  dlnkfdT = -1 * invT + (8554.68331868023) * invT2;
  // reverse
  phi_r = sc[8] * sc[19];
  Kc = refC * exp(-g_RT[8] - g_RT[19] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[22]) + (h_RT[8] + h_RT[19]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  q = alpha * q_nocor;
  dqdT = alpha * (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[19] += q; // H
  wdot[22] -= q; // HCO
  // for convenience
  k_f *= alpha;
  k_r *= alpha;
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * q_nocor;
    J[260] += dqdci; // dwdot[CO]/d[H2]
    J[271] += dqdci; // dwdot[H]/d[H2]
    J[274] -= dqdci; // dwdot[HCO]/d[H2]
    // d()/d[CO]
    dqdci = (1.75 - 1) * q_nocor - k_r * sc[19];
    J[344] += dqdci; // dwdot[CO]/d[CO]
    J[355] += dqdci; // dwdot[H]/d[CO]
    J[358] -= dqdci; // dwdot[HCO]/d[CO]
    // d()/d[H2O]
    dqdci = (0 - 1) * q_nocor;
    J[722] += dqdci; // dwdot[CO]/d[H2O]
    J[733] += dqdci; // dwdot[H]/d[H2O]
    J[736] -= dqdci; // dwdot[HCO]/d[H2O]
    // d()/d[H]
    dqdci = -k_r * sc[8];
    J[806] += dqdci; // dwdot[CO]/d[H]
    J[817] += dqdci; // dwdot[H]/d[H]
    J[820] -= dqdci; // dwdot[HCO]/d[H]
    // d()/d[HCO]
    dqdci = +k_f;
    J[932] += dqdci; // dwdot[CO]/d[HCO]
    J[943] += dqdci; // dwdot[H]/d[HCO]
    J[946] -= dqdci; // dwdot[HCO]/d[HCO]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * q_nocor;
    J[1058] += dqdci; // dwdot[CO]/d[CO2]
    J[1069] += dqdci; // dwdot[H]/d[CO2]
    J[1072] -= dqdci; // dwdot[HCO]/d[CO2]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = 2 * q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = 1.75 * q_nocor - k_r * sc[19];
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor - k_r * sc[8];
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor + k_f;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = 3.6 * q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    for (int k = 0; k < 41; k++) {
      J[42 * k + 8] += dqdc[k];
      J[42 * k + 19] += dqdc[k];
      J[42 * k + 22] -= dqdc[k];
    }
  }
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT

  // reaction 40: HCO + H2O <=> CO + H + H2O
  // a third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[22];
  k_f = 2244000000000 * exp(-1 * logT - (8554.68331868023) * invT);
  dlnkfdT = -1 * invT + (8554.68331868023) * invT2;
  // reverse
  phi_r = sc[8] * sc[17] * sc[19];
  Kc = refC * exp(-g_RT[8] - g_RT[19] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[17] + h_RT[22]) + (h_RT[8] + h_RT[17] + h_RT[19]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[19] += q; // H
  wdot[22] -= q; // HCO
  // d()/d[CO]
  dqdci = -k_r * sc[17] * sc[19];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[355] += dqdci; // dwdot[H]/d[CO]
  J[358] -= dqdci; // dwdot[HCO]/d[CO]
  // d()/d[H2O]
  dqdci = +k_f * sc[22] - k_r * sc[8] * sc[19];
  J[722] += dqdci; // dwdot[CO]/d[H2O]
  J[733] += dqdci; // dwdot[H]/d[H2O]
  J[736] -= dqdci; // dwdot[HCO]/d[H2O]
  // d()/d[H]
  dqdci = -k_r * sc[8] * sc[17];
  J[806] += dqdci; // dwdot[CO]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[820] -= dqdci; // dwdot[HCO]/d[H]
  // d()/d[HCO]
  dqdci = +k_f * sc[17];
  J[932] += dqdci; // dwdot[CO]/d[HCO]
  J[943] += dqdci; // dwdot[H]/d[HCO]
  J[946] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT

  // reaction 0: POSF10325 => 1.74268 C2H4 + 0.819058 C3H6 + 0.261401 C4H81 +
  // 0.163333 C6H5CH3 + 0.17 C6H6 + 1.5 CH3 + 0.5 H + 0.0871338 iC4H8 a
  // non-third-body and non-pressure-fall-off reaction forward
  phi_f = sc[0];
  k_f = 1.53e+27 * exp(-2.58 * logT - (44130.5919410765) * invT);
  dlnkfdT = -2.58 * invT + (44130.5919410765) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;              // POSF10325
  wdot[1] += 1.7426762 * q;  // C2H4
  wdot[3] += 0.8190578 * q;  // C3H6
  wdot[4] += 0.0871338 * q;  // iC4H8
  wdot[5] += 0.2614014 * q;  // C4H81
  wdot[9] += 0.17 * q;       // C6H6
  wdot[11] += 0.1633333 * q; // C6H5CH3
  wdot[12] += 1.5 * q;       // CH3
  wdot[19] += 0.5 * q;       // H
  // d()/d[POSF10325]
  dqdci = +k_f;
  J[0] -= dqdci;              // dwdot[POSF10325]/d[POSF10325]
  J[1] += 1.7426762 * dqdci;  // dwdot[C2H4]/d[POSF10325]
  J[3] += 0.8190578 * dqdci;  // dwdot[C3H6]/d[POSF10325]
  J[4] += 0.0871338 * dqdci;  // dwdot[iC4H8]/d[POSF10325]
  J[5] += 0.2614014 * dqdci;  // dwdot[C4H81]/d[POSF10325]
  J[9] += 0.17 * dqdci;       // dwdot[C6H6]/d[POSF10325]
  J[11] += 0.1633333 * dqdci; // dwdot[C6H5CH3]/d[POSF10325]
  J[12] += 1.5 * dqdci;       // dwdot[CH3]/d[POSF10325]
  J[19] += 0.5 * dqdci;       // dwdot[H]/d[POSF10325]
  // d()/dT
  J[1722] -= dqdT;             // dwdot[POSF10325]/dT
  J[1723] += 1.7426762 * dqdT; // dwdot[C2H4]/dT
  J[1725] += 0.8190578 * dqdT; // dwdot[C3H6]/dT
  J[1726] += 0.0871338 * dqdT; // dwdot[iC4H8]/dT
  J[1727] += 0.2614014 * dqdT; // dwdot[C4H81]/dT
  J[1731] += 0.17 * dqdT;      // dwdot[C6H6]/dT
  J[1733] += 0.1633333 * dqdT; // dwdot[C6H5CH3]/dT
  J[1734] += 1.5 * dqdT;       // dwdot[CH3]/dT
  J[1741] += 0.5 * dqdT;       // dwdot[H]/dT

  // reaction 1: H + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186 C4H81
  // + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + H2 +
  // 0.0797288 iC4H8 a non-third-body and non-pressure-fall-off reaction forward
  phi_f = sc[0] * sc[19];
  k_f = 7.66e-08 * exp(4.76 * logT - (651.615260550532) * invT);
  dlnkfdT = 4.76 * invT + (651.615260550532) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;              // POSF10325
  wdot[1] += 1.5945764 * q;  // C2H4
  wdot[2] += 0.45 * q;       // CH4
  wdot[3] += 0.7494509 * q;  // C3H6
  wdot[4] += 0.0797288 * q;  // iC4H8
  wdot[5] += 0.2391865 * q;  // C4H81
  wdot[6] += q;              // H2
  wdot[9] += 0.2465 * q;     // C6H6
  wdot[11] += 0.2368333 * q; // C6H5CH3
  wdot[12] += 0.7 * q;       // CH3
  wdot[19] -= 0.7 * q;       // H
  // d()/d[POSF10325]
  dqdci = +k_f * sc[19];
  J[0] -= dqdci;              // dwdot[POSF10325]/d[POSF10325]
  J[1] += 1.5945764 * dqdci;  // dwdot[C2H4]/d[POSF10325]
  J[2] += 0.45 * dqdci;       // dwdot[CH4]/d[POSF10325]
  J[3] += 0.7494509 * dqdci;  // dwdot[C3H6]/d[POSF10325]
  J[4] += 0.0797288 * dqdci;  // dwdot[iC4H8]/d[POSF10325]
  J[5] += 0.2391865 * dqdci;  // dwdot[C4H81]/d[POSF10325]
  J[6] += dqdci;              // dwdot[H2]/d[POSF10325]
  J[9] += 0.2465 * dqdci;     // dwdot[C6H6]/d[POSF10325]
  J[11] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[POSF10325]
  J[12] += 0.7 * dqdci;       // dwdot[CH3]/d[POSF10325]
  J[19] += -0.7 * dqdci;      // dwdot[H]/d[POSF10325]
  // d()/d[H]
  dqdci = +k_f * sc[0];
  J[798] -= dqdci;             // dwdot[POSF10325]/d[H]
  J[799] += 1.5945764 * dqdci; // dwdot[C2H4]/d[H]
  J[800] += 0.45 * dqdci;      // dwdot[CH4]/d[H]
  J[801] += 0.7494509 * dqdci; // dwdot[C3H6]/d[H]
  J[802] += 0.0797288 * dqdci; // dwdot[iC4H8]/d[H]
  J[803] += 0.2391865 * dqdci; // dwdot[C4H81]/d[H]
  J[804] += dqdci;             // dwdot[H2]/d[H]
  J[807] += 0.2465 * dqdci;    // dwdot[C6H6]/d[H]
  J[809] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[H]
  J[810] += 0.7 * dqdci;       // dwdot[CH3]/d[H]
  J[817] += -0.7 * dqdci;      // dwdot[H]/d[H]
  // d()/dT
  J[1722] -= dqdT;             // dwdot[POSF10325]/dT
  J[1723] += 1.5945764 * dqdT; // dwdot[C2H4]/dT
  J[1724] += 0.45 * dqdT;      // dwdot[CH4]/dT
  J[1725] += 0.7494509 * dqdT; // dwdot[C3H6]/dT
  J[1726] += 0.0797288 * dqdT; // dwdot[iC4H8]/dT
  J[1727] += 0.2391865 * dqdT; // dwdot[C4H81]/dT
  J[1728] += dqdT;             // dwdot[H2]/dT
  J[1731] += 0.2465 * dqdT;    // dwdot[C6H6]/dT
  J[1733] += 0.2368333 * dqdT; // dwdot[C6H5CH3]/dT
  J[1734] += 0.7 * dqdT;       // dwdot[CH3]/dT
  J[1741] += -0.7 * dqdT;      // dwdot[H]/dT

  // reaction 2: CH3 + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186
  // C4H81 + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 1.45 CH4 + 0.3 H +
  // 0.0797288 iC4H8 a non-third-body and non-pressure-fall-off reaction forward
  phi_f = sc[0] * sc[12];
  k_f = 3.17e-13 * exp(5.95 * logT - (2892.69068171185) * invT);
  dlnkfdT = 5.95 * invT + (2892.69068171185) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;              // POSF10325
  wdot[1] += 1.5945764 * q;  // C2H4
  wdot[2] += 1.45 * q;       // CH4
  wdot[3] += 0.7494509 * q;  // C3H6
  wdot[4] += 0.0797288 * q;  // iC4H8
  wdot[5] += 0.2391865 * q;  // C4H81
  wdot[9] += 0.2465 * q;     // C6H6
  wdot[11] += 0.2368333 * q; // C6H5CH3
  wdot[12] -= 0.3 * q;       // CH3
  wdot[19] += 0.3 * q;       // H
  // d()/d[POSF10325]
  dqdci = +k_f * sc[12];
  J[0] -= dqdci;              // dwdot[POSF10325]/d[POSF10325]
  J[1] += 1.5945764 * dqdci;  // dwdot[C2H4]/d[POSF10325]
  J[2] += 1.45 * dqdci;       // dwdot[CH4]/d[POSF10325]
  J[3] += 0.7494509 * dqdci;  // dwdot[C3H6]/d[POSF10325]
  J[4] += 0.0797288 * dqdci;  // dwdot[iC4H8]/d[POSF10325]
  J[5] += 0.2391865 * dqdci;  // dwdot[C4H81]/d[POSF10325]
  J[9] += 0.2465 * dqdci;     // dwdot[C6H6]/d[POSF10325]
  J[11] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[POSF10325]
  J[12] += -0.3 * dqdci;      // dwdot[CH3]/d[POSF10325]
  J[19] += 0.3 * dqdci;       // dwdot[H]/d[POSF10325]
  // d()/d[CH3]
  dqdci = +k_f * sc[0];
  J[504] -= dqdci;             // dwdot[POSF10325]/d[CH3]
  J[505] += 1.5945764 * dqdci; // dwdot[C2H4]/d[CH3]
  J[506] += 1.45 * dqdci;      // dwdot[CH4]/d[CH3]
  J[507] += 0.7494509 * dqdci; // dwdot[C3H6]/d[CH3]
  J[508] += 0.0797288 * dqdci; // dwdot[iC4H8]/d[CH3]
  J[509] += 0.2391865 * dqdci; // dwdot[C4H81]/d[CH3]
  J[513] += 0.2465 * dqdci;    // dwdot[C6H6]/d[CH3]
  J[515] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[CH3]
  J[516] += -0.3 * dqdci;      // dwdot[CH3]/d[CH3]
  J[523] += 0.3 * dqdci;       // dwdot[H]/d[CH3]
  // d()/dT
  J[1722] -= dqdT;             // dwdot[POSF10325]/dT
  J[1723] += 1.5945764 * dqdT; // dwdot[C2H4]/dT
  J[1724] += 1.45 * dqdT;      // dwdot[CH4]/dT
  J[1725] += 0.7494509 * dqdT; // dwdot[C3H6]/dT
  J[1726] += 0.0797288 * dqdT; // dwdot[iC4H8]/dT
  J[1727] += 0.2391865 * dqdT; // dwdot[C4H81]/dT
  J[1731] += 0.2465 * dqdT;    // dwdot[C6H6]/dT
  J[1733] += 0.2368333 * dqdT; // dwdot[C6H5CH3]/dT
  J[1734] += -0.3 * dqdT;      // dwdot[CH3]/dT
  J[1741] += 0.3 * dqdT;       // dwdot[H]/dT

  // reaction 3: OH + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186 C4H81
  // + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + H2O +
  // 0.0797288 iC4H8 a non-third-body and non-pressure-fall-off reaction forward
  phi_f = sc[0] * sc[15];
  k_f = 2960 * exp(1.02 * logT - (107.285793149566) * invT);
  dlnkfdT = 1.02 * invT + (107.285793149566) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;              // POSF10325
  wdot[1] += 1.5945764 * q;  // C2H4
  wdot[2] += 0.45 * q;       // CH4
  wdot[3] += 0.7494509 * q;  // C3H6
  wdot[4] += 0.0797288 * q;  // iC4H8
  wdot[5] += 0.2391865 * q;  // C4H81
  wdot[9] += 0.2465 * q;     // C6H6
  wdot[11] += 0.2368333 * q; // C6H5CH3
  wdot[12] += 0.7 * q;       // CH3
  wdot[15] -= q;             // OH
  wdot[17] += q;             // H2O
  wdot[19] += 0.3 * q;       // H
  // d()/d[POSF10325]
  dqdci = +k_f * sc[15];
  J[0] -= dqdci;              // dwdot[POSF10325]/d[POSF10325]
  J[1] += 1.5945764 * dqdci;  // dwdot[C2H4]/d[POSF10325]
  J[2] += 0.45 * dqdci;       // dwdot[CH4]/d[POSF10325]
  J[3] += 0.7494509 * dqdci;  // dwdot[C3H6]/d[POSF10325]
  J[4] += 0.0797288 * dqdci;  // dwdot[iC4H8]/d[POSF10325]
  J[5] += 0.2391865 * dqdci;  // dwdot[C4H81]/d[POSF10325]
  J[9] += 0.2465 * dqdci;     // dwdot[C6H6]/d[POSF10325]
  J[11] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[POSF10325]
  J[12] += 0.7 * dqdci;       // dwdot[CH3]/d[POSF10325]
  J[15] -= dqdci;             // dwdot[OH]/d[POSF10325]
  J[17] += dqdci;             // dwdot[H2O]/d[POSF10325]
  J[19] += 0.3 * dqdci;       // dwdot[H]/d[POSF10325]
  // d()/d[OH]
  dqdci = +k_f * sc[0];
  J[630] -= dqdci;             // dwdot[POSF10325]/d[OH]
  J[631] += 1.5945764 * dqdci; // dwdot[C2H4]/d[OH]
  J[632] += 0.45 * dqdci;      // dwdot[CH4]/d[OH]
  J[633] += 0.7494509 * dqdci; // dwdot[C3H6]/d[OH]
  J[634] += 0.0797288 * dqdci; // dwdot[iC4H8]/d[OH]
  J[635] += 0.2391865 * dqdci; // dwdot[C4H81]/d[OH]
  J[639] += 0.2465 * dqdci;    // dwdot[C6H6]/d[OH]
  J[641] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[OH]
  J[642] += 0.7 * dqdci;       // dwdot[CH3]/d[OH]
  J[645] -= dqdci;             // dwdot[OH]/d[OH]
  J[647] += dqdci;             // dwdot[H2O]/d[OH]
  J[649] += 0.3 * dqdci;       // dwdot[H]/d[OH]
  // d()/dT
  J[1722] -= dqdT;             // dwdot[POSF10325]/dT
  J[1723] += 1.5945764 * dqdT; // dwdot[C2H4]/dT
  J[1724] += 0.45 * dqdT;      // dwdot[CH4]/dT
  J[1725] += 0.7494509 * dqdT; // dwdot[C3H6]/dT
  J[1726] += 0.0797288 * dqdT; // dwdot[iC4H8]/dT
  J[1727] += 0.2391865 * dqdT; // dwdot[C4H81]/dT
  J[1731] += 0.2465 * dqdT;    // dwdot[C6H6]/dT
  J[1733] += 0.2368333 * dqdT; // dwdot[C6H5CH3]/dT
  J[1734] += 0.7 * dqdT;       // dwdot[CH3]/dT
  J[1737] -= dqdT;             // dwdot[OH]/dT
  J[1739] += dqdT;             // dwdot[H2O]/dT
  J[1741] += 0.3 * dqdT;       // dwdot[H]/dT

  // reaction 4: O2 + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186 C4H81
  // + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + HO2 +
  // 0.0797288 iC4H8 a non-third-body and non-pressure-fall-off reaction forward
  phi_f = sc[0] * sc[13];
  k_f = 1780000000 * exp(0.06 * logT - (22409.5464916153) * invT);
  dlnkfdT = 0.06 * invT + (22409.5464916153) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;              // POSF10325
  wdot[1] += 1.5945764 * q;  // C2H4
  wdot[2] += 0.45 * q;       // CH4
  wdot[3] += 0.7494509 * q;  // C3H6
  wdot[4] += 0.0797288 * q;  // iC4H8
  wdot[5] += 0.2391865 * q;  // C4H81
  wdot[9] += 0.2465 * q;     // C6H6
  wdot[11] += 0.2368333 * q; // C6H5CH3
  wdot[12] += 0.7 * q;       // CH3
  wdot[13] -= q;             // O2
  wdot[16] += q;             // HO2
  wdot[19] += 0.3 * q;       // H
  // d()/d[POSF10325]
  dqdci = +k_f * sc[13];
  J[0] -= dqdci;              // dwdot[POSF10325]/d[POSF10325]
  J[1] += 1.5945764 * dqdci;  // dwdot[C2H4]/d[POSF10325]
  J[2] += 0.45 * dqdci;       // dwdot[CH4]/d[POSF10325]
  J[3] += 0.7494509 * dqdci;  // dwdot[C3H6]/d[POSF10325]
  J[4] += 0.0797288 * dqdci;  // dwdot[iC4H8]/d[POSF10325]
  J[5] += 0.2391865 * dqdci;  // dwdot[C4H81]/d[POSF10325]
  J[9] += 0.2465 * dqdci;     // dwdot[C6H6]/d[POSF10325]
  J[11] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[POSF10325]
  J[12] += 0.7 * dqdci;       // dwdot[CH3]/d[POSF10325]
  J[13] -= dqdci;             // dwdot[O2]/d[POSF10325]
  J[16] += dqdci;             // dwdot[HO2]/d[POSF10325]
  J[19] += 0.3 * dqdci;       // dwdot[H]/d[POSF10325]
  // d()/d[O2]
  dqdci = +k_f * sc[0];
  J[546] -= dqdci;             // dwdot[POSF10325]/d[O2]
  J[547] += 1.5945764 * dqdci; // dwdot[C2H4]/d[O2]
  J[548] += 0.45 * dqdci;      // dwdot[CH4]/d[O2]
  J[549] += 0.7494509 * dqdci; // dwdot[C3H6]/d[O2]
  J[550] += 0.0797288 * dqdci; // dwdot[iC4H8]/d[O2]
  J[551] += 0.2391865 * dqdci; // dwdot[C4H81]/d[O2]
  J[555] += 0.2465 * dqdci;    // dwdot[C6H6]/d[O2]
  J[557] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[O2]
  J[558] += 0.7 * dqdci;       // dwdot[CH3]/d[O2]
  J[559] -= dqdci;             // dwdot[O2]/d[O2]
  J[562] += dqdci;             // dwdot[HO2]/d[O2]
  J[565] += 0.3 * dqdci;       // dwdot[H]/d[O2]
  // d()/dT
  J[1722] -= dqdT;             // dwdot[POSF10325]/dT
  J[1723] += 1.5945764 * dqdT; // dwdot[C2H4]/dT
  J[1724] += 0.45 * dqdT;      // dwdot[CH4]/dT
  J[1725] += 0.7494509 * dqdT; // dwdot[C3H6]/dT
  J[1726] += 0.0797288 * dqdT; // dwdot[iC4H8]/dT
  J[1727] += 0.2391865 * dqdT; // dwdot[C4H81]/dT
  J[1731] += 0.2465 * dqdT;    // dwdot[C6H6]/dT
  J[1733] += 0.2368333 * dqdT; // dwdot[C6H5CH3]/dT
  J[1734] += 0.7 * dqdT;       // dwdot[CH3]/dT
  J[1735] -= dqdT;             // dwdot[O2]/dT
  J[1738] += dqdT;             // dwdot[HO2]/dT
  J[1741] += 0.3 * dqdT;       // dwdot[H]/dT

  // reaction 5: HO2 + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186
  // C4H81 + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + H2O2
  // + 0.0797288 iC4H8 a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[16];
  k_f = 0.0698 * exp(2.94 * logT - (6446.20548895846) * invT);
  dlnkfdT = 2.94 * invT + (6446.20548895846) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;              // POSF10325
  wdot[1] += 1.5945764 * q;  // C2H4
  wdot[2] += 0.45 * q;       // CH4
  wdot[3] += 0.7494509 * q;  // C3H6
  wdot[4] += 0.0797288 * q;  // iC4H8
  wdot[5] += 0.2391865 * q;  // C4H81
  wdot[9] += 0.2465 * q;     // C6H6
  wdot[11] += 0.2368333 * q; // C6H5CH3
  wdot[12] += 0.7 * q;       // CH3
  wdot[16] -= q;             // HO2
  wdot[18] += q;             // H2O2
  wdot[19] += 0.3 * q;       // H
  // d()/d[POSF10325]
  dqdci = +k_f * sc[16];
  J[0] -= dqdci;              // dwdot[POSF10325]/d[POSF10325]
  J[1] += 1.5945764 * dqdci;  // dwdot[C2H4]/d[POSF10325]
  J[2] += 0.45 * dqdci;       // dwdot[CH4]/d[POSF10325]
  J[3] += 0.7494509 * dqdci;  // dwdot[C3H6]/d[POSF10325]
  J[4] += 0.0797288 * dqdci;  // dwdot[iC4H8]/d[POSF10325]
  J[5] += 0.2391865 * dqdci;  // dwdot[C4H81]/d[POSF10325]
  J[9] += 0.2465 * dqdci;     // dwdot[C6H6]/d[POSF10325]
  J[11] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[POSF10325]
  J[12] += 0.7 * dqdci;       // dwdot[CH3]/d[POSF10325]
  J[16] -= dqdci;             // dwdot[HO2]/d[POSF10325]
  J[18] += dqdci;             // dwdot[H2O2]/d[POSF10325]
  J[19] += 0.3 * dqdci;       // dwdot[H]/d[POSF10325]
  // d()/d[HO2]
  dqdci = +k_f * sc[0];
  J[672] -= dqdci;             // dwdot[POSF10325]/d[HO2]
  J[673] += 1.5945764 * dqdci; // dwdot[C2H4]/d[HO2]
  J[674] += 0.45 * dqdci;      // dwdot[CH4]/d[HO2]
  J[675] += 0.7494509 * dqdci; // dwdot[C3H6]/d[HO2]
  J[676] += 0.0797288 * dqdci; // dwdot[iC4H8]/d[HO2]
  J[677] += 0.2391865 * dqdci; // dwdot[C4H81]/d[HO2]
  J[681] += 0.2465 * dqdci;    // dwdot[C6H6]/d[HO2]
  J[683] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[HO2]
  J[684] += 0.7 * dqdci;       // dwdot[CH3]/d[HO2]
  J[688] -= dqdci;             // dwdot[HO2]/d[HO2]
  J[690] += dqdci;             // dwdot[H2O2]/d[HO2]
  J[691] += 0.3 * dqdci;       // dwdot[H]/d[HO2]
  // d()/dT
  J[1722] -= dqdT;             // dwdot[POSF10325]/dT
  J[1723] += 1.5945764 * dqdT; // dwdot[C2H4]/dT
  J[1724] += 0.45 * dqdT;      // dwdot[CH4]/dT
  J[1725] += 0.7494509 * dqdT; // dwdot[C3H6]/dT
  J[1726] += 0.0797288 * dqdT; // dwdot[iC4H8]/dT
  J[1727] += 0.2391865 * dqdT; // dwdot[C4H81]/dT
  J[1731] += 0.2465 * dqdT;    // dwdot[C6H6]/dT
  J[1733] += 0.2368333 * dqdT; // dwdot[C6H5CH3]/dT
  J[1734] += 0.7 * dqdT;       // dwdot[CH3]/dT
  J[1738] -= dqdT;             // dwdot[HO2]/dT
  J[1740] += dqdT;             // dwdot[H2O2]/dT
  J[1741] += 0.3 * dqdT;       // dwdot[H]/dT

  // reaction 6: O + POSF10325 => 1.59458 C2H4 + 0.749451 C3H6 + 0.239186 C4H81
  // + 0.236833 C6H5CH3 + 0.2465 C6H6 + 0.7 CH3 + 0.45 CH4 + 0.3 H + OH +
  // 0.0797288 iC4H8 a non-third-body and non-pressure-fall-off reaction forward
  phi_f = sc[0] * sc[14];
  k_f = 8.94e-05 * exp(3.86 * logT - (385.011071007191) * invT);
  dlnkfdT = 3.86 * invT + (385.011071007191) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;              // POSF10325
  wdot[1] += 1.5945764 * q;  // C2H4
  wdot[2] += 0.45 * q;       // CH4
  wdot[3] += 0.7494509 * q;  // C3H6
  wdot[4] += 0.0797288 * q;  // iC4H8
  wdot[5] += 0.2391865 * q;  // C4H81
  wdot[9] += 0.2465 * q;     // C6H6
  wdot[11] += 0.2368333 * q; // C6H5CH3
  wdot[12] += 0.7 * q;       // CH3
  wdot[14] -= q;             // O
  wdot[15] += q;             // OH
  wdot[19] += 0.3 * q;       // H
  // d()/d[POSF10325]
  dqdci = +k_f * sc[14];
  J[0] -= dqdci;              // dwdot[POSF10325]/d[POSF10325]
  J[1] += 1.5945764 * dqdci;  // dwdot[C2H4]/d[POSF10325]
  J[2] += 0.45 * dqdci;       // dwdot[CH4]/d[POSF10325]
  J[3] += 0.7494509 * dqdci;  // dwdot[C3H6]/d[POSF10325]
  J[4] += 0.0797288 * dqdci;  // dwdot[iC4H8]/d[POSF10325]
  J[5] += 0.2391865 * dqdci;  // dwdot[C4H81]/d[POSF10325]
  J[9] += 0.2465 * dqdci;     // dwdot[C6H6]/d[POSF10325]
  J[11] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[POSF10325]
  J[12] += 0.7 * dqdci;       // dwdot[CH3]/d[POSF10325]
  J[14] -= dqdci;             // dwdot[O]/d[POSF10325]
  J[15] += dqdci;             // dwdot[OH]/d[POSF10325]
  J[19] += 0.3 * dqdci;       // dwdot[H]/d[POSF10325]
  // d()/d[O]
  dqdci = +k_f * sc[0];
  J[588] -= dqdci;             // dwdot[POSF10325]/d[O]
  J[589] += 1.5945764 * dqdci; // dwdot[C2H4]/d[O]
  J[590] += 0.45 * dqdci;      // dwdot[CH4]/d[O]
  J[591] += 0.7494509 * dqdci; // dwdot[C3H6]/d[O]
  J[592] += 0.0797288 * dqdci; // dwdot[iC4H8]/d[O]
  J[593] += 0.2391865 * dqdci; // dwdot[C4H81]/d[O]
  J[597] += 0.2465 * dqdci;    // dwdot[C6H6]/d[O]
  J[599] += 0.2368333 * dqdci; // dwdot[C6H5CH3]/d[O]
  J[600] += 0.7 * dqdci;       // dwdot[CH3]/d[O]
  J[602] -= dqdci;             // dwdot[O]/d[O]
  J[603] += dqdci;             // dwdot[OH]/d[O]
  J[607] += 0.3 * dqdci;       // dwdot[H]/d[O]
  // d()/dT
  J[1722] -= dqdT;             // dwdot[POSF10325]/dT
  J[1723] += 1.5945764 * dqdT; // dwdot[C2H4]/dT
  J[1724] += 0.45 * dqdT;      // dwdot[CH4]/dT
  J[1725] += 0.7494509 * dqdT; // dwdot[C3H6]/dT
  J[1726] += 0.0797288 * dqdT; // dwdot[iC4H8]/dT
  J[1727] += 0.2391865 * dqdT; // dwdot[C4H81]/dT
  J[1731] += 0.2465 * dqdT;    // dwdot[C6H6]/dT
  J[1733] += 0.2368333 * dqdT; // dwdot[C6H5CH3]/dT
  J[1734] += 0.7 * dqdT;       // dwdot[CH3]/dT
  J[1736] -= dqdT;             // dwdot[O]/dT
  J[1737] += dqdT;             // dwdot[OH]/dT
  J[1741] += 0.3 * dqdT;       // dwdot[H]/dT

  // reaction 7: H + O2 <=> O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[19];
  k_f = 26440000000 * exp(-0.6707 * logT - (8575.31520197823) * invT);
  dlnkfdT = -0.6707 * invT + (8575.31520197823) * invT2;
  // reverse
  phi_r = sc[14] * sc[15];
  Kc = exp(g_RT[13] - g_RT[14] - g_RT[15] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[19]) + (h_RT[14] + h_RT[15]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // O2
  wdot[14] += q; // O
  wdot[15] += q; // OH
  wdot[19] -= q; // H
  // d()/d[O2]
  dqdci = +k_f * sc[19];
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[560] += dqdci; // dwdot[O]/d[O2]
  J[561] += dqdci; // dwdot[OH]/d[O2]
  J[565] -= dqdci; // dwdot[H]/d[O2]
  // d()/d[O]
  dqdci = -k_r * sc[15];
  J[601] -= dqdci; // dwdot[O2]/d[O]
  J[602] += dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[607] -= dqdci; // dwdot[H]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[14];
  J[643] -= dqdci; // dwdot[O2]/d[OH]
  J[644] += dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[649] -= dqdci; // dwdot[H]/d[OH]
  // d()/d[H]
  dqdci = +k_f * sc[13];
  J[811] -= dqdci; // dwdot[O2]/d[H]
  J[812] += dqdci; // dwdot[O]/d[H]
  J[813] += dqdci; // dwdot[OH]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1736] += dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 8: H2 + O <=> H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[14];
  k_f = 0.04589 * exp(2.7 * logT - (3150.13632793755) * invT);
  dlnkfdT = 2.7 * invT + (3150.13632793755) * invT2;
  // reverse
  phi_r = sc[15] * sc[19];
  Kc = exp(g_RT[6] + g_RT[14] - g_RT[15] - g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[14]) + (h_RT[15] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] -= q;  // H2
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[19] += q; // H
  // d()/d[H2]
  dqdci = +k_f * sc[14];
  J[258] -= dqdci; // dwdot[H2]/d[H2]
  J[266] -= dqdci; // dwdot[O]/d[H2]
  J[267] += dqdci; // dwdot[OH]/d[H2]
  J[271] += dqdci; // dwdot[H]/d[H2]
  // d()/d[O]
  dqdci = +k_f * sc[6];
  J[594] -= dqdci; // dwdot[H2]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[607] += dqdci; // dwdot[H]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[19];
  J[636] -= dqdci; // dwdot[H2]/d[OH]
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[649] += dqdci; // dwdot[H]/d[OH]
  // d()/d[H]
  dqdci = -k_r * sc[15];
  J[804] -= dqdci; // dwdot[H2]/d[H]
  J[812] -= dqdci; // dwdot[O]/d[H]
  J[813] += dqdci; // dwdot[OH]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1728] -= dqdT; // dwdot[H2]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1741] += dqdT; // dwdot[H]/dT

  // reaction 9: H2 + OH <=> H + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[15];
  k_f = 173.4 * exp(1.51 * logT - (1726.03316371019) * invT);
  dlnkfdT = 1.51 * invT + (1726.03316371019) * invT2;
  // reverse
  phi_r = sc[17] * sc[19];
  Kc = exp(g_RT[6] + g_RT[15] - g_RT[17] - g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[15]) + (h_RT[17] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] -= q;  // H2
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[19] += q; // H
  // d()/d[H2]
  dqdci = +k_f * sc[15];
  J[258] -= dqdci; // dwdot[H2]/d[H2]
  J[267] -= dqdci; // dwdot[OH]/d[H2]
  J[269] += dqdci; // dwdot[H2O]/d[H2]
  J[271] += dqdci; // dwdot[H]/d[H2]
  // d()/d[OH]
  dqdci = +k_f * sc[6];
  J[636] -= dqdci; // dwdot[H2]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[649] += dqdci; // dwdot[H]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[19];
  J[720] -= dqdci; // dwdot[H2]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[733] += dqdci; // dwdot[H]/d[H2O]
  // d()/d[H]
  dqdci = -k_r * sc[17];
  J[804] -= dqdci; // dwdot[H2]/d[H]
  J[813] -= dqdci; // dwdot[OH]/d[H]
  J[815] += dqdci; // dwdot[H2O]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1728] -= dqdT; // dwdot[H2]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1741] += dqdT; // dwdot[H]/dT

  // reaction 10: 2 OH <=> H2O + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[15] * sc[15]);
  k_f = 0.03973 * exp(2.4 * logT - (-1061.78716484796) * invT);
  dlnkfdT = 2.4 * invT + (-1061.78716484796) * invT2;
  // reverse
  phi_r = sc[14] * sc[17];
  Kc = exp(-g_RT[14] + 2.000000 * g_RT[15] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[15]) + (h_RT[14] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] += q;     // O
  wdot[15] -= 2 * q; // OH
  wdot[17] += q;     // H2O
  // d()/d[O]
  dqdci = -k_r * sc[17];
  J[602] += dqdci;      // dwdot[O]/d[O]
  J[603] += -2 * dqdci; // dwdot[OH]/d[O]
  J[605] += dqdci;      // dwdot[H2O]/d[O]
  // d()/d[OH]
  dqdci = +k_f * 2.000000 * sc[15];
  J[644] += dqdci;      // dwdot[O]/d[OH]
  J[645] += -2 * dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci;      // dwdot[H2O]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[14];
  J[728] += dqdci;      // dwdot[O]/d[H2O]
  J[729] += -2 * dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci;      // dwdot[H2O]/d[H2O]
  // d()/dT
  J[1736] += dqdT;      // dwdot[O]/dT
  J[1737] += -2 * dqdT; // dwdot[OH]/dT
  J[1739] += dqdT;      // dwdot[H2O]/dT

  // reaction 17: H2 + O2 <=> H + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[13];
  k_f = 0.5916 * exp(2.433 * logT - (26923.0980538841) * invT);
  dlnkfdT = 2.433 * invT + (26923.0980538841) * invT2;
  // reverse
  phi_r = sc[16] * sc[19];
  Kc = exp(g_RT[6] + g_RT[13] - g_RT[16] - g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[13]) + (h_RT[16] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] -= q;  // H2
  wdot[13] -= q; // O2
  wdot[16] += q; // HO2
  wdot[19] += q; // H
  // d()/d[H2]
  dqdci = +k_f * sc[13];
  J[258] -= dqdci; // dwdot[H2]/d[H2]
  J[265] -= dqdci; // dwdot[O2]/d[H2]
  J[268] += dqdci; // dwdot[HO2]/d[H2]
  J[271] += dqdci; // dwdot[H]/d[H2]
  // d()/d[O2]
  dqdci = +k_f * sc[6];
  J[552] -= dqdci; // dwdot[H2]/d[O2]
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[562] += dqdci; // dwdot[HO2]/d[O2]
  J[565] += dqdci; // dwdot[H]/d[O2]
  // d()/d[HO2]
  dqdci = -k_r * sc[19];
  J[678] -= dqdci; // dwdot[H2]/d[HO2]
  J[685] -= dqdci; // dwdot[O2]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[691] += dqdci; // dwdot[H]/d[HO2]
  // d()/d[H]
  dqdci = -k_r * sc[16];
  J[804] -= dqdci; // dwdot[H2]/d[H]
  J[811] -= dqdci; // dwdot[O2]/d[H]
  J[814] += dqdci; // dwdot[HO2]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1728] -= dqdT; // dwdot[H2]/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1741] += dqdT; // dwdot[H]/dT

  // reaction 19: H + HO2 <=> 2 OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[19];
  k_f = 74850000 * exp(-(148.448916412392) * invT);
  dlnkfdT = (148.448916412392) * invT2;
  // reverse
  phi_r = (sc[15] * sc[15]);
  Kc = exp(-2.000000 * g_RT[15] + g_RT[16] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[16] + h_RT[19]) + (2.000000 * h_RT[15]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] += 2 * q; // OH
  wdot[16] -= q;     // HO2
  wdot[19] -= q;     // H
  // d()/d[OH]
  dqdci = -k_r * 2.000000 * sc[15];
  J[645] += 2 * dqdci; // dwdot[OH]/d[OH]
  J[646] -= dqdci;     // dwdot[HO2]/d[OH]
  J[649] -= dqdci;     // dwdot[H]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[19];
  J[687] += 2 * dqdci; // dwdot[OH]/d[HO2]
  J[688] -= dqdci;     // dwdot[HO2]/d[HO2]
  J[691] -= dqdci;     // dwdot[H]/d[HO2]
  // d()/d[H]
  dqdci = +k_f * sc[16];
  J[813] += 2 * dqdci; // dwdot[OH]/d[H]
  J[814] -= dqdci;     // dwdot[HO2]/d[H]
  J[817] -= dqdci;     // dwdot[H]/d[H]
  // d()/dT
  J[1737] += 2 * dqdT; // dwdot[OH]/dT
  J[1738] -= dqdT;     // dwdot[HO2]/dT
  J[1741] -= dqdT;     // dwdot[H]/dT

  // reaction 20: HO2 + O <=> O2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[16];
  k_f = 40000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[13] * sc[15];
  Kc = exp(-g_RT[13] + g_RT[14] - g_RT[15] + g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[16]) + (h_RT[13] + h_RT[15]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] += q; // O2
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[16] -= q; // HO2
  // d()/d[O2]
  dqdci = -k_r * sc[15];
  J[559] += dqdci; // dwdot[O2]/d[O2]
  J[560] -= dqdci; // dwdot[O]/d[O2]
  J[561] += dqdci; // dwdot[OH]/d[O2]
  J[562] -= dqdci; // dwdot[HO2]/d[O2]
  // d()/d[O]
  dqdci = +k_f * sc[16];
  J[601] += dqdci; // dwdot[O2]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[604] -= dqdci; // dwdot[HO2]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[13];
  J[643] += dqdci; // dwdot[O2]/d[OH]
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[646] -= dqdci; // dwdot[HO2]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[14];
  J[685] += dqdci; // dwdot[O2]/d[HO2]
  J[686] -= dqdci; // dwdot[O]/d[HO2]
  J[687] += dqdci; // dwdot[OH]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[1735] += dqdT; // dwdot[O2]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT

  // reaction 21: 2 HO2 <=> H2O2 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[16] * sc[16]);
  k_f = 130000 * exp(-(-820.243165261693) * invT);
  dlnkfdT = (-820.243165261693) * invT2;
  // reverse
  phi_r = sc[13] * sc[18];
  Kc = exp(-g_RT[13] + 2.000000 * g_RT[16] - g_RT[18]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[16]) + (h_RT[13] + h_RT[18]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] += q;     // O2
  wdot[16] -= 2 * q; // HO2
  wdot[18] += q;     // H2O2
  // d()/d[O2]
  dqdci = -k_r * sc[18];
  J[559] += dqdci;      // dwdot[O2]/d[O2]
  J[562] += -2 * dqdci; // dwdot[HO2]/d[O2]
  J[564] += dqdci;      // dwdot[H2O2]/d[O2]
  // d()/d[HO2]
  dqdci = +k_f * 2.000000 * sc[16];
  J[685] += dqdci;      // dwdot[O2]/d[HO2]
  J[688] += -2 * dqdci; // dwdot[HO2]/d[HO2]
  J[690] += dqdci;      // dwdot[H2O2]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[13];
  J[769] += dqdci;      // dwdot[O2]/d[H2O2]
  J[772] += -2 * dqdci; // dwdot[HO2]/d[H2O2]
  J[774] += dqdci;      // dwdot[H2O2]/d[H2O2]
  // d()/dT
  J[1735] += dqdT;      // dwdot[O2]/dT
  J[1738] += -2 * dqdT; // dwdot[HO2]/dT
  J[1740] += dqdT;      // dwdot[H2O2]/dT

  // reaction 22: 2 HO2 <=> H2O2 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[16] * sc[16]);
  k_f = 365800000 * exp(-(6038.59998965664) * invT);
  dlnkfdT = (6038.59998965664) * invT2;
  // reverse
  phi_r = sc[13] * sc[18];
  Kc = exp(-g_RT[13] + 2.000000 * g_RT[16] - g_RT[18]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[16]) + (h_RT[13] + h_RT[18]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] += q;     // O2
  wdot[16] -= 2 * q; // HO2
  wdot[18] += q;     // H2O2
  // d()/d[O2]
  dqdci = -k_r * sc[18];
  J[559] += dqdci;      // dwdot[O2]/d[O2]
  J[562] += -2 * dqdci; // dwdot[HO2]/d[O2]
  J[564] += dqdci;      // dwdot[H2O2]/d[O2]
  // d()/d[HO2]
  dqdci = +k_f * 2.000000 * sc[16];
  J[685] += dqdci;      // dwdot[O2]/d[HO2]
  J[688] += -2 * dqdci; // dwdot[HO2]/d[HO2]
  J[690] += dqdci;      // dwdot[H2O2]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[13];
  J[769] += dqdci;      // dwdot[O2]/d[H2O2]
  J[772] += -2 * dqdci; // dwdot[HO2]/d[H2O2]
  J[774] += dqdci;      // dwdot[H2O2]/d[H2O2]
  // d()/dT
  J[1735] += dqdT;      // dwdot[O2]/dT
  J[1738] += -2 * dqdT; // dwdot[HO2]/dT
  J[1740] += dqdT;      // dwdot[H2O2]/dT

  // reaction 23: HO2 + OH <=> H2O + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[16];
  k_f = 1410000000000 * exp(-1.76 * logT - (30.1929999482832) * invT);
  dlnkfdT = -1.76 * invT + (30.1929999482832) * invT2;
  // reverse
  phi_r = sc[13] * sc[17];
  Kc = exp(-g_RT[13] + g_RT[15] + g_RT[16] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[16]) + (h_RT[13] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] += q; // O2
  wdot[15] -= q; // OH
  wdot[16] -= q; // HO2
  wdot[17] += q; // H2O
  // d()/d[O2]
  dqdci = -k_r * sc[17];
  J[559] += dqdci; // dwdot[O2]/d[O2]
  J[561] -= dqdci; // dwdot[OH]/d[O2]
  J[562] -= dqdci; // dwdot[HO2]/d[O2]
  J[563] += dqdci; // dwdot[H2O]/d[O2]
  // d()/d[OH]
  dqdci = +k_f * sc[16];
  J[643] += dqdci; // dwdot[O2]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[646] -= dqdci; // dwdot[HO2]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[15];
  J[685] += dqdci; // dwdot[O2]/d[HO2]
  J[687] -= dqdci; // dwdot[OH]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[689] += dqdci; // dwdot[H2O]/d[HO2]
  // d()/d[H2O]
  dqdci = -k_r * sc[13];
  J[727] += dqdci; // dwdot[O2]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[730] -= dqdci; // dwdot[HO2]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  // d()/dT
  J[1735] += dqdT; // dwdot[O2]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT

  // reaction 24: HO2 + OH <=> H2O + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[16];
  k_f = 5.37e+64 * exp(-16.72 * logT - (16555.8283049753) * invT);
  dlnkfdT = -16.72 * invT + (16555.8283049753) * invT2;
  // reverse
  phi_r = sc[13] * sc[17];
  Kc = exp(-g_RT[13] + g_RT[15] + g_RT[16] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[16]) + (h_RT[13] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] += q; // O2
  wdot[15] -= q; // OH
  wdot[16] -= q; // HO2
  wdot[17] += q; // H2O
  // d()/d[O2]
  dqdci = -k_r * sc[17];
  J[559] += dqdci; // dwdot[O2]/d[O2]
  J[561] -= dqdci; // dwdot[OH]/d[O2]
  J[562] -= dqdci; // dwdot[HO2]/d[O2]
  J[563] += dqdci; // dwdot[H2O]/d[O2]
  // d()/d[OH]
  dqdci = +k_f * sc[16];
  J[643] += dqdci; // dwdot[O2]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[646] -= dqdci; // dwdot[HO2]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[15];
  J[685] += dqdci; // dwdot[O2]/d[HO2]
  J[687] -= dqdci; // dwdot[OH]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[689] += dqdci; // dwdot[H2O]/d[HO2]
  // d()/d[H2O]
  dqdci = -k_r * sc[13];
  J[727] += dqdci; // dwdot[O2]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[730] -= dqdci; // dwdot[HO2]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  // d()/dT
  J[1735] += dqdT; // dwdot[O2]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT

  // reaction 25: HO2 + OH <=> H2O + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[16];
  k_f = 2510000 * exp(2 * logT - (20128.6666321888) * invT);
  dlnkfdT = 2 * invT + (20128.6666321888) * invT2;
  // reverse
  phi_r = sc[13] * sc[17];
  Kc = exp(-g_RT[13] + g_RT[15] + g_RT[16] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[16]) + (h_RT[13] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] += q; // O2
  wdot[15] -= q; // OH
  wdot[16] -= q; // HO2
  wdot[17] += q; // H2O
  // d()/d[O2]
  dqdci = -k_r * sc[17];
  J[559] += dqdci; // dwdot[O2]/d[O2]
  J[561] -= dqdci; // dwdot[OH]/d[O2]
  J[562] -= dqdci; // dwdot[HO2]/d[O2]
  J[563] += dqdci; // dwdot[H2O]/d[O2]
  // d()/d[OH]
  dqdci = +k_f * sc[16];
  J[643] += dqdci; // dwdot[O2]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[646] -= dqdci; // dwdot[HO2]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[15];
  J[685] += dqdci; // dwdot[O2]/d[HO2]
  J[687] -= dqdci; // dwdot[OH]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[689] += dqdci; // dwdot[H2O]/d[HO2]
  // d()/d[H2O]
  dqdci = -k_r * sc[13];
  J[727] += dqdci; // dwdot[O2]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[730] -= dqdci; // dwdot[HO2]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  // d()/dT
  J[1735] += dqdT; // dwdot[O2]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT

  // reaction 26: H + H2O2 <=> H2 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[18] * sc[19];
  k_f = 6.05 * exp(2 * logT - (2616.72666218454) * invT);
  dlnkfdT = 2 * invT + (2616.72666218454) * invT2;
  // reverse
  phi_r = sc[6] * sc[16];
  Kc = exp(-g_RT[6] - g_RT[16] + g_RT[18] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[18] + h_RT[19]) + (h_RT[6] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2
  wdot[16] += q; // HO2
  wdot[18] -= q; // H2O2
  wdot[19] -= q; // H
  // d()/d[H2]
  dqdci = -k_r * sc[16];
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[268] += dqdci; // dwdot[HO2]/d[H2]
  J[270] -= dqdci; // dwdot[H2O2]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  // d()/d[HO2]
  dqdci = -k_r * sc[6];
  J[678] += dqdci; // dwdot[H2]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[690] -= dqdci; // dwdot[H2O2]/d[HO2]
  J[691] -= dqdci; // dwdot[H]/d[HO2]
  // d()/d[H2O2]
  dqdci = +k_f * sc[19];
  J[762] += dqdci; // dwdot[H2]/d[H2O2]
  J[772] += dqdci; // dwdot[HO2]/d[H2O2]
  J[774] -= dqdci; // dwdot[H2O2]/d[H2O2]
  J[775] -= dqdci; // dwdot[H]/d[H2O2]
  // d()/d[H]
  dqdci = +k_f * sc[18];
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[814] += dqdci; // dwdot[HO2]/d[H]
  J[816] -= dqdci; // dwdot[H2O2]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1740] -= dqdT; // dwdot[H2O2]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 27: H + H2O2 <=> H2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[18] * sc[19];
  k_f = 24100000 * exp(-(1997.77016324474) * invT);
  dlnkfdT = (1997.77016324474) * invT2;
  // reverse
  phi_r = sc[15] * sc[17];
  Kc = exp(-g_RT[15] - g_RT[17] + g_RT[18] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[18] + h_RT[19]) + (h_RT[15] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] += q; // OH
  wdot[17] += q; // H2O
  wdot[18] -= q; // H2O2
  wdot[19] -= q; // H
  // d()/d[OH]
  dqdci = -k_r * sc[17];
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[648] -= dqdci; // dwdot[H2O2]/d[OH]
  J[649] -= dqdci; // dwdot[H]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[15];
  J[729] += dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[732] -= dqdci; // dwdot[H2O2]/d[H2O]
  J[733] -= dqdci; // dwdot[H]/d[H2O]
  // d()/d[H2O2]
  dqdci = +k_f * sc[19];
  J[771] += dqdci; // dwdot[OH]/d[H2O2]
  J[773] += dqdci; // dwdot[H2O]/d[H2O2]
  J[774] -= dqdci; // dwdot[H2O2]/d[H2O2]
  J[775] -= dqdci; // dwdot[H]/d[H2O2]
  // d()/d[H]
  dqdci = +k_f * sc[18];
  J[813] += dqdci; // dwdot[OH]/d[H]
  J[815] += dqdci; // dwdot[H2O]/d[H]
  J[816] -= dqdci; // dwdot[H2O2]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1740] -= dqdT; // dwdot[H2O2]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 28: H2O2 + O <=> HO2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[18];
  k_f = 9.63 * exp(2 * logT - (1997.77016324474) * invT);
  dlnkfdT = 2 * invT + (1997.77016324474) * invT2;
  // reverse
  phi_r = sc[15] * sc[16];
  Kc = exp(g_RT[14] - g_RT[15] - g_RT[16] + g_RT[18]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[18]) + (h_RT[15] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[16] += q; // HO2
  wdot[18] -= q; // H2O2
  // d()/d[O]
  dqdci = +k_f * sc[18];
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[604] += dqdci; // dwdot[HO2]/d[O]
  J[606] -= dqdci; // dwdot[H2O2]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[16];
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[646] += dqdci; // dwdot[HO2]/d[OH]
  J[648] -= dqdci; // dwdot[H2O2]/d[OH]
  // d()/d[HO2]
  dqdci = -k_r * sc[15];
  J[686] -= dqdci; // dwdot[O]/d[HO2]
  J[687] += dqdci; // dwdot[OH]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[690] -= dqdci; // dwdot[H2O2]/d[HO2]
  // d()/d[H2O2]
  dqdci = +k_f * sc[14];
  J[770] -= dqdci; // dwdot[O]/d[H2O2]
  J[771] += dqdci; // dwdot[OH]/d[H2O2]
  J[772] += dqdci; // dwdot[HO2]/d[H2O2]
  J[774] -= dqdci; // dwdot[H2O2]/d[H2O2]
  // d()/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1740] -= dqdT; // dwdot[H2O2]/dT

  // reaction 29: H2O2 + OH <=> H2O + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[18];
  k_f = 2.67e+35 * exp(-7 * logT - (18920.9466342575) * invT);
  dlnkfdT = -7 * invT + (18920.9466342575) * invT2;
  // reverse
  phi_r = sc[16] * sc[17];
  Kc = exp(g_RT[15] - g_RT[16] - g_RT[17] + g_RT[18]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[18]) + (h_RT[16] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] -= q; // OH
  wdot[16] += q; // HO2
  wdot[17] += q; // H2O
  wdot[18] -= q; // H2O2
  // d()/d[OH]
  dqdci = +k_f * sc[18];
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[646] += dqdci; // dwdot[HO2]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[648] -= dqdci; // dwdot[H2O2]/d[OH]
  // d()/d[HO2]
  dqdci = -k_r * sc[17];
  J[687] -= dqdci; // dwdot[OH]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[689] += dqdci; // dwdot[H2O]/d[HO2]
  J[690] -= dqdci; // dwdot[H2O2]/d[HO2]
  // d()/d[H2O]
  dqdci = -k_r * sc[16];
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[730] += dqdci; // dwdot[HO2]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[732] -= dqdci; // dwdot[H2O2]/d[H2O]
  // d()/d[H2O2]
  dqdci = +k_f * sc[15];
  J[771] -= dqdci; // dwdot[OH]/d[H2O2]
  J[772] += dqdci; // dwdot[HO2]/d[H2O2]
  J[773] += dqdci; // dwdot[H2O]/d[H2O2]
  J[774] -= dqdci; // dwdot[H2O2]/d[H2O2]
  // d()/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1740] -= dqdT; // dwdot[H2O2]/dT

  // reaction 31: CO + OH <=> CO2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[15];
  k_f = 0.07046 * exp(2.053 * logT - (-178.979071526765) * invT);
  dlnkfdT = 2.053 * invT + (-178.979071526765) * invT2;
  // reverse
  phi_r = sc[19] * sc[25];
  Kc = exp(g_RT[8] + g_RT[15] - g_RT[19] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[15]) + (h_RT[19] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] -= q;  // CO
  wdot[15] -= q; // OH
  wdot[19] += q; // H
  wdot[25] += q; // CO2
  // d()/d[CO]
  dqdci = +k_f * sc[15];
  J[344] -= dqdci; // dwdot[CO]/d[CO]
  J[351] -= dqdci; // dwdot[OH]/d[CO]
  J[355] += dqdci; // dwdot[H]/d[CO]
  J[361] += dqdci; // dwdot[CO2]/d[CO]
  // d()/d[OH]
  dqdci = +k_f * sc[8];
  J[638] -= dqdci; // dwdot[CO]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[649] += dqdci; // dwdot[H]/d[OH]
  J[655] += dqdci; // dwdot[CO2]/d[OH]
  // d()/d[H]
  dqdci = -k_r * sc[25];
  J[806] -= dqdci; // dwdot[CO]/d[H]
  J[813] -= dqdci; // dwdot[OH]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[823] += dqdci; // dwdot[CO2]/d[H]
  // d()/d[CO2]
  dqdci = -k_r * sc[19];
  J[1058] -= dqdci; // dwdot[CO]/d[CO2]
  J[1065] -= dqdci; // dwdot[OH]/d[CO2]
  J[1069] += dqdci; // dwdot[H]/d[CO2]
  J[1075] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[1730] -= dqdT; // dwdot[CO]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1747] += dqdT; // dwdot[CO2]/dT

  // reaction 32: CO + OH <=> CO2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[15];
  k_f = 5757000 * exp(-0.664 * logT - (166.98238621398) * invT);
  dlnkfdT = -0.664 * invT + (166.98238621398) * invT2;
  // reverse
  phi_r = sc[19] * sc[25];
  Kc = exp(g_RT[8] + g_RT[15] - g_RT[19] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[15]) + (h_RT[19] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] -= q;  // CO
  wdot[15] -= q; // OH
  wdot[19] += q; // H
  wdot[25] += q; // CO2
  // d()/d[CO]
  dqdci = +k_f * sc[15];
  J[344] -= dqdci; // dwdot[CO]/d[CO]
  J[351] -= dqdci; // dwdot[OH]/d[CO]
  J[355] += dqdci; // dwdot[H]/d[CO]
  J[361] += dqdci; // dwdot[CO2]/d[CO]
  // d()/d[OH]
  dqdci = +k_f * sc[8];
  J[638] -= dqdci; // dwdot[CO]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[649] += dqdci; // dwdot[H]/d[OH]
  J[655] += dqdci; // dwdot[CO2]/d[OH]
  // d()/d[H]
  dqdci = -k_r * sc[25];
  J[806] -= dqdci; // dwdot[CO]/d[H]
  J[813] -= dqdci; // dwdot[OH]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[823] += dqdci; // dwdot[CO2]/d[H]
  // d()/d[CO2]
  dqdci = -k_r * sc[19];
  J[1058] -= dqdci; // dwdot[CO]/d[CO2]
  J[1065] -= dqdci; // dwdot[OH]/d[CO2]
  J[1069] += dqdci; // dwdot[H]/d[CO2]
  J[1075] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[1730] -= dqdT; // dwdot[CO]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1747] += dqdT; // dwdot[CO2]/dT

  // reaction 33: CO + O2 <=> CO2 + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[13];
  k_f = 1119000 * exp(-(24003.4349588851) * invT);
  dlnkfdT = (24003.4349588851) * invT2;
  // reverse
  phi_r = sc[14] * sc[25];
  Kc = exp(g_RT[8] + g_RT[13] - g_RT[14] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[13]) + (h_RT[14] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] -= q;  // CO
  wdot[13] -= q; // O2
  wdot[14] += q; // O
  wdot[25] += q; // CO2
  // d()/d[CO]
  dqdci = +k_f * sc[13];
  J[344] -= dqdci; // dwdot[CO]/d[CO]
  J[349] -= dqdci; // dwdot[O2]/d[CO]
  J[350] += dqdci; // dwdot[O]/d[CO]
  J[361] += dqdci; // dwdot[CO2]/d[CO]
  // d()/d[O2]
  dqdci = +k_f * sc[8];
  J[554] -= dqdci; // dwdot[CO]/d[O2]
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[560] += dqdci; // dwdot[O]/d[O2]
  J[571] += dqdci; // dwdot[CO2]/d[O2]
  // d()/d[O]
  dqdci = -k_r * sc[25];
  J[596] -= dqdci; // dwdot[CO]/d[O]
  J[601] -= dqdci; // dwdot[O2]/d[O]
  J[602] += dqdci; // dwdot[O]/d[O]
  J[613] += dqdci; // dwdot[CO2]/d[O]
  // d()/d[CO2]
  dqdci = -k_r * sc[14];
  J[1058] -= dqdci; // dwdot[CO]/d[CO2]
  J[1063] -= dqdci; // dwdot[O2]/d[CO2]
  J[1064] += dqdci; // dwdot[O]/d[CO2]
  J[1075] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[1730] -= dqdT; // dwdot[CO]/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1736] += dqdT; // dwdot[O]/dT
  J[1747] += dqdT; // dwdot[CO2]/dT

  // reaction 34: CO + HO2 <=> CO2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[16];
  k_f = 0.157 * exp(2.18 * logT - (9029.02038003442) * invT);
  dlnkfdT = 2.18 * invT + (9029.02038003442) * invT2;
  // reverse
  phi_r = sc[15] * sc[25];
  Kc = exp(g_RT[8] - g_RT[15] + g_RT[16] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[16]) + (h_RT[15] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] -= q;  // CO
  wdot[15] += q; // OH
  wdot[16] -= q; // HO2
  wdot[25] += q; // CO2
  // d()/d[CO]
  dqdci = +k_f * sc[16];
  J[344] -= dqdci; // dwdot[CO]/d[CO]
  J[351] += dqdci; // dwdot[OH]/d[CO]
  J[352] -= dqdci; // dwdot[HO2]/d[CO]
  J[361] += dqdci; // dwdot[CO2]/d[CO]
  // d()/d[OH]
  dqdci = -k_r * sc[25];
  J[638] -= dqdci; // dwdot[CO]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[646] -= dqdci; // dwdot[HO2]/d[OH]
  J[655] += dqdci; // dwdot[CO2]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[8];
  J[680] -= dqdci; // dwdot[CO]/d[HO2]
  J[687] += dqdci; // dwdot[OH]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[697] += dqdci; // dwdot[CO2]/d[HO2]
  // d()/d[CO2]
  dqdci = -k_r * sc[15];
  J[1058] -= dqdci; // dwdot[CO]/d[CO2]
  J[1065] += dqdci; // dwdot[OH]/d[CO2]
  J[1066] -= dqdci; // dwdot[HO2]/d[CO2]
  J[1075] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[1730] -= dqdT; // dwdot[CO]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1747] += dqdT; // dwdot[CO2]/dT

  // reaction 35: H + HCO <=> CO + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[22];
  k_f = 120000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[8];
  Kc = exp(-g_RT[6] - g_RT[8] + g_RT[19] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[22]) + (h_RT[6] + h_RT[8]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2
  wdot[8] += q;  // CO
  wdot[19] -= q; // H
  wdot[22] -= q; // HCO
  // d()/d[H2]
  dqdci = -k_r * sc[8];
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[260] += dqdci; // dwdot[CO]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[274] -= dqdci; // dwdot[HCO]/d[H2]
  // d()/d[CO]
  dqdci = -k_r * sc[6];
  J[342] += dqdci; // dwdot[H2]/d[CO]
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[355] -= dqdci; // dwdot[H]/d[CO]
  J[358] -= dqdci; // dwdot[HCO]/d[CO]
  // d()/d[H]
  dqdci = +k_f * sc[22];
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[806] += dqdci; // dwdot[CO]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[820] -= dqdci; // dwdot[HCO]/d[H]
  // d()/d[HCO]
  dqdci = +k_f * sc[19];
  J[930] += dqdci; // dwdot[H2]/d[HCO]
  J[932] += dqdci; // dwdot[CO]/d[HCO]
  J[943] -= dqdci; // dwdot[H]/d[HCO]
  J[946] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT

  // reaction 36: HCO + O <=> CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[22];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[15];
  Kc = exp(-g_RT[8] + g_RT[14] - g_RT[15] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[22]) + (h_RT[8] + h_RT[15]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[22] -= q; // HCO
  // d()/d[CO]
  dqdci = -k_r * sc[15];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[350] -= dqdci; // dwdot[O]/d[CO]
  J[351] += dqdci; // dwdot[OH]/d[CO]
  J[358] -= dqdci; // dwdot[HCO]/d[CO]
  // d()/d[O]
  dqdci = +k_f * sc[22];
  J[596] += dqdci; // dwdot[CO]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[610] -= dqdci; // dwdot[HCO]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[8];
  J[638] += dqdci; // dwdot[CO]/d[OH]
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[652] -= dqdci; // dwdot[HCO]/d[OH]
  // d()/d[HCO]
  dqdci = +k_f * sc[14];
  J[932] += dqdci; // dwdot[CO]/d[HCO]
  J[938] -= dqdci; // dwdot[O]/d[HCO]
  J[939] += dqdci; // dwdot[OH]/d[HCO]
  J[946] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT

  // reaction 37: HCO + O <=> CO2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[22];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[19] * sc[25];
  Kc = exp(g_RT[14] - g_RT[19] + g_RT[22] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[22]) + (h_RT[19] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[19] += q; // H
  wdot[22] -= q; // HCO
  wdot[25] += q; // CO2
  // d()/d[O]
  dqdci = +k_f * sc[22];
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[607] += dqdci; // dwdot[H]/d[O]
  J[610] -= dqdci; // dwdot[HCO]/d[O]
  J[613] += dqdci; // dwdot[CO2]/d[O]
  // d()/d[H]
  dqdci = -k_r * sc[25];
  J[812] -= dqdci; // dwdot[O]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[820] -= dqdci; // dwdot[HCO]/d[H]
  J[823] += dqdci; // dwdot[CO2]/d[H]
  // d()/d[HCO]
  dqdci = +k_f * sc[14];
  J[938] -= dqdci; // dwdot[O]/d[HCO]
  J[943] += dqdci; // dwdot[H]/d[HCO]
  J[946] -= dqdci; // dwdot[HCO]/d[HCO]
  J[949] += dqdci; // dwdot[CO2]/d[HCO]
  // d()/d[CO2]
  dqdci = -k_r * sc[19];
  J[1064] -= dqdci; // dwdot[O]/d[CO2]
  J[1069] += dqdci; // dwdot[H]/d[CO2]
  J[1072] -= dqdci; // dwdot[HCO]/d[CO2]
  J[1075] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT
  J[1747] += dqdT; // dwdot[CO2]/dT

  // reaction 38: HCO + OH <=> CO + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[22];
  k_f = 30200000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[17];
  Kc = exp(-g_RT[8] + g_RT[15] - g_RT[17] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[22]) + (h_RT[8] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[22] -= q; // HCO
  // d()/d[CO]
  dqdci = -k_r * sc[17];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[351] -= dqdci; // dwdot[OH]/d[CO]
  J[353] += dqdci; // dwdot[H2O]/d[CO]
  J[358] -= dqdci; // dwdot[HCO]/d[CO]
  // d()/d[OH]
  dqdci = +k_f * sc[22];
  J[638] += dqdci; // dwdot[CO]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[652] -= dqdci; // dwdot[HCO]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[8];
  J[722] += dqdci; // dwdot[CO]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[736] -= dqdci; // dwdot[HCO]/d[H2O]
  // d()/d[HCO]
  dqdci = +k_f * sc[15];
  J[932] += dqdci; // dwdot[CO]/d[HCO]
  J[939] -= dqdci; // dwdot[OH]/d[HCO]
  J[941] += dqdci; // dwdot[H2O]/d[HCO]
  J[946] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT

  // reaction 41: HCO + O2 <=> CO + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[22];
  k_f = 12040 * exp(0.807 * logT - (-365.838516040031) * invT);
  dlnkfdT = 0.807 * invT + (-365.838516040031) * invT2;
  // reverse
  phi_r = sc[8] * sc[16];
  Kc = exp(-g_RT[8] + g_RT[13] - g_RT[16] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[22]) + (h_RT[8] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[13] -= q; // O2
  wdot[16] += q; // HO2
  wdot[22] -= q; // HCO
  // d()/d[CO]
  dqdci = -k_r * sc[16];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[349] -= dqdci; // dwdot[O2]/d[CO]
  J[352] += dqdci; // dwdot[HO2]/d[CO]
  J[358] -= dqdci; // dwdot[HCO]/d[CO]
  // d()/d[O2]
  dqdci = +k_f * sc[22];
  J[554] += dqdci; // dwdot[CO]/d[O2]
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[562] += dqdci; // dwdot[HO2]/d[O2]
  J[568] -= dqdci; // dwdot[HCO]/d[O2]
  // d()/d[HO2]
  dqdci = -k_r * sc[8];
  J[680] += dqdci; // dwdot[CO]/d[HO2]
  J[685] -= dqdci; // dwdot[O2]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[694] -= dqdci; // dwdot[HCO]/d[HO2]
  // d()/d[HCO]
  dqdci = +k_f * sc[13];
  J[932] += dqdci; // dwdot[CO]/d[HCO]
  J[937] -= dqdci; // dwdot[O2]/d[HCO]
  J[940] += dqdci; // dwdot[HO2]/d[HCO]
  J[946] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT

  // reaction 45: CH2 + O <=> H + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[20];
  k_f = 80000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[19] * sc[22];
  Kc = exp(g_RT[14] - g_RT[19] + g_RT[20] - g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[20]) + (h_RT[19] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[19] += q; // H
  wdot[20] -= q; // CH2
  wdot[22] += q; // HCO
  // d()/d[O]
  dqdci = +k_f * sc[20];
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[607] += dqdci; // dwdot[H]/d[O]
  J[608] -= dqdci; // dwdot[CH2]/d[O]
  J[610] += dqdci; // dwdot[HCO]/d[O]
  // d()/d[H]
  dqdci = -k_r * sc[22];
  J[812] -= dqdci; // dwdot[O]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[818] -= dqdci; // dwdot[CH2]/d[H]
  J[820] += dqdci; // dwdot[HCO]/d[H]
  // d()/d[CH2]
  dqdci = +k_f * sc[14];
  J[854] -= dqdci; // dwdot[O]/d[CH2]
  J[859] += dqdci; // dwdot[H]/d[CH2]
  J[860] -= dqdci; // dwdot[CH2]/d[CH2]
  J[862] += dqdci; // dwdot[HCO]/d[CH2]
  // d()/d[HCO]
  dqdci = -k_r * sc[19];
  J[938] -= dqdci; // dwdot[O]/d[HCO]
  J[943] += dqdci; // dwdot[H]/d[HCO]
  J[944] -= dqdci; // dwdot[CH2]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1742] -= dqdT; // dwdot[CH2]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT

  // reaction 46: CH2 + OH <=> CH2O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[20];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[19] * sc[23];
  Kc = exp(g_RT[15] - g_RT[19] + g_RT[20] - g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[20]) + (h_RT[19] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] -= q; // OH
  wdot[19] += q; // H
  wdot[20] -= q; // CH2
  wdot[23] += q; // CH2O
  // d()/d[OH]
  dqdci = +k_f * sc[20];
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[649] += dqdci; // dwdot[H]/d[OH]
  J[650] -= dqdci; // dwdot[CH2]/d[OH]
  J[653] += dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[H]
  dqdci = -k_r * sc[23];
  J[813] -= dqdci; // dwdot[OH]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[818] -= dqdci; // dwdot[CH2]/d[H]
  J[821] += dqdci; // dwdot[CH2O]/d[H]
  // d()/d[CH2]
  dqdci = +k_f * sc[15];
  J[855] -= dqdci; // dwdot[OH]/d[CH2]
  J[859] += dqdci; // dwdot[H]/d[CH2]
  J[860] -= dqdci; // dwdot[CH2]/d[CH2]
  J[863] += dqdci; // dwdot[CH2O]/d[CH2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[19];
  J[981] -= dqdci; // dwdot[OH]/d[CH2O]
  J[985] += dqdci; // dwdot[H]/d[CH2O]
  J[986] -= dqdci; // dwdot[CH2]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1742] -= dqdT; // dwdot[CH2]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT

  // reaction 47: CH2 + H2 <=> CH3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[20];
  k_f = 0.5 * exp(2 * logT - (3638.25649376812) * invT);
  dlnkfdT = 2 * invT + (3638.25649376812) * invT2;
  // reverse
  phi_r = sc[12] * sc[19];
  Kc = exp(g_RT[6] - g_RT[12] - g_RT[19] + g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[20]) + (h_RT[12] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] -= q;  // H2
  wdot[12] += q; // CH3
  wdot[19] += q; // H
  wdot[20] -= q; // CH2
  // d()/d[H2]
  dqdci = +k_f * sc[20];
  J[258] -= dqdci; // dwdot[H2]/d[H2]
  J[264] += dqdci; // dwdot[CH3]/d[H2]
  J[271] += dqdci; // dwdot[H]/d[H2]
  J[272] -= dqdci; // dwdot[CH2]/d[H2]
  // d()/d[CH3]
  dqdci = -k_r * sc[19];
  J[510] -= dqdci; // dwdot[H2]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[523] += dqdci; // dwdot[H]/d[CH3]
  J[524] -= dqdci; // dwdot[CH2]/d[CH3]
  // d()/d[H]
  dqdci = -k_r * sc[12];
  J[804] -= dqdci; // dwdot[H2]/d[H]
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[818] -= dqdci; // dwdot[CH2]/d[H]
  // d()/d[CH2]
  dqdci = +k_f * sc[6];
  J[846] -= dqdci; // dwdot[H2]/d[CH2]
  J[852] += dqdci; // dwdot[CH3]/d[CH2]
  J[859] += dqdci; // dwdot[H]/d[CH2]
  J[860] -= dqdci; // dwdot[CH2]/d[CH2]
  // d()/dT
  J[1728] -= dqdT; // dwdot[H2]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1742] -= dqdT; // dwdot[CH2]/dT

  // reaction 48: CH2 + O2 <=> HCO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[20];
  k_f = 10600000 * exp(-(754.82499870708) * invT);
  dlnkfdT = (754.82499870708) * invT2;
  // reverse
  phi_r = sc[15] * sc[22];
  Kc = exp(g_RT[13] - g_RT[15] + g_RT[20] - g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[20]) + (h_RT[15] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // O2
  wdot[15] += q; // OH
  wdot[20] -= q; // CH2
  wdot[22] += q; // HCO
  // d()/d[O2]
  dqdci = +k_f * sc[20];
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[561] += dqdci; // dwdot[OH]/d[O2]
  J[566] -= dqdci; // dwdot[CH2]/d[O2]
  J[568] += dqdci; // dwdot[HCO]/d[O2]
  // d()/d[OH]
  dqdci = -k_r * sc[22];
  J[643] -= dqdci; // dwdot[O2]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[650] -= dqdci; // dwdot[CH2]/d[OH]
  J[652] += dqdci; // dwdot[HCO]/d[OH]
  // d()/d[CH2]
  dqdci = +k_f * sc[13];
  J[853] -= dqdci; // dwdot[O2]/d[CH2]
  J[855] += dqdci; // dwdot[OH]/d[CH2]
  J[860] -= dqdci; // dwdot[CH2]/d[CH2]
  J[862] += dqdci; // dwdot[HCO]/d[CH2]
  // d()/d[HCO]
  dqdci = -k_r * sc[15];
  J[937] -= dqdci; // dwdot[O2]/d[HCO]
  J[939] += dqdci; // dwdot[OH]/d[HCO]
  J[944] -= dqdci; // dwdot[CH2]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1742] -= dqdT; // dwdot[CH2]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT

  // reaction 49: CH2 + O2 <=> CO2 + 2 H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[20];
  k_f = 2640000 * exp(-(754.82499870708) * invT);
  dlnkfdT = (754.82499870708) * invT2;
  // reverse
  phi_r = (sc[19] * sc[19]) * sc[25];
  Kc = refC * exp(g_RT[13] - 2.000000 * g_RT[19] + g_RT[20] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[20]) + (2.000000 * h_RT[19] + h_RT[25]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q;     // O2
  wdot[19] += 2 * q; // H
  wdot[20] -= q;     // CH2
  wdot[25] += q;     // CO2
  // d()/d[O2]
  dqdci = +k_f * sc[20];
  J[559] -= dqdci;     // dwdot[O2]/d[O2]
  J[565] += 2 * dqdci; // dwdot[H]/d[O2]
  J[566] -= dqdci;     // dwdot[CH2]/d[O2]
  J[571] += dqdci;     // dwdot[CO2]/d[O2]
  // d()/d[H]
  dqdci = -k_r * 2.000000 * sc[19] * sc[25];
  J[811] -= dqdci;     // dwdot[O2]/d[H]
  J[817] += 2 * dqdci; // dwdot[H]/d[H]
  J[818] -= dqdci;     // dwdot[CH2]/d[H]
  J[823] += dqdci;     // dwdot[CO2]/d[H]
  // d()/d[CH2]
  dqdci = +k_f * sc[13];
  J[853] -= dqdci;     // dwdot[O2]/d[CH2]
  J[859] += 2 * dqdci; // dwdot[H]/d[CH2]
  J[860] -= dqdci;     // dwdot[CH2]/d[CH2]
  J[865] += dqdci;     // dwdot[CO2]/d[CH2]
  // d()/d[CO2]
  dqdci = -k_r * sc[19] * sc[19];
  J[1063] -= dqdci;     // dwdot[O2]/d[CO2]
  J[1069] += 2 * dqdci; // dwdot[H]/d[CO2]
  J[1070] -= dqdci;     // dwdot[CH2]/d[CO2]
  J[1075] += dqdci;     // dwdot[CO2]/d[CO2]
  // d()/dT
  J[1735] -= dqdT;     // dwdot[O2]/dT
  J[1741] += 2 * dqdT; // dwdot[H]/dT
  J[1742] -= dqdT;     // dwdot[CH2]/dT
  J[1747] += dqdT;     // dwdot[CO2]/dT

  // reaction 51: CH2* + N2 <=> CH2 + N2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[21] * sc[40];
  k_f = 15000000 * exp(-(301.929999482832) * invT);
  dlnkfdT = (301.929999482832) * invT2;
  // reverse
  phi_r = sc[20] * sc[40];
  Kc = exp(-g_RT[20] + g_RT[21] + g_RT[40] - g_RT[40]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[21] + h_RT[40]) + (h_RT[20] + h_RT[40]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[20] += q; // CH2
  wdot[21] -= q; // CH2*
  // d()/d[CH2]
  dqdci = -k_r * sc[40];
  J[860] += dqdci; // dwdot[CH2]/d[CH2]
  J[861] -= dqdci; // dwdot[CH2*]/d[CH2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[40];
  J[902] += dqdci; // dwdot[CH2]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/d[N2]
  dqdci = +k_f * sc[21] - k_r * sc[20];
  J[1700] += dqdci; // dwdot[CH2]/d[N2]
  J[1701] -= dqdci; // dwdot[CH2*]/d[N2]
  // d()/dT
  J[1742] += dqdT; // dwdot[CH2]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT

  // reaction 52: CH2* + O <=> CO + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[21];
  k_f = 15000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[8];
  Kc = exp(-g_RT[6] - g_RT[8] + g_RT[14] + g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[21]) + (h_RT[6] + h_RT[8]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2
  wdot[8] += q;  // CO
  wdot[14] -= q; // O
  wdot[21] -= q; // CH2*
  // d()/d[H2]
  dqdci = -k_r * sc[8];
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[260] += dqdci; // dwdot[CO]/d[H2]
  J[266] -= dqdci; // dwdot[O]/d[H2]
  J[273] -= dqdci; // dwdot[CH2*]/d[H2]
  // d()/d[CO]
  dqdci = -k_r * sc[6];
  J[342] += dqdci; // dwdot[H2]/d[CO]
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[350] -= dqdci; // dwdot[O]/d[CO]
  J[357] -= dqdci; // dwdot[CH2*]/d[CO]
  // d()/d[O]
  dqdci = +k_f * sc[21];
  J[594] += dqdci; // dwdot[H2]/d[O]
  J[596] += dqdci; // dwdot[CO]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[609] -= dqdci; // dwdot[CH2*]/d[O]
  // d()/d[CH2*]
  dqdci = +k_f * sc[14];
  J[888] += dqdci; // dwdot[H2]/d[CH2*]
  J[890] += dqdci; // dwdot[CO]/d[CH2*]
  J[896] -= dqdci; // dwdot[O]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT

  // reaction 53: CH2* + OH <=> CH2O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[21];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[19] * sc[23];
  Kc = exp(g_RT[15] - g_RT[19] + g_RT[21] - g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[21]) + (h_RT[19] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] -= q; // OH
  wdot[19] += q; // H
  wdot[21] -= q; // CH2*
  wdot[23] += q; // CH2O
  // d()/d[OH]
  dqdci = +k_f * sc[21];
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[649] += dqdci; // dwdot[H]/d[OH]
  J[651] -= dqdci; // dwdot[CH2*]/d[OH]
  J[653] += dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[H]
  dqdci = -k_r * sc[23];
  J[813] -= dqdci; // dwdot[OH]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[819] -= dqdci; // dwdot[CH2*]/d[H]
  J[821] += dqdci; // dwdot[CH2O]/d[H]
  // d()/d[CH2*]
  dqdci = +k_f * sc[15];
  J[897] -= dqdci; // dwdot[OH]/d[CH2*]
  J[901] += dqdci; // dwdot[H]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[905] += dqdci; // dwdot[CH2O]/d[CH2*]
  // d()/d[CH2O]
  dqdci = -k_r * sc[19];
  J[981] -= dqdci; // dwdot[OH]/d[CH2O]
  J[985] += dqdci; // dwdot[H]/d[CH2O]
  J[987] -= dqdci; // dwdot[CH2*]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT

  // reaction 54: CH2* + H2 <=> CH3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[21];
  k_f = 70000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[12] * sc[19];
  Kc = exp(g_RT[6] - g_RT[12] - g_RT[19] + g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[21]) + (h_RT[12] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] -= q;  // H2
  wdot[12] += q; // CH3
  wdot[19] += q; // H
  wdot[21] -= q; // CH2*
  // d()/d[H2]
  dqdci = +k_f * sc[21];
  J[258] -= dqdci; // dwdot[H2]/d[H2]
  J[264] += dqdci; // dwdot[CH3]/d[H2]
  J[271] += dqdci; // dwdot[H]/d[H2]
  J[273] -= dqdci; // dwdot[CH2*]/d[H2]
  // d()/d[CH3]
  dqdci = -k_r * sc[19];
  J[510] -= dqdci; // dwdot[H2]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[523] += dqdci; // dwdot[H]/d[CH3]
  J[525] -= dqdci; // dwdot[CH2*]/d[CH3]
  // d()/d[H]
  dqdci = -k_r * sc[12];
  J[804] -= dqdci; // dwdot[H2]/d[H]
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[819] -= dqdci; // dwdot[CH2*]/d[H]
  // d()/d[CH2*]
  dqdci = +k_f * sc[6];
  J[888] -= dqdci; // dwdot[H2]/d[CH2*]
  J[894] += dqdci; // dwdot[CH3]/d[CH2*]
  J[901] += dqdci; // dwdot[H]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/dT
  J[1728] -= dqdT; // dwdot[H2]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT

  // reaction 55: CH2* + O2 <=> CO + H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[21];
  k_f = 28000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[15] * sc[19];
  Kc = refC * exp(-g_RT[8] + g_RT[13] - g_RT[15] - g_RT[19] + g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[21]) + (h_RT[8] + h_RT[15] + h_RT[19]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[13] -= q; // O2
  wdot[15] += q; // OH
  wdot[19] += q; // H
  wdot[21] -= q; // CH2*
  // d()/d[CO]
  dqdci = -k_r * sc[15] * sc[19];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[349] -= dqdci; // dwdot[O2]/d[CO]
  J[351] += dqdci; // dwdot[OH]/d[CO]
  J[355] += dqdci; // dwdot[H]/d[CO]
  J[357] -= dqdci; // dwdot[CH2*]/d[CO]
  // d()/d[O2]
  dqdci = +k_f * sc[21];
  J[554] += dqdci; // dwdot[CO]/d[O2]
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[561] += dqdci; // dwdot[OH]/d[O2]
  J[565] += dqdci; // dwdot[H]/d[O2]
  J[567] -= dqdci; // dwdot[CH2*]/d[O2]
  // d()/d[OH]
  dqdci = -k_r * sc[8] * sc[19];
  J[638] += dqdci; // dwdot[CO]/d[OH]
  J[643] -= dqdci; // dwdot[O2]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[649] += dqdci; // dwdot[H]/d[OH]
  J[651] -= dqdci; // dwdot[CH2*]/d[OH]
  // d()/d[H]
  dqdci = -k_r * sc[8] * sc[15];
  J[806] += dqdci; // dwdot[CO]/d[H]
  J[811] -= dqdci; // dwdot[O2]/d[H]
  J[813] += dqdci; // dwdot[OH]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[819] -= dqdci; // dwdot[CH2*]/d[H]
  // d()/d[CH2*]
  dqdci = +k_f * sc[13];
  J[890] += dqdci; // dwdot[CO]/d[CH2*]
  J[895] -= dqdci; // dwdot[O2]/d[CH2*]
  J[897] += dqdci; // dwdot[OH]/d[CH2*]
  J[901] += dqdci; // dwdot[H]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT

  // reaction 56: CH2* + O2 <=> CO + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[21];
  k_f = 12000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[17];
  Kc = exp(-g_RT[8] + g_RT[13] - g_RT[17] + g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[21]) + (h_RT[8] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[13] -= q; // O2
  wdot[17] += q; // H2O
  wdot[21] -= q; // CH2*
  // d()/d[CO]
  dqdci = -k_r * sc[17];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[349] -= dqdci; // dwdot[O2]/d[CO]
  J[353] += dqdci; // dwdot[H2O]/d[CO]
  J[357] -= dqdci; // dwdot[CH2*]/d[CO]
  // d()/d[O2]
  dqdci = +k_f * sc[21];
  J[554] += dqdci; // dwdot[CO]/d[O2]
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[563] += dqdci; // dwdot[H2O]/d[O2]
  J[567] -= dqdci; // dwdot[CH2*]/d[O2]
  // d()/d[H2O]
  dqdci = -k_r * sc[8];
  J[722] += dqdci; // dwdot[CO]/d[H2O]
  J[727] -= dqdci; // dwdot[O2]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[735] -= dqdci; // dwdot[CH2*]/d[H2O]
  // d()/d[CH2*]
  dqdci = +k_f * sc[13];
  J[890] += dqdci; // dwdot[CO]/d[CH2*]
  J[895] -= dqdci; // dwdot[O2]/d[CH2*]
  J[899] += dqdci; // dwdot[H2O]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT

  // reaction 57: CH2* + H2O <=> CH2 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[21];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[17] * sc[20];
  Kc = exp(g_RT[17] - g_RT[17] - g_RT[20] + g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[17] + h_RT[21]) + (h_RT[17] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[20] += q; // CH2
  wdot[21] -= q; // CH2*
  // d()/d[H2O]
  dqdci = +k_f * sc[21] - k_r * sc[20];
  J[734] += dqdci; // dwdot[CH2]/d[H2O]
  J[735] -= dqdci; // dwdot[CH2*]/d[H2O]
  // d()/d[CH2]
  dqdci = -k_r * sc[17];
  J[860] += dqdci; // dwdot[CH2]/d[CH2]
  J[861] -= dqdci; // dwdot[CH2*]/d[CH2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[17];
  J[902] += dqdci; // dwdot[CH2]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/dT
  J[1742] += dqdT; // dwdot[CH2]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT

  // reaction 58: CH2* + CO <=> CH2 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[21];
  k_f = 9000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[20];
  Kc = exp(g_RT[8] - g_RT[8] - g_RT[20] + g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[8] + h_RT[21]) + (h_RT[8] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[20] += q; // CH2
  wdot[21] -= q; // CH2*
  // d()/d[CO]
  dqdci = +k_f * sc[21] - k_r * sc[20];
  J[356] += dqdci; // dwdot[CH2]/d[CO]
  J[357] -= dqdci; // dwdot[CH2*]/d[CO]
  // d()/d[CH2]
  dqdci = -k_r * sc[8];
  J[860] += dqdci; // dwdot[CH2]/d[CH2]
  J[861] -= dqdci; // dwdot[CH2*]/d[CH2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[8];
  J[902] += dqdci; // dwdot[CH2]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/dT
  J[1742] += dqdT; // dwdot[CH2]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT

  // reaction 59: CH2* + CO2 <=> CH2 + CO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[21] * sc[25];
  k_f = 7000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[20] * sc[25];
  Kc = exp(-g_RT[20] + g_RT[21] + g_RT[25] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[21] + h_RT[25]) + (h_RT[20] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[20] += q; // CH2
  wdot[21] -= q; // CH2*
  // d()/d[CH2]
  dqdci = -k_r * sc[25];
  J[860] += dqdci; // dwdot[CH2]/d[CH2]
  J[861] -= dqdci; // dwdot[CH2*]/d[CH2]
  // d()/d[CH2*]
  dqdci = +k_f * sc[25];
  J[902] += dqdci; // dwdot[CH2]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/d[CO2]
  dqdci = +k_f * sc[21] - k_r * sc[20];
  J[1070] += dqdci; // dwdot[CH2]/d[CO2]
  J[1071] -= dqdci; // dwdot[CH2*]/d[CO2]
  // d()/dT
  J[1742] += dqdT; // dwdot[CH2]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT

  // reaction 60: CH2* + CO2 <=> CH2O + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[21] * sc[25];
  k_f = 14000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[23];
  Kc = exp(-g_RT[8] + g_RT[21] - g_RT[23] + g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[21] + h_RT[25]) + (h_RT[8] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[21] -= q; // CH2*
  wdot[23] += q; // CH2O
  wdot[25] -= q; // CO2
  // d()/d[CO]
  dqdci = -k_r * sc[23];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[357] -= dqdci; // dwdot[CH2*]/d[CO]
  J[359] += dqdci; // dwdot[CH2O]/d[CO]
  J[361] -= dqdci; // dwdot[CO2]/d[CO]
  // d()/d[CH2*]
  dqdci = +k_f * sc[25];
  J[890] += dqdci; // dwdot[CO]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[905] += dqdci; // dwdot[CH2O]/d[CH2*]
  J[907] -= dqdci; // dwdot[CO2]/d[CH2*]
  // d()/d[CH2O]
  dqdci = -k_r * sc[8];
  J[974] += dqdci; // dwdot[CO]/d[CH2O]
  J[987] -= dqdci; // dwdot[CH2*]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[991] -= dqdci; // dwdot[CO2]/d[CH2O]
  // d()/d[CO2]
  dqdci = +k_f * sc[21];
  J[1058] += dqdci; // dwdot[CO]/d[CO2]
  J[1071] -= dqdci; // dwdot[CH2*]/d[CO2]
  J[1073] += dqdci; // dwdot[CH2O]/d[CO2]
  J[1075] -= dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT
  J[1747] -= dqdT; // dwdot[CO2]/dT

  // reaction 62: CH2O + H <=> H2 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[23];
  k_f = 23000 * exp(1.05 * logT - (1648.03458051046) * invT);
  dlnkfdT = 1.05 * invT + (1648.03458051046) * invT2;
  // reverse
  phi_r = sc[6] * sc[22];
  Kc = exp(-g_RT[6] + g_RT[19] - g_RT[22] + g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[23]) + (h_RT[6] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2
  wdot[19] -= q; // H
  wdot[22] += q; // HCO
  wdot[23] -= q; // CH2O
  // d()/d[H2]
  dqdci = -k_r * sc[22];
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[274] += dqdci; // dwdot[HCO]/d[H2]
  J[275] -= dqdci; // dwdot[CH2O]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[23];
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[820] += dqdci; // dwdot[HCO]/d[H]
  J[821] -= dqdci; // dwdot[CH2O]/d[H]
  // d()/d[HCO]
  dqdci = -k_r * sc[6];
  J[930] += dqdci; // dwdot[H2]/d[HCO]
  J[943] -= dqdci; // dwdot[H]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[947] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[19];
  J[972] += dqdci; // dwdot[H2]/d[CH2O]
  J[985] -= dqdci; // dwdot[H]/d[CH2O]
  J[988] += dqdci; // dwdot[HCO]/d[CH2O]
  J[989] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1745] -= dqdT; // dwdot[CH2O]/dT

  // reaction 63: CH2O + O <=> HCO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[23];
  k_f = 39000000 * exp(-(1781.38699694871) * invT);
  dlnkfdT = (1781.38699694871) * invT2;
  // reverse
  phi_r = sc[15] * sc[22];
  Kc = exp(g_RT[14] - g_RT[15] - g_RT[22] + g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[23]) + (h_RT[15] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[22] += q; // HCO
  wdot[23] -= q; // CH2O
  // d()/d[O]
  dqdci = +k_f * sc[23];
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[610] += dqdci; // dwdot[HCO]/d[O]
  J[611] -= dqdci; // dwdot[CH2O]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[22];
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[652] += dqdci; // dwdot[HCO]/d[OH]
  J[653] -= dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[HCO]
  dqdci = -k_r * sc[15];
  J[938] -= dqdci; // dwdot[O]/d[HCO]
  J[939] += dqdci; // dwdot[OH]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[947] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[14];
  J[980] -= dqdci; // dwdot[O]/d[CH2O]
  J[981] += dqdci; // dwdot[OH]/d[CH2O]
  J[988] += dqdci; // dwdot[HCO]/d[CH2O]
  J[989] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1745] -= dqdT; // dwdot[CH2O]/dT

  // reaction 64: CH2O + OH <=> H2O + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[23];
  k_f = 3430 * exp(1.18 * logT - (-224.93784961471) * invT);
  dlnkfdT = 1.18 * invT + (-224.93784961471) * invT2;
  // reverse
  phi_r = sc[17] * sc[22];
  Kc = exp(g_RT[15] - g_RT[17] - g_RT[22] + g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[23]) + (h_RT[17] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[22] += q; // HCO
  wdot[23] -= q; // CH2O
  // d()/d[OH]
  dqdci = +k_f * sc[23];
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[652] += dqdci; // dwdot[HCO]/d[OH]
  J[653] -= dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[22];
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[736] += dqdci; // dwdot[HCO]/d[H2O]
  J[737] -= dqdci; // dwdot[CH2O]/d[H2O]
  // d()/d[HCO]
  dqdci = -k_r * sc[17];
  J[939] -= dqdci; // dwdot[OH]/d[HCO]
  J[941] += dqdci; // dwdot[H2O]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[947] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[15];
  J[981] -= dqdci; // dwdot[OH]/d[CH2O]
  J[983] += dqdci; // dwdot[H2O]/d[CH2O]
  J[988] += dqdci; // dwdot[HCO]/d[CH2O]
  J[989] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1745] -= dqdT; // dwdot[CH2O]/dT

  // reaction 65: CH2O + O2 <=> HCO + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[23];
  k_f = 100000000 * exp(-(20128.6666321888) * invT);
  dlnkfdT = (20128.6666321888) * invT2;
  // reverse
  phi_r = sc[16] * sc[22];
  Kc = exp(g_RT[13] - g_RT[16] - g_RT[22] + g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[23]) + (h_RT[16] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // O2
  wdot[16] += q; // HO2
  wdot[22] += q; // HCO
  wdot[23] -= q; // CH2O
  // d()/d[O2]
  dqdci = +k_f * sc[23];
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[562] += dqdci; // dwdot[HO2]/d[O2]
  J[568] += dqdci; // dwdot[HCO]/d[O2]
  J[569] -= dqdci; // dwdot[CH2O]/d[O2]
  // d()/d[HO2]
  dqdci = -k_r * sc[22];
  J[685] -= dqdci; // dwdot[O2]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[694] += dqdci; // dwdot[HCO]/d[HO2]
  J[695] -= dqdci; // dwdot[CH2O]/d[HO2]
  // d()/d[HCO]
  dqdci = -k_r * sc[16];
  J[937] -= dqdci; // dwdot[O2]/d[HCO]
  J[940] += dqdci; // dwdot[HO2]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[947] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[13];
  J[979] -= dqdci; // dwdot[O2]/d[CH2O]
  J[982] += dqdci; // dwdot[HO2]/d[CH2O]
  J[988] += dqdci; // dwdot[HCO]/d[CH2O]
  J[989] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1745] -= dqdT; // dwdot[CH2O]/dT

  // reaction 66: CH2O + HO2 <=> H2O2 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[23];
  k_f = 1000000 * exp(-(4025.73332643776) * invT);
  dlnkfdT = (4025.73332643776) * invT2;
  // reverse
  phi_r = sc[18] * sc[22];
  Kc = exp(g_RT[16] - g_RT[18] - g_RT[22] + g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[16] + h_RT[23]) + (h_RT[18] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[16] -= q; // HO2
  wdot[18] += q; // H2O2
  wdot[22] += q; // HCO
  wdot[23] -= q; // CH2O
  // d()/d[HO2]
  dqdci = +k_f * sc[23];
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[690] += dqdci; // dwdot[H2O2]/d[HO2]
  J[694] += dqdci; // dwdot[HCO]/d[HO2]
  J[695] -= dqdci; // dwdot[CH2O]/d[HO2]
  // d()/d[H2O2]
  dqdci = -k_r * sc[22];
  J[772] -= dqdci; // dwdot[HO2]/d[H2O2]
  J[774] += dqdci; // dwdot[H2O2]/d[H2O2]
  J[778] += dqdci; // dwdot[HCO]/d[H2O2]
  J[779] -= dqdci; // dwdot[CH2O]/d[H2O2]
  // d()/d[HCO]
  dqdci = -k_r * sc[18];
  J[940] -= dqdci; // dwdot[HO2]/d[HCO]
  J[942] += dqdci; // dwdot[H2O2]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[947] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[16];
  J[982] -= dqdci; // dwdot[HO2]/d[CH2O]
  J[984] += dqdci; // dwdot[H2O2]/d[CH2O]
  J[988] += dqdci; // dwdot[HCO]/d[CH2O]
  J[989] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1740] += dqdT; // dwdot[H2O2]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1745] -= dqdT; // dwdot[CH2O]/dT

  // reaction 68: CH3 + O <=> CH2O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[14];
  k_f = 84300000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[19] * sc[23];
  Kc = exp(g_RT[12] + g_RT[14] - g_RT[19] - g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[14]) + (h_RT[19] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] -= q; // CH3
  wdot[14] -= q; // O
  wdot[19] += q; // H
  wdot[23] += q; // CH2O
  // d()/d[CH3]
  dqdci = +k_f * sc[14];
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[518] -= dqdci; // dwdot[O]/d[CH3]
  J[523] += dqdci; // dwdot[H]/d[CH3]
  J[527] += dqdci; // dwdot[CH2O]/d[CH3]
  // d()/d[O]
  dqdci = +k_f * sc[12];
  J[600] -= dqdci; // dwdot[CH3]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[607] += dqdci; // dwdot[H]/d[O]
  J[611] += dqdci; // dwdot[CH2O]/d[O]
  // d()/d[H]
  dqdci = -k_r * sc[23];
  J[810] -= dqdci; // dwdot[CH3]/d[H]
  J[812] -= dqdci; // dwdot[O]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[821] += dqdci; // dwdot[CH2O]/d[H]
  // d()/d[CH2O]
  dqdci = -k_r * sc[19];
  J[978] -= dqdci; // dwdot[CH3]/d[CH2O]
  J[980] -= dqdci; // dwdot[O]/d[CH2O]
  J[985] += dqdci; // dwdot[H]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT

  // reaction 69: CH3 + OH <=> CH2 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[15];
  k_f = 56 * exp(1.6 * logT - (2727.43432866158) * invT);
  dlnkfdT = 1.6 * invT + (2727.43432866158) * invT2;
  // reverse
  phi_r = sc[17] * sc[20];
  Kc = exp(g_RT[12] + g_RT[15] - g_RT[17] - g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[15]) + (h_RT[17] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] -= q; // CH3
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[20] += q; // CH2
  // d()/d[CH3]
  dqdci = +k_f * sc[15];
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[519] -= dqdci; // dwdot[OH]/d[CH3]
  J[521] += dqdci; // dwdot[H2O]/d[CH3]
  J[524] += dqdci; // dwdot[CH2]/d[CH3]
  // d()/d[OH]
  dqdci = +k_f * sc[12];
  J[642] -= dqdci; // dwdot[CH3]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[650] += dqdci; // dwdot[CH2]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[20];
  J[726] -= dqdci; // dwdot[CH3]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[734] += dqdci; // dwdot[CH2]/d[H2O]
  // d()/d[CH2]
  dqdci = -k_r * sc[17];
  J[852] -= dqdci; // dwdot[CH3]/d[CH2]
  J[855] -= dqdci; // dwdot[OH]/d[CH2]
  J[857] += dqdci; // dwdot[H2O]/d[CH2]
  J[860] += dqdci; // dwdot[CH2]/d[CH2]
  // d()/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1742] += dqdT; // dwdot[CH2]/dT

  // reaction 70: CH3 + OH <=> CH2* + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[15];
  k_f = 25010000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[17] * sc[21];
  Kc = exp(g_RT[12] + g_RT[15] - g_RT[17] - g_RT[21]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[15]) + (h_RT[17] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] -= q; // CH3
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[21] += q; // CH2*
  // d()/d[CH3]
  dqdci = +k_f * sc[15];
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[519] -= dqdci; // dwdot[OH]/d[CH3]
  J[521] += dqdci; // dwdot[H2O]/d[CH3]
  J[525] += dqdci; // dwdot[CH2*]/d[CH3]
  // d()/d[OH]
  dqdci = +k_f * sc[12];
  J[642] -= dqdci; // dwdot[CH3]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[651] += dqdci; // dwdot[CH2*]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[21];
  J[726] -= dqdci; // dwdot[CH3]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[735] += dqdci; // dwdot[CH2*]/d[H2O]
  // d()/d[CH2*]
  dqdci = -k_r * sc[17];
  J[894] -= dqdci; // dwdot[CH3]/d[CH2*]
  J[897] -= dqdci; // dwdot[OH]/d[CH2*]
  J[899] += dqdci; // dwdot[H2O]/d[CH2*]
  J[903] += dqdci; // dwdot[CH2*]/d[CH2*]
  // d()/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1743] += dqdT; // dwdot[CH2*]/dT

  // reaction 71: CH3 + O2 <=> CH3O + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[13];
  k_f = 30830000 * exp(-(14492.6399751759) * invT);
  dlnkfdT = (14492.6399751759) * invT2;
  // reverse
  phi_r = sc[14] * sc[24];
  Kc = exp(g_RT[12] + g_RT[13] - g_RT[14] - g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[13]) + (h_RT[14] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] -= q; // CH3
  wdot[13] -= q; // O2
  wdot[14] += q; // O
  wdot[24] += q; // CH3O
  // d()/d[CH3]
  dqdci = +k_f * sc[13];
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[517] -= dqdci; // dwdot[O2]/d[CH3]
  J[518] += dqdci; // dwdot[O]/d[CH3]
  J[528] += dqdci; // dwdot[CH3O]/d[CH3]
  // d()/d[O2]
  dqdci = +k_f * sc[12];
  J[558] -= dqdci; // dwdot[CH3]/d[O2]
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[560] += dqdci; // dwdot[O]/d[O2]
  J[570] += dqdci; // dwdot[CH3O]/d[O2]
  // d()/d[O]
  dqdci = -k_r * sc[24];
  J[600] -= dqdci; // dwdot[CH3]/d[O]
  J[601] -= dqdci; // dwdot[O2]/d[O]
  J[602] += dqdci; // dwdot[O]/d[O]
  J[612] += dqdci; // dwdot[CH3O]/d[O]
  // d()/d[CH3O]
  dqdci = -k_r * sc[14];
  J[1020] -= dqdci; // dwdot[CH3]/d[CH3O]
  J[1021] -= dqdci; // dwdot[O2]/d[CH3O]
  J[1022] += dqdci; // dwdot[O]/d[CH3O]
  J[1032] += dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1736] += dqdT; // dwdot[O]/dT
  J[1746] += dqdT; // dwdot[CH3O]/dT

  // reaction 72: CH3 + O2 <=> CH2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[13];
  k_f = 36000 * exp(-(4498.75699229419) * invT);
  dlnkfdT = (4498.75699229419) * invT2;
  // reverse
  phi_r = sc[15] * sc[23];
  Kc = exp(g_RT[12] + g_RT[13] - g_RT[15] - g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[13]) + (h_RT[15] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] -= q; // CH3
  wdot[13] -= q; // O2
  wdot[15] += q; // OH
  wdot[23] += q; // CH2O
  // d()/d[CH3]
  dqdci = +k_f * sc[13];
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[517] -= dqdci; // dwdot[O2]/d[CH3]
  J[519] += dqdci; // dwdot[OH]/d[CH3]
  J[527] += dqdci; // dwdot[CH2O]/d[CH3]
  // d()/d[O2]
  dqdci = +k_f * sc[12];
  J[558] -= dqdci; // dwdot[CH3]/d[O2]
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[561] += dqdci; // dwdot[OH]/d[O2]
  J[569] += dqdci; // dwdot[CH2O]/d[O2]
  // d()/d[OH]
  dqdci = -k_r * sc[23];
  J[642] -= dqdci; // dwdot[CH3]/d[OH]
  J[643] -= dqdci; // dwdot[O2]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[653] += dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[CH2O]
  dqdci = -k_r * sc[15];
  J[978] -= dqdci; // dwdot[CH3]/d[CH2O]
  J[979] -= dqdci; // dwdot[O2]/d[CH2O]
  J[981] += dqdci; // dwdot[OH]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT

  // reaction 73: CH3 + HO2 <=> CH4 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[16];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[2] * sc[13];
  Kc = exp(-g_RT[2] + g_RT[12] - g_RT[13] + g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[16]) + (h_RT[2] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // CH4
  wdot[12] -= q; // CH3
  wdot[13] += q; // O2
  wdot[16] -= q; // HO2
  // d()/d[CH4]
  dqdci = -k_r * sc[13];
  J[86] += dqdci;  // dwdot[CH4]/d[CH4]
  J[96] -= dqdci;  // dwdot[CH3]/d[CH4]
  J[97] += dqdci;  // dwdot[O2]/d[CH4]
  J[100] -= dqdci; // dwdot[HO2]/d[CH4]
  // d()/d[CH3]
  dqdci = +k_f * sc[16];
  J[506] += dqdci; // dwdot[CH4]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[517] += dqdci; // dwdot[O2]/d[CH3]
  J[520] -= dqdci; // dwdot[HO2]/d[CH3]
  // d()/d[O2]
  dqdci = -k_r * sc[2];
  J[548] += dqdci; // dwdot[CH4]/d[O2]
  J[558] -= dqdci; // dwdot[CH3]/d[O2]
  J[559] += dqdci; // dwdot[O2]/d[O2]
  J[562] -= dqdci; // dwdot[HO2]/d[O2]
  // d()/d[HO2]
  dqdci = +k_f * sc[12];
  J[674] += dqdci; // dwdot[CH4]/d[HO2]
  J[684] -= dqdci; // dwdot[CH3]/d[HO2]
  J[685] += dqdci; // dwdot[O2]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[1724] += dqdT; // dwdot[CH4]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1735] += dqdT; // dwdot[O2]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT

  // reaction 74: CH3 + HO2 <=> CH3O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[16];
  k_f = 13400000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[15] * sc[24];
  Kc = exp(g_RT[12] - g_RT[15] + g_RT[16] - g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[16]) + (h_RT[15] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] -= q; // CH3
  wdot[15] += q; // OH
  wdot[16] -= q; // HO2
  wdot[24] += q; // CH3O
  // d()/d[CH3]
  dqdci = +k_f * sc[16];
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[519] += dqdci; // dwdot[OH]/d[CH3]
  J[520] -= dqdci; // dwdot[HO2]/d[CH3]
  J[528] += dqdci; // dwdot[CH3O]/d[CH3]
  // d()/d[OH]
  dqdci = -k_r * sc[24];
  J[642] -= dqdci; // dwdot[CH3]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[646] -= dqdci; // dwdot[HO2]/d[OH]
  J[654] += dqdci; // dwdot[CH3O]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[12];
  J[684] -= dqdci; // dwdot[CH3]/d[HO2]
  J[687] += dqdci; // dwdot[OH]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[696] += dqdci; // dwdot[CH3O]/d[HO2]
  // d()/d[CH3O]
  dqdci = -k_r * sc[15];
  J[1020] -= dqdci; // dwdot[CH3]/d[CH3O]
  J[1023] += dqdci; // dwdot[OH]/d[CH3O]
  J[1024] -= dqdci; // dwdot[HO2]/d[CH3O]
  J[1032] += dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1746] += dqdT; // dwdot[CH3O]/dT

  // reaction 75: CH3 + H2O2 <=> CH4 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[18];
  k_f = 0.0245 * exp(2.47 * logT - (2606.66232886845) * invT);
  dlnkfdT = 2.47 * invT + (2606.66232886845) * invT2;
  // reverse
  phi_r = sc[2] * sc[16];
  Kc = exp(-g_RT[2] + g_RT[12] - g_RT[16] + g_RT[18]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[18]) + (h_RT[2] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // CH4
  wdot[12] -= q; // CH3
  wdot[16] += q; // HO2
  wdot[18] -= q; // H2O2
  // d()/d[CH4]
  dqdci = -k_r * sc[16];
  J[86] += dqdci;  // dwdot[CH4]/d[CH4]
  J[96] -= dqdci;  // dwdot[CH3]/d[CH4]
  J[100] += dqdci; // dwdot[HO2]/d[CH4]
  J[102] -= dqdci; // dwdot[H2O2]/d[CH4]
  // d()/d[CH3]
  dqdci = +k_f * sc[18];
  J[506] += dqdci; // dwdot[CH4]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[520] += dqdci; // dwdot[HO2]/d[CH3]
  J[522] -= dqdci; // dwdot[H2O2]/d[CH3]
  // d()/d[HO2]
  dqdci = -k_r * sc[2];
  J[674] += dqdci; // dwdot[CH4]/d[HO2]
  J[684] -= dqdci; // dwdot[CH3]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[690] -= dqdci; // dwdot[H2O2]/d[HO2]
  // d()/d[H2O2]
  dqdci = +k_f * sc[12];
  J[758] += dqdci; // dwdot[CH4]/d[H2O2]
  J[768] -= dqdci; // dwdot[CH3]/d[H2O2]
  J[772] += dqdci; // dwdot[HO2]/d[H2O2]
  J[774] -= dqdci; // dwdot[H2O2]/d[H2O2]
  // d()/dT
  J[1724] += dqdT; // dwdot[CH4]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1740] -= dqdT; // dwdot[H2O2]/dT

  // reaction 76: CH3 + HCO <=> CH4 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[22];
  k_f = 8480000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[2] * sc[8];
  Kc = exp(-g_RT[2] - g_RT[8] + g_RT[12] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[22]) + (h_RT[2] + h_RT[8]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // CH4
  wdot[8] += q;  // CO
  wdot[12] -= q; // CH3
  wdot[22] -= q; // HCO
  // d()/d[CH4]
  dqdci = -k_r * sc[8];
  J[86] += dqdci;  // dwdot[CH4]/d[CH4]
  J[92] += dqdci;  // dwdot[CO]/d[CH4]
  J[96] -= dqdci;  // dwdot[CH3]/d[CH4]
  J[106] -= dqdci; // dwdot[HCO]/d[CH4]
  // d()/d[CO]
  dqdci = -k_r * sc[2];
  J[338] += dqdci; // dwdot[CH4]/d[CO]
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[348] -= dqdci; // dwdot[CH3]/d[CO]
  J[358] -= dqdci; // dwdot[HCO]/d[CO]
  // d()/d[CH3]
  dqdci = +k_f * sc[22];
  J[506] += dqdci; // dwdot[CH4]/d[CH3]
  J[512] += dqdci; // dwdot[CO]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[526] -= dqdci; // dwdot[HCO]/d[CH3]
  // d()/d[HCO]
  dqdci = +k_f * sc[12];
  J[926] += dqdci; // dwdot[CH4]/d[HCO]
  J[932] += dqdci; // dwdot[CO]/d[HCO]
  J[936] -= dqdci; // dwdot[CH3]/d[HCO]
  J[946] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1724] += dqdT; // dwdot[CH4]/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT

  // reaction 77: CH2O + CH3 <=> CH4 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[23];
  k_f = 0.00332 * exp(2.81 * logT - (2948.84966161566) * invT);
  dlnkfdT = 2.81 * invT + (2948.84966161566) * invT2;
  // reverse
  phi_r = sc[2] * sc[22];
  Kc = exp(-g_RT[2] + g_RT[12] - g_RT[22] + g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[23]) + (h_RT[2] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // CH4
  wdot[12] -= q; // CH3
  wdot[22] += q; // HCO
  wdot[23] -= q; // CH2O
  // d()/d[CH4]
  dqdci = -k_r * sc[22];
  J[86] += dqdci;  // dwdot[CH4]/d[CH4]
  J[96] -= dqdci;  // dwdot[CH3]/d[CH4]
  J[106] += dqdci; // dwdot[HCO]/d[CH4]
  J[107] -= dqdci; // dwdot[CH2O]/d[CH4]
  // d()/d[CH3]
  dqdci = +k_f * sc[23];
  J[506] += dqdci; // dwdot[CH4]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[526] += dqdci; // dwdot[HCO]/d[CH3]
  J[527] -= dqdci; // dwdot[CH2O]/d[CH3]
  // d()/d[HCO]
  dqdci = -k_r * sc[2];
  J[926] += dqdci; // dwdot[CH4]/d[HCO]
  J[936] -= dqdci; // dwdot[CH3]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[947] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[12];
  J[968] += dqdci; // dwdot[CH4]/d[CH2O]
  J[978] -= dqdci; // dwdot[CH3]/d[CH2O]
  J[988] += dqdci; // dwdot[HCO]/d[CH2O]
  J[989] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[1724] += dqdT; // dwdot[CH4]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1745] -= dqdT; // dwdot[CH2O]/dT

  // reaction 78: CH2 + CH3 <=> C2H4 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[20];
  k_f = 40000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[19];
  Kc = exp(-g_RT[1] + g_RT[12] - g_RT[19] + g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[20]) + (h_RT[1] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // C2H4
  wdot[12] -= q; // CH3
  wdot[19] += q; // H
  wdot[20] -= q; // CH2
  // d()/d[C2H4]
  dqdci = -k_r * sc[19];
  J[43] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[54] -= dqdci; // dwdot[CH3]/d[C2H4]
  J[61] += dqdci; // dwdot[H]/d[C2H4]
  J[62] -= dqdci; // dwdot[CH2]/d[C2H4]
  // d()/d[CH3]
  dqdci = +k_f * sc[20];
  J[505] += dqdci; // dwdot[C2H4]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[523] += dqdci; // dwdot[H]/d[CH3]
  J[524] -= dqdci; // dwdot[CH2]/d[CH3]
  // d()/d[H]
  dqdci = -k_r * sc[1];
  J[799] += dqdci; // dwdot[C2H4]/d[H]
  J[810] -= dqdci; // dwdot[CH3]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[818] -= dqdci; // dwdot[CH2]/d[H]
  // d()/d[CH2]
  dqdci = +k_f * sc[12];
  J[841] += dqdci; // dwdot[C2H4]/d[CH2]
  J[852] -= dqdci; // dwdot[CH3]/d[CH2]
  J[859] += dqdci; // dwdot[H]/d[CH2]
  J[860] -= dqdci; // dwdot[CH2]/d[CH2]
  // d()/dT
  J[1723] += dqdT; // dwdot[C2H4]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1742] -= dqdT; // dwdot[CH2]/dT

  // reaction 80: 2 CH3 <=> C2H5 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[12] * sc[12]);
  k_f = 4990000 * exp(0.1 * logT - (5334.09665753003) * invT);
  dlnkfdT = 0.1 * invT + (5334.09665753003) * invT2;
  // reverse
  phi_r = sc[19] * sc[27];
  Kc = exp(2.000000 * g_RT[12] - g_RT[19] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[12]) + (h_RT[19] + h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] -= 2 * q; // CH3
  wdot[19] += q;     // H
  wdot[27] += q;     // C2H5
  // d()/d[CH3]
  dqdci = +k_f * 2.000000 * sc[12];
  J[516] += -2 * dqdci; // dwdot[CH3]/d[CH3]
  J[523] += dqdci;      // dwdot[H]/d[CH3]
  J[531] += dqdci;      // dwdot[C2H5]/d[CH3]
  // d()/d[H]
  dqdci = -k_r * sc[27];
  J[810] += -2 * dqdci; // dwdot[CH3]/d[H]
  J[817] += dqdci;      // dwdot[H]/d[H]
  J[825] += dqdci;      // dwdot[C2H5]/d[H]
  // d()/d[C2H5]
  dqdci = -k_r * sc[19];
  J[1146] += -2 * dqdci; // dwdot[CH3]/d[C2H5]
  J[1153] += dqdci;      // dwdot[H]/d[C2H5]
  J[1161] += dqdci;      // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1734] += -2 * dqdT; // dwdot[CH3]/dT
  J[1741] += dqdT;      // dwdot[H]/dT
  J[1749] += dqdT;      // dwdot[C2H5]/dT

  // reaction 81: CH3 + HCCO <=> C2H4 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[28];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[8];
  Kc = exp(-g_RT[1] - g_RT[8] + g_RT[12] + g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[28]) + (h_RT[1] + h_RT[8]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // C2H4
  wdot[8] += q;  // CO
  wdot[12] -= q; // CH3
  wdot[28] -= q; // HCCO
  // d()/d[C2H4]
  dqdci = -k_r * sc[8];
  J[43] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[50] += dqdci; // dwdot[CO]/d[C2H4]
  J[54] -= dqdci; // dwdot[CH3]/d[C2H4]
  J[70] -= dqdci; // dwdot[HCCO]/d[C2H4]
  // d()/d[CO]
  dqdci = -k_r * sc[1];
  J[337] += dqdci; // dwdot[C2H4]/d[CO]
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[348] -= dqdci; // dwdot[CH3]/d[CO]
  J[364] -= dqdci; // dwdot[HCCO]/d[CO]
  // d()/d[CH3]
  dqdci = +k_f * sc[28];
  J[505] += dqdci; // dwdot[C2H4]/d[CH3]
  J[512] += dqdci; // dwdot[CO]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[532] -= dqdci; // dwdot[HCCO]/d[CH3]
  // d()/d[HCCO]
  dqdci = +k_f * sc[12];
  J[1177] += dqdci; // dwdot[C2H4]/d[HCCO]
  J[1184] += dqdci; // dwdot[CO]/d[HCCO]
  J[1188] -= dqdci; // dwdot[CH3]/d[HCCO]
  J[1204] -= dqdci; // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[1723] += dqdT; // dwdot[C2H4]/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1750] -= dqdT; // dwdot[HCCO]/dT

  // reaction 82: CH3O + H <=> CH2O + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[24];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[23];
  Kc = exp(-g_RT[6] + g_RT[19] - g_RT[23] + g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[24]) + (h_RT[6] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2
  wdot[19] -= q; // H
  wdot[23] += q; // CH2O
  wdot[24] -= q; // CH3O
  // d()/d[H2]
  dqdci = -k_r * sc[23];
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[275] += dqdci; // dwdot[CH2O]/d[H2]
  J[276] -= dqdci; // dwdot[CH3O]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[24];
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[821] += dqdci; // dwdot[CH2O]/d[H]
  J[822] -= dqdci; // dwdot[CH3O]/d[H]
  // d()/d[CH2O]
  dqdci = -k_r * sc[6];
  J[972] += dqdci; // dwdot[H2]/d[CH2O]
  J[985] -= dqdci; // dwdot[H]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[990] -= dqdci; // dwdot[CH3O]/d[CH2O]
  // d()/d[CH3O]
  dqdci = +k_f * sc[19];
  J[1014] += dqdci; // dwdot[H2]/d[CH3O]
  J[1027] -= dqdci; // dwdot[H]/d[CH3O]
  J[1031] += dqdci; // dwdot[CH2O]/d[CH3O]
  J[1032] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT
  J[1746] -= dqdT; // dwdot[CH3O]/dT

  // reaction 83: CH3O + H <=> CH3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[24];
  k_f = 32000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[12] * sc[15];
  Kc = exp(-g_RT[12] - g_RT[15] + g_RT[19] + g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[24]) + (h_RT[12] + h_RT[15]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] += q; // CH3
  wdot[15] += q; // OH
  wdot[19] -= q; // H
  wdot[24] -= q; // CH3O
  // d()/d[CH3]
  dqdci = -k_r * sc[15];
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[519] += dqdci; // dwdot[OH]/d[CH3]
  J[523] -= dqdci; // dwdot[H]/d[CH3]
  J[528] -= dqdci; // dwdot[CH3O]/d[CH3]
  // d()/d[OH]
  dqdci = -k_r * sc[12];
  J[642] += dqdci; // dwdot[CH3]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[649] -= dqdci; // dwdot[H]/d[OH]
  J[654] -= dqdci; // dwdot[CH3O]/d[OH]
  // d()/d[H]
  dqdci = +k_f * sc[24];
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[813] += dqdci; // dwdot[OH]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[822] -= dqdci; // dwdot[CH3O]/d[H]
  // d()/d[CH3O]
  dqdci = +k_f * sc[19];
  J[1020] += dqdci; // dwdot[CH3]/d[CH3O]
  J[1023] += dqdci; // dwdot[OH]/d[CH3O]
  J[1027] -= dqdci; // dwdot[H]/d[CH3O]
  J[1032] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1746] -= dqdT; // dwdot[CH3O]/dT

  // reaction 84: CH3O + H <=> CH2* + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[24];
  k_f = 16000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[17] * sc[21];
  Kc = exp(-g_RT[17] + g_RT[19] - g_RT[21] + g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[24]) + (h_RT[17] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[17] += q; // H2O
  wdot[19] -= q; // H
  wdot[21] += q; // CH2*
  wdot[24] -= q; // CH3O
  // d()/d[H2O]
  dqdci = -k_r * sc[21];
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[733] -= dqdci; // dwdot[H]/d[H2O]
  J[735] += dqdci; // dwdot[CH2*]/d[H2O]
  J[738] -= dqdci; // dwdot[CH3O]/d[H2O]
  // d()/d[H]
  dqdci = +k_f * sc[24];
  J[815] += dqdci; // dwdot[H2O]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[819] += dqdci; // dwdot[CH2*]/d[H]
  J[822] -= dqdci; // dwdot[CH3O]/d[H]
  // d()/d[CH2*]
  dqdci = -k_r * sc[17];
  J[899] += dqdci; // dwdot[H2O]/d[CH2*]
  J[901] -= dqdci; // dwdot[H]/d[CH2*]
  J[903] += dqdci; // dwdot[CH2*]/d[CH2*]
  J[906] -= dqdci; // dwdot[CH3O]/d[CH2*]
  // d()/d[CH3O]
  dqdci = +k_f * sc[19];
  J[1025] += dqdci; // dwdot[H2O]/d[CH3O]
  J[1027] -= dqdci; // dwdot[H]/d[CH3O]
  J[1029] += dqdci; // dwdot[CH2*]/d[CH3O]
  J[1032] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1743] += dqdT; // dwdot[CH2*]/dT
  J[1746] -= dqdT; // dwdot[CH3O]/dT

  // reaction 85: CH3O + OH <=> CH2O + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[24];
  k_f = 5000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[17] * sc[23];
  Kc = exp(g_RT[15] - g_RT[17] - g_RT[23] + g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[24]) + (h_RT[17] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[23] += q; // CH2O
  wdot[24] -= q; // CH3O
  // d()/d[OH]
  dqdci = +k_f * sc[24];
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[653] += dqdci; // dwdot[CH2O]/d[OH]
  J[654] -= dqdci; // dwdot[CH3O]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[23];
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[737] += dqdci; // dwdot[CH2O]/d[H2O]
  J[738] -= dqdci; // dwdot[CH3O]/d[H2O]
  // d()/d[CH2O]
  dqdci = -k_r * sc[17];
  J[981] -= dqdci; // dwdot[OH]/d[CH2O]
  J[983] += dqdci; // dwdot[H2O]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[990] -= dqdci; // dwdot[CH3O]/d[CH2O]
  // d()/d[CH3O]
  dqdci = +k_f * sc[15];
  J[1023] -= dqdci; // dwdot[OH]/d[CH3O]
  J[1025] += dqdci; // dwdot[H2O]/d[CH3O]
  J[1031] += dqdci; // dwdot[CH2O]/d[CH3O]
  J[1032] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT
  J[1746] -= dqdT; // dwdot[CH3O]/dT

  // reaction 86: CH3O + O2 <=> CH2O + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[24];
  k_f = 4.28e-19 * exp(7.6 * logT - (-1776.35483029066) * invT);
  dlnkfdT = 7.6 * invT + (-1776.35483029066) * invT2;
  // reverse
  phi_r = sc[16] * sc[23];
  Kc = exp(g_RT[13] - g_RT[16] - g_RT[23] + g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[24]) + (h_RT[16] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // O2
  wdot[16] += q; // HO2
  wdot[23] += q; // CH2O
  wdot[24] -= q; // CH3O
  // d()/d[O2]
  dqdci = +k_f * sc[24];
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[562] += dqdci; // dwdot[HO2]/d[O2]
  J[569] += dqdci; // dwdot[CH2O]/d[O2]
  J[570] -= dqdci; // dwdot[CH3O]/d[O2]
  // d()/d[HO2]
  dqdci = -k_r * sc[23];
  J[685] -= dqdci; // dwdot[O2]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[695] += dqdci; // dwdot[CH2O]/d[HO2]
  J[696] -= dqdci; // dwdot[CH3O]/d[HO2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[16];
  J[979] -= dqdci; // dwdot[O2]/d[CH2O]
  J[982] += dqdci; // dwdot[HO2]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[990] -= dqdci; // dwdot[CH3O]/d[CH2O]
  // d()/d[CH3O]
  dqdci = +k_f * sc[13];
  J[1021] -= dqdci; // dwdot[O2]/d[CH3O]
  J[1024] += dqdci; // dwdot[HO2]/d[CH3O]
  J[1031] += dqdci; // dwdot[CH2O]/d[CH3O]
  J[1032] -= dqdci; // dwdot[CH3O]/d[CH3O]
  // d()/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT
  J[1746] -= dqdT; // dwdot[CH3O]/dT

  // reaction 87: CH4 + H <=> CH3 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[19];
  k_f = 660 * exp(1.62 * logT - (5454.86865732316) * invT);
  dlnkfdT = 1.62 * invT + (5454.86865732316) * invT2;
  // reverse
  phi_r = sc[6] * sc[12];
  Kc = exp(g_RT[2] - g_RT[6] - g_RT[12] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[19]) + (h_RT[6] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // CH4
  wdot[6] += q;  // H2
  wdot[12] += q; // CH3
  wdot[19] -= q; // H
  // d()/d[CH4]
  dqdci = +k_f * sc[19];
  J[86] -= dqdci;  // dwdot[CH4]/d[CH4]
  J[90] += dqdci;  // dwdot[H2]/d[CH4]
  J[96] += dqdci;  // dwdot[CH3]/d[CH4]
  J[103] -= dqdci; // dwdot[H]/d[CH4]
  // d()/d[H2]
  dqdci = -k_r * sc[12];
  J[254] -= dqdci; // dwdot[CH4]/d[H2]
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[264] += dqdci; // dwdot[CH3]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  // d()/d[CH3]
  dqdci = -k_r * sc[6];
  J[506] -= dqdci; // dwdot[CH4]/d[CH3]
  J[510] += dqdci; // dwdot[H2]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[523] -= dqdci; // dwdot[H]/d[CH3]
  // d()/d[H]
  dqdci = +k_f * sc[2];
  J[800] -= dqdci; // dwdot[CH4]/d[H]
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1724] -= dqdT; // dwdot[CH4]/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 88: CH4 + O <=> CH3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[14];
  k_f = 1020 * exp(1.5 * logT - (4327.66332592059) * invT);
  dlnkfdT = 1.5 * invT + (4327.66332592059) * invT2;
  // reverse
  phi_r = sc[12] * sc[15];
  Kc = exp(g_RT[2] - g_RT[12] + g_RT[14] - g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[14]) + (h_RT[12] + h_RT[15]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // CH4
  wdot[12] += q; // CH3
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  // d()/d[CH4]
  dqdci = +k_f * sc[14];
  J[86] -= dqdci; // dwdot[CH4]/d[CH4]
  J[96] += dqdci; // dwdot[CH3]/d[CH4]
  J[98] -= dqdci; // dwdot[O]/d[CH4]
  J[99] += dqdci; // dwdot[OH]/d[CH4]
  // d()/d[CH3]
  dqdci = -k_r * sc[15];
  J[506] -= dqdci; // dwdot[CH4]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[518] -= dqdci; // dwdot[O]/d[CH3]
  J[519] += dqdci; // dwdot[OH]/d[CH3]
  // d()/d[O]
  dqdci = +k_f * sc[2];
  J[590] -= dqdci; // dwdot[CH4]/d[O]
  J[600] += dqdci; // dwdot[CH3]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[12];
  J[632] -= dqdci; // dwdot[CH4]/d[OH]
  J[642] += dqdci; // dwdot[CH3]/d[OH]
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  // d()/dT
  J[1724] -= dqdT; // dwdot[CH4]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT

  // reaction 89: CH4 + OH <=> CH3 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[15];
  k_f = 100 * exp(1.6 * logT - (1570.03599731073) * invT);
  dlnkfdT = 1.6 * invT + (1570.03599731073) * invT2;
  // reverse
  phi_r = sc[12] * sc[17];
  Kc = exp(g_RT[2] - g_RT[12] + g_RT[15] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[15]) + (h_RT[12] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // CH4
  wdot[12] += q; // CH3
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  // d()/d[CH4]
  dqdci = +k_f * sc[15];
  J[86] -= dqdci;  // dwdot[CH4]/d[CH4]
  J[96] += dqdci;  // dwdot[CH3]/d[CH4]
  J[99] -= dqdci;  // dwdot[OH]/d[CH4]
  J[101] += dqdci; // dwdot[H2O]/d[CH4]
  // d()/d[CH3]
  dqdci = -k_r * sc[17];
  J[506] -= dqdci; // dwdot[CH4]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[519] -= dqdci; // dwdot[OH]/d[CH3]
  J[521] += dqdci; // dwdot[H2O]/d[CH3]
  // d()/d[OH]
  dqdci = +k_f * sc[2];
  J[632] -= dqdci; // dwdot[CH4]/d[OH]
  J[642] += dqdci; // dwdot[CH3]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[12];
  J[716] -= dqdci; // dwdot[CH4]/d[H2O]
  J[726] += dqdci; // dwdot[CH3]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  // d()/dT
  J[1724] -= dqdT; // dwdot[CH4]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT

  // reaction 90: CH2 + CH4 <=> 2 CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[20];
  k_f = 2.46 * exp(2 * logT - (4161.60182620503) * invT);
  dlnkfdT = 2 * invT + (4161.60182620503) * invT2;
  // reverse
  phi_r = (sc[12] * sc[12]);
  Kc = exp(g_RT[2] - 2.000000 * g_RT[12] + g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[20]) + (2.000000 * h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;      // CH4
  wdot[12] += 2 * q; // CH3
  wdot[20] -= q;     // CH2
  // d()/d[CH4]
  dqdci = +k_f * sc[20];
  J[86] -= dqdci;     // dwdot[CH4]/d[CH4]
  J[96] += 2 * dqdci; // dwdot[CH3]/d[CH4]
  J[104] -= dqdci;    // dwdot[CH2]/d[CH4]
  // d()/d[CH3]
  dqdci = -k_r * 2.000000 * sc[12];
  J[506] -= dqdci;     // dwdot[CH4]/d[CH3]
  J[516] += 2 * dqdci; // dwdot[CH3]/d[CH3]
  J[524] -= dqdci;     // dwdot[CH2]/d[CH3]
  // d()/d[CH2]
  dqdci = +k_f * sc[2];
  J[842] -= dqdci;     // dwdot[CH4]/d[CH2]
  J[852] += 2 * dqdci; // dwdot[CH3]/d[CH2]
  J[860] -= dqdci;     // dwdot[CH2]/d[CH2]
  // d()/dT
  J[1724] -= dqdT;     // dwdot[CH4]/dT
  J[1734] += 2 * dqdT; // dwdot[CH3]/dT
  J[1742] -= dqdT;     // dwdot[CH2]/dT

  // reaction 91: H + HCCO <=> CH2* + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[28];
  k_f = 100000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[21];
  Kc = exp(-g_RT[8] + g_RT[19] - g_RT[21] + g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[28]) + (h_RT[8] + h_RT[21]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[19] -= q; // H
  wdot[21] += q; // CH2*
  wdot[28] -= q; // HCCO
  // d()/d[CO]
  dqdci = -k_r * sc[21];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[355] -= dqdci; // dwdot[H]/d[CO]
  J[357] += dqdci; // dwdot[CH2*]/d[CO]
  J[364] -= dqdci; // dwdot[HCCO]/d[CO]
  // d()/d[H]
  dqdci = +k_f * sc[28];
  J[806] += dqdci; // dwdot[CO]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[819] += dqdci; // dwdot[CH2*]/d[H]
  J[826] -= dqdci; // dwdot[HCCO]/d[H]
  // d()/d[CH2*]
  dqdci = -k_r * sc[8];
  J[890] += dqdci; // dwdot[CO]/d[CH2*]
  J[901] -= dqdci; // dwdot[H]/d[CH2*]
  J[903] += dqdci; // dwdot[CH2*]/d[CH2*]
  J[910] -= dqdci; // dwdot[HCCO]/d[CH2*]
  // d()/d[HCCO]
  dqdci = +k_f * sc[19];
  J[1184] += dqdci; // dwdot[CO]/d[HCCO]
  J[1195] -= dqdci; // dwdot[H]/d[HCCO]
  J[1197] += dqdci; // dwdot[CH2*]/d[HCCO]
  J[1204] -= dqdci; // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1743] += dqdT; // dwdot[CH2*]/dT
  J[1750] -= dqdT; // dwdot[HCCO]/dT

  // reaction 92: HCCO + O <=> 2 CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[28];
  k_f = 100000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = (sc[8] * sc[8]) * sc[19];
  Kc = refC * exp(-2.000000 * g_RT[8] + g_RT[14] - g_RT[19] + g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[28]) + (2.000000 * h_RT[8] + h_RT[19]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += 2 * q; // CO
  wdot[14] -= q;    // O
  wdot[19] += q;    // H
  wdot[28] -= q;    // HCCO
  // d()/d[CO]
  dqdci = -k_r * 2.000000 * sc[8] * sc[19];
  J[344] += 2 * dqdci; // dwdot[CO]/d[CO]
  J[350] -= dqdci;     // dwdot[O]/d[CO]
  J[355] += dqdci;     // dwdot[H]/d[CO]
  J[364] -= dqdci;     // dwdot[HCCO]/d[CO]
  // d()/d[O]
  dqdci = +k_f * sc[28];
  J[596] += 2 * dqdci; // dwdot[CO]/d[O]
  J[602] -= dqdci;     // dwdot[O]/d[O]
  J[607] += dqdci;     // dwdot[H]/d[O]
  J[616] -= dqdci;     // dwdot[HCCO]/d[O]
  // d()/d[H]
  dqdci = -k_r * sc[8] * sc[8];
  J[806] += 2 * dqdci; // dwdot[CO]/d[H]
  J[812] -= dqdci;     // dwdot[O]/d[H]
  J[817] += dqdci;     // dwdot[H]/d[H]
  J[826] -= dqdci;     // dwdot[HCCO]/d[H]
  // d()/d[HCCO]
  dqdci = +k_f * sc[14];
  J[1184] += 2 * dqdci; // dwdot[CO]/d[HCCO]
  J[1190] -= dqdci;     // dwdot[O]/d[HCCO]
  J[1195] += dqdci;     // dwdot[H]/d[HCCO]
  J[1204] -= dqdci;     // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[1730] += 2 * dqdT; // dwdot[CO]/dT
  J[1736] -= dqdT;     // dwdot[O]/dT
  J[1741] += dqdT;     // dwdot[H]/dT
  J[1750] -= dqdT;     // dwdot[HCCO]/dT

  // reaction 93: HCCO + O2 <=> 2 CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[28];
  k_f = 1600000 * exp(-(429.747032597231) * invT);
  dlnkfdT = (429.747032597231) * invT2;
  // reverse
  phi_r = (sc[8] * sc[8]) * sc[15];
  Kc = refC * exp(-2.000000 * g_RT[8] + g_RT[13] - g_RT[15] + g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[28]) + (2.000000 * h_RT[8] + h_RT[15]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += 2 * q; // CO
  wdot[13] -= q;    // O2
  wdot[15] += q;    // OH
  wdot[28] -= q;    // HCCO
  // d()/d[CO]
  dqdci = -k_r * 2.000000 * sc[8] * sc[15];
  J[344] += 2 * dqdci; // dwdot[CO]/d[CO]
  J[349] -= dqdci;     // dwdot[O2]/d[CO]
  J[351] += dqdci;     // dwdot[OH]/d[CO]
  J[364] -= dqdci;     // dwdot[HCCO]/d[CO]
  // d()/d[O2]
  dqdci = +k_f * sc[28];
  J[554] += 2 * dqdci; // dwdot[CO]/d[O2]
  J[559] -= dqdci;     // dwdot[O2]/d[O2]
  J[561] += dqdci;     // dwdot[OH]/d[O2]
  J[574] -= dqdci;     // dwdot[HCCO]/d[O2]
  // d()/d[OH]
  dqdci = -k_r * sc[8] * sc[8];
  J[638] += 2 * dqdci; // dwdot[CO]/d[OH]
  J[643] -= dqdci;     // dwdot[O2]/d[OH]
  J[645] += dqdci;     // dwdot[OH]/d[OH]
  J[658] -= dqdci;     // dwdot[HCCO]/d[OH]
  // d()/d[HCCO]
  dqdci = +k_f * sc[13];
  J[1184] += 2 * dqdci; // dwdot[CO]/d[HCCO]
  J[1189] -= dqdci;     // dwdot[O2]/d[HCCO]
  J[1191] += dqdci;     // dwdot[OH]/d[HCCO]
  J[1204] -= dqdci;     // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[1730] += 2 * dqdT; // dwdot[CO]/dT
  J[1735] -= dqdT;     // dwdot[O2]/dT
  J[1737] += dqdT;     // dwdot[OH]/dT
  J[1750] -= dqdT;     // dwdot[HCCO]/dT

  // reaction 94: CH2 + HCCO <=> C2H3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[20] * sc[28];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[26];
  Kc = exp(-g_RT[8] + g_RT[20] - g_RT[26] + g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[20] + h_RT[28]) + (h_RT[8] + h_RT[26]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[20] -= q; // CH2
  wdot[26] += q; // C2H3
  wdot[28] -= q; // HCCO
  // d()/d[CO]
  dqdci = -k_r * sc[26];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[356] -= dqdci; // dwdot[CH2]/d[CO]
  J[362] += dqdci; // dwdot[C2H3]/d[CO]
  J[364] -= dqdci; // dwdot[HCCO]/d[CO]
  // d()/d[CH2]
  dqdci = +k_f * sc[28];
  J[848] += dqdci; // dwdot[CO]/d[CH2]
  J[860] -= dqdci; // dwdot[CH2]/d[CH2]
  J[866] += dqdci; // dwdot[C2H3]/d[CH2]
  J[868] -= dqdci; // dwdot[HCCO]/d[CH2]
  // d()/d[C2H3]
  dqdci = -k_r * sc[8];
  J[1100] += dqdci; // dwdot[CO]/d[C2H3]
  J[1112] -= dqdci; // dwdot[CH2]/d[C2H3]
  J[1118] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[1120] -= dqdci; // dwdot[HCCO]/d[C2H3]
  // d()/d[HCCO]
  dqdci = +k_f * sc[20];
  J[1184] += dqdci; // dwdot[CO]/d[HCCO]
  J[1196] -= dqdci; // dwdot[CH2]/d[HCCO]
  J[1202] += dqdci; // dwdot[C2H3]/d[HCCO]
  J[1204] -= dqdci; // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1742] -= dqdT; // dwdot[CH2]/dT
  J[1748] += dqdT; // dwdot[C2H3]/dT
  J[1750] -= dqdT; // dwdot[HCCO]/dT

  // reaction 96: C2H2 + O <=> CH2 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[14];
  k_f = 4.08 * exp(2 * logT - (956.111665028967) * invT);
  dlnkfdT = 2 * invT + (956.111665028967) * invT2;
  // reverse
  phi_r = sc[8] * sc[20];
  Kc = exp(-g_RT[8] + g_RT[10] + g_RT[14] - g_RT[20]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[14]) + (h_RT[8] + h_RT[20]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[10] -= q; // C2H2
  wdot[14] -= q; // O
  wdot[20] += q; // CH2
  // d()/d[CO]
  dqdci = -k_r * sc[20];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[346] -= dqdci; // dwdot[C2H2]/d[CO]
  J[350] -= dqdci; // dwdot[O]/d[CO]
  J[356] += dqdci; // dwdot[CH2]/d[CO]
  // d()/d[C2H2]
  dqdci = +k_f * sc[14];
  J[428] += dqdci; // dwdot[CO]/d[C2H2]
  J[430] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[434] -= dqdci; // dwdot[O]/d[C2H2]
  J[440] += dqdci; // dwdot[CH2]/d[C2H2]
  // d()/d[O]
  dqdci = +k_f * sc[10];
  J[596] += dqdci; // dwdot[CO]/d[O]
  J[598] -= dqdci; // dwdot[C2H2]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[608] += dqdci; // dwdot[CH2]/d[O]
  // d()/d[CH2]
  dqdci = -k_r * sc[8];
  J[848] += dqdci; // dwdot[CO]/d[CH2]
  J[850] -= dqdci; // dwdot[C2H2]/d[CH2]
  J[854] -= dqdci; // dwdot[O]/d[CH2]
  J[860] += dqdci; // dwdot[CH2]/d[CH2]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1732] -= dqdT; // dwdot[C2H2]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1742] += dqdT; // dwdot[CH2]/dT

  // reaction 97: C2H2 + O <=> H + HCCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[14];
  k_f = 16.32 * exp(2 * logT - (956.111665028967) * invT);
  dlnkfdT = 2 * invT + (956.111665028967) * invT2;
  // reverse
  phi_r = sc[19] * sc[28];
  Kc = exp(g_RT[10] + g_RT[14] - g_RT[19] - g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[14]) + (h_RT[19] + h_RT[28]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[10] -= q; // C2H2
  wdot[14] -= q; // O
  wdot[19] += q; // H
  wdot[28] += q; // HCCO
  // d()/d[C2H2]
  dqdci = +k_f * sc[14];
  J[430] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[434] -= dqdci; // dwdot[O]/d[C2H2]
  J[439] += dqdci; // dwdot[H]/d[C2H2]
  J[448] += dqdci; // dwdot[HCCO]/d[C2H2]
  // d()/d[O]
  dqdci = +k_f * sc[10];
  J[598] -= dqdci; // dwdot[C2H2]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[607] += dqdci; // dwdot[H]/d[O]
  J[616] += dqdci; // dwdot[HCCO]/d[O]
  // d()/d[H]
  dqdci = -k_r * sc[28];
  J[808] -= dqdci; // dwdot[C2H2]/d[H]
  J[812] -= dqdci; // dwdot[O]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[826] += dqdci; // dwdot[HCCO]/d[H]
  // d()/d[HCCO]
  dqdci = -k_r * sc[19];
  J[1186] -= dqdci; // dwdot[C2H2]/d[HCCO]
  J[1190] -= dqdci; // dwdot[O]/d[HCCO]
  J[1195] += dqdci; // dwdot[H]/d[HCCO]
  J[1204] += dqdci; // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[1732] -= dqdT; // dwdot[C2H2]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1750] += dqdT; // dwdot[HCCO]/dT

  // reaction 98: C2H2 + OH <=> CH2CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[15];
  k_f = 2.18e-10 * exp(4.5 * logT - (-503.21666580472) * invT);
  dlnkfdT = 4.5 * invT + (-503.21666580472) * invT2;
  // reverse
  phi_r = sc[19] * sc[29];
  Kc = exp(g_RT[10] + g_RT[15] - g_RT[19] - g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[15]) + (h_RT[19] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[10] -= q; // C2H2
  wdot[15] -= q; // OH
  wdot[19] += q; // H
  wdot[29] += q; // CH2CO
  // d()/d[C2H2]
  dqdci = +k_f * sc[15];
  J[430] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[435] -= dqdci; // dwdot[OH]/d[C2H2]
  J[439] += dqdci; // dwdot[H]/d[C2H2]
  J[449] += dqdci; // dwdot[CH2CO]/d[C2H2]
  // d()/d[OH]
  dqdci = +k_f * sc[10];
  J[640] -= dqdci; // dwdot[C2H2]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[649] += dqdci; // dwdot[H]/d[OH]
  J[659] += dqdci; // dwdot[CH2CO]/d[OH]
  // d()/d[H]
  dqdci = -k_r * sc[29];
  J[808] -= dqdci; // dwdot[C2H2]/d[H]
  J[813] -= dqdci; // dwdot[OH]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[827] += dqdci; // dwdot[CH2CO]/d[H]
  // d()/d[CH2CO]
  dqdci = -k_r * sc[19];
  J[1228] -= dqdci; // dwdot[C2H2]/d[CH2CO]
  J[1233] -= dqdci; // dwdot[OH]/d[CH2CO]
  J[1237] += dqdci; // dwdot[H]/d[CH2CO]
  J[1247] += dqdci; // dwdot[CH2CO]/d[CH2CO]
  // d()/dT
  J[1732] -= dqdT; // dwdot[C2H2]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1751] += dqdT; // dwdot[CH2CO]/dT

  // reaction 99: C2H2 + OH <=> CH3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[15];
  k_f = 4.83e-10 * exp(4 * logT - (-1006.43333160944) * invT);
  dlnkfdT = 4 * invT + (-1006.43333160944) * invT2;
  // reverse
  phi_r = sc[8] * sc[12];
  Kc = exp(-g_RT[8] + g_RT[10] - g_RT[12] + g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[15]) + (h_RT[8] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[10] -= q; // C2H2
  wdot[12] += q; // CH3
  wdot[15] -= q; // OH
  // d()/d[CO]
  dqdci = -k_r * sc[12];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[346] -= dqdci; // dwdot[C2H2]/d[CO]
  J[348] += dqdci; // dwdot[CH3]/d[CO]
  J[351] -= dqdci; // dwdot[OH]/d[CO]
  // d()/d[C2H2]
  dqdci = +k_f * sc[15];
  J[428] += dqdci; // dwdot[CO]/d[C2H2]
  J[430] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[432] += dqdci; // dwdot[CH3]/d[C2H2]
  J[435] -= dqdci; // dwdot[OH]/d[C2H2]
  // d()/d[CH3]
  dqdci = -k_r * sc[8];
  J[512] += dqdci; // dwdot[CO]/d[CH3]
  J[514] -= dqdci; // dwdot[C2H2]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[519] -= dqdci; // dwdot[OH]/d[CH3]
  // d()/d[OH]
  dqdci = +k_f * sc[10];
  J[638] += dqdci; // dwdot[CO]/d[OH]
  J[640] -= dqdci; // dwdot[C2H2]/d[OH]
  J[642] += dqdci; // dwdot[CH3]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1732] -= dqdT; // dwdot[C2H2]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT

  // reaction 100: C2H2 + HCO <=> C2H3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[22];
  k_f = 10 * exp(2 * logT - (3019.29999482832) * invT);
  dlnkfdT = 2 * invT + (3019.29999482832) * invT2;
  // reverse
  phi_r = sc[8] * sc[26];
  Kc = exp(-g_RT[8] + g_RT[10] + g_RT[22] - g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[22]) + (h_RT[8] + h_RT[26]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[10] -= q; // C2H2
  wdot[22] -= q; // HCO
  wdot[26] += q; // C2H3
  // d()/d[CO]
  dqdci = -k_r * sc[26];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[346] -= dqdci; // dwdot[C2H2]/d[CO]
  J[358] -= dqdci; // dwdot[HCO]/d[CO]
  J[362] += dqdci; // dwdot[C2H3]/d[CO]
  // d()/d[C2H2]
  dqdci = +k_f * sc[22];
  J[428] += dqdci; // dwdot[CO]/d[C2H2]
  J[430] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[442] -= dqdci; // dwdot[HCO]/d[C2H2]
  J[446] += dqdci; // dwdot[C2H3]/d[C2H2]
  // d()/d[HCO]
  dqdci = +k_f * sc[10];
  J[932] += dqdci; // dwdot[CO]/d[HCO]
  J[934] -= dqdci; // dwdot[C2H2]/d[HCO]
  J[946] -= dqdci; // dwdot[HCO]/d[HCO]
  J[950] += dqdci; // dwdot[C2H3]/d[HCO]
  // d()/d[C2H3]
  dqdci = -k_r * sc[8];
  J[1100] += dqdci; // dwdot[CO]/d[C2H3]
  J[1102] -= dqdci; // dwdot[C2H2]/d[C2H3]
  J[1114] -= dqdci; // dwdot[HCO]/d[C2H3]
  J[1118] += dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1732] -= dqdT; // dwdot[C2H2]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT
  J[1748] += dqdT; // dwdot[C2H3]/dT

  // reaction 101: C2H2 + CH2 <=> C3H3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[20];
  k_f = 12000000 * exp(-(3331.29432762724) * invT);
  dlnkfdT = (3331.29432762724) * invT2;
  // reverse
  phi_r = sc[19] * sc[31];
  Kc = exp(g_RT[10] - g_RT[19] + g_RT[20] - g_RT[31]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[20]) + (h_RT[19] + h_RT[31]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[10] -= q; // C2H2
  wdot[19] += q; // H
  wdot[20] -= q; // CH2
  wdot[31] += q; // C3H3
  // d()/d[C2H2]
  dqdci = +k_f * sc[20];
  J[430] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[439] += dqdci; // dwdot[H]/d[C2H2]
  J[440] -= dqdci; // dwdot[CH2]/d[C2H2]
  J[451] += dqdci; // dwdot[C3H3]/d[C2H2]
  // d()/d[H]
  dqdci = -k_r * sc[31];
  J[808] -= dqdci; // dwdot[C2H2]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[818] -= dqdci; // dwdot[CH2]/d[H]
  J[829] += dqdci; // dwdot[C3H3]/d[H]
  // d()/d[CH2]
  dqdci = +k_f * sc[10];
  J[850] -= dqdci; // dwdot[C2H2]/d[CH2]
  J[859] += dqdci; // dwdot[H]/d[CH2]
  J[860] -= dqdci; // dwdot[CH2]/d[CH2]
  J[871] += dqdci; // dwdot[C3H3]/d[CH2]
  // d()/d[C3H3]
  dqdci = -k_r * sc[19];
  J[1312] -= dqdci; // dwdot[C2H2]/d[C3H3]
  J[1321] += dqdci; // dwdot[H]/d[C3H3]
  J[1322] -= dqdci; // dwdot[CH2]/d[C3H3]
  J[1333] += dqdci; // dwdot[C3H3]/d[C3H3]
  // d()/dT
  J[1732] -= dqdT; // dwdot[C2H2]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1742] -= dqdT; // dwdot[CH2]/dT
  J[1753] += dqdT; // dwdot[C3H3]/dT

  // reaction 102: C2H2 + CH2* <=> C3H3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[21];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[19] * sc[31];
  Kc = exp(g_RT[10] - g_RT[19] + g_RT[21] - g_RT[31]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[21]) + (h_RT[19] + h_RT[31]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[10] -= q; // C2H2
  wdot[19] += q; // H
  wdot[21] -= q; // CH2*
  wdot[31] += q; // C3H3
  // d()/d[C2H2]
  dqdci = +k_f * sc[21];
  J[430] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[439] += dqdci; // dwdot[H]/d[C2H2]
  J[441] -= dqdci; // dwdot[CH2*]/d[C2H2]
  J[451] += dqdci; // dwdot[C3H3]/d[C2H2]
  // d()/d[H]
  dqdci = -k_r * sc[31];
  J[808] -= dqdci; // dwdot[C2H2]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[819] -= dqdci; // dwdot[CH2*]/d[H]
  J[829] += dqdci; // dwdot[C3H3]/d[H]
  // d()/d[CH2*]
  dqdci = +k_f * sc[10];
  J[892] -= dqdci; // dwdot[C2H2]/d[CH2*]
  J[901] += dqdci; // dwdot[H]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[913] += dqdci; // dwdot[C3H3]/d[CH2*]
  // d()/d[C3H3]
  dqdci = -k_r * sc[19];
  J[1312] -= dqdci; // dwdot[C2H2]/d[C3H3]
  J[1321] += dqdci; // dwdot[H]/d[C3H3]
  J[1323] -= dqdci; // dwdot[CH2*]/d[C3H3]
  J[1333] += dqdci; // dwdot[C3H3]/d[C3H3]
  // d()/dT
  J[1732] -= dqdT; // dwdot[C2H2]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT
  J[1753] += dqdT; // dwdot[C3H3]/dT

  // reaction 103: C2H2 + CH3 <=> aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[12];
  k_f = 2.68e+47 * exp(-12.82 * logT - (17979.9314692026) * invT);
  dlnkfdT = -12.82 * invT + (17979.9314692026) * invT2;
  // reverse
  phi_r = sc[32];
  Kc = refCinv * exp(g_RT[10] + g_RT[12] - g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[12]) + (h_RT[32]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[10] -= q; // C2H2
  wdot[12] -= q; // CH3
  wdot[32] += q; // aC3H5
  // d()/d[C2H2]
  dqdci = +k_f * sc[12];
  J[430] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[432] -= dqdci; // dwdot[CH3]/d[C2H2]
  J[452] += dqdci; // dwdot[aC3H5]/d[C2H2]
  // d()/d[CH3]
  dqdci = +k_f * sc[10];
  J[514] -= dqdci; // dwdot[C2H2]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[536] += dqdci; // dwdot[aC3H5]/d[CH3]
  // d()/d[aC3H5]
  dqdci = -k_r;
  J[1354] -= dqdci; // dwdot[C2H2]/d[aC3H5]
  J[1356] -= dqdci; // dwdot[CH3]/d[aC3H5]
  J[1376] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[1732] -= dqdT; // dwdot[C2H2]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1754] += dqdT; // dwdot[aC3H5]/dT

  // reaction 105: CH2CO + H <=> H2 + HCCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[29];
  k_f = 50000000 * exp(-(4025.73332643776) * invT);
  dlnkfdT = (4025.73332643776) * invT2;
  // reverse
  phi_r = sc[6] * sc[28];
  Kc = exp(-g_RT[6] + g_RT[19] - g_RT[28] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[29]) + (h_RT[6] + h_RT[28]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2
  wdot[19] -= q; // H
  wdot[28] += q; // HCCO
  wdot[29] -= q; // CH2CO
  // d()/d[H2]
  dqdci = -k_r * sc[28];
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[280] += dqdci; // dwdot[HCCO]/d[H2]
  J[281] -= dqdci; // dwdot[CH2CO]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[29];
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[826] += dqdci; // dwdot[HCCO]/d[H]
  J[827] -= dqdci; // dwdot[CH2CO]/d[H]
  // d()/d[HCCO]
  dqdci = -k_r * sc[6];
  J[1182] += dqdci; // dwdot[H2]/d[HCCO]
  J[1195] -= dqdci; // dwdot[H]/d[HCCO]
  J[1204] += dqdci; // dwdot[HCCO]/d[HCCO]
  J[1205] -= dqdci; // dwdot[CH2CO]/d[HCCO]
  // d()/d[CH2CO]
  dqdci = +k_f * sc[19];
  J[1224] += dqdci; // dwdot[H2]/d[CH2CO]
  J[1237] -= dqdci; // dwdot[H]/d[CH2CO]
  J[1246] += dqdci; // dwdot[HCCO]/d[CH2CO]
  J[1247] -= dqdci; // dwdot[CH2CO]/d[CH2CO]
  // d()/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1750] += dqdT; // dwdot[HCCO]/dT
  J[1751] -= dqdT; // dwdot[CH2CO]/dT

  // reaction 106: CH2CO + H <=> CH3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[29];
  k_f = 1500 * exp(1.43 * logT - (1353.6528310147) * invT);
  dlnkfdT = 1.43 * invT + (1353.6528310147) * invT2;
  // reverse
  phi_r = sc[8] * sc[12];
  Kc = exp(-g_RT[8] - g_RT[12] + g_RT[19] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[29]) + (h_RT[8] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[12] += q; // CH3
  wdot[19] -= q; // H
  wdot[29] -= q; // CH2CO
  // d()/d[CO]
  dqdci = -k_r * sc[12];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[348] += dqdci; // dwdot[CH3]/d[CO]
  J[355] -= dqdci; // dwdot[H]/d[CO]
  J[365] -= dqdci; // dwdot[CH2CO]/d[CO]
  // d()/d[CH3]
  dqdci = -k_r * sc[8];
  J[512] += dqdci; // dwdot[CO]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[523] -= dqdci; // dwdot[H]/d[CH3]
  J[533] -= dqdci; // dwdot[CH2CO]/d[CH3]
  // d()/d[H]
  dqdci = +k_f * sc[29];
  J[806] += dqdci; // dwdot[CO]/d[H]
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[827] -= dqdci; // dwdot[CH2CO]/d[H]
  // d()/d[CH2CO]
  dqdci = +k_f * sc[19];
  J[1226] += dqdci; // dwdot[CO]/d[CH2CO]
  J[1230] += dqdci; // dwdot[CH3]/d[CH2CO]
  J[1237] -= dqdci; // dwdot[H]/d[CH2CO]
  J[1247] -= dqdci; // dwdot[CH2CO]/d[CH2CO]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1751] -= dqdT; // dwdot[CH2CO]/dT

  // reaction 107: CH2CO + O <=> HCCO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[29];
  k_f = 10000000 * exp(-(4025.73332643776) * invT);
  dlnkfdT = (4025.73332643776) * invT2;
  // reverse
  phi_r = sc[15] * sc[28];
  Kc = exp(g_RT[14] - g_RT[15] - g_RT[28] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[29]) + (h_RT[15] + h_RT[28]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[28] += q; // HCCO
  wdot[29] -= q; // CH2CO
  // d()/d[O]
  dqdci = +k_f * sc[29];
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[616] += dqdci; // dwdot[HCCO]/d[O]
  J[617] -= dqdci; // dwdot[CH2CO]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[28];
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[658] += dqdci; // dwdot[HCCO]/d[OH]
  J[659] -= dqdci; // dwdot[CH2CO]/d[OH]
  // d()/d[HCCO]
  dqdci = -k_r * sc[15];
  J[1190] -= dqdci; // dwdot[O]/d[HCCO]
  J[1191] += dqdci; // dwdot[OH]/d[HCCO]
  J[1204] += dqdci; // dwdot[HCCO]/d[HCCO]
  J[1205] -= dqdci; // dwdot[CH2CO]/d[HCCO]
  // d()/d[CH2CO]
  dqdci = +k_f * sc[14];
  J[1232] -= dqdci; // dwdot[O]/d[CH2CO]
  J[1233] += dqdci; // dwdot[OH]/d[CH2CO]
  J[1246] += dqdci; // dwdot[HCCO]/d[CH2CO]
  J[1247] -= dqdci; // dwdot[CH2CO]/d[CH2CO]
  // d()/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1750] += dqdT; // dwdot[HCCO]/dT
  J[1751] -= dqdT; // dwdot[CH2CO]/dT

  // reaction 108: CH2CO + O <=> CH2 + CO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[29];
  k_f = 1750000 * exp(-(679.342498836372) * invT);
  dlnkfdT = (679.342498836372) * invT2;
  // reverse
  phi_r = sc[20] * sc[25];
  Kc = exp(g_RT[14] - g_RT[20] - g_RT[25] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[29]) + (h_RT[20] + h_RT[25]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[20] += q; // CH2
  wdot[25] += q; // CO2
  wdot[29] -= q; // CH2CO
  // d()/d[O]
  dqdci = +k_f * sc[29];
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[608] += dqdci; // dwdot[CH2]/d[O]
  J[613] += dqdci; // dwdot[CO2]/d[O]
  J[617] -= dqdci; // dwdot[CH2CO]/d[O]
  // d()/d[CH2]
  dqdci = -k_r * sc[25];
  J[854] -= dqdci; // dwdot[O]/d[CH2]
  J[860] += dqdci; // dwdot[CH2]/d[CH2]
  J[865] += dqdci; // dwdot[CO2]/d[CH2]
  J[869] -= dqdci; // dwdot[CH2CO]/d[CH2]
  // d()/d[CO2]
  dqdci = -k_r * sc[20];
  J[1064] -= dqdci; // dwdot[O]/d[CO2]
  J[1070] += dqdci; // dwdot[CH2]/d[CO2]
  J[1075] += dqdci; // dwdot[CO2]/d[CO2]
  J[1079] -= dqdci; // dwdot[CH2CO]/d[CO2]
  // d()/d[CH2CO]
  dqdci = +k_f * sc[14];
  J[1232] -= dqdci; // dwdot[O]/d[CH2CO]
  J[1238] += dqdci; // dwdot[CH2]/d[CH2CO]
  J[1243] += dqdci; // dwdot[CO2]/d[CH2CO]
  J[1247] -= dqdci; // dwdot[CH2CO]/d[CH2CO]
  // d()/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1742] += dqdT; // dwdot[CH2]/dT
  J[1747] += dqdT; // dwdot[CO2]/dT
  J[1751] -= dqdT; // dwdot[CH2CO]/dT

  // reaction 109: CH2CO + OH <=> H2O + HCCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[29];
  k_f = 7500000 * exp(-(1006.43333160944) * invT);
  dlnkfdT = (1006.43333160944) * invT2;
  // reverse
  phi_r = sc[17] * sc[28];
  Kc = exp(g_RT[15] - g_RT[17] - g_RT[28] + g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[29]) + (h_RT[17] + h_RT[28]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[28] += q; // HCCO
  wdot[29] -= q; // CH2CO
  // d()/d[OH]
  dqdci = +k_f * sc[29];
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[658] += dqdci; // dwdot[HCCO]/d[OH]
  J[659] -= dqdci; // dwdot[CH2CO]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[28];
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[742] += dqdci; // dwdot[HCCO]/d[H2O]
  J[743] -= dqdci; // dwdot[CH2CO]/d[H2O]
  // d()/d[HCCO]
  dqdci = -k_r * sc[17];
  J[1191] -= dqdci; // dwdot[OH]/d[HCCO]
  J[1193] += dqdci; // dwdot[H2O]/d[HCCO]
  J[1204] += dqdci; // dwdot[HCCO]/d[HCCO]
  J[1205] -= dqdci; // dwdot[CH2CO]/d[HCCO]
  // d()/d[CH2CO]
  dqdci = +k_f * sc[15];
  J[1233] -= dqdci; // dwdot[OH]/d[CH2CO]
  J[1235] += dqdci; // dwdot[H2O]/d[CH2CO]
  J[1246] += dqdci; // dwdot[HCCO]/d[CH2CO]
  J[1247] -= dqdci; // dwdot[CH2CO]/d[CH2CO]
  // d()/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1750] += dqdT; // dwdot[HCCO]/dT
  J[1751] -= dqdT; // dwdot[CH2CO]/dT

  // reaction 111: C2H3 + H <=> C2H2 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[26];
  k_f = 90000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[10];
  Kc = exp(-g_RT[6] - g_RT[10] + g_RT[19] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[26]) + (h_RT[6] + h_RT[10]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2
  wdot[10] += q; // C2H2
  wdot[19] -= q; // H
  wdot[26] -= q; // C2H3
  // d()/d[H2]
  dqdci = -k_r * sc[10];
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[262] += dqdci; // dwdot[C2H2]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[278] -= dqdci; // dwdot[C2H3]/d[H2]
  // d()/d[C2H2]
  dqdci = -k_r * sc[6];
  J[426] += dqdci; // dwdot[H2]/d[C2H2]
  J[430] += dqdci; // dwdot[C2H2]/d[C2H2]
  J[439] -= dqdci; // dwdot[H]/d[C2H2]
  J[446] -= dqdci; // dwdot[C2H3]/d[C2H2]
  // d()/d[H]
  dqdci = +k_f * sc[26];
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[808] += dqdci; // dwdot[C2H2]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[824] -= dqdci; // dwdot[C2H3]/d[H]
  // d()/d[C2H3]
  dqdci = +k_f * sc[19];
  J[1098] += dqdci; // dwdot[H2]/d[C2H3]
  J[1102] += dqdci; // dwdot[C2H2]/d[C2H3]
  J[1111] -= dqdci; // dwdot[H]/d[C2H3]
  J[1118] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1732] += dqdT; // dwdot[C2H2]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT

  // reaction 112: C2H3 + O <=> CH2CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[26];
  k_f = 48000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[19] * sc[29];
  Kc = exp(g_RT[14] - g_RT[19] + g_RT[26] - g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[26]) + (h_RT[19] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[19] += q; // H
  wdot[26] -= q; // C2H3
  wdot[29] += q; // CH2CO
  // d()/d[O]
  dqdci = +k_f * sc[26];
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[607] += dqdci; // dwdot[H]/d[O]
  J[614] -= dqdci; // dwdot[C2H3]/d[O]
  J[617] += dqdci; // dwdot[CH2CO]/d[O]
  // d()/d[H]
  dqdci = -k_r * sc[29];
  J[812] -= dqdci; // dwdot[O]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[824] -= dqdci; // dwdot[C2H3]/d[H]
  J[827] += dqdci; // dwdot[CH2CO]/d[H]
  // d()/d[C2H3]
  dqdci = +k_f * sc[14];
  J[1106] -= dqdci; // dwdot[O]/d[C2H3]
  J[1111] += dqdci; // dwdot[H]/d[C2H3]
  J[1118] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[1121] += dqdci; // dwdot[CH2CO]/d[C2H3]
  // d()/d[CH2CO]
  dqdci = -k_r * sc[19];
  J[1232] -= dqdci; // dwdot[O]/d[CH2CO]
  J[1237] += dqdci; // dwdot[H]/d[CH2CO]
  J[1244] -= dqdci; // dwdot[C2H3]/d[CH2CO]
  J[1247] += dqdci; // dwdot[CH2CO]/d[CH2CO]
  // d()/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT
  J[1751] += dqdT; // dwdot[CH2CO]/dT

  // reaction 113: C2H3 + O <=> CH3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[26];
  k_f = 48000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[12];
  Kc = exp(-g_RT[8] - g_RT[12] + g_RT[14] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[26]) + (h_RT[8] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[12] += q; // CH3
  wdot[14] -= q; // O
  wdot[26] -= q; // C2H3
  // d()/d[CO]
  dqdci = -k_r * sc[12];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[348] += dqdci; // dwdot[CH3]/d[CO]
  J[350] -= dqdci; // dwdot[O]/d[CO]
  J[362] -= dqdci; // dwdot[C2H3]/d[CO]
  // d()/d[CH3]
  dqdci = -k_r * sc[8];
  J[512] += dqdci; // dwdot[CO]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[518] -= dqdci; // dwdot[O]/d[CH3]
  J[530] -= dqdci; // dwdot[C2H3]/d[CH3]
  // d()/d[O]
  dqdci = +k_f * sc[26];
  J[596] += dqdci; // dwdot[CO]/d[O]
  J[600] += dqdci; // dwdot[CH3]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[614] -= dqdci; // dwdot[C2H3]/d[O]
  // d()/d[C2H3]
  dqdci = +k_f * sc[14];
  J[1100] += dqdci; // dwdot[CO]/d[C2H3]
  J[1104] += dqdci; // dwdot[CH3]/d[C2H3]
  J[1106] -= dqdci; // dwdot[O]/d[C2H3]
  J[1118] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT

  // reaction 114: C2H3 + OH <=> C2H2 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[26];
  k_f = 30110000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[10] * sc[17];
  Kc = exp(-g_RT[10] + g_RT[15] - g_RT[17] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[26]) + (h_RT[10] + h_RT[17]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[10] += q; // C2H2
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[26] -= q; // C2H3
  // d()/d[C2H2]
  dqdci = -k_r * sc[17];
  J[430] += dqdci; // dwdot[C2H2]/d[C2H2]
  J[435] -= dqdci; // dwdot[OH]/d[C2H2]
  J[437] += dqdci; // dwdot[H2O]/d[C2H2]
  J[446] -= dqdci; // dwdot[C2H3]/d[C2H2]
  // d()/d[OH]
  dqdci = +k_f * sc[26];
  J[640] += dqdci; // dwdot[C2H2]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[656] -= dqdci; // dwdot[C2H3]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[10];
  J[724] += dqdci; // dwdot[C2H2]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[740] -= dqdci; // dwdot[C2H3]/d[H2O]
  // d()/d[C2H3]
  dqdci = +k_f * sc[15];
  J[1102] += dqdci; // dwdot[C2H2]/d[C2H3]
  J[1107] -= dqdci; // dwdot[OH]/d[C2H3]
  J[1109] += dqdci; // dwdot[H2O]/d[C2H3]
  J[1118] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1732] += dqdT; // dwdot[C2H2]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT

  // reaction 115: C2H3 + O2 <=> C2H2 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[26];
  k_f = 1.34 * exp(1.61 * logT - (-192.93326966953) * invT);
  dlnkfdT = 1.61 * invT + (-192.93326966953) * invT2;
  // reverse
  phi_r = sc[10] * sc[16];
  Kc = exp(-g_RT[10] + g_RT[13] - g_RT[16] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[26]) + (h_RT[10] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[10] += q; // C2H2
  wdot[13] -= q; // O2
  wdot[16] += q; // HO2
  wdot[26] -= q; // C2H3
  // d()/d[C2H2]
  dqdci = -k_r * sc[16];
  J[430] += dqdci; // dwdot[C2H2]/d[C2H2]
  J[433] -= dqdci; // dwdot[O2]/d[C2H2]
  J[436] += dqdci; // dwdot[HO2]/d[C2H2]
  J[446] -= dqdci; // dwdot[C2H3]/d[C2H2]
  // d()/d[O2]
  dqdci = +k_f * sc[26];
  J[556] += dqdci; // dwdot[C2H2]/d[O2]
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[562] += dqdci; // dwdot[HO2]/d[O2]
  J[572] -= dqdci; // dwdot[C2H3]/d[O2]
  // d()/d[HO2]
  dqdci = -k_r * sc[10];
  J[682] += dqdci; // dwdot[C2H2]/d[HO2]
  J[685] -= dqdci; // dwdot[O2]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[698] -= dqdci; // dwdot[C2H3]/d[HO2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[13];
  J[1102] += dqdci; // dwdot[C2H2]/d[C2H3]
  J[1105] -= dqdci; // dwdot[O2]/d[C2H3]
  J[1108] += dqdci; // dwdot[HO2]/d[C2H3]
  J[1118] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1732] += dqdT; // dwdot[C2H2]/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT

  // reaction 116: C2H3 + O2 <=> CH2CHO + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[26];
  k_f = 300000 * exp(0.29 * logT - (5.53538332385192) * invT);
  dlnkfdT = 0.29 * invT + (5.53538332385192) * invT2;
  // reverse
  phi_r = sc[14] * sc[30];
  Kc = exp(g_RT[13] - g_RT[14] + g_RT[26] - g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[26]) + (h_RT[14] + h_RT[30]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // O2
  wdot[14] += q; // O
  wdot[26] -= q; // C2H3
  wdot[30] += q; // CH2CHO
  // d()/d[O2]
  dqdci = +k_f * sc[26];
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[560] += dqdci; // dwdot[O]/d[O2]
  J[572] -= dqdci; // dwdot[C2H3]/d[O2]
  J[576] += dqdci; // dwdot[CH2CHO]/d[O2]
  // d()/d[O]
  dqdci = -k_r * sc[30];
  J[601] -= dqdci; // dwdot[O2]/d[O]
  J[602] += dqdci; // dwdot[O]/d[O]
  J[614] -= dqdci; // dwdot[C2H3]/d[O]
  J[618] += dqdci; // dwdot[CH2CHO]/d[O]
  // d()/d[C2H3]
  dqdci = +k_f * sc[13];
  J[1105] -= dqdci; // dwdot[O2]/d[C2H3]
  J[1106] += dqdci; // dwdot[O]/d[C2H3]
  J[1118] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[1122] += dqdci; // dwdot[CH2CHO]/d[C2H3]
  // d()/d[CH2CHO]
  dqdci = -k_r * sc[14];
  J[1273] -= dqdci; // dwdot[O2]/d[CH2CHO]
  J[1274] += dqdci; // dwdot[O]/d[CH2CHO]
  J[1286] -= dqdci; // dwdot[C2H3]/d[CH2CHO]
  J[1290] += dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1736] += dqdT; // dwdot[O]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT
  J[1752] += dqdT; // dwdot[CH2CHO]/dT

  // reaction 117: C2H3 + O2 <=> CH2O + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[26];
  k_f = 46000000000 * exp(-1.39 * logT - (508.248832462767) * invT);
  dlnkfdT = -1.39 * invT + (508.248832462767) * invT2;
  // reverse
  phi_r = sc[22] * sc[23];
  Kc = exp(g_RT[13] - g_RT[22] - g_RT[23] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[26]) + (h_RT[22] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // O2
  wdot[22] += q; // HCO
  wdot[23] += q; // CH2O
  wdot[26] -= q; // C2H3
  // d()/d[O2]
  dqdci = +k_f * sc[26];
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[568] += dqdci; // dwdot[HCO]/d[O2]
  J[569] += dqdci; // dwdot[CH2O]/d[O2]
  J[572] -= dqdci; // dwdot[C2H3]/d[O2]
  // d()/d[HCO]
  dqdci = -k_r * sc[23];
  J[937] -= dqdci; // dwdot[O2]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[947] += dqdci; // dwdot[CH2O]/d[HCO]
  J[950] -= dqdci; // dwdot[C2H3]/d[HCO]
  // d()/d[CH2O]
  dqdci = -k_r * sc[22];
  J[979] -= dqdci; // dwdot[O2]/d[CH2O]
  J[988] += dqdci; // dwdot[HCO]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[992] -= dqdci; // dwdot[C2H3]/d[CH2O]
  // d()/d[C2H3]
  dqdci = +k_f * sc[13];
  J[1105] -= dqdci; // dwdot[O2]/d[C2H3]
  J[1114] += dqdci; // dwdot[HCO]/d[C2H3]
  J[1115] += dqdci; // dwdot[CH2O]/d[C2H3]
  J[1118] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT

  // reaction 119: C2H3 + CH3 <=> H + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[26];
  k_f = 1.5e+18 * exp(-2.83 * logT - (9368.88788395227) * invT);
  dlnkfdT = -2.83 * invT + (9368.88788395227) * invT2;
  // reverse
  phi_r = sc[19] * sc[32];
  Kc = exp(g_RT[12] - g_RT[19] + g_RT[26] - g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[26]) + (h_RT[19] + h_RT[32]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] -= q; // CH3
  wdot[19] += q; // H
  wdot[26] -= q; // C2H3
  wdot[32] += q; // aC3H5
  // d()/d[CH3]
  dqdci = +k_f * sc[26];
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[523] += dqdci; // dwdot[H]/d[CH3]
  J[530] -= dqdci; // dwdot[C2H3]/d[CH3]
  J[536] += dqdci; // dwdot[aC3H5]/d[CH3]
  // d()/d[H]
  dqdci = -k_r * sc[32];
  J[810] -= dqdci; // dwdot[CH3]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[824] -= dqdci; // dwdot[C2H3]/d[H]
  J[830] += dqdci; // dwdot[aC3H5]/d[H]
  // d()/d[C2H3]
  dqdci = +k_f * sc[12];
  J[1104] -= dqdci; // dwdot[CH3]/d[C2H3]
  J[1111] += dqdci; // dwdot[H]/d[C2H3]
  J[1118] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[1124] += dqdci; // dwdot[aC3H5]/d[C2H3]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[19];
  J[1356] -= dqdci; // dwdot[CH3]/d[aC3H5]
  J[1363] += dqdci; // dwdot[H]/d[aC3H5]
  J[1370] -= dqdci; // dwdot[C2H3]/d[aC3H5]
  J[1376] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1748] -= dqdT; // dwdot[C2H3]/dT
  J[1754] += dqdT; // dwdot[aC3H5]/dT

  // reaction 120: CH2CHO <=> CH3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[30];
  k_f = 7.8e+41 * exp(-9.147 * logT - (23600.8616262414) * invT);
  dlnkfdT = -9.147 * invT + (23600.8616262414) * invT2;
  // reverse
  phi_r = sc[8] * sc[12];
  Kc = refC * exp(-g_RT[8] - g_RT[12] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[30]) + (h_RT[8] + h_RT[12]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[12] += q; // CH3
  wdot[30] -= q; // CH2CHO
  // d()/d[CO]
  dqdci = -k_r * sc[12];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[348] += dqdci; // dwdot[CH3]/d[CO]
  J[366] -= dqdci; // dwdot[CH2CHO]/d[CO]
  // d()/d[CH3]
  dqdci = -k_r * sc[8];
  J[512] += dqdci; // dwdot[CO]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[534] -= dqdci; // dwdot[CH2CHO]/d[CH3]
  // d()/d[CH2CHO]
  dqdci = +k_f;
  J[1268] += dqdci; // dwdot[CO]/d[CH2CHO]
  J[1272] += dqdci; // dwdot[CH3]/d[CH2CHO]
  J[1290] -= dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1752] -= dqdT; // dwdot[CH2CHO]/dT

  // reaction 121: CH2CHO + H <=> CH3 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[30];
  k_f = 90000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[12] * sc[22];
  Kc = exp(-g_RT[12] + g_RT[19] - g_RT[22] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[30]) + (h_RT[12] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] += q; // CH3
  wdot[19] -= q; // H
  wdot[22] += q; // HCO
  wdot[30] -= q; // CH2CHO
  // d()/d[CH3]
  dqdci = -k_r * sc[22];
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[523] -= dqdci; // dwdot[H]/d[CH3]
  J[526] += dqdci; // dwdot[HCO]/d[CH3]
  J[534] -= dqdci; // dwdot[CH2CHO]/d[CH3]
  // d()/d[H]
  dqdci = +k_f * sc[30];
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[820] += dqdci; // dwdot[HCO]/d[H]
  J[828] -= dqdci; // dwdot[CH2CHO]/d[H]
  // d()/d[HCO]
  dqdci = -k_r * sc[12];
  J[936] += dqdci; // dwdot[CH3]/d[HCO]
  J[943] -= dqdci; // dwdot[H]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[954] -= dqdci; // dwdot[CH2CHO]/d[HCO]
  // d()/d[CH2CHO]
  dqdci = +k_f * sc[19];
  J[1272] += dqdci; // dwdot[CH3]/d[CH2CHO]
  J[1279] -= dqdci; // dwdot[H]/d[CH2CHO]
  J[1282] += dqdci; // dwdot[HCO]/d[CH2CHO]
  J[1290] -= dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1752] -= dqdT; // dwdot[CH2CHO]/dT

  // reaction 122: CH2CHO + H <=> CH2CO + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[30];
  k_f = 20000000 * exp(-(2012.86666321888) * invT);
  dlnkfdT = (2012.86666321888) * invT2;
  // reverse
  phi_r = sc[6] * sc[29];
  Kc = exp(-g_RT[6] + g_RT[19] - g_RT[29] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[30]) + (h_RT[6] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2
  wdot[19] -= q; // H
  wdot[29] += q; // CH2CO
  wdot[30] -= q; // CH2CHO
  // d()/d[H2]
  dqdci = -k_r * sc[29];
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[281] += dqdci; // dwdot[CH2CO]/d[H2]
  J[282] -= dqdci; // dwdot[CH2CHO]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[30];
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[827] += dqdci; // dwdot[CH2CO]/d[H]
  J[828] -= dqdci; // dwdot[CH2CHO]/d[H]
  // d()/d[CH2CO]
  dqdci = -k_r * sc[6];
  J[1224] += dqdci; // dwdot[H2]/d[CH2CO]
  J[1237] -= dqdci; // dwdot[H]/d[CH2CO]
  J[1247] += dqdci; // dwdot[CH2CO]/d[CH2CO]
  J[1248] -= dqdci; // dwdot[CH2CHO]/d[CH2CO]
  // d()/d[CH2CHO]
  dqdci = +k_f * sc[19];
  J[1266] += dqdci; // dwdot[H2]/d[CH2CHO]
  J[1279] -= dqdci; // dwdot[H]/d[CH2CHO]
  J[1289] += dqdci; // dwdot[CH2CO]/d[CH2CHO]
  J[1290] -= dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1751] += dqdT; // dwdot[CH2CO]/dT
  J[1752] -= dqdT; // dwdot[CH2CHO]/dT

  // reaction 123: CH2CHO + O <=> CH2CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[30];
  k_f = 20000000 * exp(-(2012.86666321888) * invT);
  dlnkfdT = (2012.86666321888) * invT2;
  // reverse
  phi_r = sc[15] * sc[29];
  Kc = exp(g_RT[14] - g_RT[15] - g_RT[29] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[30]) + (h_RT[15] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[29] += q; // CH2CO
  wdot[30] -= q; // CH2CHO
  // d()/d[O]
  dqdci = +k_f * sc[30];
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[617] += dqdci; // dwdot[CH2CO]/d[O]
  J[618] -= dqdci; // dwdot[CH2CHO]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[29];
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[659] += dqdci; // dwdot[CH2CO]/d[OH]
  J[660] -= dqdci; // dwdot[CH2CHO]/d[OH]
  // d()/d[CH2CO]
  dqdci = -k_r * sc[15];
  J[1232] -= dqdci; // dwdot[O]/d[CH2CO]
  J[1233] += dqdci; // dwdot[OH]/d[CH2CO]
  J[1247] += dqdci; // dwdot[CH2CO]/d[CH2CO]
  J[1248] -= dqdci; // dwdot[CH2CHO]/d[CH2CO]
  // d()/d[CH2CHO]
  dqdci = +k_f * sc[14];
  J[1274] -= dqdci; // dwdot[O]/d[CH2CHO]
  J[1275] += dqdci; // dwdot[OH]/d[CH2CHO]
  J[1289] += dqdci; // dwdot[CH2CO]/d[CH2CHO]
  J[1290] -= dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1751] += dqdT; // dwdot[CH2CO]/dT
  J[1752] -= dqdT; // dwdot[CH2CHO]/dT

  // reaction 124: CH2CHO + OH <=> CH2CO + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[30];
  k_f = 10000000 * exp(-(1006.43333160944) * invT);
  dlnkfdT = (1006.43333160944) * invT2;
  // reverse
  phi_r = sc[17] * sc[29];
  Kc = exp(g_RT[15] - g_RT[17] - g_RT[29] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[30]) + (h_RT[17] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[29] += q; // CH2CO
  wdot[30] -= q; // CH2CHO
  // d()/d[OH]
  dqdci = +k_f * sc[30];
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[659] += dqdci; // dwdot[CH2CO]/d[OH]
  J[660] -= dqdci; // dwdot[CH2CHO]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[29];
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[743] += dqdci; // dwdot[CH2CO]/d[H2O]
  J[744] -= dqdci; // dwdot[CH2CHO]/d[H2O]
  // d()/d[CH2CO]
  dqdci = -k_r * sc[17];
  J[1233] -= dqdci; // dwdot[OH]/d[CH2CO]
  J[1235] += dqdci; // dwdot[H2O]/d[CH2CO]
  J[1247] += dqdci; // dwdot[CH2CO]/d[CH2CO]
  J[1248] -= dqdci; // dwdot[CH2CHO]/d[CH2CO]
  // d()/d[CH2CHO]
  dqdci = +k_f * sc[15];
  J[1275] -= dqdci; // dwdot[OH]/d[CH2CHO]
  J[1277] += dqdci; // dwdot[H2O]/d[CH2CHO]
  J[1289] += dqdci; // dwdot[CH2CO]/d[CH2CHO]
  J[1290] -= dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1751] += dqdT; // dwdot[CH2CO]/dT
  J[1752] -= dqdT; // dwdot[CH2CHO]/dT

  // reaction 125: CH2CHO + O2 <=> CH2CO + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[30];
  k_f = 140000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[16] * sc[29];
  Kc = exp(g_RT[13] - g_RT[16] - g_RT[29] + g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[30]) + (h_RT[16] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // O2
  wdot[16] += q; // HO2
  wdot[29] += q; // CH2CO
  wdot[30] -= q; // CH2CHO
  // d()/d[O2]
  dqdci = +k_f * sc[30];
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[562] += dqdci; // dwdot[HO2]/d[O2]
  J[575] += dqdci; // dwdot[CH2CO]/d[O2]
  J[576] -= dqdci; // dwdot[CH2CHO]/d[O2]
  // d()/d[HO2]
  dqdci = -k_r * sc[29];
  J[685] -= dqdci; // dwdot[O2]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[701] += dqdci; // dwdot[CH2CO]/d[HO2]
  J[702] -= dqdci; // dwdot[CH2CHO]/d[HO2]
  // d()/d[CH2CO]
  dqdci = -k_r * sc[16];
  J[1231] -= dqdci; // dwdot[O2]/d[CH2CO]
  J[1234] += dqdci; // dwdot[HO2]/d[CH2CO]
  J[1247] += dqdci; // dwdot[CH2CO]/d[CH2CO]
  J[1248] -= dqdci; // dwdot[CH2CHO]/d[CH2CO]
  // d()/d[CH2CHO]
  dqdci = +k_f * sc[13];
  J[1273] -= dqdci; // dwdot[O2]/d[CH2CHO]
  J[1276] += dqdci; // dwdot[HO2]/d[CH2CHO]
  J[1289] += dqdci; // dwdot[CH2CO]/d[CH2CHO]
  J[1290] -= dqdci; // dwdot[CH2CHO]/d[CH2CHO]
  // d()/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1751] += dqdT; // dwdot[CH2CO]/dT
  J[1752] -= dqdT; // dwdot[CH2CHO]/dT

  // reaction 127: C2H4 + H <=> C2H3 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[19];
  k_f = 50.7 * exp(1.9 * logT - (6516.65582217112) * invT);
  dlnkfdT = 1.9 * invT + (6516.65582217112) * invT2;
  // reverse
  phi_r = sc[6] * sc[26];
  Kc = exp(g_RT[1] - g_RT[6] + g_RT[19] - g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[19]) + (h_RT[6] + h_RT[26]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // C2H4
  wdot[6] += q;  // H2
  wdot[19] -= q; // H
  wdot[26] += q; // C2H3
  // d()/d[C2H4]
  dqdci = +k_f * sc[19];
  J[43] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[48] += dqdci; // dwdot[H2]/d[C2H4]
  J[61] -= dqdci; // dwdot[H]/d[C2H4]
  J[68] += dqdci; // dwdot[C2H3]/d[C2H4]
  // d()/d[H2]
  dqdci = -k_r * sc[26];
  J[253] -= dqdci; // dwdot[C2H4]/d[H2]
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[278] += dqdci; // dwdot[C2H3]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[1];
  J[799] -= dqdci; // dwdot[C2H4]/d[H]
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[824] += dqdci; // dwdot[C2H3]/d[H]
  // d()/d[C2H3]
  dqdci = -k_r * sc[6];
  J[1093] -= dqdci; // dwdot[C2H4]/d[C2H3]
  J[1098] += dqdci; // dwdot[H2]/d[C2H3]
  J[1111] -= dqdci; // dwdot[H]/d[C2H3]
  J[1118] += dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1723] -= dqdT; // dwdot[C2H4]/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1748] += dqdT; // dwdot[C2H3]/dT

  // reaction 128: C2H4 + O <=> C2H3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[14];
  k_f = 15.1 * exp(1.9 * logT - (1882.03033010965) * invT);
  dlnkfdT = 1.9 * invT + (1882.03033010965) * invT2;
  // reverse
  phi_r = sc[15] * sc[26];
  Kc = exp(g_RT[1] + g_RT[14] - g_RT[15] - g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[14]) + (h_RT[15] + h_RT[26]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // C2H4
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[26] += q; // C2H3
  // d()/d[C2H4]
  dqdci = +k_f * sc[14];
  J[43] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[56] -= dqdci; // dwdot[O]/d[C2H4]
  J[57] += dqdci; // dwdot[OH]/d[C2H4]
  J[68] += dqdci; // dwdot[C2H3]/d[C2H4]
  // d()/d[O]
  dqdci = +k_f * sc[1];
  J[589] -= dqdci; // dwdot[C2H4]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[614] += dqdci; // dwdot[C2H3]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[26];
  J[631] -= dqdci; // dwdot[C2H4]/d[OH]
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[656] += dqdci; // dwdot[C2H3]/d[OH]
  // d()/d[C2H3]
  dqdci = -k_r * sc[15];
  J[1093] -= dqdci; // dwdot[C2H4]/d[C2H3]
  J[1106] -= dqdci; // dwdot[O]/d[C2H3]
  J[1107] += dqdci; // dwdot[OH]/d[C2H3]
  J[1118] += dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1723] -= dqdT; // dwdot[C2H4]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1748] += dqdT; // dwdot[C2H3]/dT

  // reaction 129: C2H4 + O <=> CH3 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[14];
  k_f = 19.2 * exp(1.83 * logT - (110.707666477038) * invT);
  dlnkfdT = 1.83 * invT + (110.707666477038) * invT2;
  // reverse
  phi_r = sc[12] * sc[22];
  Kc = exp(g_RT[1] - g_RT[12] + g_RT[14] - g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[14]) + (h_RT[12] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // C2H4
  wdot[12] += q; // CH3
  wdot[14] -= q; // O
  wdot[22] += q; // HCO
  // d()/d[C2H4]
  dqdci = +k_f * sc[14];
  J[43] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[54] += dqdci; // dwdot[CH3]/d[C2H4]
  J[56] -= dqdci; // dwdot[O]/d[C2H4]
  J[64] += dqdci; // dwdot[HCO]/d[C2H4]
  // d()/d[CH3]
  dqdci = -k_r * sc[22];
  J[505] -= dqdci; // dwdot[C2H4]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[518] -= dqdci; // dwdot[O]/d[CH3]
  J[526] += dqdci; // dwdot[HCO]/d[CH3]
  // d()/d[O]
  dqdci = +k_f * sc[1];
  J[589] -= dqdci; // dwdot[C2H4]/d[O]
  J[600] += dqdci; // dwdot[CH3]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[610] += dqdci; // dwdot[HCO]/d[O]
  // d()/d[HCO]
  dqdci = -k_r * sc[12];
  J[925] -= dqdci; // dwdot[C2H4]/d[HCO]
  J[936] += dqdci; // dwdot[CH3]/d[HCO]
  J[938] -= dqdci; // dwdot[O]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[1723] -= dqdT; // dwdot[C2H4]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT

  // reaction 130: C2H4 + O <=> CH2 + CH2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[14];
  k_f = 0.384 * exp(1.83 * logT - (110.707666477038) * invT);
  dlnkfdT = 1.83 * invT + (110.707666477038) * invT2;
  // reverse
  phi_r = sc[20] * sc[23];
  Kc = exp(g_RT[1] + g_RT[14] - g_RT[20] - g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[14]) + (h_RT[20] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // C2H4
  wdot[14] -= q; // O
  wdot[20] += q; // CH2
  wdot[23] += q; // CH2O
  // d()/d[C2H4]
  dqdci = +k_f * sc[14];
  J[43] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[56] -= dqdci; // dwdot[O]/d[C2H4]
  J[62] += dqdci; // dwdot[CH2]/d[C2H4]
  J[65] += dqdci; // dwdot[CH2O]/d[C2H4]
  // d()/d[O]
  dqdci = +k_f * sc[1];
  J[589] -= dqdci; // dwdot[C2H4]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[608] += dqdci; // dwdot[CH2]/d[O]
  J[611] += dqdci; // dwdot[CH2O]/d[O]
  // d()/d[CH2]
  dqdci = -k_r * sc[23];
  J[841] -= dqdci; // dwdot[C2H4]/d[CH2]
  J[854] -= dqdci; // dwdot[O]/d[CH2]
  J[860] += dqdci; // dwdot[CH2]/d[CH2]
  J[863] += dqdci; // dwdot[CH2O]/d[CH2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[20];
  J[967] -= dqdci; // dwdot[C2H4]/d[CH2O]
  J[980] -= dqdci; // dwdot[O]/d[CH2O]
  J[986] += dqdci; // dwdot[CH2]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[1723] -= dqdT; // dwdot[C2H4]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1742] += dqdT; // dwdot[CH2]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT

  // reaction 131: C2H4 + OH <=> C2H3 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[15];
  k_f = 3.6 * exp(2 * logT - (1258.0416645118) * invT);
  dlnkfdT = 2 * invT + (1258.0416645118) * invT2;
  // reverse
  phi_r = sc[17] * sc[26];
  Kc = exp(g_RT[1] + g_RT[15] - g_RT[17] - g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[15]) + (h_RT[17] + h_RT[26]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // C2H4
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[26] += q; // C2H3
  // d()/d[C2H4]
  dqdci = +k_f * sc[15];
  J[43] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[57] -= dqdci; // dwdot[OH]/d[C2H4]
  J[59] += dqdci; // dwdot[H2O]/d[C2H4]
  J[68] += dqdci; // dwdot[C2H3]/d[C2H4]
  // d()/d[OH]
  dqdci = +k_f * sc[1];
  J[631] -= dqdci; // dwdot[C2H4]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[656] += dqdci; // dwdot[C2H3]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[26];
  J[715] -= dqdci; // dwdot[C2H4]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[740] += dqdci; // dwdot[C2H3]/d[H2O]
  // d()/d[C2H3]
  dqdci = -k_r * sc[17];
  J[1093] -= dqdci; // dwdot[C2H4]/d[C2H3]
  J[1107] -= dqdci; // dwdot[OH]/d[C2H3]
  J[1109] += dqdci; // dwdot[H2O]/d[C2H3]
  J[1118] += dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1723] -= dqdT; // dwdot[C2H4]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1748] += dqdT; // dwdot[C2H3]/dT

  // reaction 132: C2H4 + HCO <=> C2H5 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[22];
  k_f = 10 * exp(2 * logT - (4025.73332643776) * invT);
  dlnkfdT = 2 * invT + (4025.73332643776) * invT2;
  // reverse
  phi_r = sc[8] * sc[27];
  Kc = exp(g_RT[1] - g_RT[8] + g_RT[22] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[22]) + (h_RT[8] + h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // C2H4
  wdot[8] += q;  // CO
  wdot[22] -= q; // HCO
  wdot[27] += q; // C2H5
  // d()/d[C2H4]
  dqdci = +k_f * sc[22];
  J[43] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[50] += dqdci; // dwdot[CO]/d[C2H4]
  J[64] -= dqdci; // dwdot[HCO]/d[C2H4]
  J[69] += dqdci; // dwdot[C2H5]/d[C2H4]
  // d()/d[CO]
  dqdci = -k_r * sc[27];
  J[337] -= dqdci; // dwdot[C2H4]/d[CO]
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[358] -= dqdci; // dwdot[HCO]/d[CO]
  J[363] += dqdci; // dwdot[C2H5]/d[CO]
  // d()/d[HCO]
  dqdci = +k_f * sc[1];
  J[925] -= dqdci; // dwdot[C2H4]/d[HCO]
  J[932] += dqdci; // dwdot[CO]/d[HCO]
  J[946] -= dqdci; // dwdot[HCO]/d[HCO]
  J[951] += dqdci; // dwdot[C2H5]/d[HCO]
  // d()/d[C2H5]
  dqdci = -k_r * sc[8];
  J[1135] -= dqdci; // dwdot[C2H4]/d[C2H5]
  J[1142] += dqdci; // dwdot[CO]/d[C2H5]
  J[1156] -= dqdci; // dwdot[HCO]/d[C2H5]
  J[1161] += dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1723] -= dqdT; // dwdot[C2H4]/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT
  J[1749] += dqdT; // dwdot[C2H5]/dT

  // reaction 133: C2H4 + CH2 <=> H + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[20];
  k_f = 20000000 * exp(-(3019.29999482832) * invT);
  dlnkfdT = (3019.29999482832) * invT2;
  // reverse
  phi_r = sc[19] * sc[32];
  Kc = exp(g_RT[1] - g_RT[19] + g_RT[20] - g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[20]) + (h_RT[19] + h_RT[32]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // C2H4
  wdot[19] += q; // H
  wdot[20] -= q; // CH2
  wdot[32] += q; // aC3H5
  // d()/d[C2H4]
  dqdci = +k_f * sc[20];
  J[43] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[61] += dqdci; // dwdot[H]/d[C2H4]
  J[62] -= dqdci; // dwdot[CH2]/d[C2H4]
  J[74] += dqdci; // dwdot[aC3H5]/d[C2H4]
  // d()/d[H]
  dqdci = -k_r * sc[32];
  J[799] -= dqdci; // dwdot[C2H4]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[818] -= dqdci; // dwdot[CH2]/d[H]
  J[830] += dqdci; // dwdot[aC3H5]/d[H]
  // d()/d[CH2]
  dqdci = +k_f * sc[1];
  J[841] -= dqdci; // dwdot[C2H4]/d[CH2]
  J[859] += dqdci; // dwdot[H]/d[CH2]
  J[860] -= dqdci; // dwdot[CH2]/d[CH2]
  J[872] += dqdci; // dwdot[aC3H5]/d[CH2]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[19];
  J[1345] -= dqdci; // dwdot[C2H4]/d[aC3H5]
  J[1363] += dqdci; // dwdot[H]/d[aC3H5]
  J[1364] -= dqdci; // dwdot[CH2]/d[aC3H5]
  J[1376] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[1723] -= dqdT; // dwdot[C2H4]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1742] -= dqdT; // dwdot[CH2]/dT
  J[1754] += dqdT; // dwdot[aC3H5]/dT

  // reaction 134: C2H4 + CH2* <=> H + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[21];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[19] * sc[32];
  Kc = exp(g_RT[1] - g_RT[19] + g_RT[21] - g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[21]) + (h_RT[19] + h_RT[32]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // C2H4
  wdot[19] += q; // H
  wdot[21] -= q; // CH2*
  wdot[32] += q; // aC3H5
  // d()/d[C2H4]
  dqdci = +k_f * sc[21];
  J[43] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[61] += dqdci; // dwdot[H]/d[C2H4]
  J[63] -= dqdci; // dwdot[CH2*]/d[C2H4]
  J[74] += dqdci; // dwdot[aC3H5]/d[C2H4]
  // d()/d[H]
  dqdci = -k_r * sc[32];
  J[799] -= dqdci; // dwdot[C2H4]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[819] -= dqdci; // dwdot[CH2*]/d[H]
  J[830] += dqdci; // dwdot[aC3H5]/d[H]
  // d()/d[CH2*]
  dqdci = +k_f * sc[1];
  J[883] -= dqdci; // dwdot[C2H4]/d[CH2*]
  J[901] += dqdci; // dwdot[H]/d[CH2*]
  J[903] -= dqdci; // dwdot[CH2*]/d[CH2*]
  J[914] += dqdci; // dwdot[aC3H5]/d[CH2*]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[19];
  J[1345] -= dqdci; // dwdot[C2H4]/d[aC3H5]
  J[1363] += dqdci; // dwdot[H]/d[aC3H5]
  J[1365] -= dqdci; // dwdot[CH2*]/d[aC3H5]
  J[1376] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[1723] -= dqdT; // dwdot[C2H4]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1743] -= dqdT; // dwdot[CH2*]/dT
  J[1754] += dqdT; // dwdot[aC3H5]/dT

  // reaction 135: C2H4 + CH3 <=> C2H3 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[12];
  k_f = 0.227 * exp(2 * logT - (4629.59332540342) * invT);
  dlnkfdT = 2 * invT + (4629.59332540342) * invT2;
  // reverse
  phi_r = sc[2] * sc[26];
  Kc = exp(g_RT[1] - g_RT[2] + g_RT[12] - g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[12]) + (h_RT[2] + h_RT[26]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // C2H4
  wdot[2] += q;  // CH4
  wdot[12] -= q; // CH3
  wdot[26] += q; // C2H3
  // d()/d[C2H4]
  dqdci = +k_f * sc[12];
  J[43] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[44] += dqdci; // dwdot[CH4]/d[C2H4]
  J[54] -= dqdci; // dwdot[CH3]/d[C2H4]
  J[68] += dqdci; // dwdot[C2H3]/d[C2H4]
  // d()/d[CH4]
  dqdci = -k_r * sc[26];
  J[85] -= dqdci;  // dwdot[C2H4]/d[CH4]
  J[86] += dqdci;  // dwdot[CH4]/d[CH4]
  J[96] -= dqdci;  // dwdot[CH3]/d[CH4]
  J[110] += dqdci; // dwdot[C2H3]/d[CH4]
  // d()/d[CH3]
  dqdci = +k_f * sc[1];
  J[505] -= dqdci; // dwdot[C2H4]/d[CH3]
  J[506] += dqdci; // dwdot[CH4]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[530] += dqdci; // dwdot[C2H3]/d[CH3]
  // d()/d[C2H3]
  dqdci = -k_r * sc[2];
  J[1093] -= dqdci; // dwdot[C2H4]/d[C2H3]
  J[1094] += dqdci; // dwdot[CH4]/d[C2H3]
  J[1104] -= dqdci; // dwdot[CH3]/d[C2H3]
  J[1118] += dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1723] -= dqdT; // dwdot[C2H4]/dT
  J[1724] += dqdT; // dwdot[CH4]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1748] += dqdT; // dwdot[C2H3]/dT

  // reaction 136: C2H4 + O2 <=> C2H3 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[13];
  k_f = 42200000 * exp(-(30595.573280927) * invT);
  dlnkfdT = (30595.573280927) * invT2;
  // reverse
  phi_r = sc[16] * sc[26];
  Kc = exp(g_RT[1] + g_RT[13] - g_RT[16] - g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[13]) + (h_RT[16] + h_RT[26]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // C2H4
  wdot[13] -= q; // O2
  wdot[16] += q; // HO2
  wdot[26] += q; // C2H3
  // d()/d[C2H4]
  dqdci = +k_f * sc[13];
  J[43] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[55] -= dqdci; // dwdot[O2]/d[C2H4]
  J[58] += dqdci; // dwdot[HO2]/d[C2H4]
  J[68] += dqdci; // dwdot[C2H3]/d[C2H4]
  // d()/d[O2]
  dqdci = +k_f * sc[1];
  J[547] -= dqdci; // dwdot[C2H4]/d[O2]
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[562] += dqdci; // dwdot[HO2]/d[O2]
  J[572] += dqdci; // dwdot[C2H3]/d[O2]
  // d()/d[HO2]
  dqdci = -k_r * sc[26];
  J[673] -= dqdci; // dwdot[C2H4]/d[HO2]
  J[685] -= dqdci; // dwdot[O2]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[698] += dqdci; // dwdot[C2H3]/d[HO2]
  // d()/d[C2H3]
  dqdci = -k_r * sc[16];
  J[1093] -= dqdci; // dwdot[C2H4]/d[C2H3]
  J[1105] -= dqdci; // dwdot[O2]/d[C2H3]
  J[1108] += dqdci; // dwdot[HO2]/d[C2H3]
  J[1118] += dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[1723] -= dqdT; // dwdot[C2H4]/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1748] += dqdT; // dwdot[C2H3]/dT

  // reaction 138: C2H5 + O <=> CH2O + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[27];
  k_f = 16040000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[12] * sc[23];
  Kc = exp(-g_RT[12] + g_RT[14] - g_RT[23] + g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[27]) + (h_RT[12] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] += q; // CH3
  wdot[14] -= q; // O
  wdot[23] += q; // CH2O
  wdot[27] -= q; // C2H5
  // d()/d[CH3]
  dqdci = -k_r * sc[23];
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[518] -= dqdci; // dwdot[O]/d[CH3]
  J[527] += dqdci; // dwdot[CH2O]/d[CH3]
  J[531] -= dqdci; // dwdot[C2H5]/d[CH3]
  // d()/d[O]
  dqdci = +k_f * sc[27];
  J[600] += dqdci; // dwdot[CH3]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[611] += dqdci; // dwdot[CH2O]/d[O]
  J[615] -= dqdci; // dwdot[C2H5]/d[O]
  // d()/d[CH2O]
  dqdci = -k_r * sc[12];
  J[978] += dqdci; // dwdot[CH3]/d[CH2O]
  J[980] -= dqdci; // dwdot[O]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[993] -= dqdci; // dwdot[C2H5]/d[CH2O]
  // d()/d[C2H5]
  dqdci = +k_f * sc[14];
  J[1146] += dqdci; // dwdot[CH3]/d[C2H5]
  J[1148] -= dqdci; // dwdot[O]/d[C2H5]
  J[1157] += dqdci; // dwdot[CH2O]/d[C2H5]
  J[1161] -= dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT
  J[1749] -= dqdT; // dwdot[C2H5]/dT

  // reaction 139: C2H5 + O2 <=> C2H4 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[27];
  k_f = 20000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[16];
  Kc = exp(-g_RT[1] + g_RT[13] - g_RT[16] + g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[27]) + (h_RT[1] + h_RT[16]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // C2H4
  wdot[13] -= q; // O2
  wdot[16] += q; // HO2
  wdot[27] -= q; // C2H5
  // d()/d[C2H4]
  dqdci = -k_r * sc[16];
  J[43] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[55] -= dqdci; // dwdot[O2]/d[C2H4]
  J[58] += dqdci; // dwdot[HO2]/d[C2H4]
  J[69] -= dqdci; // dwdot[C2H5]/d[C2H4]
  // d()/d[O2]
  dqdci = +k_f * sc[27];
  J[547] += dqdci; // dwdot[C2H4]/d[O2]
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[562] += dqdci; // dwdot[HO2]/d[O2]
  J[573] -= dqdci; // dwdot[C2H5]/d[O2]
  // d()/d[HO2]
  dqdci = -k_r * sc[1];
  J[673] += dqdci; // dwdot[C2H4]/d[HO2]
  J[685] -= dqdci; // dwdot[O2]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[699] -= dqdci; // dwdot[C2H5]/d[HO2]
  // d()/d[C2H5]
  dqdci = +k_f * sc[13];
  J[1135] += dqdci; // dwdot[C2H4]/d[C2H5]
  J[1147] -= dqdci; // dwdot[O2]/d[C2H5]
  J[1150] += dqdci; // dwdot[HO2]/d[C2H5]
  J[1161] -= dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1723] += dqdT; // dwdot[C2H4]/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1749] -= dqdT; // dwdot[C2H5]/dT

  // reaction 140: C2H5 + HO2 <=> CH2O + CH3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[27];
  k_f = 24000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[12] * sc[15] * sc[23];
  Kc = refC * exp(-g_RT[12] - g_RT[15] + g_RT[16] - g_RT[23] + g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[16] + h_RT[27]) + (h_RT[12] + h_RT[15] + h_RT[23]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] += q; // CH3
  wdot[15] += q; // OH
  wdot[16] -= q; // HO2
  wdot[23] += q; // CH2O
  wdot[27] -= q; // C2H5
  // d()/d[CH3]
  dqdci = -k_r * sc[15] * sc[23];
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[519] += dqdci; // dwdot[OH]/d[CH3]
  J[520] -= dqdci; // dwdot[HO2]/d[CH3]
  J[527] += dqdci; // dwdot[CH2O]/d[CH3]
  J[531] -= dqdci; // dwdot[C2H5]/d[CH3]
  // d()/d[OH]
  dqdci = -k_r * sc[12] * sc[23];
  J[642] += dqdci; // dwdot[CH3]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[646] -= dqdci; // dwdot[HO2]/d[OH]
  J[653] += dqdci; // dwdot[CH2O]/d[OH]
  J[657] -= dqdci; // dwdot[C2H5]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[27];
  J[684] += dqdci; // dwdot[CH3]/d[HO2]
  J[687] += dqdci; // dwdot[OH]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[695] += dqdci; // dwdot[CH2O]/d[HO2]
  J[699] -= dqdci; // dwdot[C2H5]/d[HO2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[12] * sc[15];
  J[978] += dqdci; // dwdot[CH3]/d[CH2O]
  J[981] += dqdci; // dwdot[OH]/d[CH2O]
  J[982] -= dqdci; // dwdot[HO2]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[993] -= dqdci; // dwdot[C2H5]/d[CH2O]
  // d()/d[C2H5]
  dqdci = +k_f * sc[16];
  J[1146] += dqdci; // dwdot[CH3]/d[C2H5]
  J[1149] += dqdci; // dwdot[OH]/d[C2H5]
  J[1150] -= dqdci; // dwdot[HO2]/d[C2H5]
  J[1157] += dqdci; // dwdot[CH2O]/d[C2H5]
  J[1161] -= dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT
  J[1749] -= dqdT; // dwdot[C2H5]/dT

  // reaction 142: C2H6 + H <=> C2H5 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[19];
  k_f = 115 * exp(1.9 * logT - (3789.22149350954) * invT);
  dlnkfdT = 1.9 * invT + (3789.22149350954) * invT2;
  // reverse
  phi_r = sc[6] * sc[27];
  Kc = exp(-g_RT[6] + g_RT[7] + g_RT[19] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[7] + h_RT[19]) + (h_RT[6] + h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2
  wdot[7] -= q;  // C2H6
  wdot[19] -= q; // H
  wdot[27] += q; // C2H5
  // d()/d[H2]
  dqdci = -k_r * sc[27];
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[259] -= dqdci; // dwdot[C2H6]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[279] += dqdci; // dwdot[C2H5]/d[H2]
  // d()/d[C2H6]
  dqdci = +k_f * sc[19];
  J[300] += dqdci; // dwdot[H2]/d[C2H6]
  J[301] -= dqdci; // dwdot[C2H6]/d[C2H6]
  J[313] -= dqdci; // dwdot[H]/d[C2H6]
  J[321] += dqdci; // dwdot[C2H5]/d[C2H6]
  // d()/d[H]
  dqdci = +k_f * sc[7];
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[805] -= dqdci; // dwdot[C2H6]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[825] += dqdci; // dwdot[C2H5]/d[H]
  // d()/d[C2H5]
  dqdci = -k_r * sc[6];
  J[1140] += dqdci; // dwdot[H2]/d[C2H5]
  J[1141] -= dqdci; // dwdot[C2H6]/d[C2H5]
  J[1153] -= dqdci; // dwdot[H]/d[C2H5]
  J[1161] += dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1729] -= dqdT; // dwdot[C2H6]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1749] += dqdT; // dwdot[C2H5]/dT

  // reaction 143: C2H6 + O <=> C2H5 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[14];
  k_f = 89.8 * exp(1.92 * logT - (2863.30282842885) * invT);
  dlnkfdT = 1.92 * invT + (2863.30282842885) * invT2;
  // reverse
  phi_r = sc[15] * sc[27];
  Kc = exp(g_RT[7] + g_RT[14] - g_RT[15] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[7] + h_RT[14]) + (h_RT[15] + h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[7] -= q;  // C2H6
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[27] += q; // C2H5
  // d()/d[C2H6]
  dqdci = +k_f * sc[14];
  J[301] -= dqdci; // dwdot[C2H6]/d[C2H6]
  J[308] -= dqdci; // dwdot[O]/d[C2H6]
  J[309] += dqdci; // dwdot[OH]/d[C2H6]
  J[321] += dqdci; // dwdot[C2H5]/d[C2H6]
  // d()/d[O]
  dqdci = +k_f * sc[7];
  J[595] -= dqdci; // dwdot[C2H6]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[615] += dqdci; // dwdot[C2H5]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[27];
  J[637] -= dqdci; // dwdot[C2H6]/d[OH]
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[657] += dqdci; // dwdot[C2H5]/d[OH]
  // d()/d[C2H5]
  dqdci = -k_r * sc[15];
  J[1141] -= dqdci; // dwdot[C2H6]/d[C2H5]
  J[1148] -= dqdci; // dwdot[O]/d[C2H5]
  J[1149] += dqdci; // dwdot[OH]/d[C2H5]
  J[1161] += dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1729] -= dqdT; // dwdot[C2H6]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1749] += dqdT; // dwdot[C2H5]/dT

  // reaction 144: C2H6 + OH <=> C2H5 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[15];
  k_f = 3.54 * exp(2.12 * logT - (437.798499250106) * invT);
  dlnkfdT = 2.12 * invT + (437.798499250106) * invT2;
  // reverse
  phi_r = sc[17] * sc[27];
  Kc = exp(g_RT[7] + g_RT[15] - g_RT[17] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[7] + h_RT[15]) + (h_RT[17] + h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[7] -= q;  // C2H6
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[27] += q; // C2H5
  // d()/d[C2H6]
  dqdci = +k_f * sc[15];
  J[301] -= dqdci; // dwdot[C2H6]/d[C2H6]
  J[309] -= dqdci; // dwdot[OH]/d[C2H6]
  J[311] += dqdci; // dwdot[H2O]/d[C2H6]
  J[321] += dqdci; // dwdot[C2H5]/d[C2H6]
  // d()/d[OH]
  dqdci = +k_f * sc[7];
  J[637] -= dqdci; // dwdot[C2H6]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[657] += dqdci; // dwdot[C2H5]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[27];
  J[721] -= dqdci; // dwdot[C2H6]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[741] += dqdci; // dwdot[C2H5]/d[H2O]
  // d()/d[C2H5]
  dqdci = -k_r * sc[17];
  J[1141] -= dqdci; // dwdot[C2H6]/d[C2H5]
  J[1149] -= dqdci; // dwdot[OH]/d[C2H5]
  J[1151] += dqdci; // dwdot[H2O]/d[C2H5]
  J[1161] += dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1729] -= dqdT; // dwdot[C2H6]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1749] += dqdT; // dwdot[C2H5]/dT

  // reaction 145: C2H6 + CH3 <=> C2H5 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[12];
  k_f = 6.14 * exp(1.74 * logT - (5258.61415765932) * invT);
  dlnkfdT = 1.74 * invT + (5258.61415765932) * invT2;
  // reverse
  phi_r = sc[2] * sc[27];
  Kc = exp(-g_RT[2] + g_RT[7] + g_RT[12] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[7] + h_RT[12]) + (h_RT[2] + h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // CH4
  wdot[7] -= q;  // C2H6
  wdot[12] -= q; // CH3
  wdot[27] += q; // C2H5
  // d()/d[CH4]
  dqdci = -k_r * sc[27];
  J[86] += dqdci;  // dwdot[CH4]/d[CH4]
  J[91] -= dqdci;  // dwdot[C2H6]/d[CH4]
  J[96] -= dqdci;  // dwdot[CH3]/d[CH4]
  J[111] += dqdci; // dwdot[C2H5]/d[CH4]
  // d()/d[C2H6]
  dqdci = +k_f * sc[12];
  J[296] += dqdci; // dwdot[CH4]/d[C2H6]
  J[301] -= dqdci; // dwdot[C2H6]/d[C2H6]
  J[306] -= dqdci; // dwdot[CH3]/d[C2H6]
  J[321] += dqdci; // dwdot[C2H5]/d[C2H6]
  // d()/d[CH3]
  dqdci = +k_f * sc[7];
  J[506] += dqdci; // dwdot[CH4]/d[CH3]
  J[511] -= dqdci; // dwdot[C2H6]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[531] += dqdci; // dwdot[C2H5]/d[CH3]
  // d()/d[C2H5]
  dqdci = -k_r * sc[2];
  J[1136] += dqdci; // dwdot[CH4]/d[C2H5]
  J[1141] -= dqdci; // dwdot[C2H6]/d[C2H5]
  J[1146] -= dqdci; // dwdot[CH3]/d[C2H5]
  J[1161] += dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1724] += dqdT; // dwdot[CH4]/dT
  J[1729] -= dqdT; // dwdot[C2H6]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1749] += dqdT; // dwdot[C2H5]/dT

  // reaction 146: C3H3 + O2 <=> CH2CO + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[31];
  k_f = 30000 * exp(-(1443.22539752794) * invT);
  dlnkfdT = (1443.22539752794) * invT2;
  // reverse
  phi_r = sc[22] * sc[29];
  Kc = exp(g_RT[13] - g_RT[22] - g_RT[29] + g_RT[31]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[31]) + (h_RT[22] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // O2
  wdot[22] += q; // HCO
  wdot[29] += q; // CH2CO
  wdot[31] -= q; // C3H3
  // d()/d[O2]
  dqdci = +k_f * sc[31];
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[568] += dqdci; // dwdot[HCO]/d[O2]
  J[575] += dqdci; // dwdot[CH2CO]/d[O2]
  J[577] -= dqdci; // dwdot[C3H3]/d[O2]
  // d()/d[HCO]
  dqdci = -k_r * sc[29];
  J[937] -= dqdci; // dwdot[O2]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[953] += dqdci; // dwdot[CH2CO]/d[HCO]
  J[955] -= dqdci; // dwdot[C3H3]/d[HCO]
  // d()/d[CH2CO]
  dqdci = -k_r * sc[22];
  J[1231] -= dqdci; // dwdot[O2]/d[CH2CO]
  J[1240] += dqdci; // dwdot[HCO]/d[CH2CO]
  J[1247] += dqdci; // dwdot[CH2CO]/d[CH2CO]
  J[1249] -= dqdci; // dwdot[C3H3]/d[CH2CO]
  // d()/d[C3H3]
  dqdci = +k_f * sc[13];
  J[1315] -= dqdci; // dwdot[O2]/d[C3H3]
  J[1324] += dqdci; // dwdot[HCO]/d[C3H3]
  J[1331] += dqdci; // dwdot[CH2CO]/d[C3H3]
  J[1333] -= dqdci; // dwdot[C3H3]/d[C3H3]
  // d()/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1751] += dqdT; // dwdot[CH2CO]/dT
  J[1753] -= dqdT; // dwdot[C3H3]/dT

  // reaction 147: C3H3 + HO2 <=> C2H3 + CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[31];
  k_f = 800000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[15] * sc[26];
  Kc = refC * exp(-g_RT[8] - g_RT[15] + g_RT[16] - g_RT[26] + g_RT[31]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[16] + h_RT[31]) + (h_RT[8] + h_RT[15] + h_RT[26]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[15] += q; // OH
  wdot[16] -= q; // HO2
  wdot[26] += q; // C2H3
  wdot[31] -= q; // C3H3
  // d()/d[CO]
  dqdci = -k_r * sc[15] * sc[26];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[351] += dqdci; // dwdot[OH]/d[CO]
  J[352] -= dqdci; // dwdot[HO2]/d[CO]
  J[362] += dqdci; // dwdot[C2H3]/d[CO]
  J[367] -= dqdci; // dwdot[C3H3]/d[CO]
  // d()/d[OH]
  dqdci = -k_r * sc[8] * sc[26];
  J[638] += dqdci; // dwdot[CO]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[646] -= dqdci; // dwdot[HO2]/d[OH]
  J[656] += dqdci; // dwdot[C2H3]/d[OH]
  J[661] -= dqdci; // dwdot[C3H3]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[31];
  J[680] += dqdci; // dwdot[CO]/d[HO2]
  J[687] += dqdci; // dwdot[OH]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[698] += dqdci; // dwdot[C2H3]/d[HO2]
  J[703] -= dqdci; // dwdot[C3H3]/d[HO2]
  // d()/d[C2H3]
  dqdci = -k_r * sc[8] * sc[15];
  J[1100] += dqdci; // dwdot[CO]/d[C2H3]
  J[1107] += dqdci; // dwdot[OH]/d[C2H3]
  J[1108] -= dqdci; // dwdot[HO2]/d[C2H3]
  J[1118] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[1123] -= dqdci; // dwdot[C3H3]/d[C2H3]
  // d()/d[C3H3]
  dqdci = +k_f * sc[16];
  J[1310] += dqdci; // dwdot[CO]/d[C3H3]
  J[1317] += dqdci; // dwdot[OH]/d[C3H3]
  J[1318] -= dqdci; // dwdot[HO2]/d[C3H3]
  J[1328] += dqdci; // dwdot[C2H3]/d[C3H3]
  J[1333] -= dqdci; // dwdot[C3H3]/d[C3H3]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1748] += dqdT; // dwdot[C2H3]/dT
  J[1753] -= dqdT; // dwdot[C3H3]/dT

  // reaction 148: C2H2 + C3H3 <=> C5H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[31];
  k_f = 6.87e+49 * exp(-12.5 * logT - (21147.6803804433) * invT);
  dlnkfdT = -12.5 * invT + (21147.6803804433) * invT2;
  // reverse
  phi_r = sc[34];
  Kc = refCinv * exp(g_RT[10] + g_RT[31] - g_RT[34]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[10] + h_RT[31]) + (h_RT[34]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[10] -= q; // C2H2
  wdot[31] -= q; // C3H3
  wdot[34] += q; // C5H5
  // d()/d[C2H2]
  dqdci = +k_f * sc[31];
  J[430] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[451] -= dqdci; // dwdot[C3H3]/d[C2H2]
  J[454] += dqdci; // dwdot[C5H5]/d[C2H2]
  // d()/d[C3H3]
  dqdci = +k_f * sc[10];
  J[1312] -= dqdci; // dwdot[C2H2]/d[C3H3]
  J[1333] -= dqdci; // dwdot[C3H3]/d[C3H3]
  J[1336] += dqdci; // dwdot[C5H5]/d[C3H3]
  // d()/d[C5H5]
  dqdci = -k_r;
  J[1438] -= dqdci; // dwdot[C2H2]/d[C5H5]
  J[1459] -= dqdci; // dwdot[C3H3]/d[C5H5]
  J[1462] += dqdci; // dwdot[C5H5]/d[C5H5]
  // d()/dT
  J[1732] -= dqdT; // dwdot[C2H2]/dT
  J[1753] -= dqdT; // dwdot[C3H3]/dT
  J[1756] += dqdT; // dwdot[C5H5]/dT

  // reaction 149: 2 C3H3 => C6H5 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[31] * sc[31]);
  k_f = 5000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[19] += q;     // H
  wdot[31] -= 2 * q; // C3H3
  wdot[35] += q;     // C6H5
  // d()/d[C3H3]
  dqdci = +k_f * 2.000000 * sc[31];
  J[1321] += dqdci;      // dwdot[H]/d[C3H3]
  J[1333] += -2 * dqdci; // dwdot[C3H3]/d[C3H3]
  J[1337] += dqdci;      // dwdot[C6H5]/d[C3H3]
  // d()/dT
  J[1741] += dqdT;      // dwdot[H]/dT
  J[1753] += -2 * dqdT; // dwdot[C3H3]/dT
  J[1757] += dqdT;      // dwdot[C6H5]/dT

  // reaction 150: 2 C3H3 => C6H6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[31] * sc[31]);
  k_f = 2000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;      // C6H6
  wdot[31] -= 2 * q; // C3H3
  // d()/d[C3H3]
  dqdci = +k_f * 2.000000 * sc[31];
  J[1311] += dqdci;      // dwdot[C6H6]/d[C3H3]
  J[1333] += -2 * dqdci; // dwdot[C3H3]/d[C3H3]
  // d()/dT
  J[1731] += dqdT;      // dwdot[C6H6]/dT
  J[1753] += -2 * dqdT; // dwdot[C3H3]/dT

  // reaction 152: HO2 + aC3H5 <=> C3H6 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[32];
  k_f = 2660000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[13];
  Kc = exp(-g_RT[3] - g_RT[13] + g_RT[16] + g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[16] + h_RT[32]) + (h_RT[3] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // C3H6
  wdot[13] += q; // O2
  wdot[16] -= q; // HO2
  wdot[32] -= q; // aC3H5
  // d()/d[C3H6]
  dqdci = -k_r * sc[13];
  J[129] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[139] += dqdci; // dwdot[O2]/d[C3H6]
  J[142] -= dqdci; // dwdot[HO2]/d[C3H6]
  J[158] -= dqdci; // dwdot[aC3H5]/d[C3H6]
  // d()/d[O2]
  dqdci = -k_r * sc[3];
  J[549] += dqdci; // dwdot[C3H6]/d[O2]
  J[559] += dqdci; // dwdot[O2]/d[O2]
  J[562] -= dqdci; // dwdot[HO2]/d[O2]
  J[578] -= dqdci; // dwdot[aC3H5]/d[O2]
  // d()/d[HO2]
  dqdci = +k_f * sc[32];
  J[675] += dqdci; // dwdot[C3H6]/d[HO2]
  J[685] += dqdci; // dwdot[O2]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[704] -= dqdci; // dwdot[aC3H5]/d[HO2]
  // d()/d[aC3H5]
  dqdci = +k_f * sc[16];
  J[1347] += dqdci; // dwdot[C3H6]/d[aC3H5]
  J[1357] += dqdci; // dwdot[O2]/d[aC3H5]
  J[1360] -= dqdci; // dwdot[HO2]/d[aC3H5]
  J[1376] -= dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[1725] += dqdT; // dwdot[C3H6]/dT
  J[1735] += dqdT; // dwdot[O2]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1754] -= dqdT; // dwdot[aC3H5]/dT

  // reaction 153: HO2 + aC3H5 <=> C2H3 + CH2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[32];
  k_f = 6600000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[15] * sc[23] * sc[26];
  Kc = refC * exp(-g_RT[15] + g_RT[16] - g_RT[23] - g_RT[26] + g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[16] + h_RT[32]) + (h_RT[15] + h_RT[23] + h_RT[26]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] += q; // OH
  wdot[16] -= q; // HO2
  wdot[23] += q; // CH2O
  wdot[26] += q; // C2H3
  wdot[32] -= q; // aC3H5
  // d()/d[OH]
  dqdci = -k_r * sc[23] * sc[26];
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[646] -= dqdci; // dwdot[HO2]/d[OH]
  J[653] += dqdci; // dwdot[CH2O]/d[OH]
  J[656] += dqdci; // dwdot[C2H3]/d[OH]
  J[662] -= dqdci; // dwdot[aC3H5]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[32];
  J[687] += dqdci; // dwdot[OH]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[695] += dqdci; // dwdot[CH2O]/d[HO2]
  J[698] += dqdci; // dwdot[C2H3]/d[HO2]
  J[704] -= dqdci; // dwdot[aC3H5]/d[HO2]
  // d()/d[CH2O]
  dqdci = -k_r * sc[15] * sc[26];
  J[981] += dqdci; // dwdot[OH]/d[CH2O]
  J[982] -= dqdci; // dwdot[HO2]/d[CH2O]
  J[989] += dqdci; // dwdot[CH2O]/d[CH2O]
  J[992] += dqdci; // dwdot[C2H3]/d[CH2O]
  J[998] -= dqdci; // dwdot[aC3H5]/d[CH2O]
  // d()/d[C2H3]
  dqdci = -k_r * sc[15] * sc[23];
  J[1107] += dqdci; // dwdot[OH]/d[C2H3]
  J[1108] -= dqdci; // dwdot[HO2]/d[C2H3]
  J[1115] += dqdci; // dwdot[CH2O]/d[C2H3]
  J[1118] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[1124] -= dqdci; // dwdot[aC3H5]/d[C2H3]
  // d()/d[aC3H5]
  dqdci = +k_f * sc[16];
  J[1359] += dqdci; // dwdot[OH]/d[aC3H5]
  J[1360] -= dqdci; // dwdot[HO2]/d[aC3H5]
  J[1367] += dqdci; // dwdot[CH2O]/d[aC3H5]
  J[1370] += dqdci; // dwdot[C2H3]/d[aC3H5]
  J[1376] -= dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1745] += dqdT; // dwdot[CH2O]/dT
  J[1748] += dqdT; // dwdot[C2H3]/dT
  J[1754] -= dqdT; // dwdot[aC3H5]/dT

  // reaction 154: HCO + aC3H5 <=> C3H6 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[22] * sc[32];
  k_f = 60000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[3] * sc[8];
  Kc = exp(-g_RT[3] - g_RT[8] + g_RT[22] + g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[22] + h_RT[32]) + (h_RT[3] + h_RT[8]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // C3H6
  wdot[8] += q;  // CO
  wdot[22] -= q; // HCO
  wdot[32] -= q; // aC3H5
  // d()/d[C3H6]
  dqdci = -k_r * sc[8];
  J[129] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[134] += dqdci; // dwdot[CO]/d[C3H6]
  J[148] -= dqdci; // dwdot[HCO]/d[C3H6]
  J[158] -= dqdci; // dwdot[aC3H5]/d[C3H6]
  // d()/d[CO]
  dqdci = -k_r * sc[3];
  J[339] += dqdci; // dwdot[C3H6]/d[CO]
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[358] -= dqdci; // dwdot[HCO]/d[CO]
  J[368] -= dqdci; // dwdot[aC3H5]/d[CO]
  // d()/d[HCO]
  dqdci = +k_f * sc[32];
  J[927] += dqdci; // dwdot[C3H6]/d[HCO]
  J[932] += dqdci; // dwdot[CO]/d[HCO]
  J[946] -= dqdci; // dwdot[HCO]/d[HCO]
  J[956] -= dqdci; // dwdot[aC3H5]/d[HCO]
  // d()/d[aC3H5]
  dqdci = +k_f * sc[22];
  J[1347] += dqdci; // dwdot[C3H6]/d[aC3H5]
  J[1352] += dqdci; // dwdot[CO]/d[aC3H5]
  J[1366] -= dqdci; // dwdot[HCO]/d[aC3H5]
  J[1376] -= dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[1725] += dqdT; // dwdot[C3H6]/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT
  J[1754] -= dqdT; // dwdot[aC3H5]/dT

  // reaction 156: C3H6 + H <=> C2H4 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[19];
  k_f = 8e+15 * exp(-2.39 * logT - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[1] * sc[12];
  Kc = exp(-g_RT[1] + g_RT[3] - g_RT[12] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[19]) + (h_RT[1] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // C2H4
  wdot[3] -= q;  // C3H6
  wdot[12] += q; // CH3
  wdot[19] -= q; // H
  // d()/d[C2H4]
  dqdci = -k_r * sc[12];
  J[43] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[45] -= dqdci; // dwdot[C3H6]/d[C2H4]
  J[54] += dqdci; // dwdot[CH3]/d[C2H4]
  J[61] -= dqdci; // dwdot[H]/d[C2H4]
  // d()/d[C3H6]
  dqdci = +k_f * sc[19];
  J[127] += dqdci; // dwdot[C2H4]/d[C3H6]
  J[129] -= dqdci; // dwdot[C3H6]/d[C3H6]
  J[138] += dqdci; // dwdot[CH3]/d[C3H6]
  J[145] -= dqdci; // dwdot[H]/d[C3H6]
  // d()/d[CH3]
  dqdci = -k_r * sc[1];
  J[505] += dqdci; // dwdot[C2H4]/d[CH3]
  J[507] -= dqdci; // dwdot[C3H6]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[523] -= dqdci; // dwdot[H]/d[CH3]
  // d()/d[H]
  dqdci = +k_f * sc[3];
  J[799] += dqdci; // dwdot[C2H4]/d[H]
  J[801] -= dqdci; // dwdot[C3H6]/d[H]
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1723] += dqdT; // dwdot[C2H4]/dT
  J[1725] -= dqdT; // dwdot[C3H6]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 157: C3H6 + H <=> H2 + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[19];
  k_f = 1.92 * exp(2.309 * logT - (2352.03469597126) * invT);
  dlnkfdT = 2.309 * invT + (2352.03469597126) * invT2;
  // reverse
  phi_r = sc[6] * sc[32];
  Kc = exp(g_RT[3] - g_RT[6] + g_RT[19] - g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[19]) + (h_RT[6] + h_RT[32]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // C3H6
  wdot[6] += q;  // H2
  wdot[19] -= q; // H
  wdot[32] += q; // aC3H5
  // d()/d[C3H6]
  dqdci = +k_f * sc[19];
  J[129] -= dqdci; // dwdot[C3H6]/d[C3H6]
  J[132] += dqdci; // dwdot[H2]/d[C3H6]
  J[145] -= dqdci; // dwdot[H]/d[C3H6]
  J[158] += dqdci; // dwdot[aC3H5]/d[C3H6]
  // d()/d[H2]
  dqdci = -k_r * sc[32];
  J[255] -= dqdci; // dwdot[C3H6]/d[H2]
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[284] += dqdci; // dwdot[aC3H5]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[3];
  J[801] -= dqdci; // dwdot[C3H6]/d[H]
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[830] += dqdci; // dwdot[aC3H5]/d[H]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[6];
  J[1347] -= dqdci; // dwdot[C3H6]/d[aC3H5]
  J[1350] += dqdci; // dwdot[H2]/d[aC3H5]
  J[1363] -= dqdci; // dwdot[H]/d[aC3H5]
  J[1376] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[1725] -= dqdT; // dwdot[C3H6]/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1754] += dqdT; // dwdot[aC3H5]/dT

  // reaction 158: C3H6 + O <=> CH2CO + CH3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[14];
  k_f = 80 * exp(1.65 * logT - (164.551849718143) * invT);
  dlnkfdT = 1.65 * invT + (164.551849718143) * invT2;
  // reverse
  phi_r = sc[12] * sc[19] * sc[29];
  Kc = refC * exp(g_RT[3] - g_RT[12] + g_RT[14] - g_RT[19] - g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[14]) + (h_RT[12] + h_RT[19] + h_RT[29]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // C3H6
  wdot[12] += q; // CH3
  wdot[14] -= q; // O
  wdot[19] += q; // H
  wdot[29] += q; // CH2CO
  // d()/d[C3H6]
  dqdci = +k_f * sc[14];
  J[129] -= dqdci; // dwdot[C3H6]/d[C3H6]
  J[138] += dqdci; // dwdot[CH3]/d[C3H6]
  J[140] -= dqdci; // dwdot[O]/d[C3H6]
  J[145] += dqdci; // dwdot[H]/d[C3H6]
  J[155] += dqdci; // dwdot[CH2CO]/d[C3H6]
  // d()/d[CH3]
  dqdci = -k_r * sc[19] * sc[29];
  J[507] -= dqdci; // dwdot[C3H6]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[518] -= dqdci; // dwdot[O]/d[CH3]
  J[523] += dqdci; // dwdot[H]/d[CH3]
  J[533] += dqdci; // dwdot[CH2CO]/d[CH3]
  // d()/d[O]
  dqdci = +k_f * sc[3];
  J[591] -= dqdci; // dwdot[C3H6]/d[O]
  J[600] += dqdci; // dwdot[CH3]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[607] += dqdci; // dwdot[H]/d[O]
  J[617] += dqdci; // dwdot[CH2CO]/d[O]
  // d()/d[H]
  dqdci = -k_r * sc[12] * sc[29];
  J[801] -= dqdci; // dwdot[C3H6]/d[H]
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[812] -= dqdci; // dwdot[O]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[827] += dqdci; // dwdot[CH2CO]/d[H]
  // d()/d[CH2CO]
  dqdci = -k_r * sc[12] * sc[19];
  J[1221] -= dqdci; // dwdot[C3H6]/d[CH2CO]
  J[1230] += dqdci; // dwdot[CH3]/d[CH2CO]
  J[1232] -= dqdci; // dwdot[O]/d[CH2CO]
  J[1237] += dqdci; // dwdot[H]/d[CH2CO]
  J[1247] += dqdci; // dwdot[CH2CO]/d[CH2CO]
  // d()/dT
  J[1725] -= dqdT; // dwdot[C3H6]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1751] += dqdT; // dwdot[CH2CO]/dT

  // reaction 159: C3H6 + O <=> C2H5 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[14];
  k_f = 35 * exp(1.65 * logT - (-489.126599162188) * invT);
  dlnkfdT = 1.65 * invT + (-489.126599162188) * invT2;
  // reverse
  phi_r = sc[22] * sc[27];
  Kc = exp(g_RT[3] + g_RT[14] - g_RT[22] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[14]) + (h_RT[22] + h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // C3H6
  wdot[14] -= q; // O
  wdot[22] += q; // HCO
  wdot[27] += q; // C2H5
  // d()/d[C3H6]
  dqdci = +k_f * sc[14];
  J[129] -= dqdci; // dwdot[C3H6]/d[C3H6]
  J[140] -= dqdci; // dwdot[O]/d[C3H6]
  J[148] += dqdci; // dwdot[HCO]/d[C3H6]
  J[153] += dqdci; // dwdot[C2H5]/d[C3H6]
  // d()/d[O]
  dqdci = +k_f * sc[3];
  J[591] -= dqdci; // dwdot[C3H6]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[610] += dqdci; // dwdot[HCO]/d[O]
  J[615] += dqdci; // dwdot[C2H5]/d[O]
  // d()/d[HCO]
  dqdci = -k_r * sc[27];
  J[927] -= dqdci; // dwdot[C3H6]/d[HCO]
  J[938] -= dqdci; // dwdot[O]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[951] += dqdci; // dwdot[C2H5]/d[HCO]
  // d()/d[C2H5]
  dqdci = -k_r * sc[22];
  J[1137] -= dqdci; // dwdot[C3H6]/d[C2H5]
  J[1148] -= dqdci; // dwdot[O]/d[C2H5]
  J[1156] += dqdci; // dwdot[HCO]/d[C2H5]
  J[1161] += dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1725] -= dqdT; // dwdot[C3H6]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1749] += dqdT; // dwdot[C2H5]/dT

  // reaction 160: C3H6 + O <=> OH + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[14];
  k_f = 180000 * exp(0.7 * logT - (2958.91399493175) * invT);
  dlnkfdT = 0.7 * invT + (2958.91399493175) * invT2;
  // reverse
  phi_r = sc[15] * sc[32];
  Kc = exp(g_RT[3] + g_RT[14] - g_RT[15] - g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[14]) + (h_RT[15] + h_RT[32]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // C3H6
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[32] += q; // aC3H5
  // d()/d[C3H6]
  dqdci = +k_f * sc[14];
  J[129] -= dqdci; // dwdot[C3H6]/d[C3H6]
  J[140] -= dqdci; // dwdot[O]/d[C3H6]
  J[141] += dqdci; // dwdot[OH]/d[C3H6]
  J[158] += dqdci; // dwdot[aC3H5]/d[C3H6]
  // d()/d[O]
  dqdci = +k_f * sc[3];
  J[591] -= dqdci; // dwdot[C3H6]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[620] += dqdci; // dwdot[aC3H5]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[32];
  J[633] -= dqdci; // dwdot[C3H6]/d[OH]
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[662] += dqdci; // dwdot[aC3H5]/d[OH]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[15];
  J[1347] -= dqdci; // dwdot[C3H6]/d[aC3H5]
  J[1358] -= dqdci; // dwdot[O]/d[aC3H5]
  J[1359] += dqdci; // dwdot[OH]/d[aC3H5]
  J[1376] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[1725] -= dqdT; // dwdot[C3H6]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1754] += dqdT; // dwdot[aC3H5]/dT

  // reaction 161: C3H6 + OH <=> H2O + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[15];
  k_f = 3.1 * exp(2 * logT - (-149.958566409806) * invT);
  dlnkfdT = 2 * invT + (-149.958566409806) * invT2;
  // reverse
  phi_r = sc[17] * sc[32];
  Kc = exp(g_RT[3] + g_RT[15] - g_RT[17] - g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[15]) + (h_RT[17] + h_RT[32]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // C3H6
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[32] += q; // aC3H5
  // d()/d[C3H6]
  dqdci = +k_f * sc[15];
  J[129] -= dqdci; // dwdot[C3H6]/d[C3H6]
  J[141] -= dqdci; // dwdot[OH]/d[C3H6]
  J[143] += dqdci; // dwdot[H2O]/d[C3H6]
  J[158] += dqdci; // dwdot[aC3H5]/d[C3H6]
  // d()/d[OH]
  dqdci = +k_f * sc[3];
  J[633] -= dqdci; // dwdot[C3H6]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[662] += dqdci; // dwdot[aC3H5]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[32];
  J[717] -= dqdci; // dwdot[C3H6]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[746] += dqdci; // dwdot[aC3H5]/d[H2O]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[17];
  J[1347] -= dqdci; // dwdot[C3H6]/d[aC3H5]
  J[1359] -= dqdci; // dwdot[OH]/d[aC3H5]
  J[1361] += dqdci; // dwdot[H2O]/d[aC3H5]
  J[1376] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[1725] -= dqdT; // dwdot[C3H6]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1754] += dqdT; // dwdot[aC3H5]/dT

  // reaction 162: C3H6 + CH3 <=> CH4 + aC3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[12];
  k_f = 4.54e-05 * exp(3.268 * logT - (3599.00559383536) * invT);
  dlnkfdT = 3.268 * invT + (3599.00559383536) * invT2;
  // reverse
  phi_r = sc[2] * sc[32];
  Kc = exp(-g_RT[2] + g_RT[3] + g_RT[12] - g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[12]) + (h_RT[2] + h_RT[32]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // CH4
  wdot[3] -= q;  // C3H6
  wdot[12] -= q; // CH3
  wdot[32] += q; // aC3H5
  // d()/d[CH4]
  dqdci = -k_r * sc[32];
  J[86] += dqdci;  // dwdot[CH4]/d[CH4]
  J[87] -= dqdci;  // dwdot[C3H6]/d[CH4]
  J[96] -= dqdci;  // dwdot[CH3]/d[CH4]
  J[116] += dqdci; // dwdot[aC3H5]/d[CH4]
  // d()/d[C3H6]
  dqdci = +k_f * sc[12];
  J[128] += dqdci; // dwdot[CH4]/d[C3H6]
  J[129] -= dqdci; // dwdot[C3H6]/d[C3H6]
  J[138] -= dqdci; // dwdot[CH3]/d[C3H6]
  J[158] += dqdci; // dwdot[aC3H5]/d[C3H6]
  // d()/d[CH3]
  dqdci = +k_f * sc[3];
  J[506] += dqdci; // dwdot[CH4]/d[CH3]
  J[507] -= dqdci; // dwdot[C3H6]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[536] += dqdci; // dwdot[aC3H5]/d[CH3]
  // d()/d[aC3H5]
  dqdci = -k_r * sc[2];
  J[1346] += dqdci; // dwdot[CH4]/d[aC3H5]
  J[1347] -= dqdci; // dwdot[C3H6]/d[aC3H5]
  J[1356] -= dqdci; // dwdot[CH3]/d[aC3H5]
  J[1376] += dqdci; // dwdot[aC3H5]/d[aC3H5]
  // d()/dT
  J[1724] += dqdT; // dwdot[CH4]/dT
  J[1725] -= dqdT; // dwdot[C3H6]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1754] += dqdT; // dwdot[aC3H5]/dT

  // reaction 163: C4H81 + H <=> C2H4 + C2H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[19];
  k_f = 1.6e+16 * exp(-2.39 * logT - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[1] * sc[27];
  Kc = exp(-g_RT[1] + g_RT[5] + g_RT[19] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[19]) + (h_RT[1] + h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // C2H4
  wdot[5] -= q;  // C4H81
  wdot[19] -= q; // H
  wdot[27] += q; // C2H5
  // d()/d[C2H4]
  dqdci = -k_r * sc[27];
  J[43] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[47] -= dqdci; // dwdot[C4H81]/d[C2H4]
  J[61] -= dqdci; // dwdot[H]/d[C2H4]
  J[69] += dqdci; // dwdot[C2H5]/d[C2H4]
  // d()/d[C4H81]
  dqdci = +k_f * sc[19];
  J[211] += dqdci; // dwdot[C2H4]/d[C4H81]
  J[215] -= dqdci; // dwdot[C4H81]/d[C4H81]
  J[229] -= dqdci; // dwdot[H]/d[C4H81]
  J[237] += dqdci; // dwdot[C2H5]/d[C4H81]
  // d()/d[H]
  dqdci = +k_f * sc[5];
  J[799] += dqdci; // dwdot[C2H4]/d[H]
  J[803] -= dqdci; // dwdot[C4H81]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[825] += dqdci; // dwdot[C2H5]/d[H]
  // d()/d[C2H5]
  dqdci = -k_r * sc[1];
  J[1135] += dqdci; // dwdot[C2H4]/d[C2H5]
  J[1139] -= dqdci; // dwdot[C4H81]/d[C2H5]
  J[1153] -= dqdci; // dwdot[H]/d[C2H5]
  J[1161] += dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[1723] += dqdT; // dwdot[C2H4]/dT
  J[1727] -= dqdT; // dwdot[C4H81]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1749] += dqdT; // dwdot[C2H5]/dT

  // reaction 164: C4H81 + H <=> C3H6 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[19];
  k_f = 3.2e+16 * exp(-2.39 * logT - (5625.96232369677) * invT);
  dlnkfdT = -2.39 * invT + (5625.96232369677) * invT2;
  // reverse
  phi_r = sc[3] * sc[12];
  Kc = exp(-g_RT[3] + g_RT[5] - g_RT[12] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[19]) + (h_RT[3] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // C3H6
  wdot[5] -= q;  // C4H81
  wdot[12] += q; // CH3
  wdot[19] -= q; // H
  // d()/d[C3H6]
  dqdci = -k_r * sc[12];
  J[129] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[131] -= dqdci; // dwdot[C4H81]/d[C3H6]
  J[138] += dqdci; // dwdot[CH3]/d[C3H6]
  J[145] -= dqdci; // dwdot[H]/d[C3H6]
  // d()/d[C4H81]
  dqdci = +k_f * sc[19];
  J[213] += dqdci; // dwdot[C3H6]/d[C4H81]
  J[215] -= dqdci; // dwdot[C4H81]/d[C4H81]
  J[222] += dqdci; // dwdot[CH3]/d[C4H81]
  J[229] -= dqdci; // dwdot[H]/d[C4H81]
  // d()/d[CH3]
  dqdci = -k_r * sc[3];
  J[507] += dqdci; // dwdot[C3H6]/d[CH3]
  J[509] -= dqdci; // dwdot[C4H81]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[523] -= dqdci; // dwdot[H]/d[CH3]
  // d()/d[H]
  dqdci = +k_f * sc[5];
  J[801] += dqdci; // dwdot[C3H6]/d[H]
  J[803] -= dqdci; // dwdot[C4H81]/d[H]
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1725] += dqdT; // dwdot[C3H6]/dT
  J[1727] -= dqdT; // dwdot[C4H81]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 165: H + iC4H8 <=> C3H6 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[19];
  k_f = 6.16e+16 * exp(-2.538 * logT - (5851.90660664309) * invT);
  dlnkfdT = -2.538 * invT + (5851.90660664309) * invT2;
  // reverse
  phi_r = sc[3] * sc[12];
  Kc = exp(-g_RT[3] + g_RT[4] - g_RT[12] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[19]) + (h_RT[3] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;  // C3H6
  wdot[4] -= q;  // iC4H8
  wdot[12] += q; // CH3
  wdot[19] -= q; // H
  // d()/d[C3H6]
  dqdci = -k_r * sc[12];
  J[129] += dqdci; // dwdot[C3H6]/d[C3H6]
  J[130] -= dqdci; // dwdot[iC4H8]/d[C3H6]
  J[138] += dqdci; // dwdot[CH3]/d[C3H6]
  J[145] -= dqdci; // dwdot[H]/d[C3H6]
  // d()/d[iC4H8]
  dqdci = +k_f * sc[19];
  J[171] += dqdci; // dwdot[C3H6]/d[iC4H8]
  J[172] -= dqdci; // dwdot[iC4H8]/d[iC4H8]
  J[180] += dqdci; // dwdot[CH3]/d[iC4H8]
  J[187] -= dqdci; // dwdot[H]/d[iC4H8]
  // d()/d[CH3]
  dqdci = -k_r * sc[3];
  J[507] += dqdci; // dwdot[C3H6]/d[CH3]
  J[508] -= dqdci; // dwdot[iC4H8]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[523] -= dqdci; // dwdot[H]/d[CH3]
  // d()/d[H]
  dqdci = +k_f * sc[4];
  J[801] += dqdci; // dwdot[C3H6]/d[H]
  J[802] -= dqdci; // dwdot[iC4H8]/d[H]
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1725] += dqdT; // dwdot[C3H6]/dT
  J[1726] -= dqdT; // dwdot[iC4H8]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 166: O + iC4H8 <=> CH2CO + 2 CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[14];
  k_f = 240 * exp(1.65 * logT - (164.551849718143) * invT);
  dlnkfdT = 1.65 * invT + (164.551849718143) * invT2;
  // reverse
  phi_r = (sc[12] * sc[12]) * sc[29];
  Kc = refC * exp(g_RT[4] - 2.000000 * g_RT[12] + g_RT[14] - g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[14]) + (2.000000 * h_RT[12] + h_RT[29]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= q;      // iC4H8
  wdot[12] += 2 * q; // CH3
  wdot[14] -= q;     // O
  wdot[29] += q;     // CH2CO
  // d()/d[iC4H8]
  dqdci = +k_f * sc[14];
  J[172] -= dqdci;     // dwdot[iC4H8]/d[iC4H8]
  J[180] += 2 * dqdci; // dwdot[CH3]/d[iC4H8]
  J[182] -= dqdci;     // dwdot[O]/d[iC4H8]
  J[197] += dqdci;     // dwdot[CH2CO]/d[iC4H8]
  // d()/d[CH3]
  dqdci = -k_r * 2.000000 * sc[12] * sc[29];
  J[508] -= dqdci;     // dwdot[iC4H8]/d[CH3]
  J[516] += 2 * dqdci; // dwdot[CH3]/d[CH3]
  J[518] -= dqdci;     // dwdot[O]/d[CH3]
  J[533] += dqdci;     // dwdot[CH2CO]/d[CH3]
  // d()/d[O]
  dqdci = +k_f * sc[4];
  J[592] -= dqdci;     // dwdot[iC4H8]/d[O]
  J[600] += 2 * dqdci; // dwdot[CH3]/d[O]
  J[602] -= dqdci;     // dwdot[O]/d[O]
  J[617] += dqdci;     // dwdot[CH2CO]/d[O]
  // d()/d[CH2CO]
  dqdci = -k_r * sc[12] * sc[12];
  J[1222] -= dqdci;     // dwdot[iC4H8]/d[CH2CO]
  J[1230] += 2 * dqdci; // dwdot[CH3]/d[CH2CO]
  J[1232] -= dqdci;     // dwdot[O]/d[CH2CO]
  J[1247] += dqdci;     // dwdot[CH2CO]/d[CH2CO]
  // d()/dT
  J[1726] -= dqdT;     // dwdot[iC4H8]/dT
  J[1734] += 2 * dqdT; // dwdot[CH3]/dT
  J[1736] -= dqdT;     // dwdot[O]/dT
  J[1751] += dqdT;     // dwdot[CH2CO]/dT

  // reaction 167: C6H5 + CH3 <=> C6H5CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[35];
  k_f = 13800000 * exp(-(23.1479666270171) * invT);
  dlnkfdT = (23.1479666270171) * invT2;
  // reverse
  phi_r = sc[11];
  Kc = refCinv * exp(-g_RT[11] + g_RT[12] + g_RT[35]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[35]) + (h_RT[11]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] += q; // C6H5CH3
  wdot[12] -= q; // CH3
  wdot[35] -= q; // C6H5
  // d()/d[C6H5CH3]
  dqdci = -k_r;
  J[473] += dqdci; // dwdot[C6H5CH3]/d[C6H5CH3]
  J[474] -= dqdci; // dwdot[CH3]/d[C6H5CH3]
  J[497] -= dqdci; // dwdot[C6H5]/d[C6H5CH3]
  // d()/d[CH3]
  dqdci = +k_f * sc[35];
  J[515] += dqdci; // dwdot[C6H5CH3]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[539] -= dqdci; // dwdot[C6H5]/d[CH3]
  // d()/d[C6H5]
  dqdci = +k_f * sc[12];
  J[1481] += dqdci; // dwdot[C6H5CH3]/d[C6H5]
  J[1482] -= dqdci; // dwdot[CH3]/d[C6H5]
  J[1505] -= dqdci; // dwdot[C6H5]/d[C6H5]
  // d()/dT
  J[1733] += dqdT; // dwdot[C6H5CH3]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1757] -= dqdT; // dwdot[C6H5]/dT

  // reaction 168: C6H5CH3 + O2 <=> C6H5CH2 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[13];
  k_f = 300000000 * exp(-(21634.2908962765) * invT);
  dlnkfdT = (21634.2908962765) * invT2;
  // reverse
  phi_r = sc[16] * sc[36];
  Kc = exp(g_RT[11] + g_RT[13] - g_RT[16] - g_RT[36]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[13]) + (h_RT[16] + h_RT[36]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // C6H5CH3
  wdot[13] -= q; // O2
  wdot[16] += q; // HO2
  wdot[36] += q; // C6H5CH2
  // d()/d[C6H5CH3]
  dqdci = +k_f * sc[13];
  J[473] -= dqdci; // dwdot[C6H5CH3]/d[C6H5CH3]
  J[475] -= dqdci; // dwdot[O2]/d[C6H5CH3]
  J[478] += dqdci; // dwdot[HO2]/d[C6H5CH3]
  J[498] += dqdci; // dwdot[C6H5CH2]/d[C6H5CH3]
  // d()/d[O2]
  dqdci = +k_f * sc[11];
  J[557] -= dqdci; // dwdot[C6H5CH3]/d[O2]
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[562] += dqdci; // dwdot[HO2]/d[O2]
  J[582] += dqdci; // dwdot[C6H5CH2]/d[O2]
  // d()/d[HO2]
  dqdci = -k_r * sc[36];
  J[683] -= dqdci; // dwdot[C6H5CH3]/d[HO2]
  J[685] -= dqdci; // dwdot[O2]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[708] += dqdci; // dwdot[C6H5CH2]/d[HO2]
  // d()/d[C6H5CH2]
  dqdci = -k_r * sc[16];
  J[1523] -= dqdci; // dwdot[C6H5CH3]/d[C6H5CH2]
  J[1525] -= dqdci; // dwdot[O2]/d[C6H5CH2]
  J[1528] += dqdci; // dwdot[HO2]/d[C6H5CH2]
  J[1548] += dqdci; // dwdot[C6H5CH2]/d[C6H5CH2]
  // d()/dT
  J[1733] -= dqdT; // dwdot[C6H5CH3]/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1758] += dqdT; // dwdot[C6H5CH2]/dT

  // reaction 169: C6H5CH3 + OH <=> C6H5CH2 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[15];
  k_f = 16200000 * exp(-(1393.91016427907) * invT);
  dlnkfdT = (1393.91016427907) * invT2;
  // reverse
  phi_r = sc[17] * sc[36];
  Kc = exp(g_RT[11] + g_RT[15] - g_RT[17] - g_RT[36]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[15]) + (h_RT[17] + h_RT[36]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[11] -= q; // C6H5CH3
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[36] += q; // C6H5CH2
  // d()/d[C6H5CH3]
  dqdci = +k_f * sc[15];
  J[473] -= dqdci; // dwdot[C6H5CH3]/d[C6H5CH3]
  J[477] -= dqdci; // dwdot[OH]/d[C6H5CH3]
  J[479] += dqdci; // dwdot[H2O]/d[C6H5CH3]
  J[498] += dqdci; // dwdot[C6H5CH2]/d[C6H5CH3]
  // d()/d[OH]
  dqdci = +k_f * sc[11];
  J[641] -= dqdci; // dwdot[C6H5CH3]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[666] += dqdci; // dwdot[C6H5CH2]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[36];
  J[725] -= dqdci; // dwdot[C6H5CH3]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[750] += dqdci; // dwdot[C6H5CH2]/d[H2O]
  // d()/d[C6H5CH2]
  dqdci = -k_r * sc[17];
  J[1523] -= dqdci; // dwdot[C6H5CH3]/d[C6H5CH2]
  J[1527] -= dqdci; // dwdot[OH]/d[C6H5CH2]
  J[1529] += dqdci; // dwdot[H2O]/d[C6H5CH2]
  J[1548] += dqdci; // dwdot[C6H5CH2]/d[C6H5CH2]
  // d()/dT
  J[1733] -= dqdT; // dwdot[C6H5CH3]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1758] += dqdT; // dwdot[C6H5CH2]/dT

  // reaction 170: C6H5CH3 + H <=> C6H5CH2 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[19];
  k_f = 125900000 * exp(-(4206.38810946165) * invT);
  dlnkfdT = (4206.38810946165) * invT2;
  // reverse
  phi_r = sc[6] * sc[36];
  Kc = exp(-g_RT[6] + g_RT[11] + g_RT[19] - g_RT[36]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[19]) + (h_RT[6] + h_RT[36]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2
  wdot[11] -= q; // C6H5CH3
  wdot[19] -= q; // H
  wdot[36] += q; // C6H5CH2
  // d()/d[H2]
  dqdci = -k_r * sc[36];
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[263] -= dqdci; // dwdot[C6H5CH3]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[288] += dqdci; // dwdot[C6H5CH2]/d[H2]
  // d()/d[C6H5CH3]
  dqdci = +k_f * sc[19];
  J[468] += dqdci; // dwdot[H2]/d[C6H5CH3]
  J[473] -= dqdci; // dwdot[C6H5CH3]/d[C6H5CH3]
  J[481] -= dqdci; // dwdot[H]/d[C6H5CH3]
  J[498] += dqdci; // dwdot[C6H5CH2]/d[C6H5CH3]
  // d()/d[H]
  dqdci = +k_f * sc[11];
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[809] -= dqdci; // dwdot[C6H5CH3]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[834] += dqdci; // dwdot[C6H5CH2]/d[H]
  // d()/d[C6H5CH2]
  dqdci = -k_r * sc[6];
  J[1518] += dqdci; // dwdot[H2]/d[C6H5CH2]
  J[1523] -= dqdci; // dwdot[C6H5CH3]/d[C6H5CH2]
  J[1531] -= dqdci; // dwdot[H]/d[C6H5CH2]
  J[1548] += dqdci; // dwdot[C6H5CH2]/d[C6H5CH2]
  // d()/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1733] -= dqdT; // dwdot[C6H5CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1758] += dqdT; // dwdot[C6H5CH2]/dT

  // reaction 171: C6H5CH3 + H <=> C6H6 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[19];
  k_f = 1.93 * exp(2.17 * logT - (2094.89097974505) * invT);
  dlnkfdT = 2.17 * invT + (2094.89097974505) * invT2;
  // reverse
  phi_r = sc[9] * sc[12];
  Kc = exp(-g_RT[9] + g_RT[11] - g_RT[12] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[19]) + (h_RT[9] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[9] += q;  // C6H6
  wdot[11] -= q; // C6H5CH3
  wdot[12] += q; // CH3
  wdot[19] -= q; // H
  // d()/d[C6H6]
  dqdci = -k_r * sc[12];
  J[387] += dqdci; // dwdot[C6H6]/d[C6H6]
  J[389] -= dqdci; // dwdot[C6H5CH3]/d[C6H6]
  J[390] += dqdci; // dwdot[CH3]/d[C6H6]
  J[397] -= dqdci; // dwdot[H]/d[C6H6]
  // d()/d[C6H5CH3]
  dqdci = +k_f * sc[19];
  J[471] += dqdci; // dwdot[C6H6]/d[C6H5CH3]
  J[473] -= dqdci; // dwdot[C6H5CH3]/d[C6H5CH3]
  J[474] += dqdci; // dwdot[CH3]/d[C6H5CH3]
  J[481] -= dqdci; // dwdot[H]/d[C6H5CH3]
  // d()/d[CH3]
  dqdci = -k_r * sc[9];
  J[513] += dqdci; // dwdot[C6H6]/d[CH3]
  J[515] -= dqdci; // dwdot[C6H5CH3]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[523] -= dqdci; // dwdot[H]/d[CH3]
  // d()/d[H]
  dqdci = +k_f * sc[11];
  J[807] += dqdci; // dwdot[C6H6]/d[H]
  J[809] -= dqdci; // dwdot[C6H5CH3]/d[H]
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  // d()/dT
  J[1731] += dqdT; // dwdot[C6H6]/dT
  J[1733] -= dqdT; // dwdot[C6H5CH3]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT

  // reaction 172: C6H5CH3 + CH3 <=> C6H5CH2 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[12];
  k_f = 316000 * exp(-(4780.55832514484) * invT);
  dlnkfdT = (4780.55832514484) * invT2;
  // reverse
  phi_r = sc[2] * sc[36];
  Kc = exp(-g_RT[2] + g_RT[11] + g_RT[12] - g_RT[36]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[11] + h_RT[12]) + (h_RT[2] + h_RT[36]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // CH4
  wdot[11] -= q; // C6H5CH3
  wdot[12] -= q; // CH3
  wdot[36] += q; // C6H5CH2
  // d()/d[CH4]
  dqdci = -k_r * sc[36];
  J[86] += dqdci;  // dwdot[CH4]/d[CH4]
  J[95] -= dqdci;  // dwdot[C6H5CH3]/d[CH4]
  J[96] -= dqdci;  // dwdot[CH3]/d[CH4]
  J[120] += dqdci; // dwdot[C6H5CH2]/d[CH4]
  // d()/d[C6H5CH3]
  dqdci = +k_f * sc[12];
  J[464] += dqdci; // dwdot[CH4]/d[C6H5CH3]
  J[473] -= dqdci; // dwdot[C6H5CH3]/d[C6H5CH3]
  J[474] -= dqdci; // dwdot[CH3]/d[C6H5CH3]
  J[498] += dqdci; // dwdot[C6H5CH2]/d[C6H5CH3]
  // d()/d[CH3]
  dqdci = +k_f * sc[11];
  J[506] += dqdci; // dwdot[CH4]/d[CH3]
  J[515] -= dqdci; // dwdot[C6H5CH3]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[540] += dqdci; // dwdot[C6H5CH2]/d[CH3]
  // d()/d[C6H5CH2]
  dqdci = -k_r * sc[2];
  J[1514] += dqdci; // dwdot[CH4]/d[C6H5CH2]
  J[1523] -= dqdci; // dwdot[C6H5CH3]/d[C6H5CH2]
  J[1524] -= dqdci; // dwdot[CH3]/d[C6H5CH2]
  J[1548] += dqdci; // dwdot[C6H5CH2]/d[C6H5CH2]
  // d()/dT
  J[1724] += dqdT; // dwdot[CH4]/dT
  J[1733] -= dqdT; // dwdot[C6H5CH3]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1758] += dqdT; // dwdot[C6H5CH2]/dT

  // reaction 174: C6H5CH2 + H <=> C6H5 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[36];
  k_f = 1.5e+60 * exp(-13.94 * logT - (32497.7322776688) * invT);
  dlnkfdT = -13.94 * invT + (32497.7322776688) * invT2;
  // reverse
  phi_r = sc[12] * sc[35];
  Kc = exp(-g_RT[12] + g_RT[19] - g_RT[35] + g_RT[36]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[36]) + (h_RT[12] + h_RT[35]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[12] += q; // CH3
  wdot[19] -= q; // H
  wdot[35] += q; // C6H5
  wdot[36] -= q; // C6H5CH2
  // d()/d[CH3]
  dqdci = -k_r * sc[35];
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[523] -= dqdci; // dwdot[H]/d[CH3]
  J[539] += dqdci; // dwdot[C6H5]/d[CH3]
  J[540] -= dqdci; // dwdot[C6H5CH2]/d[CH3]
  // d()/d[H]
  dqdci = +k_f * sc[36];
  J[810] += dqdci; // dwdot[CH3]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[833] += dqdci; // dwdot[C6H5]/d[H]
  J[834] -= dqdci; // dwdot[C6H5CH2]/d[H]
  // d()/d[C6H5]
  dqdci = -k_r * sc[12];
  J[1482] += dqdci; // dwdot[CH3]/d[C6H5]
  J[1489] -= dqdci; // dwdot[H]/d[C6H5]
  J[1505] += dqdci; // dwdot[C6H5]/d[C6H5]
  J[1506] -= dqdci; // dwdot[C6H5CH2]/d[C6H5]
  // d()/d[C6H5CH2]
  dqdci = +k_f * sc[19];
  J[1524] += dqdci; // dwdot[CH3]/d[C6H5CH2]
  J[1531] -= dqdci; // dwdot[H]/d[C6H5CH2]
  J[1547] += dqdci; // dwdot[C6H5]/d[C6H5CH2]
  J[1548] -= dqdci; // dwdot[C6H5CH2]/d[C6H5CH2]
  // d()/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1757] += dqdT; // dwdot[C6H5]/dT
  J[1758] -= dqdT; // dwdot[C6H5CH2]/dT

  // reaction 175: C6H5CH2 + O <=> C6H5CHO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[36];
  k_f = 400000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[19] * sc[39];
  Kc = exp(g_RT[14] - g_RT[19] + g_RT[36] - g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[36]) + (h_RT[19] + h_RT[39]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[19] += q; // H
  wdot[36] -= q; // C6H5CH2
  wdot[39] += q; // C6H5CHO
  // d()/d[O]
  dqdci = +k_f * sc[36];
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[607] += dqdci; // dwdot[H]/d[O]
  J[624] -= dqdci; // dwdot[C6H5CH2]/d[O]
  J[627] += dqdci; // dwdot[C6H5CHO]/d[O]
  // d()/d[H]
  dqdci = -k_r * sc[39];
  J[812] -= dqdci; // dwdot[O]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[834] -= dqdci; // dwdot[C6H5CH2]/d[H]
  J[837] += dqdci; // dwdot[C6H5CHO]/d[H]
  // d()/d[C6H5CH2]
  dqdci = +k_f * sc[14];
  J[1526] -= dqdci; // dwdot[O]/d[C6H5CH2]
  J[1531] += dqdci; // dwdot[H]/d[C6H5CH2]
  J[1548] -= dqdci; // dwdot[C6H5CH2]/d[C6H5CH2]
  J[1551] += dqdci; // dwdot[C6H5CHO]/d[C6H5CH2]
  // d()/d[C6H5CHO]
  dqdci = -k_r * sc[19];
  J[1652] -= dqdci; // dwdot[O]/d[C6H5CHO]
  J[1657] += dqdci; // dwdot[H]/d[C6H5CHO]
  J[1674] -= dqdci; // dwdot[C6H5CH2]/d[C6H5CHO]
  J[1677] += dqdci; // dwdot[C6H5CHO]/d[C6H5CHO]
  // d()/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1758] -= dqdT; // dwdot[C6H5CH2]/dT
  J[1761] += dqdT; // dwdot[C6H5CHO]/dT

  // reaction 176: C6H5CH2 + HO2 <=> C6H5CHO + H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[36];
  k_f = 5000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[15] * sc[19] * sc[39];
  Kc = refC * exp(-g_RT[15] + g_RT[16] - g_RT[19] + g_RT[36] - g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[16] + h_RT[36]) + (h_RT[15] + h_RT[19] + h_RT[39]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] += q; // OH
  wdot[16] -= q; // HO2
  wdot[19] += q; // H
  wdot[36] -= q; // C6H5CH2
  wdot[39] += q; // C6H5CHO
  // d()/d[OH]
  dqdci = -k_r * sc[19] * sc[39];
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[646] -= dqdci; // dwdot[HO2]/d[OH]
  J[649] += dqdci; // dwdot[H]/d[OH]
  J[666] -= dqdci; // dwdot[C6H5CH2]/d[OH]
  J[669] += dqdci; // dwdot[C6H5CHO]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[36];
  J[687] += dqdci; // dwdot[OH]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[691] += dqdci; // dwdot[H]/d[HO2]
  J[708] -= dqdci; // dwdot[C6H5CH2]/d[HO2]
  J[711] += dqdci; // dwdot[C6H5CHO]/d[HO2]
  // d()/d[H]
  dqdci = -k_r * sc[15] * sc[39];
  J[813] += dqdci; // dwdot[OH]/d[H]
  J[814] -= dqdci; // dwdot[HO2]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[834] -= dqdci; // dwdot[C6H5CH2]/d[H]
  J[837] += dqdci; // dwdot[C6H5CHO]/d[H]
  // d()/d[C6H5CH2]
  dqdci = +k_f * sc[16];
  J[1527] += dqdci; // dwdot[OH]/d[C6H5CH2]
  J[1528] -= dqdci; // dwdot[HO2]/d[C6H5CH2]
  J[1531] += dqdci; // dwdot[H]/d[C6H5CH2]
  J[1548] -= dqdci; // dwdot[C6H5CH2]/d[C6H5CH2]
  J[1551] += dqdci; // dwdot[C6H5CHO]/d[C6H5CH2]
  // d()/d[C6H5CHO]
  dqdci = -k_r * sc[15] * sc[19];
  J[1653] += dqdci; // dwdot[OH]/d[C6H5CHO]
  J[1654] -= dqdci; // dwdot[HO2]/d[C6H5CHO]
  J[1657] += dqdci; // dwdot[H]/d[C6H5CHO]
  J[1674] -= dqdci; // dwdot[C6H5CH2]/d[C6H5CHO]
  J[1677] += dqdci; // dwdot[C6H5CHO]/d[C6H5CHO]
  // d()/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1758] -= dqdT; // dwdot[C6H5CH2]/dT
  J[1761] += dqdT; // dwdot[C6H5CHO]/dT

  // reaction 177: C6H5 + HCO <=> C6H5CHO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[22] * sc[35];
  k_f = 10000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[39];
  Kc = refCinv * exp(g_RT[22] + g_RT[35] - g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[22] + h_RT[35]) + (h_RT[39]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[22] -= q; // HCO
  wdot[35] -= q; // C6H5
  wdot[39] += q; // C6H5CHO
  // d()/d[HCO]
  dqdci = +k_f * sc[35];
  J[946] -= dqdci; // dwdot[HCO]/d[HCO]
  J[959] -= dqdci; // dwdot[C6H5]/d[HCO]
  J[963] += dqdci; // dwdot[C6H5CHO]/d[HCO]
  // d()/d[C6H5]
  dqdci = +k_f * sc[22];
  J[1492] -= dqdci; // dwdot[HCO]/d[C6H5]
  J[1505] -= dqdci; // dwdot[C6H5]/d[C6H5]
  J[1509] += dqdci; // dwdot[C6H5CHO]/d[C6H5]
  // d()/d[C6H5CHO]
  dqdci = -k_r;
  J[1660] -= dqdci; // dwdot[HCO]/d[C6H5CHO]
  J[1673] -= dqdci; // dwdot[C6H5]/d[C6H5CHO]
  J[1677] += dqdci; // dwdot[C6H5CHO]/d[C6H5CHO]
  // d()/dT
  J[1744] -= dqdT; // dwdot[HCO]/dT
  J[1757] -= dqdT; // dwdot[C6H5]/dT
  J[1761] += dqdT; // dwdot[C6H5CHO]/dT

  // reaction 178: C6H5CHO <=> C6H5CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[39];
  k_f = 3.98e+15 * exp(-(43729.5282584301) * invT);
  dlnkfdT = (43729.5282584301) * invT2;
  // reverse
  phi_r = sc[19] * sc[38];
  Kc = refC * exp(-g_RT[19] - g_RT[38] + g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[39]) + (h_RT[19] + h_RT[38]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[19] += q; // H
  wdot[38] += q; // C6H5CO
  wdot[39] -= q; // C6H5CHO
  // d()/d[H]
  dqdci = -k_r * sc[38];
  J[817] += dqdci; // dwdot[H]/d[H]
  J[836] += dqdci; // dwdot[C6H5CO]/d[H]
  J[837] -= dqdci; // dwdot[C6H5CHO]/d[H]
  // d()/d[C6H5CO]
  dqdci = -k_r * sc[19];
  J[1615] += dqdci; // dwdot[H]/d[C6H5CO]
  J[1634] += dqdci; // dwdot[C6H5CO]/d[C6H5CO]
  J[1635] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CO]
  // d()/d[C6H5CHO]
  dqdci = +k_f;
  J[1657] += dqdci; // dwdot[H]/d[C6H5CHO]
  J[1676] += dqdci; // dwdot[C6H5CO]/d[C6H5CHO]
  J[1677] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CHO]
  // d()/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1760] += dqdT; // dwdot[C6H5CO]/dT
  J[1761] -= dqdT; // dwdot[C6H5CHO]/dT

  // reaction 179: C6H5CHO + O2 <=> C6H5CO + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[39];
  k_f = 10200000 * exp(-(19600.2891330938) * invT);
  dlnkfdT = (19600.2891330938) * invT2;
  // reverse
  phi_r = sc[16] * sc[38];
  Kc = exp(g_RT[13] - g_RT[16] - g_RT[38] + g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[39]) + (h_RT[16] + h_RT[38]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // O2
  wdot[16] += q; // HO2
  wdot[38] += q; // C6H5CO
  wdot[39] -= q; // C6H5CHO
  // d()/d[O2]
  dqdci = +k_f * sc[39];
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[562] += dqdci; // dwdot[HO2]/d[O2]
  J[584] += dqdci; // dwdot[C6H5CO]/d[O2]
  J[585] -= dqdci; // dwdot[C6H5CHO]/d[O2]
  // d()/d[HO2]
  dqdci = -k_r * sc[38];
  J[685] -= dqdci; // dwdot[O2]/d[HO2]
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[710] += dqdci; // dwdot[C6H5CO]/d[HO2]
  J[711] -= dqdci; // dwdot[C6H5CHO]/d[HO2]
  // d()/d[C6H5CO]
  dqdci = -k_r * sc[16];
  J[1609] -= dqdci; // dwdot[O2]/d[C6H5CO]
  J[1612] += dqdci; // dwdot[HO2]/d[C6H5CO]
  J[1634] += dqdci; // dwdot[C6H5CO]/d[C6H5CO]
  J[1635] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CO]
  // d()/d[C6H5CHO]
  dqdci = +k_f * sc[13];
  J[1651] -= dqdci; // dwdot[O2]/d[C6H5CHO]
  J[1654] += dqdci; // dwdot[HO2]/d[C6H5CHO]
  J[1676] += dqdci; // dwdot[C6H5CO]/d[C6H5CHO]
  J[1677] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CHO]
  // d()/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1760] += dqdT; // dwdot[C6H5CO]/dT
  J[1761] -= dqdT; // dwdot[C6H5CHO]/dT

  // reaction 180: C6H5CHO + OH <=> C6H5CO + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[39];
  k_f = 23500 * exp(0.73 * logT - (-558.570499043239) * invT);
  dlnkfdT = 0.73 * invT + (-558.570499043239) * invT2;
  // reverse
  phi_r = sc[17] * sc[38];
  Kc = exp(g_RT[15] - g_RT[17] - g_RT[38] + g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[39]) + (h_RT[17] + h_RT[38]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[38] += q; // C6H5CO
  wdot[39] -= q; // C6H5CHO
  // d()/d[OH]
  dqdci = +k_f * sc[39];
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[668] += dqdci; // dwdot[C6H5CO]/d[OH]
  J[669] -= dqdci; // dwdot[C6H5CHO]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[38];
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[752] += dqdci; // dwdot[C6H5CO]/d[H2O]
  J[753] -= dqdci; // dwdot[C6H5CHO]/d[H2O]
  // d()/d[C6H5CO]
  dqdci = -k_r * sc[17];
  J[1611] -= dqdci; // dwdot[OH]/d[C6H5CO]
  J[1613] += dqdci; // dwdot[H2O]/d[C6H5CO]
  J[1634] += dqdci; // dwdot[C6H5CO]/d[C6H5CO]
  J[1635] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CO]
  // d()/d[C6H5CHO]
  dqdci = +k_f * sc[15];
  J[1653] -= dqdci; // dwdot[OH]/d[C6H5CHO]
  J[1655] += dqdci; // dwdot[H2O]/d[C6H5CHO]
  J[1676] += dqdci; // dwdot[C6H5CO]/d[C6H5CHO]
  J[1677] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CHO]
  // d()/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1760] += dqdT; // dwdot[C6H5CO]/dT
  J[1761] -= dqdT; // dwdot[C6H5CHO]/dT

  // reaction 181: C6H5CHO + H <=> C6H5CO + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[39];
  k_f = 4100 * exp(1.16 * logT - (1207.71999793133) * invT);
  dlnkfdT = 1.16 * invT + (1207.71999793133) * invT2;
  // reverse
  phi_r = sc[6] * sc[38];
  Kc = exp(-g_RT[6] + g_RT[19] - g_RT[38] + g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[39]) + (h_RT[6] + h_RT[38]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] += q;  // H2
  wdot[19] -= q; // H
  wdot[38] += q; // C6H5CO
  wdot[39] -= q; // C6H5CHO
  // d()/d[H2]
  dqdci = -k_r * sc[38];
  J[258] += dqdci; // dwdot[H2]/d[H2]
  J[271] -= dqdci; // dwdot[H]/d[H2]
  J[290] += dqdci; // dwdot[C6H5CO]/d[H2]
  J[291] -= dqdci; // dwdot[C6H5CHO]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[39];
  J[804] += dqdci; // dwdot[H2]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[836] += dqdci; // dwdot[C6H5CO]/d[H]
  J[837] -= dqdci; // dwdot[C6H5CHO]/d[H]
  // d()/d[C6H5CO]
  dqdci = -k_r * sc[6];
  J[1602] += dqdci; // dwdot[H2]/d[C6H5CO]
  J[1615] -= dqdci; // dwdot[H]/d[C6H5CO]
  J[1634] += dqdci; // dwdot[C6H5CO]/d[C6H5CO]
  J[1635] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CO]
  // d()/d[C6H5CHO]
  dqdci = +k_f * sc[19];
  J[1644] += dqdci; // dwdot[H2]/d[C6H5CHO]
  J[1657] -= dqdci; // dwdot[H]/d[C6H5CHO]
  J[1676] += dqdci; // dwdot[C6H5CO]/d[C6H5CHO]
  J[1677] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CHO]
  // d()/dT
  J[1728] += dqdT; // dwdot[H2]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1760] += dqdT; // dwdot[C6H5CO]/dT
  J[1761] -= dqdT; // dwdot[C6H5CHO]/dT

  // reaction 182: C6H5CHO + H <=> C6H6 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[39];
  k_f = 1.93 * exp(2.17 * logT - (2094.89097974505) * invT);
  dlnkfdT = 2.17 * invT + (2094.89097974505) * invT2;
  // reverse
  phi_r = sc[9] * sc[22];
  Kc = exp(-g_RT[9] + g_RT[19] - g_RT[22] + g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[19] + h_RT[39]) + (h_RT[9] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[9] += q;  // C6H6
  wdot[19] -= q; // H
  wdot[22] += q; // HCO
  wdot[39] -= q; // C6H5CHO
  // d()/d[C6H6]
  dqdci = -k_r * sc[22];
  J[387] += dqdci; // dwdot[C6H6]/d[C6H6]
  J[397] -= dqdci; // dwdot[H]/d[C6H6]
  J[400] += dqdci; // dwdot[HCO]/d[C6H6]
  J[417] -= dqdci; // dwdot[C6H5CHO]/d[C6H6]
  // d()/d[H]
  dqdci = +k_f * sc[39];
  J[807] += dqdci; // dwdot[C6H6]/d[H]
  J[817] -= dqdci; // dwdot[H]/d[H]
  J[820] += dqdci; // dwdot[HCO]/d[H]
  J[837] -= dqdci; // dwdot[C6H5CHO]/d[H]
  // d()/d[HCO]
  dqdci = -k_r * sc[9];
  J[933] += dqdci; // dwdot[C6H6]/d[HCO]
  J[943] -= dqdci; // dwdot[H]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[963] -= dqdci; // dwdot[C6H5CHO]/d[HCO]
  // d()/d[C6H5CHO]
  dqdci = +k_f * sc[19];
  J[1647] += dqdci; // dwdot[C6H6]/d[C6H5CHO]
  J[1657] -= dqdci; // dwdot[H]/d[C6H5CHO]
  J[1660] += dqdci; // dwdot[HCO]/d[C6H5CHO]
  J[1677] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CHO]
  // d()/dT
  J[1731] += dqdT; // dwdot[C6H6]/dT
  J[1741] -= dqdT; // dwdot[H]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1761] -= dqdT; // dwdot[C6H5CHO]/dT

  // reaction 183: C6H5CHO + O <=> C6H5CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[39];
  k_f = 5800000 * exp(-(905.789998448495) * invT);
  dlnkfdT = (905.789998448495) * invT2;
  // reverse
  phi_r = sc[15] * sc[38];
  Kc = exp(g_RT[14] - g_RT[15] - g_RT[38] + g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[39]) + (h_RT[15] + h_RT[38]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[15] += q; // OH
  wdot[38] += q; // C6H5CO
  wdot[39] -= q; // C6H5CHO
  // d()/d[O]
  dqdci = +k_f * sc[39];
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[603] += dqdci; // dwdot[OH]/d[O]
  J[626] += dqdci; // dwdot[C6H5CO]/d[O]
  J[627] -= dqdci; // dwdot[C6H5CHO]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[38];
  J[644] -= dqdci; // dwdot[O]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[668] += dqdci; // dwdot[C6H5CO]/d[OH]
  J[669] -= dqdci; // dwdot[C6H5CHO]/d[OH]
  // d()/d[C6H5CO]
  dqdci = -k_r * sc[15];
  J[1610] -= dqdci; // dwdot[O]/d[C6H5CO]
  J[1611] += dqdci; // dwdot[OH]/d[C6H5CO]
  J[1634] += dqdci; // dwdot[C6H5CO]/d[C6H5CO]
  J[1635] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CO]
  // d()/d[C6H5CHO]
  dqdci = +k_f * sc[14];
  J[1652] -= dqdci; // dwdot[O]/d[C6H5CHO]
  J[1653] += dqdci; // dwdot[OH]/d[C6H5CHO]
  J[1676] += dqdci; // dwdot[C6H5CO]/d[C6H5CHO]
  J[1677] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CHO]
  // d()/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1760] += dqdT; // dwdot[C6H5CO]/dT
  J[1761] -= dqdT; // dwdot[C6H5CHO]/dT

  // reaction 184: C6H5CHO + CH3 <=> C6H5CO + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[39];
  k_f = 2e-12 * exp(5.6 * logT - (1237.91299787961) * invT);
  dlnkfdT = 5.6 * invT + (1237.91299787961) * invT2;
  // reverse
  phi_r = sc[2] * sc[38];
  Kc = exp(-g_RT[2] + g_RT[12] - g_RT[38] + g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12] + h_RT[39]) + (h_RT[2] + h_RT[38]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // CH4
  wdot[12] -= q; // CH3
  wdot[38] += q; // C6H5CO
  wdot[39] -= q; // C6H5CHO
  // d()/d[CH4]
  dqdci = -k_r * sc[38];
  J[86] += dqdci;  // dwdot[CH4]/d[CH4]
  J[96] -= dqdci;  // dwdot[CH3]/d[CH4]
  J[122] += dqdci; // dwdot[C6H5CO]/d[CH4]
  J[123] -= dqdci; // dwdot[C6H5CHO]/d[CH4]
  // d()/d[CH3]
  dqdci = +k_f * sc[39];
  J[506] += dqdci; // dwdot[CH4]/d[CH3]
  J[516] -= dqdci; // dwdot[CH3]/d[CH3]
  J[542] += dqdci; // dwdot[C6H5CO]/d[CH3]
  J[543] -= dqdci; // dwdot[C6H5CHO]/d[CH3]
  // d()/d[C6H5CO]
  dqdci = -k_r * sc[2];
  J[1598] += dqdci; // dwdot[CH4]/d[C6H5CO]
  J[1608] -= dqdci; // dwdot[CH3]/d[C6H5CO]
  J[1634] += dqdci; // dwdot[C6H5CO]/d[C6H5CO]
  J[1635] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CO]
  // d()/d[C6H5CHO]
  dqdci = +k_f * sc[12];
  J[1640] += dqdci; // dwdot[CH4]/d[C6H5CHO]
  J[1650] -= dqdci; // dwdot[CH3]/d[C6H5CHO]
  J[1676] += dqdci; // dwdot[C6H5CO]/d[C6H5CHO]
  J[1677] -= dqdci; // dwdot[C6H5CHO]/d[C6H5CHO]
  // d()/dT
  J[1724] += dqdT; // dwdot[CH4]/dT
  J[1734] -= dqdT; // dwdot[CH3]/dT
  J[1760] += dqdT; // dwdot[C6H5CO]/dT
  J[1761] -= dqdT; // dwdot[C6H5CHO]/dT

  // reaction 185: C6H5CO + H2O2 <=> C6H5CHO + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[18] * sc[38];
  k_f = 180000 * exp(-(4139.46029290962) * invT);
  dlnkfdT = (4139.46029290962) * invT2;
  // reverse
  phi_r = sc[16] * sc[39];
  Kc = exp(-g_RT[16] + g_RT[18] + g_RT[38] - g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[18] + h_RT[38]) + (h_RT[16] + h_RT[39]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[16] += q; // HO2
  wdot[18] -= q; // H2O2
  wdot[38] -= q; // C6H5CO
  wdot[39] += q; // C6H5CHO
  // d()/d[HO2]
  dqdci = -k_r * sc[39];
  J[688] += dqdci; // dwdot[HO2]/d[HO2]
  J[690] -= dqdci; // dwdot[H2O2]/d[HO2]
  J[710] -= dqdci; // dwdot[C6H5CO]/d[HO2]
  J[711] += dqdci; // dwdot[C6H5CHO]/d[HO2]
  // d()/d[H2O2]
  dqdci = +k_f * sc[38];
  J[772] += dqdci; // dwdot[HO2]/d[H2O2]
  J[774] -= dqdci; // dwdot[H2O2]/d[H2O2]
  J[794] -= dqdci; // dwdot[C6H5CO]/d[H2O2]
  J[795] += dqdci; // dwdot[C6H5CHO]/d[H2O2]
  // d()/d[C6H5CO]
  dqdci = +k_f * sc[18];
  J[1612] += dqdci; // dwdot[HO2]/d[C6H5CO]
  J[1614] -= dqdci; // dwdot[H2O2]/d[C6H5CO]
  J[1634] -= dqdci; // dwdot[C6H5CO]/d[C6H5CO]
  J[1635] += dqdci; // dwdot[C6H5CHO]/d[C6H5CO]
  // d()/d[C6H5CHO]
  dqdci = -k_r * sc[16];
  J[1654] += dqdci; // dwdot[HO2]/d[C6H5CHO]
  J[1656] -= dqdci; // dwdot[H2O2]/d[C6H5CHO]
  J[1676] -= dqdci; // dwdot[C6H5CO]/d[C6H5CHO]
  J[1677] += dqdci; // dwdot[C6H5CHO]/d[C6H5CHO]
  // d()/dT
  J[1738] += dqdT; // dwdot[HO2]/dT
  J[1740] -= dqdT; // dwdot[H2O2]/dT
  J[1760] -= dqdT; // dwdot[C6H5CO]/dT
  J[1761] += dqdT; // dwdot[C6H5CHO]/dT

  // reaction 186: C6H5CO <=> C6H5 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[38];
  k_f = 527000000000000 * exp(-(14599.8251249923) * invT);
  dlnkfdT = (14599.8251249923) * invT2;
  // reverse
  phi_r = sc[8] * sc[35];
  Kc = refC * exp(-g_RT[8] - g_RT[35] + g_RT[38]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[38]) + (h_RT[8] + h_RT[35]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[35] += q; // C6H5
  wdot[38] -= q; // C6H5CO
  // d()/d[CO]
  dqdci = -k_r * sc[35];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[371] += dqdci; // dwdot[C6H5]/d[CO]
  J[374] -= dqdci; // dwdot[C6H5CO]/d[CO]
  // d()/d[C6H5]
  dqdci = -k_r * sc[8];
  J[1478] += dqdci; // dwdot[CO]/d[C6H5]
  J[1505] += dqdci; // dwdot[C6H5]/d[C6H5]
  J[1508] -= dqdci; // dwdot[C6H5CO]/d[C6H5]
  // d()/d[C6H5CO]
  dqdci = +k_f;
  J[1604] += dqdci; // dwdot[CO]/d[C6H5CO]
  J[1631] += dqdci; // dwdot[C6H5]/d[C6H5CO]
  J[1634] -= dqdci; // dwdot[C6H5CO]/d[C6H5CO]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1757] += dqdT; // dwdot[C6H5]/dT
  J[1760] -= dqdT; // dwdot[C6H5CO]/dT

  // reaction 188: C6H6 + OH <=> C6H5 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[15];
  k_f = 0.3985 * exp(2.286 * logT - (532.403232421393) * invT);
  dlnkfdT = 2.286 * invT + (532.403232421393) * invT2;
  // reverse
  phi_r = sc[17] * sc[35];
  Kc = exp(g_RT[9] + g_RT[15] - g_RT[17] - g_RT[35]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[9] + h_RT[15]) + (h_RT[17] + h_RT[35]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[9] -= q;  // C6H6
  wdot[15] -= q; // OH
  wdot[17] += q; // H2O
  wdot[35] += q; // C6H5
  // d()/d[C6H6]
  dqdci = +k_f * sc[15];
  J[387] -= dqdci; // dwdot[C6H6]/d[C6H6]
  J[393] -= dqdci; // dwdot[OH]/d[C6H6]
  J[395] += dqdci; // dwdot[H2O]/d[C6H6]
  J[413] += dqdci; // dwdot[C6H5]/d[C6H6]
  // d()/d[OH]
  dqdci = +k_f * sc[9];
  J[639] -= dqdci; // dwdot[C6H6]/d[OH]
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[647] += dqdci; // dwdot[H2O]/d[OH]
  J[665] += dqdci; // dwdot[C6H5]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[35];
  J[723] -= dqdci; // dwdot[C6H6]/d[H2O]
  J[729] -= dqdci; // dwdot[OH]/d[H2O]
  J[731] += dqdci; // dwdot[H2O]/d[H2O]
  J[749] += dqdci; // dwdot[C6H5]/d[H2O]
  // d()/d[C6H5]
  dqdci = -k_r * sc[17];
  J[1479] -= dqdci; // dwdot[C6H6]/d[C6H5]
  J[1485] -= dqdci; // dwdot[OH]/d[C6H5]
  J[1487] += dqdci; // dwdot[H2O]/d[C6H5]
  J[1505] += dqdci; // dwdot[C6H5]/d[C6H5]
  // d()/dT
  J[1731] -= dqdT; // dwdot[C6H6]/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1739] += dqdT; // dwdot[H2O]/dT
  J[1757] += dqdT; // dwdot[C6H5]/dT

  // reaction 189: C6H6 + O <=> C6H5O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[14];
  k_f = 13900000 * exp(-(2470.79382910117) * invT);
  dlnkfdT = (2470.79382910117) * invT2;
  // reverse
  phi_r = sc[19] * sc[37];
  Kc = exp(g_RT[9] + g_RT[14] - g_RT[19] - g_RT[37]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[9] + h_RT[14]) + (h_RT[19] + h_RT[37]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[9] -= q;  // C6H6
  wdot[14] -= q; // O
  wdot[19] += q; // H
  wdot[37] += q; // C6H5O
  // d()/d[C6H6]
  dqdci = +k_f * sc[14];
  J[387] -= dqdci; // dwdot[C6H6]/d[C6H6]
  J[392] -= dqdci; // dwdot[O]/d[C6H6]
  J[397] += dqdci; // dwdot[H]/d[C6H6]
  J[415] += dqdci; // dwdot[C6H5O]/d[C6H6]
  // d()/d[O]
  dqdci = +k_f * sc[9];
  J[597] -= dqdci; // dwdot[C6H6]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[607] += dqdci; // dwdot[H]/d[O]
  J[625] += dqdci; // dwdot[C6H5O]/d[O]
  // d()/d[H]
  dqdci = -k_r * sc[37];
  J[807] -= dqdci; // dwdot[C6H6]/d[H]
  J[812] -= dqdci; // dwdot[O]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[835] += dqdci; // dwdot[C6H5O]/d[H]
  // d()/d[C6H5O]
  dqdci = -k_r * sc[19];
  J[1563] -= dqdci; // dwdot[C6H6]/d[C6H5O]
  J[1568] -= dqdci; // dwdot[O]/d[C6H5O]
  J[1573] += dqdci; // dwdot[H]/d[C6H5O]
  J[1591] += dqdci; // dwdot[C6H5O]/d[C6H5O]
  // d()/dT
  J[1731] -= dqdT; // dwdot[C6H6]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1759] += dqdT; // dwdot[C6H5O]/dT

  // reaction 190: C6H6 + O <=> C5H5 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[14];
  k_f = 13900000 * exp(-(2279.57149609538) * invT);
  dlnkfdT = (2279.57149609538) * invT2;
  // reverse
  phi_r = sc[22] * sc[34];
  Kc = exp(g_RT[9] + g_RT[14] - g_RT[22] - g_RT[34]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[9] + h_RT[14]) + (h_RT[22] + h_RT[34]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[9] -= q;  // C6H6
  wdot[14] -= q; // O
  wdot[22] += q; // HCO
  wdot[34] += q; // C5H5
  // d()/d[C6H6]
  dqdci = +k_f * sc[14];
  J[387] -= dqdci; // dwdot[C6H6]/d[C6H6]
  J[392] -= dqdci; // dwdot[O]/d[C6H6]
  J[400] += dqdci; // dwdot[HCO]/d[C6H6]
  J[412] += dqdci; // dwdot[C5H5]/d[C6H6]
  // d()/d[O]
  dqdci = +k_f * sc[9];
  J[597] -= dqdci; // dwdot[C6H6]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[610] += dqdci; // dwdot[HCO]/d[O]
  J[622] += dqdci; // dwdot[C5H5]/d[O]
  // d()/d[HCO]
  dqdci = -k_r * sc[34];
  J[933] -= dqdci; // dwdot[C6H6]/d[HCO]
  J[938] -= dqdci; // dwdot[O]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[958] += dqdci; // dwdot[C5H5]/d[HCO]
  // d()/d[C5H5]
  dqdci = -k_r * sc[22];
  J[1437] -= dqdci; // dwdot[C6H6]/d[C5H5]
  J[1442] -= dqdci; // dwdot[O]/d[C5H5]
  J[1450] += dqdci; // dwdot[HCO]/d[C5H5]
  J[1462] += dqdci; // dwdot[C5H5]/d[C5H5]
  // d()/dT
  J[1731] -= dqdT; // dwdot[C6H6]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1756] += dqdT; // dwdot[C5H5]/dT

  // reaction 191: C6H5 + H2 <=> C6H6 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[35];
  k_f = 0.05707 * exp(2.43 * logT - (3156.67814459301) * invT);
  dlnkfdT = 2.43 * invT + (3156.67814459301) * invT2;
  // reverse
  phi_r = sc[9] * sc[19];
  Kc = exp(g_RT[6] - g_RT[9] - g_RT[19] + g_RT[35]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[35]) + (h_RT[9] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] -= q;  // H2
  wdot[9] += q;  // C6H6
  wdot[19] += q; // H
  wdot[35] -= q; // C6H5
  // d()/d[H2]
  dqdci = +k_f * sc[35];
  J[258] -= dqdci; // dwdot[H2]/d[H2]
  J[261] += dqdci; // dwdot[C6H6]/d[H2]
  J[271] += dqdci; // dwdot[H]/d[H2]
  J[287] -= dqdci; // dwdot[C6H5]/d[H2]
  // d()/d[C6H6]
  dqdci = -k_r * sc[19];
  J[384] -= dqdci; // dwdot[H2]/d[C6H6]
  J[387] += dqdci; // dwdot[C6H6]/d[C6H6]
  J[397] += dqdci; // dwdot[H]/d[C6H6]
  J[413] -= dqdci; // dwdot[C6H5]/d[C6H6]
  // d()/d[H]
  dqdci = -k_r * sc[9];
  J[804] -= dqdci; // dwdot[H2]/d[H]
  J[807] += dqdci; // dwdot[C6H6]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[833] -= dqdci; // dwdot[C6H5]/d[H]
  // d()/d[C6H5]
  dqdci = +k_f * sc[6];
  J[1476] -= dqdci; // dwdot[H2]/d[C6H5]
  J[1479] += dqdci; // dwdot[C6H6]/d[C6H5]
  J[1489] += dqdci; // dwdot[H]/d[C6H5]
  J[1505] -= dqdci; // dwdot[C6H5]/d[C6H5]
  // d()/dT
  J[1728] -= dqdT; // dwdot[H2]/dT
  J[1731] += dqdT; // dwdot[C6H6]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1757] -= dqdT; // dwdot[C6H5]/dT

  // reaction 192: C6H5 + O2 <=> C6H5O + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[35];
  k_f = 26000000 * exp(-(3079.68599472488) * invT);
  dlnkfdT = (3079.68599472488) * invT2;
  // reverse
  phi_r = sc[14] * sc[37];
  Kc = exp(g_RT[13] - g_RT[14] + g_RT[35] - g_RT[37]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[35]) + (h_RT[14] + h_RT[37]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // O2
  wdot[14] += q; // O
  wdot[35] -= q; // C6H5
  wdot[37] += q; // C6H5O
  // d()/d[O2]
  dqdci = +k_f * sc[35];
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[560] += dqdci; // dwdot[O]/d[O2]
  J[581] -= dqdci; // dwdot[C6H5]/d[O2]
  J[583] += dqdci; // dwdot[C6H5O]/d[O2]
  // d()/d[O]
  dqdci = -k_r * sc[37];
  J[601] -= dqdci; // dwdot[O2]/d[O]
  J[602] += dqdci; // dwdot[O]/d[O]
  J[623] -= dqdci; // dwdot[C6H5]/d[O]
  J[625] += dqdci; // dwdot[C6H5O]/d[O]
  // d()/d[C6H5]
  dqdci = +k_f * sc[13];
  J[1483] -= dqdci; // dwdot[O2]/d[C6H5]
  J[1484] += dqdci; // dwdot[O]/d[C6H5]
  J[1505] -= dqdci; // dwdot[C6H5]/d[C6H5]
  J[1507] += dqdci; // dwdot[C6H5O]/d[C6H5]
  // d()/d[C6H5O]
  dqdci = -k_r * sc[14];
  J[1567] -= dqdci; // dwdot[O2]/d[C6H5O]
  J[1568] += dqdci; // dwdot[O]/d[C6H5O]
  J[1589] -= dqdci; // dwdot[C6H5]/d[C6H5O]
  J[1591] += dqdci; // dwdot[C6H5O]/d[C6H5O]
  // d()/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1736] += dqdT; // dwdot[O]/dT
  J[1757] -= dqdT; // dwdot[C6H5]/dT
  J[1759] += dqdT; // dwdot[C6H5O]/dT

  // reaction 193: C6H5 + O <=> C5H5 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[35];
  k_f = 100000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[8] * sc[34];
  Kc = exp(-g_RT[8] + g_RT[14] - g_RT[34] + g_RT[35]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[35]) + (h_RT[8] + h_RT[34]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[14] -= q; // O
  wdot[34] += q; // C5H5
  wdot[35] -= q; // C6H5
  // d()/d[CO]
  dqdci = -k_r * sc[34];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[350] -= dqdci; // dwdot[O]/d[CO]
  J[370] += dqdci; // dwdot[C5H5]/d[CO]
  J[371] -= dqdci; // dwdot[C6H5]/d[CO]
  // d()/d[O]
  dqdci = +k_f * sc[35];
  J[596] += dqdci; // dwdot[CO]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[622] += dqdci; // dwdot[C5H5]/d[O]
  J[623] -= dqdci; // dwdot[C6H5]/d[O]
  // d()/d[C5H5]
  dqdci = -k_r * sc[8];
  J[1436] += dqdci; // dwdot[CO]/d[C5H5]
  J[1442] -= dqdci; // dwdot[O]/d[C5H5]
  J[1462] += dqdci; // dwdot[C5H5]/d[C5H5]
  J[1463] -= dqdci; // dwdot[C6H5]/d[C5H5]
  // d()/d[C6H5]
  dqdci = +k_f * sc[14];
  J[1478] += dqdci; // dwdot[CO]/d[C6H5]
  J[1484] -= dqdci; // dwdot[O]/d[C6H5]
  J[1504] += dqdci; // dwdot[C5H5]/d[C6H5]
  J[1505] -= dqdci; // dwdot[C6H5]/d[C6H5]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1756] += dqdT; // dwdot[C5H5]/dT
  J[1757] -= dqdT; // dwdot[C6H5]/dT

  // reaction 194: C6H5 + OH <=> C6H5O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[35];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[19] * sc[37];
  Kc = exp(g_RT[15] - g_RT[19] + g_RT[35] - g_RT[37]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[15] + h_RT[35]) + (h_RT[19] + h_RT[37]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[15] -= q; // OH
  wdot[19] += q; // H
  wdot[35] -= q; // C6H5
  wdot[37] += q; // C6H5O
  // d()/d[OH]
  dqdci = +k_f * sc[35];
  J[645] -= dqdci; // dwdot[OH]/d[OH]
  J[649] += dqdci; // dwdot[H]/d[OH]
  J[665] -= dqdci; // dwdot[C6H5]/d[OH]
  J[667] += dqdci; // dwdot[C6H5O]/d[OH]
  // d()/d[H]
  dqdci = -k_r * sc[37];
  J[813] -= dqdci; // dwdot[OH]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[833] -= dqdci; // dwdot[C6H5]/d[H]
  J[835] += dqdci; // dwdot[C6H5O]/d[H]
  // d()/d[C6H5]
  dqdci = +k_f * sc[15];
  J[1485] -= dqdci; // dwdot[OH]/d[C6H5]
  J[1489] += dqdci; // dwdot[H]/d[C6H5]
  J[1505] -= dqdci; // dwdot[C6H5]/d[C6H5]
  J[1507] += dqdci; // dwdot[C6H5O]/d[C6H5]
  // d()/d[C6H5O]
  dqdci = -k_r * sc[19];
  J[1569] -= dqdci; // dwdot[OH]/d[C6H5O]
  J[1573] += dqdci; // dwdot[H]/d[C6H5O]
  J[1589] -= dqdci; // dwdot[C6H5]/d[C6H5O]
  J[1591] += dqdci; // dwdot[C6H5O]/d[C6H5O]
  // d()/dT
  J[1737] -= dqdT; // dwdot[OH]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1757] -= dqdT; // dwdot[C6H5]/dT
  J[1759] += dqdT; // dwdot[C6H5O]/dT

  // reaction 195: C6H5 + HO2 <=> C6H6 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[35];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[9] * sc[13];
  Kc = exp(-g_RT[9] - g_RT[13] + g_RT[16] + g_RT[35]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[16] + h_RT[35]) + (h_RT[9] + h_RT[13]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[9] += q;  // C6H6
  wdot[13] += q; // O2
  wdot[16] -= q; // HO2
  wdot[35] -= q; // C6H5
  // d()/d[C6H6]
  dqdci = -k_r * sc[13];
  J[387] += dqdci; // dwdot[C6H6]/d[C6H6]
  J[391] += dqdci; // dwdot[O2]/d[C6H6]
  J[394] -= dqdci; // dwdot[HO2]/d[C6H6]
  J[413] -= dqdci; // dwdot[C6H5]/d[C6H6]
  // d()/d[O2]
  dqdci = -k_r * sc[9];
  J[555] += dqdci; // dwdot[C6H6]/d[O2]
  J[559] += dqdci; // dwdot[O2]/d[O2]
  J[562] -= dqdci; // dwdot[HO2]/d[O2]
  J[581] -= dqdci; // dwdot[C6H5]/d[O2]
  // d()/d[HO2]
  dqdci = +k_f * sc[35];
  J[681] += dqdci; // dwdot[C6H6]/d[HO2]
  J[685] += dqdci; // dwdot[O2]/d[HO2]
  J[688] -= dqdci; // dwdot[HO2]/d[HO2]
  J[707] -= dqdci; // dwdot[C6H5]/d[HO2]
  // d()/d[C6H5]
  dqdci = +k_f * sc[16];
  J[1479] += dqdci; // dwdot[C6H6]/d[C6H5]
  J[1483] += dqdci; // dwdot[O2]/d[C6H5]
  J[1486] -= dqdci; // dwdot[HO2]/d[C6H5]
  J[1505] -= dqdci; // dwdot[C6H5]/d[C6H5]
  // d()/dT
  J[1731] += dqdT; // dwdot[C6H6]/dT
  J[1735] += dqdT; // dwdot[O2]/dT
  J[1738] -= dqdT; // dwdot[HO2]/dT
  J[1757] -= dqdT; // dwdot[C6H5]/dT

  // reaction 196: C6H5 + CH4 <=> C6H6 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[35];
  k_f = 3.89e-09 * exp(4.57 * logT - (2644.90679546961) * invT);
  dlnkfdT = 4.57 * invT + (2644.90679546961) * invT2;
  // reverse
  phi_r = sc[9] * sc[12];
  Kc = exp(g_RT[2] - g_RT[9] - g_RT[12] + g_RT[35]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[35]) + (h_RT[9] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // CH4
  wdot[9] += q;  // C6H6
  wdot[12] += q; // CH3
  wdot[35] -= q; // C6H5
  // d()/d[CH4]
  dqdci = +k_f * sc[35];
  J[86] -= dqdci;  // dwdot[CH4]/d[CH4]
  J[93] += dqdci;  // dwdot[C6H6]/d[CH4]
  J[96] += dqdci;  // dwdot[CH3]/d[CH4]
  J[119] -= dqdci; // dwdot[C6H5]/d[CH4]
  // d()/d[C6H6]
  dqdci = -k_r * sc[12];
  J[380] -= dqdci; // dwdot[CH4]/d[C6H6]
  J[387] += dqdci; // dwdot[C6H6]/d[C6H6]
  J[390] += dqdci; // dwdot[CH3]/d[C6H6]
  J[413] -= dqdci; // dwdot[C6H5]/d[C6H6]
  // d()/d[CH3]
  dqdci = -k_r * sc[9];
  J[506] -= dqdci; // dwdot[CH4]/d[CH3]
  J[513] += dqdci; // dwdot[C6H6]/d[CH3]
  J[516] += dqdci; // dwdot[CH3]/d[CH3]
  J[539] -= dqdci; // dwdot[C6H5]/d[CH3]
  // d()/d[C6H5]
  dqdci = +k_f * sc[2];
  J[1472] -= dqdci; // dwdot[CH4]/d[C6H5]
  J[1479] += dqdci; // dwdot[C6H6]/d[C6H5]
  J[1482] += dqdci; // dwdot[CH3]/d[C6H5]
  J[1505] -= dqdci; // dwdot[C6H5]/d[C6H5]
  // d()/dT
  J[1724] -= dqdT; // dwdot[CH4]/dT
  J[1731] += dqdT; // dwdot[C6H6]/dT
  J[1734] += dqdT; // dwdot[CH3]/dT
  J[1757] -= dqdT; // dwdot[C6H5]/dT

  // reaction 197: C6H5O <=> C5H5 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[37];
  k_f = 3.76e+54 * exp(-12.06 * logT - (36634.1732705836) * invT);
  dlnkfdT = -12.06 * invT + (36634.1732705836) * invT2;
  // reverse
  phi_r = sc[8] * sc[34];
  Kc = refC * exp(-g_RT[8] - g_RT[34] + g_RT[37]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[37]) + (h_RT[8] + h_RT[34]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[34] += q; // C5H5
  wdot[37] -= q; // C6H5O
  // d()/d[CO]
  dqdci = -k_r * sc[34];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[370] += dqdci; // dwdot[C5H5]/d[CO]
  J[373] -= dqdci; // dwdot[C6H5O]/d[CO]
  // d()/d[C5H5]
  dqdci = -k_r * sc[8];
  J[1436] += dqdci; // dwdot[CO]/d[C5H5]
  J[1462] += dqdci; // dwdot[C5H5]/d[C5H5]
  J[1465] -= dqdci; // dwdot[C6H5O]/d[C5H5]
  // d()/d[C6H5O]
  dqdci = +k_f;
  J[1562] += dqdci; // dwdot[CO]/d[C6H5O]
  J[1588] += dqdci; // dwdot[C5H5]/d[C6H5O]
  J[1591] -= dqdci; // dwdot[C6H5O]/d[C6H5O]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1756] += dqdT; // dwdot[C5H5]/dT
  J[1759] -= dqdT; // dwdot[C6H5O]/dT

  // reaction 198: C5H5 + O <=> C5H4O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[34];
  k_f = 58100000 * exp(-0.02 * logT - (10.0643333160944) * invT);
  dlnkfdT = -0.02 * invT + (10.0643333160944) * invT2;
  // reverse
  phi_r = sc[19] * sc[33];
  Kc = exp(g_RT[14] - g_RT[19] - g_RT[33] + g_RT[34]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[34]) + (h_RT[19] + h_RT[33]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] -= q; // O
  wdot[19] += q; // H
  wdot[33] += q; // C5H4O
  wdot[34] -= q; // C5H5
  // d()/d[O]
  dqdci = +k_f * sc[34];
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[607] += dqdci; // dwdot[H]/d[O]
  J[621] += dqdci; // dwdot[C5H4O]/d[O]
  J[622] -= dqdci; // dwdot[C5H5]/d[O]
  // d()/d[H]
  dqdci = -k_r * sc[33];
  J[812] -= dqdci; // dwdot[O]/d[H]
  J[817] += dqdci; // dwdot[H]/d[H]
  J[831] += dqdci; // dwdot[C5H4O]/d[H]
  J[832] -= dqdci; // dwdot[C5H5]/d[H]
  // d()/d[C5H4O]
  dqdci = -k_r * sc[19];
  J[1400] -= dqdci; // dwdot[O]/d[C5H4O]
  J[1405] += dqdci; // dwdot[H]/d[C5H4O]
  J[1419] += dqdci; // dwdot[C5H4O]/d[C5H4O]
  J[1420] -= dqdci; // dwdot[C5H5]/d[C5H4O]
  // d()/d[C5H5]
  dqdci = +k_f * sc[14];
  J[1442] -= dqdci; // dwdot[O]/d[C5H5]
  J[1447] += dqdci; // dwdot[H]/d[C5H5]
  J[1461] += dqdci; // dwdot[C5H4O]/d[C5H5]
  J[1462] -= dqdci; // dwdot[C5H5]/d[C5H5]
  // d()/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1741] += dqdT; // dwdot[H]/dT
  J[1755] += dqdT; // dwdot[C5H4O]/dT
  J[1756] -= dqdT; // dwdot[C5H5]/dT

  // reaction 199: C5H5 + O2 <=> C5H4O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[34];
  k_f = 1800000 * exp(0.08 * logT - (9057.89998448495) * invT);
  dlnkfdT = 0.08 * invT + (9057.89998448495) * invT2;
  // reverse
  phi_r = sc[15] * sc[33];
  Kc = exp(g_RT[13] - g_RT[15] - g_RT[33] + g_RT[34]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[13] + h_RT[34]) + (h_RT[15] + h_RT[33]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[13] -= q; // O2
  wdot[15] += q; // OH
  wdot[33] += q; // C5H4O
  wdot[34] -= q; // C5H5
  // d()/d[O2]
  dqdci = +k_f * sc[34];
  J[559] -= dqdci; // dwdot[O2]/d[O2]
  J[561] += dqdci; // dwdot[OH]/d[O2]
  J[579] += dqdci; // dwdot[C5H4O]/d[O2]
  J[580] -= dqdci; // dwdot[C5H5]/d[O2]
  // d()/d[OH]
  dqdci = -k_r * sc[33];
  J[643] -= dqdci; // dwdot[O2]/d[OH]
  J[645] += dqdci; // dwdot[OH]/d[OH]
  J[663] += dqdci; // dwdot[C5H4O]/d[OH]
  J[664] -= dqdci; // dwdot[C5H5]/d[OH]
  // d()/d[C5H4O]
  dqdci = -k_r * sc[15];
  J[1399] -= dqdci; // dwdot[O2]/d[C5H4O]
  J[1401] += dqdci; // dwdot[OH]/d[C5H4O]
  J[1419] += dqdci; // dwdot[C5H4O]/d[C5H4O]
  J[1420] -= dqdci; // dwdot[C5H5]/d[C5H4O]
  // d()/d[C5H5]
  dqdci = +k_f * sc[13];
  J[1441] -= dqdci; // dwdot[O2]/d[C5H5]
  J[1443] += dqdci; // dwdot[OH]/d[C5H5]
  J[1461] += dqdci; // dwdot[C5H4O]/d[C5H5]
  J[1462] -= dqdci; // dwdot[C5H5]/d[C5H5]
  // d()/dT
  J[1735] -= dqdT; // dwdot[O2]/dT
  J[1737] += dqdT; // dwdot[OH]/dT
  J[1755] += dqdT; // dwdot[C5H4O]/dT
  J[1756] -= dqdT; // dwdot[C5H5]/dT

  // reaction 200: C5H4O <=> 2 C2H2 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[33];
  k_f = 6.2e+41 * exp(-7.87 * logT - (49667.4849149258) * invT);
  dlnkfdT = -7.87 * invT + (49667.4849149258) * invT2;
  // reverse
  phi_r = sc[8] * (sc[10] * sc[10]);
  Kc = (refC * refC) * exp(-g_RT[8] - 2.000000 * g_RT[10] + g_RT[33]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[33]) + (h_RT[8] + 2.000000 * h_RT[10]) - 2.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;      // CO
  wdot[10] += 2 * q; // C2H2
  wdot[33] -= q;     // C5H4O
  // d()/d[CO]
  dqdci = -k_r * sc[10] * sc[10];
  J[344] += dqdci;     // dwdot[CO]/d[CO]
  J[346] += 2 * dqdci; // dwdot[C2H2]/d[CO]
  J[369] -= dqdci;     // dwdot[C5H4O]/d[CO]
  // d()/d[C2H2]
  dqdci = -k_r * sc[8] * 2.000000 * sc[10];
  J[428] += dqdci;     // dwdot[CO]/d[C2H2]
  J[430] += 2 * dqdci; // dwdot[C2H2]/d[C2H2]
  J[453] -= dqdci;     // dwdot[C5H4O]/d[C2H2]
  // d()/d[C5H4O]
  dqdci = +k_f;
  J[1394] += dqdci;     // dwdot[CO]/d[C5H4O]
  J[1396] += 2 * dqdci; // dwdot[C2H2]/d[C5H4O]
  J[1419] -= dqdci;     // dwdot[C5H4O]/d[C5H4O]
  // d()/dT
  J[1730] += dqdT;     // dwdot[CO]/dT
  J[1732] += 2 * dqdT; // dwdot[C2H2]/dT
  J[1755] -= dqdT;     // dwdot[C5H4O]/dT

  // reaction 201: C5H4O + O <=> C3H3 + CO + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[33];
  k_f = 620 * exp(1.45 * logT - (-431.75989926045) * invT);
  dlnkfdT = 1.45 * invT + (-431.75989926045) * invT2;
  // reverse
  phi_r = sc[8] * sc[22] * sc[31];
  Kc = refC * exp(-g_RT[8] + g_RT[14] - g_RT[22] - g_RT[31] + g_RT[33]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[33]) + (h_RT[8] + h_RT[22] + h_RT[31]) -
                    1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[8] += q;  // CO
  wdot[14] -= q; // O
  wdot[22] += q; // HCO
  wdot[31] += q; // C3H3
  wdot[33] -= q; // C5H4O
  // d()/d[CO]
  dqdci = -k_r * sc[22] * sc[31];
  J[344] += dqdci; // dwdot[CO]/d[CO]
  J[350] -= dqdci; // dwdot[O]/d[CO]
  J[358] += dqdci; // dwdot[HCO]/d[CO]
  J[367] += dqdci; // dwdot[C3H3]/d[CO]
  J[369] -= dqdci; // dwdot[C5H4O]/d[CO]
  // d()/d[O]
  dqdci = +k_f * sc[33];
  J[596] += dqdci; // dwdot[CO]/d[O]
  J[602] -= dqdci; // dwdot[O]/d[O]
  J[610] += dqdci; // dwdot[HCO]/d[O]
  J[619] += dqdci; // dwdot[C3H3]/d[O]
  J[621] -= dqdci; // dwdot[C5H4O]/d[O]
  // d()/d[HCO]
  dqdci = -k_r * sc[8] * sc[31];
  J[932] += dqdci; // dwdot[CO]/d[HCO]
  J[938] -= dqdci; // dwdot[O]/d[HCO]
  J[946] += dqdci; // dwdot[HCO]/d[HCO]
  J[955] += dqdci; // dwdot[C3H3]/d[HCO]
  J[957] -= dqdci; // dwdot[C5H4O]/d[HCO]
  // d()/d[C3H3]
  dqdci = -k_r * sc[8] * sc[22];
  J[1310] += dqdci; // dwdot[CO]/d[C3H3]
  J[1316] -= dqdci; // dwdot[O]/d[C3H3]
  J[1324] += dqdci; // dwdot[HCO]/d[C3H3]
  J[1333] += dqdci; // dwdot[C3H3]/d[C3H3]
  J[1335] -= dqdci; // dwdot[C5H4O]/d[C3H3]
  // d()/d[C5H4O]
  dqdci = +k_f * sc[14];
  J[1394] += dqdci; // dwdot[CO]/d[C5H4O]
  J[1400] -= dqdci; // dwdot[O]/d[C5H4O]
  J[1408] += dqdci; // dwdot[HCO]/d[C5H4O]
  J[1417] += dqdci; // dwdot[C3H3]/d[C5H4O]
  J[1419] -= dqdci; // dwdot[C5H4O]/d[C5H4O]
  // d()/dT
  J[1730] += dqdT; // dwdot[CO]/dT
  J[1736] -= dqdT; // dwdot[O]/dT
  J[1744] += dqdT; // dwdot[HCO]/dT
  J[1753] += dqdT; // dwdot[C3H3]/dT
  J[1755] -= dqdT; // dwdot[C5H4O]/dT

  amrex::Real c_R[41], dcRdT[41], e_RT[41];
  amrex::Real* eh_RT;
  if (consP == 1) {
    cp_R(c_R, T);
    dcvpRdT(dcRdT, T);
    eh_RT = &h_RT[0];
  } else {
    cv_R(c_R, T);
    dcvpRdT(dcRdT, T);
    speciesInternalEnergy(e_RT, T);
    eh_RT = &e_RT[0];
  }

  amrex::Real cmix = 0.0, ehmix = 0.0, dcmixdT = 0.0, dehmixdT = 0.0;
  for (int k = 0; k < 41; ++k) {
    cmix += c_R[k] * sc[k];
    dcmixdT += dcRdT[k] * sc[k];
    ehmix += eh_RT[k] * wdot[k];
    dehmixdT += invT * (c_R[k] - eh_RT[k]) * wdot[k] + eh_RT[k] * J[1722 + k];
  }

  amrex::Real cmixinv = 1.0 / cmix;
  amrex::Real tmp1 = ehmix * cmixinv;
  amrex::Real tmp3 = cmixinv * T;
  amrex::Real tmp2 = tmp1 * tmp3;
  amrex::Real dehmixdc;
  // dTdot/d[X]
  for (int k = 0; k < 41; ++k) {
    dehmixdc = 0.0;
    for (int m = 0; m < 41; ++m) {
      dehmixdc += eh_RT[m] * J[k * 42 + m];
    }
    J[k * 42 + 41] = tmp2 * c_R[k] - tmp3 * dehmixdc;
  }
  // dTdot/dT
  J[1763] = -tmp1 + tmp2 * dcmixdT - tmp3 * dehmixdT;
#else
  amrex::Abort();
#endif
}

// compute the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT(
  amrex::Real* J,
  const amrex::Real* sc,
  const amrex::Real* Tp,
  const int* consP)
{
  amrex::Real c[41];

  for (int k = 0; k < 41; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian(J, c, *Tp, *consP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 41; k++) {
    J[1722 + k] *= 1.e-6;
    J[k * 42 + 41] *= 1.e6;
  }
}

// Transport function declarations

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENIMC(int* LENIMC)
{
  *LENIMC = 166;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENRMC(int* LENRMC)
{
  *LENRMC = 33374;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNO(int* NO)
{
  *NO = 4;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKK(int* KK)
{
  *KK = 41;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLITE(int* NLITE)
{
  *NLITE = 2;
}

// Patm in ergs/cm3
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPATM(amrex::Real* PATM)
{
  *PATM = 0.1013250000000000E+07;
}

// the molecular weights in g/mol
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetWT(amrex::Real* WT)
{
  WT[0] = 1.54297000E+02;
  WT[1] = 2.80540000E+01;
  WT[2] = 1.60430000E+01;
  WT[3] = 4.20810000E+01;
  WT[4] = 5.61080000E+01;
  WT[5] = 5.61080000E+01;
  WT[6] = 2.01600000E+00;
  WT[7] = 3.00700000E+01;
  WT[8] = 2.80100000E+01;
  WT[9] = 7.81140000E+01;
  WT[10] = 2.60380000E+01;
  WT[11] = 9.21410000E+01;
  WT[12] = 1.50350000E+01;
  WT[13] = 3.19980000E+01;
  WT[14] = 1.59990000E+01;
  WT[15] = 1.70070000E+01;
  WT[16] = 3.30060000E+01;
  WT[17] = 1.80150000E+01;
  WT[18] = 3.40140000E+01;
  WT[19] = 1.00800000E+00;
  WT[20] = 1.40270000E+01;
  WT[21] = 1.40270000E+01;
  WT[22] = 2.90180000E+01;
  WT[23] = 3.00260000E+01;
  WT[24] = 3.10340000E+01;
  WT[25] = 4.40090000E+01;
  WT[26] = 2.70460000E+01;
  WT[27] = 2.90620000E+01;
  WT[28] = 4.10290000E+01;
  WT[29] = 4.20370000E+01;
  WT[30] = 4.30450000E+01;
  WT[31] = 3.90570000E+01;
  WT[32] = 4.10730000E+01;
  WT[33] = 8.00860000E+01;
  WT[34] = 6.50950000E+01;
  WT[35] = 7.71060000E+01;
  WT[36] = 9.11330000E+01;
  WT[37] = 9.31050000E+01;
  WT[38] = 1.05116000E+02;
  WT[39] = 1.06124000E+02;
  WT[40] = 2.80140000E+01;
}

// the lennard-jones potential well depth eps/kb in K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetEPS(amrex::Real* EPS)
{
  EPS[0] = 1.77645000E+02;
  EPS[1] = 2.80800000E+02;
  EPS[2] = 1.41400000E+02;
  EPS[3] = 2.66800000E+02;
  EPS[4] = 3.57000000E+02;
  EPS[5] = 3.57000000E+02;
  EPS[6] = 3.80000000E+01;
  EPS[7] = 2.52300000E+02;
  EPS[8] = 9.81000000E+01;
  EPS[9] = 4.64800000E+02;
  EPS[10] = 2.09000000E+02;
  EPS[11] = 4.95300000E+02;
  EPS[12] = 1.44000000E+02;
  EPS[13] = 1.07400000E+02;
  EPS[14] = 8.00000000E+01;
  EPS[15] = 8.00000000E+01;
  EPS[16] = 1.07400000E+02;
  EPS[17] = 5.72400000E+02;
  EPS[18] = 1.07400000E+02;
  EPS[19] = 1.45000000E+02;
  EPS[20] = 1.44000000E+02;
  EPS[21] = 1.44000000E+02;
  EPS[22] = 4.98000000E+02;
  EPS[23] = 4.98000000E+02;
  EPS[24] = 4.17000000E+02;
  EPS[25] = 2.44000000E+02;
  EPS[26] = 2.09000000E+02;
  EPS[27] = 2.52300000E+02;
  EPS[28] = 1.50000000E+02;
  EPS[29] = 4.36000000E+02;
  EPS[30] = 4.36000000E+02;
  EPS[31] = 2.52000000E+02;
  EPS[32] = 2.66800000E+02;
  EPS[33] = 4.64800000E+02;
  EPS[34] = 3.57000000E+02;
  EPS[35] = 4.64800000E+02;
  EPS[36] = 4.95300000E+02;
  EPS[37] = 4.64800000E+02;
  EPS[38] = 5.93000000E+02;
  EPS[39] = 5.93000000E+02;
  EPS[40] = 9.75300000E+01;
}

// the lennard-jones collision diameter in Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetSIG(amrex::Real* SIG)
{
  SIG[0] = 9.60500000E+00;
  SIG[1] = 3.97100000E+00;
  SIG[2] = 3.74600000E+00;
  SIG[3] = 4.98200000E+00;
  SIG[4] = 5.17600000E+00;
  SIG[5] = 5.17600000E+00;
  SIG[6] = 2.92000000E+00;
  SIG[7] = 4.30200000E+00;
  SIG[8] = 3.65000000E+00;
  SIG[9] = 5.29000000E+00;
  SIG[10] = 4.10000000E+00;
  SIG[11] = 5.68000000E+00;
  SIG[12] = 3.80000000E+00;
  SIG[13] = 3.45800000E+00;
  SIG[14] = 2.75000000E+00;
  SIG[15] = 2.75000000E+00;
  SIG[16] = 3.45800000E+00;
  SIG[17] = 2.60500000E+00;
  SIG[18] = 3.45800000E+00;
  SIG[19] = 2.05000000E+00;
  SIG[20] = 3.80000000E+00;
  SIG[21] = 3.80000000E+00;
  SIG[22] = 3.59000000E+00;
  SIG[23] = 3.59000000E+00;
  SIG[24] = 3.69000000E+00;
  SIG[25] = 3.76300000E+00;
  SIG[26] = 4.10000000E+00;
  SIG[27] = 4.30200000E+00;
  SIG[28] = 2.50000000E+00;
  SIG[29] = 3.97000000E+00;
  SIG[30] = 3.97000000E+00;
  SIG[31] = 4.76000000E+00;
  SIG[32] = 4.98200000E+00;
  SIG[33] = 5.29000000E+00;
  SIG[34] = 5.18000000E+00;
  SIG[35] = 5.29000000E+00;
  SIG[36] = 5.68000000E+00;
  SIG[37] = 5.29000000E+00;
  SIG[38] = 5.50000000E+00;
  SIG[39] = 5.47000000E+00;
  SIG[40] = 3.62100000E+00;
}

// the dipole moment in Debye
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetDIP(amrex::Real* DIP)
{
  DIP[0] = 0.00000000E+00;
  DIP[1] = 0.00000000E+00;
  DIP[2] = 0.00000000E+00;
  DIP[3] = 0.00000000E+00;
  DIP[4] = 0.00000000E+00;
  DIP[5] = 0.00000000E+00;
  DIP[6] = 0.00000000E+00;
  DIP[7] = 0.00000000E+00;
  DIP[8] = 0.00000000E+00;
  DIP[9] = 0.00000000E+00;
  DIP[10] = 0.00000000E+00;
  DIP[11] = 4.30000000E-01;
  DIP[12] = 0.00000000E+00;
  DIP[13] = 0.00000000E+00;
  DIP[14] = 0.00000000E+00;
  DIP[15] = 0.00000000E+00;
  DIP[16] = 0.00000000E+00;
  DIP[17] = 1.84400000E+00;
  DIP[18] = 0.00000000E+00;
  DIP[19] = 0.00000000E+00;
  DIP[20] = 0.00000000E+00;
  DIP[21] = 0.00000000E+00;
  DIP[22] = 0.00000000E+00;
  DIP[23] = 0.00000000E+00;
  DIP[24] = 1.70000000E+00;
  DIP[25] = 0.00000000E+00;
  DIP[26] = 0.00000000E+00;
  DIP[27] = 0.00000000E+00;
  DIP[28] = 0.00000000E+00;
  DIP[29] = 0.00000000E+00;
  DIP[30] = 0.00000000E+00;
  DIP[31] = 0.00000000E+00;
  DIP[32] = 0.00000000E+00;
  DIP[33] = 0.00000000E+00;
  DIP[34] = 0.00000000E+00;
  DIP[35] = 0.00000000E+00;
  DIP[36] = 4.30000000E-01;
  DIP[37] = 0.00000000E+00;
  DIP[38] = 2.80000000E+00;
  DIP[39] = 2.80000000E+00;
  DIP[40] = 0.00000000E+00;
}

// the polarizability in cubic Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPOL(amrex::Real* POL)
{
  POL[0] = 0.00000000E+00;
  POL[1] = 0.00000000E+00;
  POL[2] = 2.60000000E+00;
  POL[3] = 0.00000000E+00;
  POL[4] = 0.00000000E+00;
  POL[5] = 0.00000000E+00;
  POL[6] = 7.90000000E-01;
  POL[7] = 0.00000000E+00;
  POL[8] = 1.95000000E+00;
  POL[9] = 1.03200000E+01;
  POL[10] = 0.00000000E+00;
  POL[11] = 1.23000000E+01;
  POL[12] = 0.00000000E+00;
  POL[13] = 1.60000000E+00;
  POL[14] = 0.00000000E+00;
  POL[15] = 0.00000000E+00;
  POL[16] = 0.00000000E+00;
  POL[17] = 0.00000000E+00;
  POL[18] = 0.00000000E+00;
  POL[19] = 0.00000000E+00;
  POL[20] = 0.00000000E+00;
  POL[21] = 0.00000000E+00;
  POL[22] = 0.00000000E+00;
  POL[23] = 0.00000000E+00;
  POL[24] = 0.00000000E+00;
  POL[25] = 2.65000000E+00;
  POL[26] = 0.00000000E+00;
  POL[27] = 0.00000000E+00;
  POL[28] = 0.00000000E+00;
  POL[29] = 0.00000000E+00;
  POL[30] = 0.00000000E+00;
  POL[31] = 0.00000000E+00;
  POL[32] = 0.00000000E+00;
  POL[33] = 1.03200000E+01;
  POL[34] = 0.00000000E+00;
  POL[35] = 1.03200000E+01;
  POL[36] = 1.23000000E+01;
  POL[37] = 1.03200000E+01;
  POL[38] = 0.00000000E+00;
  POL[39] = 0.00000000E+00;
  POL[40] = 1.76000000E+00;
}

// the rotational relaxation collision number at 298 K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetZROT(amrex::Real* ZROT)
{
  ZROT[0] = 1.00000000E+00;
  ZROT[1] = 1.50000000E+00;
  ZROT[2] = 1.30000000E+01;
  ZROT[3] = 1.00000000E+00;
  ZROT[4] = 1.00000000E+00;
  ZROT[5] = 1.00000000E+00;
  ZROT[6] = 2.80000000E+02;
  ZROT[7] = 1.50000000E+00;
  ZROT[8] = 1.80000000E+00;
  ZROT[9] = 0.00000000E+00;
  ZROT[10] = 2.50000000E+00;
  ZROT[11] = 1.00000000E+00;
  ZROT[12] = 0.00000000E+00;
  ZROT[13] = 3.80000000E+00;
  ZROT[14] = 0.00000000E+00;
  ZROT[15] = 0.00000000E+00;
  ZROT[16] = 1.00000000E+00;
  ZROT[17] = 4.00000000E+00;
  ZROT[18] = 3.80000000E+00;
  ZROT[19] = 0.00000000E+00;
  ZROT[20] = 0.00000000E+00;
  ZROT[21] = 0.00000000E+00;
  ZROT[22] = 0.00000000E+00;
  ZROT[23] = 2.00000000E+00;
  ZROT[24] = 2.00000000E+00;
  ZROT[25] = 2.10000000E+00;
  ZROT[26] = 1.00000000E+00;
  ZROT[27] = 1.50000000E+00;
  ZROT[28] = 1.00000000E+00;
  ZROT[29] = 2.00000000E+00;
  ZROT[30] = 2.00000000E+00;
  ZROT[31] = 1.00000000E+00;
  ZROT[32] = 1.00000000E+00;
  ZROT[33] = 0.00000000E+00;
  ZROT[34] = 1.00000000E+00;
  ZROT[35] = 0.00000000E+00;
  ZROT[36] = 1.00000000E+00;
  ZROT[37] = 0.00000000E+00;
  ZROT[38] = 1.00000000E+00;
  ZROT[39] = 1.00000000E+00;
  ZROT[40] = 4.00000000E+00;
}

// 0: monoatomic, 1: linear, 2: nonlinear
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLIN(int* NLIN)
{
  NLIN[0] = 2;
  NLIN[1] = 2;
  NLIN[2] = 2;
  NLIN[3] = 2;
  NLIN[4] = 2;
  NLIN[5] = 2;
  NLIN[6] = 1;
  NLIN[7] = 2;
  NLIN[8] = 1;
  NLIN[9] = 2;
  NLIN[10] = 1;
  NLIN[11] = 2;
  NLIN[12] = 1;
  NLIN[13] = 1;
  NLIN[14] = 0;
  NLIN[15] = 1;
  NLIN[16] = 2;
  NLIN[17] = 2;
  NLIN[18] = 2;
  NLIN[19] = 0;
  NLIN[20] = 1;
  NLIN[21] = 1;
  NLIN[22] = 2;
  NLIN[23] = 2;
  NLIN[24] = 2;
  NLIN[25] = 1;
  NLIN[26] = 2;
  NLIN[27] = 2;
  NLIN[28] = 2;
  NLIN[29] = 2;
  NLIN[30] = 2;
  NLIN[31] = 2;
  NLIN[32] = 2;
  NLIN[33] = 2;
  NLIN[34] = 1;
  NLIN[35] = 2;
  NLIN[36] = 2;
  NLIN[37] = 2;
  NLIN[38] = 2;
  NLIN[39] = 2;
  NLIN[40] = 1;
}

// Poly fits for the viscosities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFETA(amrex::Real* COFETA)
{
  COFETA[0] = -2.38834175E+01;
  COFETA[1] = 4.81370257E+00;
  COFETA[2] = -5.55599800E-01;
  COFETA[3] = 2.47531415E-02;
  COFETA[4] = -2.50495904E+01;
  COFETA[5] = 5.33053102E+00;
  COFETA[6] = -5.88272539E-01;
  COFETA[7] = 2.46770415E-02;
  COFETA[8] = -2.13155625E+01;
  COFETA[9] = 4.16526189E+00;
  COFETA[10] = -4.77299177E-01;
  COFETA[11] = 2.16170171E-02;
  COFETA[12] = -2.54191150E+01;
  COFETA[13] = 5.43249288E+00;
  COFETA[14] = -6.08420255E-01;
  COFETA[15] = 2.58527292E-02;
  COFETA[16] = -2.30660679E+01;
  COFETA[17] = 4.13706471E+00;
  COFETA[18] = -3.89347353E-01;
  COFETA[19] = 1.41307121E-02;
  COFETA[20] = -2.30660679E+01;
  COFETA[21] = 4.13706471E+00;
  COFETA[22] = -3.89347353E-01;
  COFETA[23] = 1.41307121E-02;
  COFETA[24] = -1.36231733E+01;
  COFETA[25] = 9.09836736E-01;
  COFETA[26] = -3.68303150E-02;
  COFETA[27] = 1.70542982E-03;
  COFETA[28] = -2.51446029E+01;
  COFETA[29] = 5.42054473E+00;
  COFETA[30] = -6.12382651E-01;
  COFETA[31] = 2.62624651E-02;
  COFETA[32] = -1.75941120E+01;
  COFETA[33] = 2.84774872E+00;
  COFETA[34] = -3.03436145E-01;
  COFETA[35] = 1.39480568E-02;
  COFETA[36] = -1.76196473E+01;
  COFETA[37] = 1.56457963E+00;
  COFETA[38] = 6.74862473E-03;
  COFETA[39] = -5.69801967E-03;
  COFETA[40] = -2.42838515E+01;
  COFETA[41] = 5.22134055E+00;
  COFETA[42] = -6.01496859E-01;
  COFETA[43] = 2.64421040E-02;
  COFETA[44] = -1.59376082E+01;
  COFETA[45] = 7.56729747E-01;
  COFETA[46] = 1.27453582E-01;
  COFETA[47] = -1.15925358E-02;
  COFETA[48] = -2.15236856E+01;
  COFETA[49] = 4.21938831E+00;
  COFETA[50] = -4.84060747E-01;
  COFETA[51] = 2.18984053E-02;
  COFETA[52] = -1.82659072E+01;
  COFETA[53] = 3.18445771E+00;
  COFETA[54] = -3.48911103E-01;
  COFETA[55] = 1.60003067E-02;
  COFETA[56] = -1.58318472E+01;
  COFETA[57] = 2.26294246E+00;
  COFETA[58] = -2.24415532E-01;
  COFETA[59] = 1.03800256E-02;
  COFETA[60] = -1.58012978E+01;
  COFETA[61] = 2.26294246E+00;
  COFETA[62] = -2.24415532E-01;
  COFETA[63] = 1.03800256E-02;
  COFETA[64] = -1.82503992E+01;
  COFETA[65] = 3.18445771E+00;
  COFETA[66] = -3.48911103E-01;
  COFETA[67] = 1.60003067E-02;
  COFETA[68] = -8.59380143E+00;
  COFETA[69] = -2.26208099E+00;
  COFETA[70] = 5.53651510E-01;
  COFETA[71] = -3.07142017E-02;
  COFETA[72] = -1.82353578E+01;
  COFETA[73] = 3.18445771E+00;
  COFETA[74] = -3.48911103E-01;
  COFETA[75] = 1.60003067E-02;
  COFETA[76] = -2.16840336E+01;
  COFETA[77] = 4.23442872E+00;
  COFETA[78] = -4.85814918E-01;
  COFETA[79] = 2.19654717E-02;
  COFETA[80] = -2.15583840E+01;
  COFETA[81] = 4.21938831E+00;
  COFETA[82] = -4.84060747E-01;
  COFETA[83] = 2.18984053E-02;
  COFETA[84] = -2.15583840E+01;
  COFETA[85] = 4.21938831E+00;
  COFETA[86] = -4.84060747E-01;
  COFETA[87] = 2.18984053E-02;
  COFETA[88] = -1.54591736E+01;
  COFETA[89] = 6.91072430E-01;
  COFETA[90] = 1.37419250E-01;
  COFETA[91] = -1.20853767E-02;
  COFETA[92] = -1.54420999E+01;
  COFETA[93] = 6.91072430E-01;
  COFETA[94] = 1.37419250E-01;
  COFETA[95] = -1.20853767E-02;
  COFETA[96] = -1.63603004E+01;
  COFETA[97] = 1.21168678E+00;
  COFETA[98] = 4.74849713E-02;
  COFETA[99] = -7.20170592E-03;
  COFETA[100] = -2.46168222E+01;
  COFETA[101] = 5.42134272E+00;
  COFETA[102] = -6.15868616E-01;
  COFETA[103] = 2.65612334E-02;
  COFETA[104] = -2.42648604E+01;
  COFETA[105] = 5.22134055E+00;
  COFETA[106] = -6.01496859E-01;
  COFETA[107] = 2.64421040E-02;
  COFETA[108] = -2.51616512E+01;
  COFETA[109] = 5.42054473E+00;
  COFETA[110] = -6.12382651E-01;
  COFETA[111] = 2.62624651E-02;
  COFETA[112] = -2.04050669E+01;
  COFETA[113] = 4.29113980E+00;
  COFETA[114] = -4.91764714E-01;
  COFETA[115] = 2.21587391E-02;
  COFETA[116] = -1.88158943E+01;
  COFETA[117] = 2.25438279E+00;
  COFETA[118] = -9.75489390E-02;
  COFETA[119] = -5.60416501E-04;
  COFETA[120] = -1.88040464E+01;
  COFETA[121] = 2.25438279E+00;
  COFETA[122] = -9.75489390E-02;
  COFETA[123] = -5.60416501E-04;
  COFETA[124] = -2.52083557E+01;
  COFETA[125] = 5.41821635E+00;
  COFETA[126] = -6.12161891E-01;
  COFETA[127] = 2.62563215E-02;
  COFETA[128] = -2.54312377E+01;
  COFETA[129] = 5.43249288E+00;
  COFETA[130] = -6.08420255E-01;
  COFETA[131] = 2.58527292E-02;
  COFETA[132] = -1.76071814E+01;
  COFETA[133] = 1.56457963E+00;
  COFETA[134] = 6.74862473E-03;
  COFETA[135] = -5.69801967E-03;
  COFETA[136] = -2.29933283E+01;
  COFETA[137] = 4.13706471E+00;
  COFETA[138] = -3.89347353E-01;
  COFETA[139] = 1.41307121E-02;
  COFETA[140] = -1.76261414E+01;
  COFETA[141] = 1.56457963E+00;
  COFETA[142] = 6.74862473E-03;
  COFETA[143] = -5.69801967E-03;
  COFETA[144] = -1.59431082E+01;
  COFETA[145] = 7.56729747E-01;
  COFETA[146] = 1.27453582E-01;
  COFETA[147] = -1.15925358E-02;
  COFETA[148] = -1.75318680E+01;
  COFETA[149] = 1.56457963E+00;
  COFETA[150] = 6.74862473E-03;
  COFETA[151] = -5.69801967E-03;
  COFETA[152] = -9.39314277E+00;
  COFETA[153] = -2.10471036E+00;
  COFETA[154] = 5.41022676E-01;
  COFETA[155] = -3.11895724E-02;
  COFETA[156] = -9.36340359E+00;
  COFETA[157] = -2.10998541E+00;
  COFETA[158] = 5.41626294E-01;
  COFETA[159] = -3.12100508E-02;
  COFETA[160] = -1.75356101E+01;
  COFETA[161] = 2.83116587E+00;
  COFETA[162] = -3.01228013E-01;
  COFETA[163] = 1.38497725E-02;
}

// Poly fits for the conductivities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFLAM(amrex::Real* COFLAM)
{
  COFLAM[0] = -1.76340800E+01;
  COFLAM[1] = 7.33555707E+00;
  COFLAM[2] = -6.39096368E-01;
  COFLAM[3] = 1.86179648E-02;
  COFLAM[4] = -1.05896117E+01;
  COFLAM[5] = 4.51847875E+00;
  COFLAM[6] = -2.23745596E-01;
  COFLAM[7] = -1.49604026E-03;
  COFLAM[8] = 2.58085913E+01;
  COFLAM[9] = -1.06542743E+01;
  COFLAM[10] = 1.89308529E+00;
  COFLAM[11] = -9.94577580E-02;
  COFLAM[12] = -1.47820542E+01;
  COFLAM[13] = 6.30852358E+00;
  COFLAM[14] = -4.91519092E-01;
  COFLAM[15] = 1.17827162E-02;
  COFLAM[16] = -5.51425557E+00;
  COFLAM[17] = 1.93682827E+00;
  COFLAM[18] = 1.83581705E-01;
  COFLAM[19] = -2.24298567E-02;
  COFLAM[20] = -1.10028590E+01;
  COFLAM[21] = 4.28206647E+00;
  COFLAM[22] = -1.49678225E-01;
  COFLAM[23] = -6.65450165E-03;
  COFLAM[24] = 3.77711392E-01;
  COFLAM[25] = 3.57577815E+00;
  COFLAM[26] = -4.96594587E-01;
  COFLAM[27] = 2.81676659E-02;
  COFLAM[28] = -4.39314688E+00;
  COFLAM[29] = 1.69340564E+00;
  COFLAM[30] = 2.04137505E-01;
  COFLAM[31] = -2.27569828E-02;
  COFLAM[32] = 1.56886150E+01;
  COFLAM[33] = -4.87808720E+00;
  COFLAM[34] = 8.60585548E-01;
  COFLAM[35] = -4.31982439E-02;
  COFLAM[36] = -3.65585851E+01;
  COFLAM[37] = 1.50330158E+01;
  COFLAM[38] = -1.66918619E+00;
  COFLAM[39] = 6.48469288E-02;
  COFLAM[40] = -1.34060931E+01;
  COFLAM[41] = 7.17743624E+00;
  COFLAM[42] = -8.00514597E-01;
  COFLAM[43] = 3.40071511E-02;
  COFLAM[44] = -3.09285421E+01;
  COFLAM[45] = 1.25461528E+01;
  COFLAM[46] = -1.30878374E+00;
  COFLAM[47] = 4.76259788E-02;
  COFLAM[48] = 1.51416542E+01;
  COFLAM[49] = -5.15364471E+00;
  COFLAM[50] = 9.83167728E-01;
  COFLAM[51] = -5.14192646E-02;
  COFLAM[52] = 4.20267050E+00;
  COFLAM[53] = 9.25396993E-02;
  COFLAM[54] = 1.52120322E-01;
  COFLAM[55] = -9.70208617E-03;
  COFLAM[56] = 9.53475395E-01;
  COFLAM[57] = 2.26294246E+00;
  COFLAM[58] = -2.24415532E-01;
  COFLAM[59] = 1.03800256E-02;
  COFLAM[60] = 8.22924269E+00;
  COFLAM[61] = -5.33837512E-01;
  COFLAM[62] = 1.23127102E-01;
  COFLAM[63] = -2.66841247E-03;
  COFLAM[64] = -1.89201961E+00;
  COFLAM[65] = 2.67311765E+00;
  COFLAM[66] = -2.11440254E-01;
  COFLAM[67] = 8.11513415E-03;
  COFLAM[68] = 1.96428874E+01;
  COFLAM[69] = -7.25817809E+00;
  COFLAM[70] = 1.26905230E+00;
  COFLAM[71] = -6.27937555E-02;
  COFLAM[72] = 2.04525400E-01;
  COFLAM[73] = 1.62151412E+00;
  COFLAM[74] = -2.66644056E-02;
  COFLAM[75] = -2.13749109E-03;
  COFLAM[76] = -2.13415286E+00;
  COFLAM[77] = 4.23442872E+00;
  COFLAM[78] = -4.85814918E-01;
  COFLAM[79] = 2.19654717E-02;
  COFLAM[80] = 9.42209901E+00;
  COFLAM[81] = -2.13317685E+00;
  COFLAM[82] = 4.71561866E-01;
  COFLAM[83] = -2.40438874E-02;
  COFLAM[84] = 2.17458920E+01;
  COFLAM[85] = -7.77322772E+00;
  COFLAM[86] = 1.32142292E+00;
  COFLAM[87] = -6.62941725E-02;
  COFLAM[88] = 1.92251225E+01;
  COFLAM[89] = -8.11044417E+00;
  COFLAM[90] = 1.52563425E+00;
  COFLAM[91] = -8.26116452E-02;
  COFLAM[92] = 2.11243602E+01;
  COFLAM[93] = -9.56334830E+00;
  COFLAM[94] = 1.82373694E+00;
  COFLAM[95] = -1.00229190E-01;
  COFLAM[96] = -4.43690356E+00;
  COFLAM[97] = 1.75120887E+00;
  COFLAM[98] = 1.78928760E-01;
  COFLAM[99] = -2.09601289E-02;
  COFLAM[100] = -9.06359083E+00;
  COFLAM[101] = 4.83326903E+00;
  COFLAM[102] = -4.10199501E-01;
  COFLAM[103] = 1.24126436E-02;
  COFLAM[104] = -8.06194396E+00;
  COFLAM[105] = 4.07163192E+00;
  COFLAM[106] = -2.45965643E-01;
  COFLAM[107] = 2.97488048E-03;
  COFLAM[108] = -3.65420184E+00;
  COFLAM[109] = 1.60586196E+00;
  COFLAM[110] = 1.82455027E-01;
  COFLAM[111] = -2.03577964E-02;
  COFLAM[112] = -8.28395880E+00;
  COFLAM[113] = 5.44901425E+00;
  COFLAM[114] = -5.56903583E-01;
  COFLAM[115] = 2.19536212E-02;
  COFLAM[116] = -4.93801913E+00;
  COFLAM[117] = 2.42765624E+00;
  COFLAM[118] = 1.16524156E-02;
  COFLAM[119] = -1.01830215E-02;
  COFLAM[120] = 4.30106657E-01;
  COFLAM[121] = -1.63353214E-01;
  COFLAM[122] = 4.22255691E-01;
  COFLAM[123] = -3.12391022E-02;
  COFLAM[124] = -1.25860432E+01;
  COFLAM[125] = 6.37981374E+00;
  COFLAM[126] = -6.35012868E-01;
  COFLAM[127] = 2.38500368E-02;
  COFLAM[128] = -2.38695171E+01;
  COFLAM[129] = 1.05105698E+01;
  COFLAM[130] = -1.13072790E+00;
  COFLAM[131] = 4.36539121E-02;
  COFLAM[132] = -2.40922270E+01;
  COFLAM[133] = 9.92597512E+00;
  COFLAM[134] = -9.81440858E-01;
  COFLAM[135] = 3.39064107E-02;
  COFLAM[136] = -8.64135104E+00;
  COFLAM[137] = 3.62701787E+00;
  COFLAM[138] = -1.12872484E-01;
  COFLAM[139] = -6.03171150E-03;
  COFLAM[140] = -3.34080606E+01;
  COFLAM[141] = 1.36969809E+01;
  COFLAM[142] = -1.48313316E+00;
  COFLAM[143] = 5.61328715E-02;
  COFLAM[144] = -2.75393670E+01;
  COFLAM[145] = 1.13102964E+01;
  COFLAM[146] = -1.16032958E+00;
  COFLAM[147] = 4.16609692E-02;
  COFLAM[148] = -3.36316309E+01;
  COFLAM[149] = 1.41867239E+01;
  COFLAM[150] = -1.60184772E+00;
  COFLAM[151] = 6.37331096E-02;
  COFLAM[152] = -2.51773024E+01;
  COFLAM[153] = 1.03193854E+01;
  COFLAM[154] = -1.02806485E+00;
  COFLAM[155] = 3.57363590E-02;
  COFLAM[156] = -2.38628307E+01;
  COFLAM[157] = 9.60886586E+00;
  COFLAM[158] = -9.06059084E-01;
  COFLAM[159] = 2.91664402E-02;
  COFLAM[160] = 1.49161845E+01;
  COFLAM[161] = -4.41954662E+00;
  COFLAM[162] = 7.78306011E-01;
  COFLAM[163] = -3.85051200E-02;
}

// Poly fits for the diffusion coefficients, dim NO*KK*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFD(amrex::Real* COFD)
{
  COFD[0] = -2.26360123E+01;
  COFD[1] = 5.10718625E+00;
  COFD[2] = -4.53773770E-01;
  COFD[3] = 1.99645914E-02;
  COFD[4] = -2.29096065E+01;
  COFD[5] = 5.63427088E+00;
  COFD[6] = -5.14445238E-01;
  COFD[7] = 2.22821627E-02;
  COFD[8] = -2.02705625E+01;
  COFD[9] = 4.82340435E+00;
  COFD[10] = -4.19541538E-01;
  COFD[11] = 1.85864430E-02;
  COFD[12] = -2.30816284E+01;
  COFD[13] = 5.59360310E+00;
  COFD[14] = -5.10572093E-01;
  COFD[15] = 2.21739087E-02;
  COFD[16] = -2.36297004E+01;
  COFD[17] = 5.66015033E+00;
  COFD[18] = -5.08351812E-01;
  COFD[19] = 2.16104873E-02;
  COFD[20] = -2.36297004E+01;
  COFD[21] = 5.66015033E+00;
  COFD[22] = -5.08351812E-01;
  COFD[23] = 2.16104873E-02;
  COFD[24] = -1.47227642E+01;
  COFD[25] = 3.15497411E+00;
  COFD[26] = -2.03824810E-01;
  COFD[27] = 9.24118691E-03;
  COFD[28] = -2.26136123E+01;
  COFD[29] = 5.51014294E+00;
  COFD[30] = -5.00490863E-01;
  COFD[31] = 2.17654712E-02;
  COFD[32] = -1.93751244E+01;
  COFD[33] = 4.42649312E+00;
  COFD[34] = -3.71750611E-01;
  COFD[35] = 1.66724904E-02;
  COFD[36] = -2.38342076E+01;
  COFD[37] = 5.58077369E+00;
  COFD[38] = -4.85290481E-01;
  COFD[39] = 2.00627377E-02;
  COFD[40] = -2.19957808E+01;
  COFD[41] = 5.34402519E+00;
  COFD[42] = -4.83068822E-01;
  COFD[43] = 2.11832962E-02;
  COFD[44] = -2.37835094E+01;
  COFD[45] = 5.48425494E+00;
  COFD[46] = -4.68327600E-01;
  COFD[47] = 1.91335179E-02;
  COFD[48] = -2.03023823E+01;
  COFD[49] = 4.84155965E+00;
  COFD[50] = -4.21649019E-01;
  COFD[51] = 1.86672992E-02;
  COFD[52] = -1.97428162E+01;
  COFD[53] = 4.55369444E+00;
  COFD[54] = -3.87975150E-01;
  COFD[55] = 1.73657784E-02;
  COFD[56] = -1.80914623E+01;
  COFD[57] = 4.07933301E+00;
  COFD[58] = -3.25884118E-01;
  COFD[59] = 1.46408360E-02;
  COFD[60] = -1.81190609E+01;
  COFD[61] = 4.07933301E+00;
  COFD[62] = -3.25884118E-01;
  COFD[63] = 1.46408360E-02;
  COFD[64] = -1.97556261E+01;
  COFD[65] = 4.55369444E+00;
  COFD[66] = -3.87975150E-01;
  COFD[67] = 1.73657784E-02;
  COFD[68] = -2.23489854E+01;
  COFD[69] = 5.26844723E+00;
  COFD[70] = -4.30558385E-01;
  COFD[71] = 1.70757975E-02;
  COFD[72] = -1.97679839E+01;
  COFD[73] = 4.55369444E+00;
  COFD[74] = -3.87975150E-01;
  COFD[75] = 1.73657784E-02;
  COFD[76] = -1.87373197E+01;
  COFD[77] = 4.84958928E+00;
  COFD[78] = -4.22621869E-01;
  COFD[79] = 1.87067121E-02;
  COFD[80] = -2.02706692E+01;
  COFD[81] = 4.84155965E+00;
  COFD[82] = -4.21649019E-01;
  COFD[83] = 1.86672992E-02;
  COFD[84] = -2.02706692E+01;
  COFD[85] = 4.84155965E+00;
  COFD[86] = -4.21649019E-01;
  COFD[87] = 1.86672992E-02;
  COFD[88] = -2.30439861E+01;
  COFD[89] = 5.47498589E+00;
  COFD[90] = -4.66735757E-01;
  COFD[91] = 1.90475911E-02;
  COFD[92] = -2.30583179E+01;
  COFD[93] = 5.47498589E+00;
  COFD[94] = -4.66735757E-01;
  COFD[95] = 1.90475911E-02;
  COFD[96] = -2.33876210E+01;
  COFD[97] = 5.68444793E+00;
  COFD[98] = -5.05240496E-01;
  COFD[99] = 2.12097583E-02;
  COFD[100] = -2.26064841E+01;
  COFD[101] = 5.48643918E+00;
  COFD[102] = -4.98327363E-01;
  COFD[103] = 2.17107588E-02;
  COFD[104] = -2.20119849E+01;
  COFD[105] = 5.34402519E+00;
  COFD[106] = -4.83068822E-01;
  COFD[107] = 2.11832962E-02;
  COFD[108] = -2.25993052E+01;
  COFD[109] = 5.51014294E+00;
  COFD[110] = -5.00490863E-01;
  COFD[111] = 2.17654712E-02;
  COFD[112] = -2.06533479E+01;
  COFD[113] = 4.88424197E+00;
  COFD[114] = -4.26629983E-01;
  COFD[115] = 1.88596381E-02;
  COFD[116] = -2.34701649E+01;
  COFD[117] = 5.62943629E+00;
  COFD[118] = -4.95272887E-01;
  COFD[119] = 2.06543955E-02;
  COFD[120] = -2.34794523E+01;
  COFD[121] = 5.62943629E+00;
  COFD[122] = -4.95272887E-01;
  COFD[123] = 2.06543955E-02;
  COFD[124] = -2.27819450E+01;
  COFD[125] = 5.50908317E+00;
  COFD[126] = -5.00382955E-01;
  COFD[127] = 2.17620583E-02;
  COFD[128] = -2.30720788E+01;
  COFD[129] = 5.59360310E+00;
  COFD[130] = -5.10572093E-01;
  COFD[131] = 2.21739087E-02;
  COFD[132] = -2.38424489E+01;
  COFD[133] = 5.58077369E+00;
  COFD[134] = -4.85290481E-01;
  COFD[135] = 2.00627377E-02;
  COFD[136] = -2.36836133E+01;
  COFD[137] = 5.66015033E+00;
  COFD[138] = -5.08351812E-01;
  COFD[139] = 2.16104873E-02;
  COFD[140] = -2.38298868E+01;
  COFD[141] = 5.58077369E+00;
  COFD[142] = -4.85290481E-01;
  COFD[143] = 2.00627377E-02;
  COFD[144] = -2.37800587E+01;
  COFD[145] = 5.48425494E+00;
  COFD[146] = -4.68327600E-01;
  COFD[147] = 1.91335179E-02;
  COFD[148] = -2.38907333E+01;
  COFD[149] = 5.58077369E+00;
  COFD[150] = -4.85290481E-01;
  COFD[151] = 2.00627377E-02;
  COFD[152] = -2.33126061E+01;
  COFD[153] = 5.19165128E+00;
  COFD[154] = -4.17805039E-01;
  COFD[155] = 1.64021805E-02;
  COFD[156] = -2.33114627E+01;
  COFD[157] = 5.19165128E+00;
  COFD[158] = -4.17805039E-01;
  COFD[159] = 1.64021805E-02;
  COFD[160] = -1.93515315E+01;
  COFD[161] = 4.41939237E+00;
  COFD[162] = -3.70853119E-01;
  COFD[163] = 1.66344814E-02;
  COFD[164] = -2.29096065E+01;
  COFD[165] = 5.63427088E+00;
  COFD[166] = -5.14445238E-01;
  COFD[167] = 2.22821627E-02;
  COFD[168] = -2.19560899E+01;
  COFD[169] = 5.61561805E+00;
  COFD[170] = -4.92449893E-01;
  COFD[171] = 2.04873677E-02;
  COFD[172] = -2.06997900E+01;
  COFD[173] = 5.42833239E+00;
  COFD[174] = -4.93061354E-01;
  COFD[175] = 2.15793020E-02;
  COFD[176] = -2.23680004E+01;
  COFD[177] = 5.67323480E+00;
  COFD[178] = -5.03108721E-01;
  COFD[179] = 2.10878525E-02;
  COFD[180] = -2.18975230E+01;
  COFD[181] = 5.29777789E+00;
  COFD[182] = -4.35476842E-01;
  COFD[183] = 1.73373342E-02;
  COFD[184] = -2.18975230E+01;
  COFD[185] = 5.29777789E+00;
  COFD[186] = -4.35476842E-01;
  COFD[187] = 1.73373342E-02;
  COFD[188] = -1.50247369E+01;
  COFD[189] = 3.75251314E+00;
  COFD[190] = -2.84160414E-01;
  COFD[191] = 1.28605733E-02;
  COFD[192] = -2.21214411E+01;
  COFD[193] = 5.69019961E+00;
  COFD[194] = -5.07971611E-01;
  COFD[195] = 2.14126561E-02;
  COFD[196] = -1.94104030E+01;
  COFD[197] = 4.91881880E+00;
  COFD[198] = -4.30621727E-01;
  COFD[199] = 1.90115470E-02;
  COFD[200] = -2.10412741E+01;
  COFD[201] = 4.77480735E+00;
  COFD[202] = -3.48088937E-01;
  COFD[203] = 1.27148736E-02;
  COFD[204] = -2.18016669E+01;
  COFD[205] = 5.66495194E+00;
  COFD[206] = -5.12328464E-01;
  COFD[207] = 2.19277949E-02;
  COFD[208] = -2.08083408E+01;
  COFD[209] = 4.60022609E+00;
  COFD[210] = -3.20098606E-01;
  COFD[211] = 1.12745986E-02;
  COFD[212] = -2.07569884E+01;
  COFD[213] = 5.45048622E+00;
  COFD[214] = -4.95678069E-01;
  COFD[215] = 2.16826855E-02;
  COFD[216] = -1.97631858E+01;
  COFD[217] = 5.05439215E+00;
  COFD[218] = -4.47524613E-01;
  COFD[219] = 1.97181397E-02;
  COFD[220] = -1.83100736E+01;
  COFD[221] = 4.67429531E+00;
  COFD[222] = -4.00998687E-01;
  COFD[223] = 1.78140746E-02;
  COFD[224] = -1.83293112E+01;
  COFD[225] = 4.67429531E+00;
  COFD[226] = -4.00998687E-01;
  COFD[227] = 1.78140746E-02;
  COFD[228] = -1.97703707E+01;
  COFD[229] = 5.05439215E+00;
  COFD[230] = -4.47524613E-01;
  COFD[231] = 1.97181397E-02;
  COFD[232] = -1.90232196E+01;
  COFD[233] = 4.24017605E+00;
  COFD[234] = -2.62003557E-01;
  COFD[235] = 8.27816665E-03;
  COFD[236] = -1.97772254E+01;
  COFD[237] = 5.05439215E+00;
  COFD[238] = -4.47524613E-01;
  COFD[239] = 1.97181397E-02;
  COFD[240] = -1.91177523E+01;
  COFD[241] = 5.45933834E+00;
  COFD[242] = -4.96736684E-01;
  COFD[243] = 2.17251306E-02;
  COFD[244] = -2.07341257E+01;
  COFD[245] = 5.45048622E+00;
  COFD[246] = -4.95678069E-01;
  COFD[247] = 2.16826855E-02;
  COFD[248] = -2.07341257E+01;
  COFD[249] = 5.45048622E+00;
  COFD[250] = -4.95678069E-01;
  COFD[251] = 2.16826855E-02;
  COFD[252] = -2.00926090E+01;
  COFD[253] = 4.58807289E+00;
  COFD[254] = -3.18105074E-01;
  COFD[255] = 1.11706107E-02;
  COFD[256] = -2.01009288E+01;
  COFD[257] = 4.58807289E+00;
  COFD[258] = -3.18105074E-01;
  COFD[259] = 1.11706107E-02;
  COFD[260] = -2.09005024E+01;
  COFD[261] = 4.99942155E+00;
  COFD[262] = -3.85184256E-01;
  COFD[263] = 1.46588915E-02;
  COFD[264] = -2.20508891E+01;
  COFD[265] = 5.69592279E+00;
  COFD[266] = -5.10240070E-01;
  COFD[267] = 2.15762020E-02;
  COFD[268] = -2.18114262E+01;
  COFD[269] = 5.66495194E+00;
  COFD[270] = -5.12328464E-01;
  COFD[271] = 2.19277949E-02;
  COFD[272] = -2.21131401E+01;
  COFD[273] = 5.69019961E+00;
  COFD[274] = -5.07971611E-01;
  COFD[275] = 2.14126561E-02;
  COFD[276] = -2.07570447E+01;
  COFD[277] = 5.48005861E+00;
  COFD[278] = -4.98480661E-01;
  COFD[279] = 2.17599701E-02;
  COFD[280] = -2.08599325E+01;
  COFD[281] = 4.90144316E+00;
  COFD[282] = -3.69014218E-01;
  COFD[283] = 1.38104338E-02;
  COFD[284] = -2.08646410E+01;
  COFD[285] = 4.90144316E+00;
  COFD[286] = -3.69014218E-01;
  COFD[287] = 1.38104338E-02;
  COFD[288] = -2.22872895E+01;
  COFD[289] = 5.69035599E+00;
  COFD[290] = -5.08045645E-01;
  COFD[291] = 2.14181606E-02;
  COFD[292] = -2.23631160E+01;
  COFD[293] = 5.67323480E+00;
  COFD[294] = -5.03108721E-01;
  COFD[295] = 2.10878525E-02;
  COFD[296] = -2.10445380E+01;
  COFD[297] = 4.77480735E+00;
  COFD[298] = -3.48088937E-01;
  COFD[299] = 1.27148736E-02;
  COFD[300] = -2.19219536E+01;
  COFD[301] = 5.29777789E+00;
  COFD[302] = -4.35476842E-01;
  COFD[303] = 1.73373342E-02;
  COFD[304] = -2.10395499E+01;
  COFD[305] = 4.77480735E+00;
  COFD[306] = -3.48088937E-01;
  COFD[307] = 1.27148736E-02;
  COFD[308] = -2.08070517E+01;
  COFD[309] = 4.60022609E+00;
  COFD[310] = -3.20098606E-01;
  COFD[311] = 1.12745986E-02;
  COFD[312] = -2.10630129E+01;
  COFD[313] = 4.77480735E+00;
  COFD[314] = -3.48088937E-01;
  COFD[315] = 1.27148736E-02;
  COFD[316] = -1.98299119E+01;
  COFD[317] = 4.10460882E+00;
  COFD[318] = -2.40832572E-01;
  COFD[319] = 7.20652667E-03;
  COFD[320] = -1.98245682E+01;
  COFD[321] = 4.10460882E+00;
  COFD[322] = -2.40832572E-01;
  COFD[323] = 7.20652667E-03;
  COFD[324] = -1.93843092E+01;
  COFD[325] = 4.91244566E+00;
  COFD[326] = -4.29874687E-01;
  COFD[327] = 1.89825217E-02;
  COFD[328] = -2.02705625E+01;
  COFD[329] = 4.82340435E+00;
  COFD[330] = -4.19541538E-01;
  COFD[331] = 1.85864430E-02;
  COFD[332] = -2.06997900E+01;
  COFD[333] = 5.42833239E+00;
  COFD[334] = -4.93061354E-01;
  COFD[335] = 2.15793020E-02;
  COFD[336] = -1.81739951E+01;
  COFD[337] = 4.60315134E+00;
  COFD[338] = -3.93906877E-01;
  COFD[339] = 1.76017847E-02;
  COFD[340] = -2.08289873E+01;
  COFD[341] = 5.36559371E+00;
  COFD[342] = -4.85661513E-01;
  COFD[343] = 2.12877010E-02;
  COFD[344] = -2.17765406E+01;
  COFD[345] = 5.64206578E+00;
  COFD[346] = -5.15104753E-01;
  COFD[347] = 2.22957422E-02;
  COFD[348] = -2.17765406E+01;
  COFD[349] = 5.64206578E+00;
  COFD[350] = -5.15104753E-01;
  COFD[351] = 2.22957422E-02;
  COFD[352] = -1.29751337E+01;
  COFD[353] = 2.99687474E+00;
  COFD[354] = -1.83820478E-01;
  COFD[355] = 8.39908814E-03;
  COFD[356] = -2.03481312E+01;
  COFD[357] = 5.26709856E+00;
  COFD[358] = -4.73195490E-01;
  COFD[359] = 2.07564226E-02;
  COFD[360] = -1.68256395E+01;
  COFD[361] = 4.05650314E+00;
  COFD[362] = -3.23082632E-01;
  COFD[363] = 1.45263472E-02;
  COFD[364] = -2.21770779E+01;
  COFD[365] = 5.68744998E+00;
  COFD[366] = -5.10793511E-01;
  COFD[367] = 2.16704352E-02;
  COFD[368] = -1.95860363E+01;
  COFD[369] = 5.02452773E+00;
  COFD[370] = -4.43782411E-01;
  COFD[371] = 1.95604414E-02;
  COFD[372] = -2.23456670E+01;
  COFD[373] = 5.69153566E+00;
  COFD[374] = -5.08605460E-01;
  COFD[375] = 2.14598086E-02;
  COFD[376] = -1.82302992E+01;
  COFD[377] = 4.62413676E+00;
  COFD[378] = -3.96485100E-01;
  COFD[379] = 1.77074617E-02;
  COFD[380] = -1.71870267E+01;
  COFD[381] = 4.20847168E+00;
  COFD[382] = -3.43267883E-01;
  COFD[383] = 1.54252580E-02;
  COFD[384] = -1.58379324E+01;
  COFD[385] = 3.83195750E+00;
  COFD[386] = -2.94605739E-01;
  COFD[387] = 1.33200383E-02;
  COFD[388] = -1.58529948E+01;
  COFD[389] = 3.83195750E+00;
  COFD[390] = -2.94605739E-01;
  COFD[391] = 1.33200383E-02;
  COFD[392] = -1.71921522E+01;
  COFD[393] = 4.20847168E+00;
  COFD[394] = -3.43267883E-01;
  COFD[395] = 1.54252580E-02;
  COFD[396] = -2.07134339E+01;
  COFD[397] = 5.25362242E+00;
  COFD[398] = -4.28085831E-01;
  COFD[399] = 1.69448077E-02;
  COFD[400] = -1.71970223E+01;
  COFD[401] = 4.20847168E+00;
  COFD[402] = -3.43267883E-01;
  COFD[403] = 1.54252580E-02;
  COFD[404] = -1.66720297E+01;
  COFD[405] = 4.63136373E+00;
  COFD[406] = -3.97356633E-01;
  COFD[407] = 1.77424240E-02;
  COFD[408] = -1.82120869E+01;
  COFD[409] = 4.62413676E+00;
  COFD[410] = -3.96485100E-01;
  COFD[411] = 1.77074617E-02;
  COFD[412] = -1.82120869E+01;
  COFD[413] = 4.62413676E+00;
  COFD[414] = -3.96485100E-01;
  COFD[415] = 1.77074617E-02;
  COFD[416] = -2.17070813E+01;
  COFD[417] = 5.69099359E+00;
  COFD[418] = -5.08349503E-01;
  COFD[419] = 2.14407762E-02;
  COFD[420] = -2.17130934E+01;
  COFD[421] = 5.69099359E+00;
  COFD[422] = -5.08349503E-01;
  COFD[423] = 2.14407762E-02;
  COFD[424] = -2.16186569E+01;
  COFD[425] = 5.67104725E+00;
  COFD[426] = -5.09465602E-01;
  COFD[427] = 2.16464253E-02;
  COFD[428] = -2.00989387E+01;
  COFD[429] = 5.20351263E+00;
  COFD[430] = -4.65001962E-01;
  COFD[431] = 2.04005867E-02;
  COFD[432] = -1.95931916E+01;
  COFD[433] = 5.02452773E+00;
  COFD[434] = -4.43782411E-01;
  COFD[435] = 1.95604414E-02;
  COFD[436] = -2.03421339E+01;
  COFD[437] = 5.26709856E+00;
  COFD[438] = -4.73195490E-01;
  COFD[439] = 2.07564226E-02;
  COFD[440] = -1.81374322E+01;
  COFD[441] = 4.65175838E+00;
  COFD[442] = -3.99406516E-01;
  COFD[443] = 1.78048569E-02;
  COFD[444] = -2.16430338E+01;
  COFD[445] = 5.64779714E+00;
  COFD[446] = -5.07721971E-01;
  COFD[447] = 2.16241891E-02;
  COFD[448] = -2.16462785E+01;
  COFD[449] = 5.64779714E+00;
  COFD[450] = -5.07721971E-01;
  COFD[451] = 2.16241891E-02;
  COFD[452] = -2.04928200E+01;
  COFD[453] = 5.26407420E+00;
  COFD[454] = -4.72791546E-01;
  COFD[455] = 2.07382489E-02;
  COFD[456] = -2.08256118E+01;
  COFD[457] = 5.36559371E+00;
  COFD[458] = -4.85661513E-01;
  COFD[459] = 2.12877010E-02;
  COFD[460] = -2.21791800E+01;
  COFD[461] = 5.68744998E+00;
  COFD[462] = -5.10793511E-01;
  COFD[463] = 2.16704352E-02;
  COFD[464] = -2.17930266E+01;
  COFD[465] = 5.64206578E+00;
  COFD[466] = -5.15104753E-01;
  COFD[467] = 2.22957422E-02;
  COFD[468] = -2.21759654E+01;
  COFD[469] = 5.68744998E+00;
  COFD[470] = -5.10793511E-01;
  COFD[471] = 2.16704352E-02;
  COFD[472] = -2.23448475E+01;
  COFD[473] = 5.69153566E+00;
  COFD[474] = -5.08605460E-01;
  COFD[475] = 2.14598086E-02;
  COFD[476] = -2.21909866E+01;
  COFD[477] = 5.68744998E+00;
  COFD[478] = -5.10793511E-01;
  COFD[479] = 2.16704352E-02;
  COFD[480] = -2.20439152E+01;
  COFD[481] = 5.46766507E+00;
  COFD[482] = -4.65479341E-01;
  COFD[483] = 1.89797999E-02;
  COFD[484] = -2.20353558E+01;
  COFD[485] = 5.46603508E+00;
  COFD[486] = -4.65199707E-01;
  COFD[487] = 1.89647157E-02;
  COFD[488] = -1.68011884E+01;
  COFD[489] = 4.05042859E+00;
  COFD[490] = -3.22319395E-01;
  COFD[491] = 1.44942745E-02;
  COFD[492] = -2.30816284E+01;
  COFD[493] = 5.59360310E+00;
  COFD[494] = -5.10572093E-01;
  COFD[495] = 2.21739087E-02;
  COFD[496] = -2.23680004E+01;
  COFD[497] = 5.67323480E+00;
  COFD[498] = -5.03108721E-01;
  COFD[499] = 2.10878525E-02;
  COFD[500] = -2.08289873E+01;
  COFD[501] = 5.36559371E+00;
  COFD[502] = -4.85661513E-01;
  COFD[503] = 2.12877010E-02;
  COFD[504] = -2.26820519E+01;
  COFD[505] = 5.68951631E+00;
  COFD[506] = -5.07668098E-01;
  COFD[507] = 2.13903212E-02;
  COFD[508] = -2.23509243E+01;
  COFD[509] = 5.37198708E+00;
  COFD[510] = -4.48528740E-01;
  COFD[511] = 1.80499807E-02;
  COFD[512] = -2.23509243E+01;
  COFD[513] = 5.37198708E+00;
  COFD[514] = -4.48528740E-01;
  COFD[515] = 1.80499807E-02;
  COFD[516] = -1.51005325E+01;
  COFD[517] = 3.67029147E+00;
  COFD[518] = -2.73138589E-01;
  COFD[519] = 1.23661438E-02;
  COFD[520] = -2.24140975E+01;
  COFD[521] = 5.69725388E+00;
  COFD[522] = -5.11197970E-01;
  COFD[523] = 2.16513648E-02;
  COFD[524] = -1.95989967E+01;
  COFD[525] = 4.86773881E+00;
  COFD[526] = -4.24796060E-01;
  COFD[527] = 1.87934811E-02;
  COFD[528] = -2.15675111E+01;
  COFD[529] = 4.87393197E+00;
  COFD[530] = -3.64472579E-01;
  COFD[531] = 1.35722107E-02;
  COFD[532] = -2.20886792E+01;
  COFD[533] = 5.66947709E+00;
  COFD[534] = -5.15131199E-01;
  COFD[535] = 2.21454794E-02;
  COFD[536] = -2.14305236E+01;
  COFD[537] = 4.74312020E+00;
  COFD[538] = -3.42998475E-01;
  COFD[539] = 1.24528839E-02;
  COFD[540] = -2.08856540E+01;
  COFD[541] = 5.38939502E+00;
  COFD[542] = -4.88508342E-01;
  COFD[543] = 2.14017409E-02;
  COFD[544] = -1.99192393E+01;
  COFD[545] = 4.98360158E+00;
  COFD[546] = -4.38825780E-01;
  COFD[547] = 1.93601206E-02;
  COFD[548] = -1.85766545E+01;
  COFD[549] = 4.65440100E+00;
  COFD[550] = -3.99617849E-01;
  COFD[551] = 1.78081611E-02;
  COFD[552] = -1.85986007E+01;
  COFD[553] = 4.65440100E+00;
  COFD[554] = -3.99617849E-01;
  COFD[555] = 1.78081611E-02;
  COFD[556] = -1.99279897E+01;
  COFD[557] = 4.98360158E+00;
  COFD[558] = -4.38825780E-01;
  COFD[559] = 1.93601206E-02;
  COFD[560] = -1.97246304E+01;
  COFD[561] = 4.41370094E+00;
  COFD[562] = -2.89313133E-01;
  COFD[563] = 9.66674118E-03;
  COFD[564] = -1.99363635E+01;
  COFD[565] = 4.98360158E+00;
  COFD[566] = -4.38825780E-01;
  COFD[567] = 1.93601206E-02;
  COFD[568] = -1.92553728E+01;
  COFD[569] = 5.39783798E+00;
  COFD[570] = -4.89502414E-01;
  COFD[571] = 2.14408287E-02;
  COFD[572] = -2.08598585E+01;
  COFD[573] = 5.38939502E+00;
  COFD[574] = -4.88508342E-01;
  COFD[575] = 2.14017409E-02;
  COFD[576] = -2.08598585E+01;
  COFD[577] = 5.38939502E+00;
  COFD[578] = -4.88508342E-01;
  COFD[579] = 2.14017409E-02;
  COFD[580] = -2.07049935E+01;
  COFD[581] = 4.72805055E+00;
  COFD[582] = -3.40591321E-01;
  COFD[583] = 1.23293721E-02;
  COFD[584] = -2.07150283E+01;
  COFD[585] = 4.72805055E+00;
  COFD[586] = -3.40591321E-01;
  COFD[587] = 1.23293721E-02;
  COFD[588] = -2.13751818E+01;
  COFD[589] = 5.07979658E+00;
  COFD[590] = -3.99187658E-01;
  COFD[591] = 1.54187526E-02;
  COFD[592] = -2.23300848E+01;
  COFD[593] = 5.68194587E+00;
  COFD[594] = -5.10402599E-01;
  COFD[595] = 2.16670698E-02;
  COFD[596] = -2.21003257E+01;
  COFD[597] = 5.66947709E+00;
  COFD[598] = -5.15131199E-01;
  COFD[599] = 2.21454794E-02;
  COFD[600] = -2.24040838E+01;
  COFD[601] = 5.69725388E+00;
  COFD[602] = -5.11197970E-01;
  COFD[603] = 2.16513648E-02;
  COFD[604] = -2.10212507E+01;
  COFD[605] = 5.43801380E+00;
  COFD[606] = -4.94208208E-01;
  COFD[607] = 2.16247862E-02;
  COFD[608] = -2.14217431E+01;
  COFD[609] = 5.01654907E+00;
  COFD[610] = -3.87995080E-01;
  COFD[611] = 1.48063744E-02;
  COFD[612] = -2.14276351E+01;
  COFD[613] = 5.01654907E+00;
  COFD[614] = -3.87995080E-01;
  COFD[615] = 1.48063744E-02;
  COFD[616] = -2.25814161E+01;
  COFD[617] = 5.69729375E+00;
  COFD[618] = -5.11255096E-01;
  COFD[619] = 2.16560632E-02;
  COFD[620] = -2.26759538E+01;
  COFD[621] = 5.68951631E+00;
  COFD[622] = -5.07668098E-01;
  COFD[623] = 2.13903212E-02;
  COFD[624] = -2.15718402E+01;
  COFD[625] = 4.87393197E+00;
  COFD[626] = -3.64472579E-01;
  COFD[627] = 1.35722107E-02;
  COFD[628] = -2.23822073E+01;
  COFD[629] = 5.37198708E+00;
  COFD[630] = -4.48528740E-01;
  COFD[631] = 1.80499807E-02;
  COFD[632] = -2.15652279E+01;
  COFD[633] = 4.87393197E+00;
  COFD[634] = -3.64472579E-01;
  COFD[635] = 1.35722107E-02;
  COFD[636] = -2.14287927E+01;
  COFD[637] = 4.74312020E+00;
  COFD[638] = -3.42998475E-01;
  COFD[639] = 1.24528839E-02;
  COFD[640] = -2.15965223E+01;
  COFD[641] = 4.87393197E+00;
  COFD[642] = -3.64472579E-01;
  COFD[643] = 1.35722107E-02;
  COFD[644] = -2.05767500E+01;
  COFD[645] = 4.29837248E+00;
  COFD[646] = -2.71107161E-01;
  COFD[647] = 8.73928648E-03;
  COFD[648] = -2.05723773E+01;
  COFD[649] = 4.29837248E+00;
  COFD[650] = -2.71107161E-01;
  COFD[651] = 8.73928648E-03;
  COFD[652] = -1.95742449E+01;
  COFD[653] = 4.86151358E+00;
  COFD[654] = -4.24066143E-01;
  COFD[655] = 1.87651483E-02;
  COFD[656] = -2.36297004E+01;
  COFD[657] = 5.66015033E+00;
  COFD[658] = -5.08351812E-01;
  COFD[659] = 2.16104873E-02;
  COFD[660] = -2.18975230E+01;
  COFD[661] = 5.29777789E+00;
  COFD[662] = -4.35476842E-01;
  COFD[663] = 1.73373342E-02;
  COFD[664] = -2.17765406E+01;
  COFD[665] = 5.64206578E+00;
  COFD[666] = -5.15104753E-01;
  COFD[667] = 2.22957422E-02;
  COFD[668] = -2.23509243E+01;
  COFD[669] = 5.37198708E+00;
  COFD[670] = -4.48528740E-01;
  COFD[671] = 1.80499807E-02;
  COFD[672] = -2.15073190E+01;
  COFD[673] = 4.82380626E+00;
  COFD[674] = -3.56106499E-01;
  COFD[675] = 1.31315966E-02;
  COFD[676] = -2.15073190E+01;
  COFD[677] = 4.82380626E+00;
  COFD[678] = -3.56106499E-01;
  COFD[679] = 1.31315966E-02;
  COFD[680] = -1.61178919E+01;
  COFD[681] = 4.03479307E+00;
  COFD[682] = -3.20399233E-01;
  COFD[683] = 1.44157782E-02;
  COFD[684] = -2.22189610E+01;
  COFD[685] = 5.44396600E+00;
  COFD[686] = -4.61412551E-01;
  COFD[687] = 1.87602923E-02;
  COFD[688] = -2.07128235E+01;
  COFD[689] = 5.22471147E+00;
  COFD[690] = -4.67607197E-01;
  COFD[691] = 2.05082142E-02;
  COFD[692] = -2.02519341E+01;
  COFD[693] = 4.11843264E+00;
  COFD[694] = -2.42988196E-01;
  COFD[695] = 7.31555013E-03;
  COFD[696] = -2.24734294E+01;
  COFD[697] = 5.67806029E+00;
  COFD[698] = -5.03991163E-01;
  COFD[699] = 2.11372864E-02;
  COFD[700] = -1.98891989E+01;
  COFD[701] = 3.88632523E+00;
  COFD[702] = -2.06802738E-01;
  COFD[703] = 5.48944874E-03;
  COFD[704] = -2.18020150E+01;
  COFD[705] = 5.65210943E+00;
  COFD[706] = -5.15837732E-01;
  COFD[707] = 2.23031110E-02;
  COFD[708] = -2.11491052E+01;
  COFD[709] = 5.38685618E+00;
  COFD[710] = -4.88207385E-01;
  COFD[711] = 2.13898131E-02;
  COFD[712] = -1.95878092E+01;
  COFD[713] = 4.97734997E+00;
  COFD[714] = -4.38018636E-01;
  COFD[715] = 1.93251310E-02;
  COFD[716] = -1.96114174E+01;
  COFD[717] = 4.97734997E+00;
  COFD[718] = -4.38018636E-01;
  COFD[719] = 1.93251310E-02;
  COFD[720] = -2.11589253E+01;
  COFD[721] = 5.38685618E+00;
  COFD[722] = -4.88207385E-01;
  COFD[723] = 2.13898131E-02;
  COFD[724] = -1.79615597E+01;
  COFD[725] = 3.48451904E+00;
  COFD[726] = -1.43831594E-01;
  COFD[727] = 2.32079598E-03;
  COFD[728] = -2.11683428E+01;
  COFD[729] = 5.38685618E+00;
  COFD[730] = -4.88207385E-01;
  COFD[731] = 2.13898131E-02;
  COFD[732] = -2.01428617E+01;
  COFD[733] = 5.65654333E+00;
  COFD[734] = -5.16217584E-01;
  COFD[735] = 2.23113761E-02;
  COFD[736] = -2.17744516E+01;
  COFD[737] = 5.65210943E+00;
  COFD[738] = -5.15837732E-01;
  COFD[739] = 2.23031110E-02;
  COFD[740] = -2.17744516E+01;
  COFD[741] = 5.65210943E+00;
  COFD[742] = -5.15837732E-01;
  COFD[743] = 2.23031110E-02;
  COFD[744] = -1.91268351E+01;
  COFD[745] = 3.86904236E+00;
  COFD[746] = -2.04091431E-01;
  COFD[747] = 5.35231270E-03;
  COFD[748] = -1.91380229E+01;
  COFD[749] = 3.86904236E+00;
  COFD[750] = -2.04091431E-01;
  COFD[751] = 5.35231270E-03;
  COFD[752] = -2.03909198E+01;
  COFD[753] = 4.47910824E+00;
  COFD[754] = -2.99822681E-01;
  COFD[755] = 1.02073242E-02;
  COFD[756] = -2.23119992E+01;
  COFD[757] = 5.50021686E+00;
  COFD[758] = -4.71107238E-01;
  COFD[759] = 1.92849078E-02;
  COFD[760] = -2.24863224E+01;
  COFD[761] = 5.67806029E+00;
  COFD[762] = -5.03991163E-01;
  COFD[763] = 2.11372864E-02;
  COFD[764] = -2.22077955E+01;
  COFD[765] = 5.44396600E+00;
  COFD[766] = -4.61412551E-01;
  COFD[767] = 1.87602923E-02;
  COFD[768] = -2.19091341E+01;
  COFD[769] = 5.66907490E+00;
  COFD[770] = -5.16714859E-01;
  COFD[771] = 2.22848049E-02;
  COFD[772] = -2.03163280E+01;
  COFD[773] = 4.36001963E+00;
  COFD[774] = -2.80770646E-01;
  COFD[775] = 9.22995126E-03;
  COFD[776] = -2.03230669E+01;
  COFD[777] = 4.36001963E+00;
  COFD[778] = -2.80770646E-01;
  COFD[779] = 9.22995126E-03;
  COFD[780] = -2.23968206E+01;
  COFD[781] = 5.44551229E+00;
  COFD[782] = -4.61691222E-01;
  COFD[783] = 1.87757502E-02;
  COFD[784] = -2.23439611E+01;
  COFD[785] = 5.37198708E+00;
  COFD[786] = -4.48528740E-01;
  COFD[787] = 1.80499807E-02;
  COFD[788] = -2.02571074E+01;
  COFD[789] = 4.11843264E+00;
  COFD[790] = -2.42988196E-01;
  COFD[791] = 7.31555013E-03;
  COFD[792] = -2.15438557E+01;
  COFD[793] = 4.82380626E+00;
  COFD[794] = -3.56106499E-01;
  COFD[795] = 1.31315966E-02;
  COFD[796] = -2.02492092E+01;
  COFD[797] = 4.11843264E+00;
  COFD[798] = -2.42988196E-01;
  COFD[799] = 7.31555013E-03;
  COFD[800] = -1.98871102E+01;
  COFD[801] = 3.88632523E+00;
  COFD[802] = -2.06802738E-01;
  COFD[803] = 5.48944874E-03;
  COFD[804] = -2.02867736E+01;
  COFD[805] = 4.11843264E+00;
  COFD[806] = -2.42988196E-01;
  COFD[807] = 7.31555013E-03;
  COFD[808] = -1.88340377E+01;
  COFD[809] = 3.36066148E+00;
  COFD[810] = -1.24815434E-01;
  COFD[811] = 1.37670619E-03;
  COFD[812] = -1.88300652E+01;
  COFD[813] = 3.36066148E+00;
  COFD[814] = -1.24815434E-01;
  COFD[815] = 1.37670619E-03;
  COFD[816] = -2.06822165E+01;
  COFD[817] = 5.21598228E+00;
  COFD[818] = -4.66522092E-01;
  COFD[819] = 2.04628158E-02;
  COFD[820] = -2.36297004E+01;
  COFD[821] = 5.66015033E+00;
  COFD[822] = -5.08351812E-01;
  COFD[823] = 2.16104873E-02;
  COFD[824] = -2.18975230E+01;
  COFD[825] = 5.29777789E+00;
  COFD[826] = -4.35476842E-01;
  COFD[827] = 1.73373342E-02;
  COFD[828] = -2.17765406E+01;
  COFD[829] = 5.64206578E+00;
  COFD[830] = -5.15104753E-01;
  COFD[831] = 2.22957422E-02;
  COFD[832] = -2.23509243E+01;
  COFD[833] = 5.37198708E+00;
  COFD[834] = -4.48528740E-01;
  COFD[835] = 1.80499807E-02;
  COFD[836] = -2.15073190E+01;
  COFD[837] = 4.82380626E+00;
  COFD[838] = -3.56106499E-01;
  COFD[839] = 1.31315966E-02;
  COFD[840] = -2.15073190E+01;
  COFD[841] = 4.82380626E+00;
  COFD[842] = -3.56106499E-01;
  COFD[843] = 1.31315966E-02;
  COFD[844] = -1.61178919E+01;
  COFD[845] = 4.03479307E+00;
  COFD[846] = -3.20399233E-01;
  COFD[847] = 1.44157782E-02;
  COFD[848] = -2.22189610E+01;
  COFD[849] = 5.44396600E+00;
  COFD[850] = -4.61412551E-01;
  COFD[851] = 1.87602923E-02;
  COFD[852] = -2.07128235E+01;
  COFD[853] = 5.22471147E+00;
  COFD[854] = -4.67607197E-01;
  COFD[855] = 2.05082142E-02;
  COFD[856] = -2.02519341E+01;
  COFD[857] = 4.11843264E+00;
  COFD[858] = -2.42988196E-01;
  COFD[859] = 7.31555013E-03;
  COFD[860] = -2.24734294E+01;
  COFD[861] = 5.67806029E+00;
  COFD[862] = -5.03991163E-01;
  COFD[863] = 2.11372864E-02;
  COFD[864] = -1.98891989E+01;
  COFD[865] = 3.88632523E+00;
  COFD[866] = -2.06802738E-01;
  COFD[867] = 5.48944874E-03;
  COFD[868] = -2.18020150E+01;
  COFD[869] = 5.65210943E+00;
  COFD[870] = -5.15837732E-01;
  COFD[871] = 2.23031110E-02;
  COFD[872] = -2.11491052E+01;
  COFD[873] = 5.38685618E+00;
  COFD[874] = -4.88207385E-01;
  COFD[875] = 2.13898131E-02;
  COFD[876] = -1.95878092E+01;
  COFD[877] = 4.97734997E+00;
  COFD[878] = -4.38018636E-01;
  COFD[879] = 1.93251310E-02;
  COFD[880] = -1.96114174E+01;
  COFD[881] = 4.97734997E+00;
  COFD[882] = -4.38018636E-01;
  COFD[883] = 1.93251310E-02;
  COFD[884] = -2.11589253E+01;
  COFD[885] = 5.38685618E+00;
  COFD[886] = -4.88207385E-01;
  COFD[887] = 2.13898131E-02;
  COFD[888] = -1.79615597E+01;
  COFD[889] = 3.48451904E+00;
  COFD[890] = -1.43831594E-01;
  COFD[891] = 2.32079598E-03;
  COFD[892] = -2.11683428E+01;
  COFD[893] = 5.38685618E+00;
  COFD[894] = -4.88207385E-01;
  COFD[895] = 2.13898131E-02;
  COFD[896] = -2.01428617E+01;
  COFD[897] = 5.65654333E+00;
  COFD[898] = -5.16217584E-01;
  COFD[899] = 2.23113761E-02;
  COFD[900] = -2.17744516E+01;
  COFD[901] = 5.65210943E+00;
  COFD[902] = -5.15837732E-01;
  COFD[903] = 2.23031110E-02;
  COFD[904] = -2.17744516E+01;
  COFD[905] = 5.65210943E+00;
  COFD[906] = -5.15837732E-01;
  COFD[907] = 2.23031110E-02;
  COFD[908] = -1.91268351E+01;
  COFD[909] = 3.86904236E+00;
  COFD[910] = -2.04091431E-01;
  COFD[911] = 5.35231270E-03;
  COFD[912] = -1.91380229E+01;
  COFD[913] = 3.86904236E+00;
  COFD[914] = -2.04091431E-01;
  COFD[915] = 5.35231270E-03;
  COFD[916] = -2.03909198E+01;
  COFD[917] = 4.47910824E+00;
  COFD[918] = -2.99822681E-01;
  COFD[919] = 1.02073242E-02;
  COFD[920] = -2.23119992E+01;
  COFD[921] = 5.50021686E+00;
  COFD[922] = -4.71107238E-01;
  COFD[923] = 1.92849078E-02;
  COFD[924] = -2.24863224E+01;
  COFD[925] = 5.67806029E+00;
  COFD[926] = -5.03991163E-01;
  COFD[927] = 2.11372864E-02;
  COFD[928] = -2.22077955E+01;
  COFD[929] = 5.44396600E+00;
  COFD[930] = -4.61412551E-01;
  COFD[931] = 1.87602923E-02;
  COFD[932] = -2.19091341E+01;
  COFD[933] = 5.66907490E+00;
  COFD[934] = -5.16714859E-01;
  COFD[935] = 2.22848049E-02;
  COFD[936] = -2.03163280E+01;
  COFD[937] = 4.36001963E+00;
  COFD[938] = -2.80770646E-01;
  COFD[939] = 9.22995126E-03;
  COFD[940] = -2.03230669E+01;
  COFD[941] = 4.36001963E+00;
  COFD[942] = -2.80770646E-01;
  COFD[943] = 9.22995126E-03;
  COFD[944] = -2.23968206E+01;
  COFD[945] = 5.44551229E+00;
  COFD[946] = -4.61691222E-01;
  COFD[947] = 1.87757502E-02;
  COFD[948] = -2.23439611E+01;
  COFD[949] = 5.37198708E+00;
  COFD[950] = -4.48528740E-01;
  COFD[951] = 1.80499807E-02;
  COFD[952] = -2.02571074E+01;
  COFD[953] = 4.11843264E+00;
  COFD[954] = -2.42988196E-01;
  COFD[955] = 7.31555013E-03;
  COFD[956] = -2.15438557E+01;
  COFD[957] = 4.82380626E+00;
  COFD[958] = -3.56106499E-01;
  COFD[959] = 1.31315966E-02;
  COFD[960] = -2.02492092E+01;
  COFD[961] = 4.11843264E+00;
  COFD[962] = -2.42988196E-01;
  COFD[963] = 7.31555013E-03;
  COFD[964] = -1.98871102E+01;
  COFD[965] = 3.88632523E+00;
  COFD[966] = -2.06802738E-01;
  COFD[967] = 5.48944874E-03;
  COFD[968] = -2.02867736E+01;
  COFD[969] = 4.11843264E+00;
  COFD[970] = -2.42988196E-01;
  COFD[971] = 7.31555013E-03;
  COFD[972] = -1.88340377E+01;
  COFD[973] = 3.36066148E+00;
  COFD[974] = -1.24815434E-01;
  COFD[975] = 1.37670619E-03;
  COFD[976] = -1.88300652E+01;
  COFD[977] = 3.36066148E+00;
  COFD[978] = -1.24815434E-01;
  COFD[979] = 1.37670619E-03;
  COFD[980] = -2.06822165E+01;
  COFD[981] = 5.21598228E+00;
  COFD[982] = -4.66522092E-01;
  COFD[983] = 2.04628158E-02;
  COFD[984] = -1.47227642E+01;
  COFD[985] = 3.15497411E+00;
  COFD[986] = -2.03824810E-01;
  COFD[987] = 9.24118691E-03;
  COFD[988] = -1.50247369E+01;
  COFD[989] = 3.75251314E+00;
  COFD[990] = -2.84160414E-01;
  COFD[991] = 1.28605733E-02;
  COFD[992] = -1.29751337E+01;
  COFD[993] = 2.99687474E+00;
  COFD[994] = -1.83820478E-01;
  COFD[995] = 8.39908814E-03;
  COFD[996] = -1.51005325E+01;
  COFD[997] = 3.67029147E+00;
  COFD[998] = -2.73138589E-01;
  COFD[999] = 1.23661438E-02;
  COFD[1000] = -1.61178919E+01;
  COFD[1001] = 4.03479307E+00;
  COFD[1002] = -3.20399233E-01;
  COFD[1003] = 1.44157782E-02;
  COFD[1004] = -1.61178919E+01;
  COFD[1005] = 4.03479307E+00;
  COFD[1006] = -3.20399233E-01;
  COFD[1007] = 1.44157782E-02;
  COFD[1008] = -9.98517889E+00;
  COFD[1009] = 2.04336848E+00;
  COFD[1010] = -5.38387626E-02;
  COFD[1011] = 2.48117739E-03;
  COFD[1012] = -1.47236250E+01;
  COFD[1013] = 3.59739586E+00;
  COFD[1014] = -2.63437939E-01;
  COFD[1015] = 1.19336668E-02;
  COFD[1016] = -1.22646769E+01;
  COFD[1017] = 2.73074409E+00;
  COFD[1018] = -1.48960245E-01;
  COFD[1019] = 6.87635559E-03;
  COFD[1020] = -1.72184222E+01;
  COFD[1021] = 4.44378938E+00;
  COFD[1022] = -3.73963936E-01;
  COFD[1023] = 1.67675483E-02;
  COFD[1024] = -1.40517241E+01;
  COFD[1025] = 3.35868034E+00;
  COFD[1026] = -2.31350436E-01;
  COFD[1027] = 1.04871016E-02;
  COFD[1028] = -1.75698825E+01;
  COFD[1029] = 4.54000784E+00;
  COFD[1030] = -3.86295602E-01;
  COFD[1031] = 1.72969843E-02;
  COFD[1032] = -1.30053412E+01;
  COFD[1033] = 3.00227472E+00;
  COFD[1034] = -1.84384037E-01;
  COFD[1035] = 8.41707179E-03;
  COFD[1036] = -1.24510316E+01;
  COFD[1037] = 2.82692805E+00;
  COFD[1038] = -1.62138652E-01;
  COFD[1039] = 7.47929495E-03;
  COFD[1040] = -1.16227322E+01;
  COFD[1041] = 2.61014717E+00;
  COFD[1042] = -1.33183711E-01;
  COFD[1043] = 6.18937111E-03;
  COFD[1044] = -1.16260596E+01;
  COFD[1045] = 2.61014717E+00;
  COFD[1046] = -1.33183711E-01;
  COFD[1047] = 6.18937111E-03;
  COFD[1048] = -1.24519374E+01;
  COFD[1049] = 2.82692805E+00;
  COFD[1050] = -1.62138652E-01;
  COFD[1051] = 7.47929495E-03;
  COFD[1052] = -1.79975170E+01;
  COFD[1053] = 5.00313903E+00;
  COFD[1054] = -4.41228726E-01;
  COFD[1055] = 1.94588671E-02;
  COFD[1056] = -1.24527911E+01;
  COFD[1057] = 2.82692805E+00;
  COFD[1058] = -1.62138652E-01;
  COFD[1059] = 7.47929495E-03;
  COFD[1060] = -1.19251455E+01;
  COFD[1061] = 3.00550766E+00;
  COFD[1062] = -1.84765984E-01;
  COFD[1063] = 8.43184890E-03;
  COFD[1064] = -1.30011110E+01;
  COFD[1065] = 3.00227472E+00;
  COFD[1066] = -1.84384037E-01;
  COFD[1067] = 8.41707179E-03;
  COFD[1068] = -1.30011110E+01;
  COFD[1069] = 3.00227472E+00;
  COFD[1070] = -1.84384037E-01;
  COFD[1071] = 8.41707179E-03;
  COFD[1072] = -1.70019113E+01;
  COFD[1073] = 4.54421325E+00;
  COFD[1074] = -3.86809376E-01;
  COFD[1075] = 1.73179271E-02;
  COFD[1076] = -1.70030029E+01;
  COFD[1077] = 4.54421325E+00;
  COFD[1078] = -3.86809376E-01;
  COFD[1079] = 1.73179271E-02;
  COFD[1080] = -1.67579904E+01;
  COFD[1081] = 4.43752546E+00;
  COFD[1082] = -3.73162303E-01;
  COFD[1083] = 1.67331145E-02;
  COFD[1084] = -1.44828240E+01;
  COFD[1085] = 3.56110932E+00;
  COFD[1086] = -2.58702659E-01;
  COFD[1087] = 1.17266885E-02;
  COFD[1088] = -1.40530650E+01;
  COFD[1089] = 3.35868034E+00;
  COFD[1090] = -2.31350436E-01;
  COFD[1091] = 1.04871016E-02;
  COFD[1092] = -1.47225366E+01;
  COFD[1093] = 3.59739586E+00;
  COFD[1094] = -2.63437939E-01;
  COFD[1095] = 1.19336668E-02;
  COFD[1096] = -1.26884864E+01;
  COFD[1097] = 3.02924860E+00;
  COFD[1098] = -1.87792147E-01;
  COFD[1099] = 8.56032464E-03;
  COFD[1100] = -1.66323736E+01;
  COFD[1101] = 4.36001181E+00;
  COFD[1102] = -3.63261725E-01;
  COFD[1103] = 1.63092312E-02;
  COFD[1104] = -1.66329097E+01;
  COFD[1105] = 4.36001181E+00;
  COFD[1106] = -3.63261725E-01;
  COFD[1107] = 1.63092312E-02;
  COFD[1108] = -1.48505617E+01;
  COFD[1109] = 3.59614134E+00;
  COFD[1110] = -2.63274609E-01;
  COFD[1111] = 1.19265426E-02;
  COFD[1112] = -1.50999718E+01;
  COFD[1113] = 3.67029147E+00;
  COFD[1114] = -2.73138589E-01;
  COFD[1115] = 1.23661438E-02;
  COFD[1116] = -1.72187320E+01;
  COFD[1117] = 4.44378938E+00;
  COFD[1118] = -3.73963936E-01;
  COFD[1119] = 1.67675483E-02;
  COFD[1120] = -1.61212798E+01;
  COFD[1121] = 4.03479307E+00;
  COFD[1122] = -3.20399233E-01;
  COFD[1123] = 1.44157782E-02;
  COFD[1124] = -1.72182578E+01;
  COFD[1125] = 4.44378938E+00;
  COFD[1126] = -3.73963936E-01;
  COFD[1127] = 1.67675483E-02;
  COFD[1128] = -1.75697641E+01;
  COFD[1129] = 4.54000784E+00;
  COFD[1130] = -3.86295602E-01;
  COFD[1131] = 1.72969843E-02;
  COFD[1132] = -1.72204518E+01;
  COFD[1133] = 4.44378938E+00;
  COFD[1134] = -3.73963936E-01;
  COFD[1135] = 1.67675483E-02;
  COFD[1136] = -1.82334086E+01;
  COFD[1137] = 4.77926962E+00;
  COFD[1138] = -4.14167458E-01;
  COFD[1139] = 1.83677046E-02;
  COFD[1140] = -1.82304427E+01;
  COFD[1141] = 4.78069184E+00;
  COFD[1142] = -4.14340969E-01;
  COFD[1143] = 1.83747757E-02;
  COFD[1144] = -1.22379946E+01;
  COFD[1145] = 2.72351269E+00;
  COFD[1146] = -1.47956351E-01;
  COFD[1147] = 6.82984550E-03;
  COFD[1148] = -2.26136123E+01;
  COFD[1149] = 5.51014294E+00;
  COFD[1150] = -5.00490863E-01;
  COFD[1151] = 2.17654712E-02;
  COFD[1152] = -2.21214411E+01;
  COFD[1153] = 5.69019961E+00;
  COFD[1154] = -5.07971611E-01;
  COFD[1155] = 2.14126561E-02;
  COFD[1156] = -2.03481312E+01;
  COFD[1157] = 5.26709856E+00;
  COFD[1158] = -4.73195490E-01;
  COFD[1159] = 2.07564226E-02;
  COFD[1160] = -2.24140975E+01;
  COFD[1161] = 5.69725388E+00;
  COFD[1162] = -5.11197970E-01;
  COFD[1163] = 2.16513648E-02;
  COFD[1164] = -2.22189610E+01;
  COFD[1165] = 5.44396600E+00;
  COFD[1166] = -4.61412551E-01;
  COFD[1167] = 1.87602923E-02;
  COFD[1168] = -2.22189610E+01;
  COFD[1169] = 5.44396600E+00;
  COFD[1170] = -4.61412551E-01;
  COFD[1171] = 1.87602923E-02;
  COFD[1172] = -1.47236250E+01;
  COFD[1173] = 3.59739586E+00;
  COFD[1174] = -2.63437939E-01;
  COFD[1175] = 1.19336668E-02;
  COFD[1176] = -2.20562000E+01;
  COFD[1177] = 5.66395629E+00;
  COFD[1178] = -5.08751142E-01;
  COFD[1179] = 2.16239527E-02;
  COFD[1180] = -1.91885079E+01;
  COFD[1181] = 4.80792873E+00;
  COFD[1182] = -4.17710332E-01;
  COFD[1183] = 1.85143704E-02;
  COFD[1184] = -2.15365186E+01;
  COFD[1185] = 4.99548160E+00;
  COFD[1186] = -3.84541130E-01;
  COFD[1187] = 1.46252961E-02;
  COFD[1188] = -2.17996373E+01;
  COFD[1189] = 5.66379176E+00;
  COFD[1190] = -5.16553812E-01;
  COFD[1191] = 2.23002301E-02;
  COFD[1192] = -2.13880455E+01;
  COFD[1193] = 4.85816818E+00;
  COFD[1194] = -3.61859198E-01;
  COFD[1195] = 1.34347998E-02;
  COFD[1196] = -2.04392836E+01;
  COFD[1197] = 5.30470298E+00;
  COFD[1198] = -4.78070128E-01;
  COFD[1199] = 2.09693013E-02;
  COFD[1200] = -1.94467669E+01;
  COFD[1201] = 4.90176377E+00;
  COFD[1202] = -4.28654088E-01;
  COFD[1203] = 1.89366950E-02;
  COFD[1204] = -1.82146635E+01;
  COFD[1205] = 4.61379381E+00;
  COFD[1206] = -3.95204189E-01;
  COFD[1207] = 1.76544311E-02;
  COFD[1208] = -1.82343908E+01;
  COFD[1209] = 4.61379381E+00;
  COFD[1210] = -3.95204189E-01;
  COFD[1211] = 1.76544311E-02;
  COFD[1212] = -1.94542200E+01;
  COFD[1213] = 4.90176377E+00;
  COFD[1214] = -4.28654088E-01;
  COFD[1215] = 1.89366950E-02;
  COFD[1216] = -1.97071715E+01;
  COFD[1217] = 4.53650344E+00;
  COFD[1218] = -3.09332864E-01;
  COFD[1219] = 1.07047264E-02;
  COFD[1220] = -1.94613342E+01;
  COFD[1221] = 4.90176377E+00;
  COFD[1222] = -4.28654088E-01;
  COFD[1223] = 1.89366950E-02;
  COFD[1224] = -1.88211497E+01;
  COFD[1225] = 5.31710153E+00;
  COFD[1226] = -4.79638614E-01;
  COFD[1227] = 2.10360613E-02;
  COFD[1228] = -2.04158859E+01;
  COFD[1229] = 5.30470298E+00;
  COFD[1230] = -4.78070128E-01;
  COFD[1231] = 2.09693013E-02;
  COFD[1232] = -2.04158859E+01;
  COFD[1233] = 5.30470298E+00;
  COFD[1234] = -4.78070128E-01;
  COFD[1235] = 2.09693013E-02;
  COFD[1236] = -2.06856911E+01;
  COFD[1237] = 4.84791744E+00;
  COFD[1238] = -3.60148227E-01;
  COFD[1239] = 1.33445806E-02;
  COFD[1240] = -2.06943071E+01;
  COFD[1241] = 4.84791744E+00;
  COFD[1242] = -3.60148227E-01;
  COFD[1243] = 1.33445806E-02;
  COFD[1244] = -2.13400199E+01;
  COFD[1245] = 5.19455335E+00;
  COFD[1246] = -4.18284064E-01;
  COFD[1247] = 1.64273864E-02;
  COFD[1248] = -2.19469232E+01;
  COFD[1249] = 5.64839278E+00;
  COFD[1250] = -5.07869816E-01;
  COFD[1251] = 2.16336719E-02;
  COFD[1252] = -2.18097254E+01;
  COFD[1253] = 5.66379176E+00;
  COFD[1254] = -5.16553812E-01;
  COFD[1255] = 2.23002301E-02;
  COFD[1256] = -2.20476032E+01;
  COFD[1257] = 5.66395629E+00;
  COFD[1258] = -5.08751142E-01;
  COFD[1259] = 2.16239527E-02;
  COFD[1260] = -2.05429790E+01;
  COFD[1261] = 5.36975831E+00;
  COFD[1262] = -4.86158770E-01;
  COFD[1263] = 2.13075589E-02;
  COFD[1264] = -2.13053031E+01;
  COFD[1265] = 5.09944835E+00;
  COFD[1266] = -4.02512129E-01;
  COFD[1267] = 1.55957509E-02;
  COFD[1268] = -2.13102098E+01;
  COFD[1269] = 5.09944835E+00;
  COFD[1270] = -4.02512129E-01;
  COFD[1271] = 1.55957509E-02;
  COFD[1272] = -2.22171868E+01;
  COFD[1273] = 5.66274856E+00;
  COFD[1274] = -5.08624885E-01;
  COFD[1275] = 2.16197194E-02;
  COFD[1276] = -2.24090094E+01;
  COFD[1277] = 5.69725388E+00;
  COFD[1278] = -5.11197970E-01;
  COFD[1279] = 2.16513648E-02;
  COFD[1280] = -2.15399525E+01;
  COFD[1281] = 4.99548160E+00;
  COFD[1282] = -3.84541130E-01;
  COFD[1283] = 1.46252961E-02;
  COFD[1284] = -2.22444909E+01;
  COFD[1285] = 5.44396600E+00;
  COFD[1286] = -4.61412551E-01;
  COFD[1287] = 1.87602923E-02;
  COFD[1288] = -2.15347051E+01;
  COFD[1289] = 4.99548160E+00;
  COFD[1290] = -3.84541130E-01;
  COFD[1291] = 1.46252961E-02;
  COFD[1292] = -2.13866866E+01;
  COFD[1293] = 4.85816818E+00;
  COFD[1294] = -3.61859198E-01;
  COFD[1295] = 1.34347998E-02;
  COFD[1296] = -2.15594116E+01;
  COFD[1297] = 4.99548160E+00;
  COFD[1298] = -3.84541130E-01;
  COFD[1299] = 1.46252961E-02;
  COFD[1300] = -2.06489306E+01;
  COFD[1301] = 4.46770471E+00;
  COFD[1302] = -2.97972198E-01;
  COFD[1303] = 1.01116412E-02;
  COFD[1304] = -2.06438575E+01;
  COFD[1305] = 4.46770471E+00;
  COFD[1306] = -2.97972198E-01;
  COFD[1307] = 1.01116412E-02;
  COFD[1308] = -1.91593673E+01;
  COFD[1309] = 4.79990484E+00;
  COFD[1310] = -4.16700940E-01;
  COFD[1311] = 1.84717181E-02;
  COFD[1312] = -1.93751244E+01;
  COFD[1313] = 4.42649312E+00;
  COFD[1314] = -3.71750611E-01;
  COFD[1315] = 1.66724904E-02;
  COFD[1316] = -1.94104030E+01;
  COFD[1317] = 4.91881880E+00;
  COFD[1318] = -4.30621727E-01;
  COFD[1319] = 1.90115470E-02;
  COFD[1320] = -1.68256395E+01;
  COFD[1321] = 4.05650314E+00;
  COFD[1322] = -3.23082632E-01;
  COFD[1323] = 1.45263472E-02;
  COFD[1324] = -1.95989967E+01;
  COFD[1325] = 4.86773881E+00;
  COFD[1326] = -4.24796060E-01;
  COFD[1327] = 1.87934811E-02;
  COFD[1328] = -2.07128235E+01;
  COFD[1329] = 5.22471147E+00;
  COFD[1330] = -4.67607197E-01;
  COFD[1331] = 2.05082142E-02;
  COFD[1332] = -2.07128235E+01;
  COFD[1333] = 5.22471147E+00;
  COFD[1334] = -4.67607197E-01;
  COFD[1335] = 2.05082142E-02;
  COFD[1336] = -1.22646769E+01;
  COFD[1337] = 2.73074409E+00;
  COFD[1338] = -1.48960245E-01;
  COFD[1339] = 6.87635559E-03;
  COFD[1340] = -1.91885079E+01;
  COFD[1341] = 4.80792873E+00;
  COFD[1342] = -4.17710332E-01;
  COFD[1343] = 1.85143704E-02;
  COFD[1344] = -1.57572302E+01;
  COFD[1345] = 3.60137256E+00;
  COFD[1346] = -2.63955612E-01;
  COFD[1347] = 1.19562427E-02;
  COFD[1348] = -2.16876073E+01;
  COFD[1349] = 5.52912323E+00;
  COFD[1350] = -5.02611621E-01;
  COFD[1351] = 2.18432892E-02;
  COFD[1352] = -1.85806726E+01;
  COFD[1353] = 4.63135891E+00;
  COFD[1354] = -3.97356061E-01;
  COFD[1355] = 1.77424015E-02;
  COFD[1356] = -2.20487184E+01;
  COFD[1357] = 5.61717340E+00;
  COFD[1358] = -5.12963928E-01;
  COFD[1359] = 2.22494915E-02;
  COFD[1360] = -1.68688450E+01;
  COFD[1361] = 4.07436246E+00;
  COFD[1362] = -3.25294692E-01;
  COFD[1363] = 1.46177587E-02;
  COFD[1364] = -1.60810237E+01;
  COFD[1365] = 3.73663964E+00;
  COFD[1366] = -2.82091747E-01;
  COFD[1367] = 1.27703717E-02;
  COFD[1368] = -1.46697009E+01;
  COFD[1369] = 3.34099775E+00;
  COFD[1370] = -2.28926170E-01;
  COFD[1371] = 1.03757053E-02;
  COFD[1372] = -1.46889273E+01;
  COFD[1373] = 3.34099775E+00;
  COFD[1374] = -2.28926170E-01;
  COFD[1375] = 1.03757053E-02;
  COFD[1376] = -1.60882025E+01;
  COFD[1377] = 3.73663964E+00;
  COFD[1378] = -2.82091747E-01;
  COFD[1379] = 1.27703717E-02;
  COFD[1380] = -2.14387421E+01;
  COFD[1381] = 5.69059069E+00;
  COFD[1382] = -5.08172820E-01;
  COFD[1383] = 2.14277961E-02;
  COFD[1384] = -1.60950513E+01;
  COFD[1385] = 3.73663964E+00;
  COFD[1386] = -2.82091747E-01;
  COFD[1387] = 1.27703717E-02;
  COFD[1388] = -1.51958271E+01;
  COFD[1389] = 4.08009081E+00;
  COFD[1390] = -3.25974206E-01;
  COFD[1391] = 1.46443746E-02;
  COFD[1392] = -1.68459946E+01;
  COFD[1393] = 4.07436246E+00;
  COFD[1394] = -3.25294692E-01;
  COFD[1395] = 1.46177587E-02;
  COFD[1396] = -1.68459946E+01;
  COFD[1397] = 4.07436246E+00;
  COFD[1398] = -3.25294692E-01;
  COFD[1399] = 1.46177587E-02;
  COFD[1400] = -2.13467342E+01;
  COFD[1401] = 5.62017718E+00;
  COFD[1402] = -5.13235471E-01;
  COFD[1403] = 2.22562169E-02;
  COFD[1404] = -2.13550473E+01;
  COFD[1405] = 5.62017718E+00;
  COFD[1406] = -5.13235471E-01;
  COFD[1407] = 2.22562169E-02;
  COFD[1408] = -2.10480365E+01;
  COFD[1409] = 5.50220431E+00;
  COFD[1410] = -4.99710237E-01;
  COFD[1411] = 2.17423321E-02;
  COFD[1412] = -1.90113079E+01;
  COFD[1413] = 4.76461849E+00;
  COFD[1414] = -4.12345773E-01;
  COFD[1415] = 1.82917938E-02;
  COFD[1416] = -1.85904245E+01;
  COFD[1417] = 4.63135891E+00;
  COFD[1418] = -3.97356061E-01;
  COFD[1419] = 1.77424015E-02;
  COFD[1420] = -1.91802135E+01;
  COFD[1421] = 4.80792873E+00;
  COFD[1422] = -4.17710332E-01;
  COFD[1423] = 1.85143704E-02;
  COFD[1424] = -1.69224336E+01;
  COFD[1425] = 4.14075383E+00;
  COFD[1426] = -3.34082549E-01;
  COFD[1427] = 1.50077204E-02;
  COFD[1428] = -2.11053659E+01;
  COFD[1429] = 5.48192321E+00;
  COFD[1430] = -4.98166647E-01;
  COFD[1431] = 2.17221333E-02;
  COFD[1432] = -2.11100699E+01;
  COFD[1433] = 5.48192321E+00;
  COFD[1434] = -4.98166647E-01;
  COFD[1435] = 2.17221333E-02;
  COFD[1436] = -1.93550571E+01;
  COFD[1437] = 4.80637892E+00;
  COFD[1438] = -4.17516720E-01;
  COFD[1439] = 1.85062434E-02;
  COFD[1440] = -1.95941169E+01;
  COFD[1441] = 4.86773881E+00;
  COFD[1442] = -4.24796060E-01;
  COFD[1443] = 1.87934811E-02;
  COFD[1444] = -2.16908674E+01;
  COFD[1445] = 5.52912323E+00;
  COFD[1446] = -5.02611621E-01;
  COFD[1447] = 2.18432892E-02;
  COFD[1448] = -2.07372608E+01;
  COFD[1449] = 5.22471147E+00;
  COFD[1450] = -4.67607197E-01;
  COFD[1451] = 2.05082142E-02;
  COFD[1452] = -2.16858850E+01;
  COFD[1453] = 5.52912323E+00;
  COFD[1454] = -5.02611621E-01;
  COFD[1455] = 2.18432892E-02;
  COFD[1456] = -2.20474308E+01;
  COFD[1457] = 5.61717340E+00;
  COFD[1458] = -5.12963928E-01;
  COFD[1459] = 2.22494915E-02;
  COFD[1460] = -2.17093204E+01;
  COFD[1461] = 5.52912323E+00;
  COFD[1462] = -5.02611621E-01;
  COFD[1463] = 2.18432892E-02;
  COFD[1464] = -2.23108326E+01;
  COFD[1465] = 5.64849872E+00;
  COFD[1466] = -5.07896114E-01;
  COFD[1467] = 2.16353587E-02;
  COFD[1468] = -2.23053293E+01;
  COFD[1469] = 5.64811803E+00;
  COFD[1470] = -5.07801617E-01;
  COFD[1471] = 2.16292975E-02;
  COFD[1472] = -1.57330387E+01;
  COFD[1473] = 3.59522642E+00;
  COFD[1474] = -2.63155485E-01;
  COFD[1475] = 1.19213463E-02;
  COFD[1476] = -2.38342076E+01;
  COFD[1477] = 5.58077369E+00;
  COFD[1478] = -4.85290481E-01;
  COFD[1479] = 2.00627377E-02;
  COFD[1480] = -2.10412741E+01;
  COFD[1481] = 4.77480735E+00;
  COFD[1482] = -3.48088937E-01;
  COFD[1483] = 1.27148736E-02;
  COFD[1484] = -2.21770779E+01;
  COFD[1485] = 5.68744998E+00;
  COFD[1486] = -5.10793511E-01;
  COFD[1487] = 2.16704352E-02;
  COFD[1488] = -2.15675111E+01;
  COFD[1489] = 4.87393197E+00;
  COFD[1490] = -3.64472579E-01;
  COFD[1491] = 1.35722107E-02;
  COFD[1492] = -2.02519341E+01;
  COFD[1493] = 4.11843264E+00;
  COFD[1494] = -2.42988196E-01;
  COFD[1495] = 7.31555013E-03;
  COFD[1496] = -2.02519341E+01;
  COFD[1497] = 4.11843264E+00;
  COFD[1498] = -2.42988196E-01;
  COFD[1499] = 7.31555013E-03;
  COFD[1500] = -1.72184222E+01;
  COFD[1501] = 4.44378938E+00;
  COFD[1502] = -3.73963936E-01;
  COFD[1503] = 1.67675483E-02;
  COFD[1504] = -2.15365186E+01;
  COFD[1505] = 4.99548160E+00;
  COFD[1506] = -3.84541130E-01;
  COFD[1507] = 1.46252961E-02;
  COFD[1508] = -2.16876073E+01;
  COFD[1509] = 5.52912323E+00;
  COFD[1510] = -5.02611621E-01;
  COFD[1511] = 2.18432892E-02;
  COFD[1512] = -1.87009754E+01;
  COFD[1513] = 3.28867876E+00;
  COFD[1514] = -1.13783324E-01;
  COFD[1515] = 8.29764378E-04;
  COFD[1516] = -2.20541783E+01;
  COFD[1517] = 5.34786767E+00;
  COFD[1518] = -4.44160169E-01;
  COFD[1519] = 1.78077063E-02;
  COFD[1520] = -1.83222039E+01;
  COFD[1521] = 3.05109646E+00;
  COFD[1522] = -7.75253866E-02;
  COFD[1523] = -9.62211004E-04;
  COFD[1524] = -2.22010228E+01;
  COFD[1525] = 5.69706859E+00;
  COFD[1526] = -5.11416131E-01;
  COFD[1527] = 2.16711595E-02;
  COFD[1528] = -2.20099125E+01;
  COFD[1529] = 5.63470135E+00;
  COFD[1530] = -5.14478143E-01;
  COFD[1531] = 2.22826045E-02;
  COFD[1532] = -2.06764596E+01;
  COFD[1533] = 5.34618044E+00;
  COFD[1534] = -4.83331563E-01;
  COFD[1535] = 2.11940573E-02;
  COFD[1536] = -2.07016822E+01;
  COFD[1537] = 5.34618044E+00;
  COFD[1538] = -4.83331563E-01;
  COFD[1539] = 2.11940573E-02;
  COFD[1540] = -2.20208641E+01;
  COFD[1541] = 5.63470135E+00;
  COFD[1542] = -5.14478143E-01;
  COFD[1543] = 2.22826045E-02;
  COFD[1544] = -1.39859525E+01;
  COFD[1545] = 1.55451537E+00;
  COFD[1546] = 1.48062755E-01;
  COFD[1547] = -1.20297011E-02;
  COFD[1548] = -2.20313904E+01;
  COFD[1549] = 5.63470135E+00;
  COFD[1550] = -5.14478143E-01;
  COFD[1551] = 2.22826045E-02;
  COFD[1552] = -2.05106259E+01;
  COFD[1553] = 5.69720134E+00;
  COFD[1554] = -5.11137553E-01;
  COFD[1555] = 2.16464526E-02;
  COFD[1556] = -2.21717646E+01;
  COFD[1557] = 5.69706859E+00;
  COFD[1558] = -5.11416131E-01;
  COFD[1559] = 2.16711595E-02;
  COFD[1560] = -2.21717646E+01;
  COFD[1561] = 5.69706859E+00;
  COFD[1562] = -5.11416131E-01;
  COFD[1563] = 2.16711595E-02;
  COFD[1564] = -1.75244815E+01;
  COFD[1565] = 3.03695857E+00;
  COFD[1566] = -7.53570650E-02;
  COFD[1567] = -1.06951881E-03;
  COFD[1568] = -1.75368726E+01;
  COFD[1569] = 3.03695857E+00;
  COFD[1570] = -7.53570650E-02;
  COFD[1571] = -1.06951881E-03;
  COFD[1572] = -1.84076624E+01;
  COFD[1573] = 3.44055898E+00;
  COFD[1574] = -1.37075422E-01;
  COFD[1575] = 1.98508013E-03;
  COFD[1576] = -2.16654806E+01;
  COFD[1577] = 5.06148364E+00;
  COFD[1578] = -3.95727634E-01;
  COFD[1579] = 1.52235677E-02;
  COFD[1580] = -2.20683535E+01;
  COFD[1581] = 5.34786767E+00;
  COFD[1582] = -4.44160169E-01;
  COFD[1583] = 1.78077063E-02;
  COFD[1584] = -2.15241510E+01;
  COFD[1585] = 4.99548160E+00;
  COFD[1586] = -3.84541130E-01;
  COFD[1587] = 1.46252961E-02;
  COFD[1588] = -2.22988493E+01;
  COFD[1589] = 5.69221061E+00;
  COFD[1590] = -5.08960069E-01;
  COFD[1591] = 2.14865997E-02;
  COFD[1592] = -1.87080864E+01;
  COFD[1593] = 3.50982702E+00;
  COFD[1594] = -1.47750833E-01;
  COFD[1595] = 2.51627764E-03;
  COFD[1596] = -1.87157571E+01;
  COFD[1597] = 3.50982702E+00;
  COFD[1598] = -1.47750833E-01;
  COFD[1599] = 2.51627764E-03;
  COFD[1600] = -2.17265278E+01;
  COFD[1601] = 4.99861193E+00;
  COFD[1602] = -3.85052101E-01;
  COFD[1603] = 1.46519879E-02;
  COFD[1604] = -2.15595993E+01;
  COFD[1605] = 4.87393197E+00;
  COFD[1606] = -3.64472579E-01;
  COFD[1607] = 1.35722107E-02;
  COFD[1608] = -1.87071695E+01;
  COFD[1609] = 3.28867876E+00;
  COFD[1610] = -1.13783324E-01;
  COFD[1611] = 8.29764378E-04;
  COFD[1612] = -2.02945780E+01;
  COFD[1613] = 4.11843264E+00;
  COFD[1614] = -2.42988196E-01;
  COFD[1615] = 7.31555013E-03;
  COFD[1616] = -1.86977178E+01;
  COFD[1617] = 3.28867876E+00;
  COFD[1618] = -1.13783324E-01;
  COFD[1619] = 8.29764378E-04;
  COFD[1620] = -1.83196729E+01;
  COFD[1621] = 3.05109646E+00;
  COFD[1622] = -7.75253866E-02;
  COFD[1623] = -9.62211004E-04;
  COFD[1624] = -1.87429412E+01;
  COFD[1625] = 3.28867876E+00;
  COFD[1626] = -1.13783324E-01;
  COFD[1627] = 8.29764378E-04;
  COFD[1628] = -1.63482811E+01;
  COFD[1629] = 2.10881121E+00;
  COFD[1630] = 6.52480731E-02;
  COFD[1631] = -7.99020731E-03;
  COFD[1632] = -1.63376941E+01;
  COFD[1633] = 2.10546851E+00;
  COFD[1634] = 6.57487483E-02;
  COFD[1635] = -8.01461150E-03;
  COFD[1636] = -2.16604323E+01;
  COFD[1637] = 5.52209451E+00;
  COFD[1638] = -5.01800802E-01;
  COFD[1639] = 2.18122017E-02;
  COFD[1640] = -2.19957808E+01;
  COFD[1641] = 5.34402519E+00;
  COFD[1642] = -4.83068822E-01;
  COFD[1643] = 2.11832962E-02;
  COFD[1644] = -2.18016669E+01;
  COFD[1645] = 5.66495194E+00;
  COFD[1646] = -5.12328464E-01;
  COFD[1647] = 2.19277949E-02;
  COFD[1648] = -1.95860363E+01;
  COFD[1649] = 5.02452773E+00;
  COFD[1650] = -4.43782411E-01;
  COFD[1651] = 1.95604414E-02;
  COFD[1652] = -2.20886792E+01;
  COFD[1653] = 5.66947709E+00;
  COFD[1654] = -5.15131199E-01;
  COFD[1655] = 2.21454794E-02;
  COFD[1656] = -2.24734294E+01;
  COFD[1657] = 5.67806029E+00;
  COFD[1658] = -5.03991163E-01;
  COFD[1659] = 2.11372864E-02;
  COFD[1660] = -2.24734294E+01;
  COFD[1661] = 5.67806029E+00;
  COFD[1662] = -5.03991163E-01;
  COFD[1663] = 2.11372864E-02;
  COFD[1664] = -1.40517241E+01;
  COFD[1665] = 3.35868034E+00;
  COFD[1666] = -2.31350436E-01;
  COFD[1667] = 1.04871016E-02;
  COFD[1668] = -2.17996373E+01;
  COFD[1669] = 5.66379176E+00;
  COFD[1670] = -5.16553812E-01;
  COFD[1671] = 2.23002301E-02;
  COFD[1672] = -1.85806726E+01;
  COFD[1673] = 4.63135891E+00;
  COFD[1674] = -3.97356061E-01;
  COFD[1675] = 1.77424015E-02;
  COFD[1676] = -2.20541783E+01;
  COFD[1677] = 5.34786767E+00;
  COFD[1678] = -4.44160169E-01;
  COFD[1679] = 1.78077063E-02;
  COFD[1680] = -2.11580145E+01;
  COFD[1681] = 5.48915410E+00;
  COFD[1682] = -4.98433602E-01;
  COFD[1683] = 2.17047430E-02;
  COFD[1684] = -2.19530975E+01;
  COFD[1685] = 5.23115443E+00;
  COFD[1686] = -4.24338954E-01;
  COFD[1687] = 1.67465343E-02;
  COFD[1688] = -1.96529178E+01;
  COFD[1689] = 5.05139863E+00;
  COFD[1690] = -4.47150410E-01;
  COFD[1691] = 1.97024129E-02;
  COFD[1692] = -1.87148165E+01;
  COFD[1693] = 4.67388141E+00;
  COFD[1694] = -4.00961748E-01;
  COFD[1695] = 1.78132254E-02;
  COFD[1696] = -1.74774489E+01;
  COFD[1697] = 4.37416294E+00;
  COFD[1698] = -3.65107627E-01;
  COFD[1699] = 1.63899597E-02;
  COFD[1700] = -1.74961504E+01;
  COFD[1701] = 4.37416294E+00;
  COFD[1702] = -3.65107627E-01;
  COFD[1703] = 1.63899597E-02;
  COFD[1704] = -1.87217148E+01;
  COFD[1705] = 4.67388141E+00;
  COFD[1706] = -4.00961748E-01;
  COFD[1707] = 1.78132254E-02;
  COFD[1708] = -2.03818235E+01;
  COFD[1709] = 4.95053951E+00;
  COFD[1710] = -3.77134666E-01;
  COFD[1711] = 1.42368958E-02;
  COFD[1712] = -1.87282922E+01;
  COFD[1713] = 4.67388141E+00;
  COFD[1714] = -4.00961748E-01;
  COFD[1715] = 1.78132254E-02;
  COFD[1716] = -1.80373598E+01;
  COFD[1717] = 5.06144525E+00;
  COFD[1718] = -4.48405432E-01;
  COFD[1719] = 1.97551196E-02;
  COFD[1720] = -1.96306433E+01;
  COFD[1721] = 5.05139863E+00;
  COFD[1722] = -4.47150410E-01;
  COFD[1723] = 1.97024129E-02;
  COFD[1724] = -1.96306433E+01;
  COFD[1725] = 5.05139863E+00;
  COFD[1726] = -4.47150410E-01;
  COFD[1727] = 1.97024129E-02;
  COFD[1728] = -2.12543007E+01;
  COFD[1729] = 5.21899155E+00;
  COFD[1730] = -4.22323327E-01;
  COFD[1731] = 1.66401604E-02;
  COFD[1732] = -2.12623028E+01;
  COFD[1733] = 5.21899155E+00;
  COFD[1734] = -4.22323327E-01;
  COFD[1735] = 1.66401604E-02;
  COFD[1736] = -2.17581213E+01;
  COFD[1737] = 5.49946039E+00;
  COFD[1738] = -4.70973967E-01;
  COFD[1739] = 1.92776036E-02;
  COFD[1740] = -2.16804439E+01;
  COFD[1741] = 5.64741106E+00;
  COFD[1742] = -5.15473555E-01;
  COFD[1743] = 2.22977945E-02;
  COFD[1744] = -2.11674199E+01;
  COFD[1745] = 5.48915410E+00;
  COFD[1746] = -4.98433602E-01;
  COFD[1747] = 2.17047430E-02;
  COFD[1748] = -2.17916534E+01;
  COFD[1749] = 5.66379176E+00;
  COFD[1750] = -5.16553812E-01;
  COFD[1751] = 2.23002301E-02;
  COFD[1752] = -1.96884189E+01;
  COFD[1753] = 5.09954424E+00;
  COFD[1754] = -4.52871032E-01;
  COFD[1755] = 1.99290563E-02;
  COFD[1756] = -2.17782694E+01;
  COFD[1757] = 5.42990885E+00;
  COFD[1758] = -4.58860891E-01;
  COFD[1759] = 1.86184915E-02;
  COFD[1760] = -2.17827680E+01;
  COFD[1761] = 5.42990885E+00;
  COFD[1762] = -4.58860891E-01;
  COFD[1763] = 1.86184915E-02;
  COFD[1764] = -2.19599621E+01;
  COFD[1765] = 5.66323135E+00;
  COFD[1766] = -5.16518069E-01;
  COFD[1767] = 2.23002455E-02;
  COFD[1768] = -2.20840106E+01;
  COFD[1769] = 5.66947709E+00;
  COFD[1770] = -5.15131199E-01;
  COFD[1771] = 2.21454794E-02;
  COFD[1772] = -2.20572657E+01;
  COFD[1773] = 5.34786767E+00;
  COFD[1774] = -4.44160169E-01;
  COFD[1775] = 1.78077063E-02;
  COFD[1776] = -2.24966654E+01;
  COFD[1777] = 5.67806029E+00;
  COFD[1778] = -5.03991163E-01;
  COFD[1779] = 2.11372864E-02;
  COFD[1780] = -2.20525468E+01;
  COFD[1781] = 5.34786767E+00;
  COFD[1782] = -4.44160169E-01;
  COFD[1783] = 1.78077063E-02;
  COFD[1784] = -2.19518805E+01;
  COFD[1785] = 5.23115443E+00;
  COFD[1786] = -4.24338954E-01;
  COFD[1787] = 1.67465343E-02;
  COFD[1788] = -2.20747210E+01;
  COFD[1789] = 5.34786767E+00;
  COFD[1790] = -4.44160169E-01;
  COFD[1791] = 1.78077063E-02;
  COFD[1792] = -2.12993100E+01;
  COFD[1793] = 4.87520005E+00;
  COFD[1794] = -3.64681670E-01;
  COFD[1795] = 1.35831766E-02;
  COFD[1796] = -2.12939940E+01;
  COFD[1797] = 4.87520005E+00;
  COFD[1798] = -3.64681670E-01;
  COFD[1799] = 1.35831766E-02;
  COFD[1800] = -1.85562214E+01;
  COFD[1801] = 4.62539600E+00;
  COFD[1802] = -3.96640913E-01;
  COFD[1803] = 1.77139115E-02;
  COFD[1804] = -2.37835094E+01;
  COFD[1805] = 5.48425494E+00;
  COFD[1806] = -4.68327600E-01;
  COFD[1807] = 1.91335179E-02;
  COFD[1808] = -2.08083408E+01;
  COFD[1809] = 4.60022609E+00;
  COFD[1810] = -3.20098606E-01;
  COFD[1811] = 1.12745986E-02;
  COFD[1812] = -2.23456670E+01;
  COFD[1813] = 5.69153566E+00;
  COFD[1814] = -5.08605460E-01;
  COFD[1815] = 2.14598086E-02;
  COFD[1816] = -2.14305236E+01;
  COFD[1817] = 4.74312020E+00;
  COFD[1818] = -3.42998475E-01;
  COFD[1819] = 1.24528839E-02;
  COFD[1820] = -1.98891989E+01;
  COFD[1821] = 3.88632523E+00;
  COFD[1822] = -2.06802738E-01;
  COFD[1823] = 5.48944874E-03;
  COFD[1824] = -1.98891989E+01;
  COFD[1825] = 3.88632523E+00;
  COFD[1826] = -2.06802738E-01;
  COFD[1827] = 5.48944874E-03;
  COFD[1828] = -1.75698825E+01;
  COFD[1829] = 4.54000784E+00;
  COFD[1830] = -3.86295602E-01;
  COFD[1831] = 1.72969843E-02;
  COFD[1832] = -2.13880455E+01;
  COFD[1833] = 4.85816818E+00;
  COFD[1834] = -3.61859198E-01;
  COFD[1835] = 1.34347998E-02;
  COFD[1836] = -2.20487184E+01;
  COFD[1837] = 5.61717340E+00;
  COFD[1838] = -5.12963928E-01;
  COFD[1839] = 2.22494915E-02;
  COFD[1840] = -1.83222039E+01;
  COFD[1841] = 3.05109646E+00;
  COFD[1842] = -7.75253866E-02;
  COFD[1843] = -9.62211004E-04;
  COFD[1844] = -2.19530975E+01;
  COFD[1845] = 5.23115443E+00;
  COFD[1846] = -4.24338954E-01;
  COFD[1847] = 1.67465343E-02;
  COFD[1848] = -1.78827271E+01;
  COFD[1849] = 2.78750377E+00;
  COFD[1850] = -3.75661727E-02;
  COFD[1851] = -2.93067908E-03;
  COFD[1852] = -2.23400234E+01;
  COFD[1853] = 5.68920173E+00;
  COFD[1854] = -5.07537130E-01;
  COFD[1855] = 2.13807918E-02;
  COFD[1856] = -2.22524251E+01;
  COFD[1857] = 5.66831709E+00;
  COFD[1858] = -5.16826635E-01;
  COFD[1859] = 2.22987354E-02;
  COFD[1860] = -2.10138841E+01;
  COFD[1861] = 5.42577327E+00;
  COFD[1862] = -4.92756280E-01;
  COFD[1863] = 2.15671078E-02;
  COFD[1864] = -2.10397944E+01;
  COFD[1865] = 5.42577327E+00;
  COFD[1866] = -4.92756280E-01;
  COFD[1867] = 2.15671078E-02;
  COFD[1868] = -2.22615149E+01;
  COFD[1869] = 5.66777991E+00;
  COFD[1870] = -5.16795849E-01;
  COFD[1871] = 2.22990514E-02;
  COFD[1872] = -1.53149885E+01;
  COFD[1873] = 2.14009360E+00;
  COFD[1874] = 5.93887776E-02;
  COFD[1875] = -7.65730317E-03;
  COFD[1876] = -2.22725452E+01;
  COFD[1877] = 5.66777991E+00;
  COFD[1878] = -5.16795849E-01;
  COFD[1879] = 2.22990514E-02;
  COFD[1880] = -2.06545761E+01;
  COFD[1881] = 5.68796184E+00;
  COFD[1882] = -5.07058830E-01;
  COFD[1883] = 2.13464896E-02;
  COFD[1884] = -2.23100498E+01;
  COFD[1885] = 5.68920173E+00;
  COFD[1886] = -5.07537130E-01;
  COFD[1887] = 2.13807918E-02;
  COFD[1888] = -2.23100498E+01;
  COFD[1889] = 5.68920173E+00;
  COFD[1890] = -5.07537130E-01;
  COFD[1891] = 2.13807918E-02;
  COFD[1892] = -1.70696319E+01;
  COFD[1893] = 2.76803494E+00;
  COFD[1894] = -3.45011618E-02;
  COFD[1895] = -3.08591460E-03;
  COFD[1896] = -1.70825629E+01;
  COFD[1897] = 2.76803494E+00;
  COFD[1898] = -3.45011618E-02;
  COFD[1899] = -3.08591460E-03;
  COFD[1900] = -1.84276935E+01;
  COFD[1901] = 3.40920978E+00;
  COFD[1902] = -1.33092795E-01;
  COFD[1903] = 1.81782995E-03;
  COFD[1904] = -2.15379038E+01;
  COFD[1905] = 4.92672935E+00;
  COFD[1906] = -3.73194449E-01;
  COFD[1907] = 1.40298739E-02;
  COFD[1908] = -2.19678419E+01;
  COFD[1909] = 5.23115443E+00;
  COFD[1910] = -4.24338954E-01;
  COFD[1911] = 1.67465343E-02;
  COFD[1912] = -2.13751384E+01;
  COFD[1913] = 4.85816818E+00;
  COFD[1914] = -3.61859198E-01;
  COFD[1915] = 1.34347998E-02;
  COFD[1916] = -2.24619148E+01;
  COFD[1917] = 5.68259060E+00;
  COFD[1918] = -5.04840893E-01;
  COFD[1919] = 2.11855526E-02;
  COFD[1920] = -1.83689025E+01;
  COFD[1921] = 3.29018405E+00;
  COFD[1922] = -1.14013582E-01;
  COFD[1923] = 8.41167937E-04;
  COFD[1924] = -1.83770083E+01;
  COFD[1925] = 3.29018405E+00;
  COFD[1926] = -1.14013582E-01;
  COFD[1927] = 8.41167937E-04;
  COFD[1928] = -2.15771044E+01;
  COFD[1929] = 4.86045752E+00;
  COFD[1930] = -3.62240800E-01;
  COFD[1931] = 1.34549132E-02;
  COFD[1932] = -2.14221700E+01;
  COFD[1933] = 4.74312020E+00;
  COFD[1934] = -3.42998475E-01;
  COFD[1935] = 1.24528839E-02;
  COFD[1936] = -1.83289117E+01;
  COFD[1937] = 3.05109646E+00;
  COFD[1938] = -7.75253866E-02;
  COFD[1939] = -9.62211004E-04;
  COFD[1940] = -1.99347931E+01;
  COFD[1941] = 3.88632523E+00;
  COFD[1942] = -2.06802738E-01;
  COFD[1943] = 5.48944874E-03;
  COFD[1944] = -1.83186788E+01;
  COFD[1945] = 3.05109646E+00;
  COFD[1946] = -7.75253866E-02;
  COFD[1947] = -9.62211004E-04;
  COFD[1948] = -1.78799696E+01;
  COFD[1949] = 2.78750377E+00;
  COFD[1950] = -3.75661727E-02;
  COFD[1951] = -2.93067908E-03;
  COFD[1952] = -1.83677895E+01;
  COFD[1953] = 3.05109646E+00;
  COFD[1954] = -7.75253866E-02;
  COFD[1955] = -9.62211004E-04;
  COFD[1956] = -1.62024358E+01;
  COFD[1957] = 1.99426236E+00;
  COFD[1958] = 8.16671779E-02;
  COFD[1959] = -8.76234636E-03;
  COFD[1960] = -1.61986745E+01;
  COFD[1961] = 1.99402574E+00;
  COFD[1962] = 8.16970869E-02;
  COFD[1963] = -8.76358100E-03;
  COFD[1964] = -2.20270040E+01;
  COFD[1965] = 5.61263501E+00;
  COFD[1966] = -5.12541597E-01;
  COFD[1967] = 2.22382754E-02;
  COFD[1968] = -2.03023823E+01;
  COFD[1969] = 4.84155965E+00;
  COFD[1970] = -4.21649019E-01;
  COFD[1971] = 1.86672992E-02;
  COFD[1972] = -2.07569884E+01;
  COFD[1973] = 5.45048622E+00;
  COFD[1974] = -4.95678069E-01;
  COFD[1975] = 2.16826855E-02;
  COFD[1976] = -1.82302992E+01;
  COFD[1977] = 4.62413676E+00;
  COFD[1978] = -3.96485100E-01;
  COFD[1979] = 1.77074617E-02;
  COFD[1980] = -2.08856540E+01;
  COFD[1981] = 5.38939502E+00;
  COFD[1982] = -4.88508342E-01;
  COFD[1983] = 2.14017409E-02;
  COFD[1984] = -2.18020150E+01;
  COFD[1985] = 5.65210943E+00;
  COFD[1986] = -5.15837732E-01;
  COFD[1987] = 2.23031110E-02;
  COFD[1988] = -2.18020150E+01;
  COFD[1989] = 5.65210943E+00;
  COFD[1990] = -5.15837732E-01;
  COFD[1991] = 2.23031110E-02;
  COFD[1992] = -1.30053412E+01;
  COFD[1993] = 3.00227472E+00;
  COFD[1994] = -1.84384037E-01;
  COFD[1995] = 8.41707179E-03;
  COFD[1996] = -2.04392836E+01;
  COFD[1997] = 5.30470298E+00;
  COFD[1998] = -4.78070128E-01;
  COFD[1999] = 2.09693013E-02;
  COFD[2000] = -1.68688450E+01;
  COFD[2001] = 4.07436246E+00;
  COFD[2002] = -3.25294692E-01;
  COFD[2003] = 1.46177587E-02;
  COFD[2004] = -2.22010228E+01;
  COFD[2005] = 5.69706859E+00;
  COFD[2006] = -5.11416131E-01;
  COFD[2007] = 2.16711595E-02;
  COFD[2008] = -1.96529178E+01;
  COFD[2009] = 5.05139863E+00;
  COFD[2010] = -4.47150410E-01;
  COFD[2011] = 1.97024129E-02;
  COFD[2012] = -2.23400234E+01;
  COFD[2013] = 5.68920173E+00;
  COFD[2014] = -5.07537130E-01;
  COFD[2015] = 2.13807918E-02;
  COFD[2016] = -1.82754257E+01;
  COFD[2017] = 4.63999331E+00;
  COFD[2018] = -3.98311828E-01;
  COFD[2019] = 1.77766109E-02;
  COFD[2020] = -1.72726080E+01;
  COFD[2021] = 4.24483918E+00;
  COFD[2022] = -3.48135608E-01;
  COFD[2023] = 1.56435370E-02;
  COFD[2024] = -1.59069185E+01;
  COFD[2025] = 3.85870007E+00;
  COFD[2026] = -2.98154723E-01;
  COFD[2027] = 1.34776935E-02;
  COFD[2028] = -1.59214858E+01;
  COFD[2029] = 3.85870007E+00;
  COFD[2030] = -2.98154723E-01;
  COFD[2031] = 1.34776935E-02;
  COFD[2032] = -1.72775133E+01;
  COFD[2033] = 4.24483918E+00;
  COFD[2034] = -3.48135608E-01;
  COFD[2035] = 1.56435370E-02;
  COFD[2036] = -2.12270291E+01;
  COFD[2037] = 5.58293886E+00;
  COFD[2038] = -4.85683839E-01;
  COFD[2039] = 2.00846811E-02;
  COFD[2040] = -1.72821723E+01;
  COFD[2041] = 4.24483918E+00;
  COFD[2042] = -3.48135608E-01;
  COFD[2043] = 1.56435370E-02;
  COFD[2044] = -1.67296679E+01;
  COFD[2045] = 4.64465126E+00;
  COFD[2046] = -3.98803383E-01;
  COFD[2047] = 1.77929328E-02;
  COFD[2048] = -1.82577755E+01;
  COFD[2049] = 4.63999331E+00;
  COFD[2050] = -3.98311828E-01;
  COFD[2051] = 1.77766109E-02;
  COFD[2052] = -1.82577755E+01;
  COFD[2053] = 4.63999331E+00;
  COFD[2054] = -3.98311828E-01;
  COFD[2055] = 1.77766109E-02;
  COFD[2056] = -2.17117551E+01;
  COFD[2057] = 5.68824628E+00;
  COFD[2058] = -5.07164081E-01;
  COFD[2059] = 2.13539742E-02;
  COFD[2060] = -2.17175170E+01;
  COFD[2061] = 5.68824628E+00;
  COFD[2062] = -5.07164081E-01;
  COFD[2063] = 2.13539742E-02;
  COFD[2064] = -2.15288760E+01;
  COFD[2065] = 5.66468469E+00;
  COFD[2066] = -5.11326179E-01;
  COFD[2067] = 2.18425146E-02;
  COFD[2068] = -2.01618838E+01;
  COFD[2069] = 5.22960509E+00;
  COFD[2070] = -4.68215587E-01;
  COFD[2071] = 2.05336694E-02;
  COFD[2072] = -1.96597861E+01;
  COFD[2073] = 5.05139863E+00;
  COFD[2074] = -4.47150410E-01;
  COFD[2075] = 1.97024129E-02;
  COFD[2076] = -2.04335360E+01;
  COFD[2077] = 5.30470298E+00;
  COFD[2078] = -4.78070128E-01;
  COFD[2079] = 2.09693013E-02;
  COFD[2080] = -1.81543569E+01;
  COFD[2081] = 4.65698092E+00;
  COFD[2082] = -3.99646718E-01;
  COFD[2083] = 1.77956180E-02;
  COFD[2084] = -2.16530812E+01;
  COFD[2085] = 5.64919890E+00;
  COFD[2086] = -5.07174967E-01;
  COFD[2087] = 2.15693228E-02;
  COFD[2088] = -2.16561753E+01;
  COFD[2089] = 5.64919890E+00;
  COFD[2090] = -5.07174967E-01;
  COFD[2091] = 2.15693228E-02;
  COFD[2092] = -2.05833341E+01;
  COFD[2093] = 5.30254126E+00;
  COFD[2094] = -4.77796012E-01;
  COFD[2095] = 2.09576046E-02;
  COFD[2096] = -2.08824342E+01;
  COFD[2097] = 5.38939502E+00;
  COFD[2098] = -4.88508342E-01;
  COFD[2099] = 2.14017409E-02;
  COFD[2100] = -2.22030140E+01;
  COFD[2101] = 5.69706859E+00;
  COFD[2102] = -5.11416131E-01;
  COFD[2103] = 2.16711595E-02;
  COFD[2104] = -2.18177115E+01;
  COFD[2105] = 5.65210943E+00;
  COFD[2106] = -5.15837732E-01;
  COFD[2107] = 2.23031110E-02;
  COFD[2108] = -2.21999689E+01;
  COFD[2109] = 5.69706859E+00;
  COFD[2110] = -5.11416131E-01;
  COFD[2111] = 2.16711595E-02;
  COFD[2112] = -2.23392482E+01;
  COFD[2113] = 5.68920173E+00;
  COFD[2114] = -5.07537130E-01;
  COFD[2115] = 2.13807918E-02;
  COFD[2116] = -2.22141889E+01;
  COFD[2117] = 5.69706859E+00;
  COFD[2118] = -5.11416131E-01;
  COFD[2119] = 2.16711595E-02;
  COFD[2120] = -2.21237456E+01;
  COFD[2121] = 5.52954770E+00;
  COFD[2122] = -4.76277229E-01;
  COFD[2123] = 1.95684485E-02;
  COFD[2124] = -2.21178782E+01;
  COFD[2125] = 5.52954770E+00;
  COFD[2126] = -4.76277229E-01;
  COFD[2127] = 1.95684485E-02;
  COFD[2128] = -1.68473654E+01;
  COFD[2129] = 4.06963018E+00;
  COFD[2130] = -3.24735969E-01;
  COFD[2131] = 1.45960083E-02;
  COFD[2132] = -1.97428162E+01;
  COFD[2133] = 4.55369444E+00;
  COFD[2134] = -3.87975150E-01;
  COFD[2135] = 1.73657784E-02;
  COFD[2136] = -1.97631858E+01;
  COFD[2137] = 5.05439215E+00;
  COFD[2138] = -4.47524613E-01;
  COFD[2139] = 1.97181397E-02;
  COFD[2140] = -1.71870267E+01;
  COFD[2141] = 4.20847168E+00;
  COFD[2142] = -3.43267883E-01;
  COFD[2143] = 1.54252580E-02;
  COFD[2144] = -1.99192393E+01;
  COFD[2145] = 4.98360158E+00;
  COFD[2146] = -4.38825780E-01;
  COFD[2147] = 1.93601206E-02;
  COFD[2148] = -2.11491052E+01;
  COFD[2149] = 5.38685618E+00;
  COFD[2150] = -4.88207385E-01;
  COFD[2151] = 2.13898131E-02;
  COFD[2152] = -2.11491052E+01;
  COFD[2153] = 5.38685618E+00;
  COFD[2154] = -4.88207385E-01;
  COFD[2155] = 2.13898131E-02;
  COFD[2156] = -1.24510316E+01;
  COFD[2157] = 2.82692805E+00;
  COFD[2158] = -1.62138652E-01;
  COFD[2159] = 7.47929495E-03;
  COFD[2160] = -1.94467669E+01;
  COFD[2161] = 4.90176377E+00;
  COFD[2162] = -4.28654088E-01;
  COFD[2163] = 1.89366950E-02;
  COFD[2164] = -1.60810237E+01;
  COFD[2165] = 3.73663964E+00;
  COFD[2166] = -2.82091747E-01;
  COFD[2167] = 1.27703717E-02;
  COFD[2168] = -2.20099125E+01;
  COFD[2169] = 5.63470135E+00;
  COFD[2170] = -5.14478143E-01;
  COFD[2171] = 2.22826045E-02;
  COFD[2172] = -1.87148165E+01;
  COFD[2173] = 4.67388141E+00;
  COFD[2174] = -4.00961748E-01;
  COFD[2175] = 1.78132254E-02;
  COFD[2176] = -2.22524251E+01;
  COFD[2177] = 5.66831709E+00;
  COFD[2178] = -5.16826635E-01;
  COFD[2179] = 2.22987354E-02;
  COFD[2180] = -1.72726080E+01;
  COFD[2181] = 4.24483918E+00;
  COFD[2182] = -3.48135608E-01;
  COFD[2183] = 1.56435370E-02;
  COFD[2184] = -1.63824749E+01;
  COFD[2185] = 3.86041291E+00;
  COFD[2186] = -2.98380064E-01;
  COFD[2187] = 1.34876205E-02;
  COFD[2188] = -1.49421326E+01;
  COFD[2189] = 3.46399647E+00;
  COFD[2190] = -2.45668465E-01;
  COFD[2191] = 1.11399884E-02;
  COFD[2192] = -1.49622901E+01;
  COFD[2193] = 3.46399647E+00;
  COFD[2194] = -2.45668465E-01;
  COFD[2195] = 1.11399884E-02;
  COFD[2196] = -1.63901688E+01;
  COFD[2197] = 3.86041291E+00;
  COFD[2198] = -2.98380064E-01;
  COFD[2199] = 1.34876205E-02;
  COFD[2200] = -2.13884324E+01;
  COFD[2201] = 5.65488061E+00;
  COFD[2202] = -4.99826791E-01;
  COFD[2203] = 2.09064205E-02;
  COFD[2204] = -1.63975163E+01;
  COFD[2205] = 3.86041291E+00;
  COFD[2206] = -2.98380064E-01;
  COFD[2207] = 1.34876205E-02;
  COFD[2208] = -1.55822809E+01;
  COFD[2209] = 4.25889159E+00;
  COFD[2210] = -3.50023998E-01;
  COFD[2211] = 1.57285900E-02;
  COFD[2212] = -1.72487420E+01;
  COFD[2213] = 4.24483918E+00;
  COFD[2214] = -3.48135608E-01;
  COFD[2215] = 1.56435370E-02;
  COFD[2216] = -1.72487420E+01;
  COFD[2217] = 4.24483918E+00;
  COFD[2218] = -3.48135608E-01;
  COFD[2219] = 1.56435370E-02;
  COFD[2220] = -2.15159838E+01;
  COFD[2221] = 5.66913715E+00;
  COFD[2222] = -5.16774023E-01;
  COFD[2223] = 2.22895896E-02;
  COFD[2224] = -2.15248648E+01;
  COFD[2225] = 5.66913715E+00;
  COFD[2226] = -5.16774023E-01;
  COFD[2227] = 2.22895896E-02;
  COFD[2228] = -2.13476599E+01;
  COFD[2229] = 5.61148666E+00;
  COFD[2230] = -5.12432696E-01;
  COFD[2231] = 2.22352591E-02;
  COFD[2232] = -1.92936265E+01;
  COFD[2233] = 4.86874488E+00;
  COFD[2234] = -4.24902800E-01;
  COFD[2235] = 1.87970659E-02;
  COFD[2236] = -1.87251978E+01;
  COFD[2237] = 4.67388141E+00;
  COFD[2238] = -4.00961748E-01;
  COFD[2239] = 1.78132254E-02;
  COFD[2240] = -1.94379054E+01;
  COFD[2241] = 4.90176377E+00;
  COFD[2242] = -4.28654088E-01;
  COFD[2243] = 1.89366950E-02;
  COFD[2244] = -1.73478922E+01;
  COFD[2245] = 4.31782710E+00;
  COFD[2246] = -3.57793798E-01;
  COFD[2247] = 1.60717745E-02;
  COFD[2248] = -2.13841054E+01;
  COFD[2249] = 5.57682097E+00;
  COFD[2250] = -5.08589054E-01;
  COFD[2251] = 2.20956285E-02;
  COFD[2252] = -2.13891916E+01;
  COFD[2253] = 5.57682097E+00;
  COFD[2254] = -5.08589054E-01;
  COFD[2255] = 2.20956285E-02;
  COFD[2256] = -1.96209604E+01;
  COFD[2257] = 4.90052813E+00;
  COFD[2258] = -4.28511355E-01;
  COFD[2259] = 1.89312580E-02;
  COFD[2260] = -1.99139669E+01;
  COFD[2261] = 4.98360158E+00;
  COFD[2262] = -4.38825780E-01;
  COFD[2263] = 1.93601206E-02;
  COFD[2264] = -2.20135031E+01;
  COFD[2265] = 5.63470135E+00;
  COFD[2266] = -5.14478143E-01;
  COFD[2267] = 2.22826045E-02;
  COFD[2268] = -2.11757519E+01;
  COFD[2269] = 5.38685618E+00;
  COFD[2270] = -4.88207385E-01;
  COFD[2271] = 2.13898131E-02;
  COFD[2272] = -2.20080166E+01;
  COFD[2273] = 5.63470135E+00;
  COFD[2274] = -5.14478143E-01;
  COFD[2275] = 2.22826045E-02;
  COFD[2276] = -2.22510016E+01;
  COFD[2277] = 5.66831709E+00;
  COFD[2278] = -5.16826635E-01;
  COFD[2279] = 2.22987354E-02;
  COFD[2280] = -2.20338721E+01;
  COFD[2281] = 5.63470135E+00;
  COFD[2282] = -5.14478143E-01;
  COFD[2283] = 2.22826045E-02;
  COFD[2284] = -2.25117049E+01;
  COFD[2285] = 5.69733828E+00;
  COFD[2286] = -5.11355652E-01;
  COFD[2287] = 2.16644742E-02;
  COFD[2288] = -2.25069594E+01;
  COFD[2289] = 5.69732523E+00;
  COFD[2290] = -5.11316920E-01;
  COFD[2291] = 2.16612121E-02;
  COFD[2292] = -1.60542790E+01;
  COFD[2293] = 3.72962835E+00;
  COFD[2294] = -2.81187017E-01;
  COFD[2295] = 1.27313717E-02;
  COFD[2296] = -1.80914623E+01;
  COFD[2297] = 4.07933301E+00;
  COFD[2298] = -3.25884118E-01;
  COFD[2299] = 1.46408360E-02;
  COFD[2300] = -1.83100736E+01;
  COFD[2301] = 4.67429531E+00;
  COFD[2302] = -4.00998687E-01;
  COFD[2303] = 1.78140746E-02;
  COFD[2304] = -1.58379324E+01;
  COFD[2305] = 3.83195750E+00;
  COFD[2306] = -2.94605739E-01;
  COFD[2307] = 1.33200383E-02;
  COFD[2308] = -1.85766545E+01;
  COFD[2309] = 4.65440100E+00;
  COFD[2310] = -3.99617849E-01;
  COFD[2311] = 1.78081611E-02;
  COFD[2312] = -1.95878092E+01;
  COFD[2313] = 4.97734997E+00;
  COFD[2314] = -4.38018636E-01;
  COFD[2315] = 1.93251310E-02;
  COFD[2316] = -1.95878092E+01;
  COFD[2317] = 4.97734997E+00;
  COFD[2318] = -4.38018636E-01;
  COFD[2319] = 1.93251310E-02;
  COFD[2320] = -1.16227322E+01;
  COFD[2321] = 2.61014717E+00;
  COFD[2322] = -1.33183711E-01;
  COFD[2323] = 6.18937111E-03;
  COFD[2324] = -1.82146635E+01;
  COFD[2325] = 4.61379381E+00;
  COFD[2326] = -3.95204189E-01;
  COFD[2327] = 1.76544311E-02;
  COFD[2328] = -1.46697009E+01;
  COFD[2329] = 3.34099775E+00;
  COFD[2330] = -2.28926170E-01;
  COFD[2331] = 1.03757053E-02;
  COFD[2332] = -2.06764596E+01;
  COFD[2333] = 5.34618044E+00;
  COFD[2334] = -4.83331563E-01;
  COFD[2335] = 2.11940573E-02;
  COFD[2336] = -1.74774489E+01;
  COFD[2337] = 4.37416294E+00;
  COFD[2338] = -3.65107627E-01;
  COFD[2339] = 1.63899597E-02;
  COFD[2340] = -2.10138841E+01;
  COFD[2341] = 5.42577327E+00;
  COFD[2342] = -4.92756280E-01;
  COFD[2343] = 2.15671078E-02;
  COFD[2344] = -1.59069185E+01;
  COFD[2345] = 3.85870007E+00;
  COFD[2346] = -2.98154723E-01;
  COFD[2347] = 1.34776935E-02;
  COFD[2348] = -1.49421326E+01;
  COFD[2349] = 3.46399647E+00;
  COFD[2350] = -2.45668465E-01;
  COFD[2351] = 1.11399884E-02;
  COFD[2352] = -1.36893902E+01;
  COFD[2353] = 3.12661616E+00;
  COFD[2354] = -2.00477206E-01;
  COFD[2355] = 9.11202886E-03;
  COFD[2356] = -1.37044316E+01;
  COFD[2357] = 3.12661616E+00;
  COFD[2358] = -2.00477206E-01;
  COFD[2359] = 9.11202886E-03;
  COFD[2360] = -1.49472487E+01;
  COFD[2361] = 3.46399647E+00;
  COFD[2362] = -2.45668465E-01;
  COFD[2363] = 1.11399884E-02;
  COFD[2364] = -2.02329152E+01;
  COFD[2365] = 5.53415157E+00;
  COFD[2366] = -5.03188882E-01;
  COFD[2367] = 2.18653015E-02;
  COFD[2368] = -1.49521098E+01;
  COFD[2369] = 3.46399647E+00;
  COFD[2370] = -2.45668465E-01;
  COFD[2371] = 1.11399884E-02;
  COFD[2372] = -1.42587302E+01;
  COFD[2373] = 3.86790216E+00;
  COFD[2374] = -2.99364050E-01;
  COFD[2375] = 1.35309049E-02;
  COFD[2376] = -1.58887299E+01;
  COFD[2377] = 3.85870007E+00;
  COFD[2378] = -2.98154723E-01;
  COFD[2379] = 1.34776935E-02;
  COFD[2380] = -1.58887299E+01;
  COFD[2381] = 3.85870007E+00;
  COFD[2382] = -2.98154723E-01;
  COFD[2383] = 1.34776935E-02;
  COFD[2384] = -2.03239968E+01;
  COFD[2385] = 5.43253571E+00;
  COFD[2386] = -4.93560962E-01;
  COFD[2387] = 2.15991994E-02;
  COFD[2388] = -2.03299982E+01;
  COFD[2389] = 5.43253571E+00;
  COFD[2390] = -4.93560962E-01;
  COFD[2391] = 2.15991994E-02;
  COFD[2392] = -1.96269774E+01;
  COFD[2393] = 5.16530963E+00;
  COFD[2394] = -4.60505851E-01;
  COFD[2395] = 2.02238960E-02;
  COFD[2396] = -1.80137966E+01;
  COFD[2397] = 4.57861932E+00;
  COFD[2398] = -3.90990906E-01;
  COFD[2399] = 1.74871172E-02;
  COFD[2400] = -1.74845920E+01;
  COFD[2401] = 4.37416294E+00;
  COFD[2402] = -3.65107627E-01;
  COFD[2403] = 1.63899597E-02;
  COFD[2404] = -1.82086768E+01;
  COFD[2405] = 4.61379381E+00;
  COFD[2406] = -3.95204189E-01;
  COFD[2407] = 1.76544311E-02;
  COFD[2408] = -1.57771847E+01;
  COFD[2409] = 3.90109718E+00;
  COFD[2410] = -3.03520599E-01;
  COFD[2411] = 1.37043856E-02;
  COFD[2412] = -1.99120381E+01;
  COFD[2413] = 5.21863561E+00;
  COFD[2414] = -4.66851910E-01;
  COFD[2415] = 2.04766146E-02;
  COFD[2416] = -1.99152763E+01;
  COFD[2417] = 5.21863561E+00;
  COFD[2418] = -4.66851910E-01;
  COFD[2419] = 2.04766146E-02;
  COFD[2420] = -1.83782241E+01;
  COFD[2421] = 4.61237034E+00;
  COFD[2422] = -3.95027652E-01;
  COFD[2423] = 1.76471131E-02;
  COFD[2424] = -1.85732857E+01;
  COFD[2425] = 4.65440100E+00;
  COFD[2426] = -3.99617849E-01;
  COFD[2427] = 1.78081611E-02;
  COFD[2428] = -2.06785569E+01;
  COFD[2429] = 5.34618044E+00;
  COFD[2430] = -4.83331563E-01;
  COFD[2431] = 2.11940573E-02;
  COFD[2432] = -1.96043740E+01;
  COFD[2433] = 4.97734997E+00;
  COFD[2434] = -4.38018636E-01;
  COFD[2435] = 1.93251310E-02;
  COFD[2436] = -2.06753496E+01;
  COFD[2437] = 5.34618044E+00;
  COFD[2438] = -4.83331563E-01;
  COFD[2439] = 2.11940573E-02;
  COFD[2440] = -2.10130665E+01;
  COFD[2441] = 5.42577327E+00;
  COFD[2442] = -4.92756280E-01;
  COFD[2443] = 2.15671078E-02;
  COFD[2444] = -2.06903362E+01;
  COFD[2445] = 5.34618044E+00;
  COFD[2446] = -4.83331563E-01;
  COFD[2447] = 2.11940573E-02;
  COFD[2448] = -2.15111421E+01;
  COFD[2449] = 5.59463241E+00;
  COFD[2450] = -5.10685806E-01;
  COFD[2451] = 2.21780225E-02;
  COFD[2452] = -2.15044839E+01;
  COFD[2453] = 5.59463241E+00;
  COFD[2454] = -5.10685806E-01;
  COFD[2455] = 2.21780225E-02;
  COFD[2456] = -1.46399714E+01;
  COFD[2457] = 3.33278784E+00;
  COFD[2458] = -2.27808884E-01;
  COFD[2459] = 1.03247543E-02;
  COFD[2460] = -1.81190609E+01;
  COFD[2461] = 4.07933301E+00;
  COFD[2462] = -3.25884118E-01;
  COFD[2463] = 1.46408360E-02;
  COFD[2464] = -1.83293112E+01;
  COFD[2465] = 4.67429531E+00;
  COFD[2466] = -4.00998687E-01;
  COFD[2467] = 1.78140746E-02;
  COFD[2468] = -1.58529948E+01;
  COFD[2469] = 3.83195750E+00;
  COFD[2470] = -2.94605739E-01;
  COFD[2471] = 1.33200383E-02;
  COFD[2472] = -1.85986007E+01;
  COFD[2473] = 4.65440100E+00;
  COFD[2474] = -3.99617849E-01;
  COFD[2475] = 1.78081611E-02;
  COFD[2476] = -1.96114174E+01;
  COFD[2477] = 4.97734997E+00;
  COFD[2478] = -4.38018636E-01;
  COFD[2479] = 1.93251310E-02;
  COFD[2480] = -1.96114174E+01;
  COFD[2481] = 4.97734997E+00;
  COFD[2482] = -4.38018636E-01;
  COFD[2483] = 1.93251310E-02;
  COFD[2484] = -1.16260596E+01;
  COFD[2485] = 2.61014717E+00;
  COFD[2486] = -1.33183711E-01;
  COFD[2487] = 6.18937111E-03;
  COFD[2488] = -1.82343908E+01;
  COFD[2489] = 4.61379381E+00;
  COFD[2490] = -3.95204189E-01;
  COFD[2491] = 1.76544311E-02;
  COFD[2492] = -1.46889273E+01;
  COFD[2493] = 3.34099775E+00;
  COFD[2494] = -2.28926170E-01;
  COFD[2495] = 1.03757053E-02;
  COFD[2496] = -2.07016822E+01;
  COFD[2497] = 5.34618044E+00;
  COFD[2498] = -4.83331563E-01;
  COFD[2499] = 2.11940573E-02;
  COFD[2500] = -1.74961504E+01;
  COFD[2501] = 4.37416294E+00;
  COFD[2502] = -3.65107627E-01;
  COFD[2503] = 1.63899597E-02;
  COFD[2504] = -2.10397944E+01;
  COFD[2505] = 5.42577327E+00;
  COFD[2506] = -4.92756280E-01;
  COFD[2507] = 2.15671078E-02;
  COFD[2508] = -1.59214858E+01;
  COFD[2509] = 3.85870007E+00;
  COFD[2510] = -2.98154723E-01;
  COFD[2511] = 1.34776935E-02;
  COFD[2512] = -1.49622901E+01;
  COFD[2513] = 3.46399647E+00;
  COFD[2514] = -2.45668465E-01;
  COFD[2515] = 1.11399884E-02;
  COFD[2516] = -1.37044316E+01;
  COFD[2517] = 3.12661616E+00;
  COFD[2518] = -2.00477206E-01;
  COFD[2519] = 9.11202886E-03;
  COFD[2520] = -1.37199396E+01;
  COFD[2521] = 3.12661616E+00;
  COFD[2522] = -2.00477206E-01;
  COFD[2523] = 9.11202886E-03;
  COFD[2524] = -1.49676178E+01;
  COFD[2525] = 3.46399647E+00;
  COFD[2526] = -2.45668465E-01;
  COFD[2527] = 1.11399884E-02;
  COFD[2528] = -2.02488625E+01;
  COFD[2529] = 5.53415157E+00;
  COFD[2530] = -5.03188882E-01;
  COFD[2531] = 2.18653015E-02;
  COFD[2532] = -1.49726820E+01;
  COFD[2533] = 3.46399647E+00;
  COFD[2534] = -2.45668465E-01;
  COFD[2535] = 1.11399884E-02;
  COFD[2536] = -1.42604897E+01;
  COFD[2537] = 3.86790216E+00;
  COFD[2538] = -2.99364050E-01;
  COFD[2539] = 1.35309049E-02;
  COFD[2540] = -1.59027695E+01;
  COFD[2541] = 3.85870007E+00;
  COFD[2542] = -2.98154723E-01;
  COFD[2543] = 1.34776935E-02;
  COFD[2544] = -1.59027695E+01;
  COFD[2545] = 3.85870007E+00;
  COFD[2546] = -2.98154723E-01;
  COFD[2547] = 1.34776935E-02;
  COFD[2548] = -2.03434739E+01;
  COFD[2549] = 5.43253571E+00;
  COFD[2550] = -4.93560962E-01;
  COFD[2551] = 2.15991994E-02;
  COFD[2552] = -2.03497152E+01;
  COFD[2553] = 5.43253571E+00;
  COFD[2554] = -4.93560962E-01;
  COFD[2555] = 2.15991994E-02;
  COFD[2556] = -1.96469242E+01;
  COFD[2557] = 5.16530963E+00;
  COFD[2558] = -4.60505851E-01;
  COFD[2559] = 2.02238960E-02;
  COFD[2560] = -1.80360169E+01;
  COFD[2561] = 4.57861932E+00;
  COFD[2562] = -3.90990906E-01;
  COFD[2563] = 1.74871172E-02;
  COFD[2564] = -1.75035677E+01;
  COFD[2565] = 4.37416294E+00;
  COFD[2566] = -3.65107627E-01;
  COFD[2567] = 1.63899597E-02;
  COFD[2568] = -1.82281646E+01;
  COFD[2569] = 4.61379381E+00;
  COFD[2570] = -3.95204189E-01;
  COFD[2571] = 1.76544311E-02;
  COFD[2572] = -1.57989735E+01;
  COFD[2573] = 3.90109718E+00;
  COFD[2574] = -3.03520599E-01;
  COFD[2575] = 1.37043856E-02;
  COFD[2576] = -1.99339778E+01;
  COFD[2577] = 5.21863561E+00;
  COFD[2578] = -4.66851910E-01;
  COFD[2579] = 2.04766146E-02;
  COFD[2580] = -1.99373618E+01;
  COFD[2581] = 5.21863561E+00;
  COFD[2582] = -4.66851910E-01;
  COFD[2583] = 2.04766146E-02;
  COFD[2584] = -1.83997019E+01;
  COFD[2585] = 4.61237034E+00;
  COFD[2586] = -3.95027652E-01;
  COFD[2587] = 1.76471131E-02;
  COFD[2588] = -1.85950812E+01;
  COFD[2589] = 4.65440100E+00;
  COFD[2590] = -3.99617849E-01;
  COFD[2591] = 1.78081611E-02;
  COFD[2592] = -2.07038883E+01;
  COFD[2593] = 5.34618044E+00;
  COFD[2594] = -4.83331563E-01;
  COFD[2595] = 2.11940573E-02;
  COFD[2596] = -1.96287467E+01;
  COFD[2597] = 4.97734997E+00;
  COFD[2598] = -4.38018636E-01;
  COFD[2599] = 1.93251310E-02;
  COFD[2600] = -2.07005149E+01;
  COFD[2601] = 5.34618044E+00;
  COFD[2602] = -4.83331563E-01;
  COFD[2603] = 2.11940573E-02;
  COFD[2604] = -2.10389335E+01;
  COFD[2605] = 5.42577327E+00;
  COFD[2606] = -4.92756280E-01;
  COFD[2607] = 2.15671078E-02;
  COFD[2608] = -2.07162873E+01;
  COFD[2609] = 5.34618044E+00;
  COFD[2610] = -4.83331563E-01;
  COFD[2611] = 2.11940573E-02;
  COFD[2612] = -2.15375474E+01;
  COFD[2613] = 5.59463241E+00;
  COFD[2614] = -5.10685806E-01;
  COFD[2615] = 2.21780225E-02;
  COFD[2616] = -2.15309233E+01;
  COFD[2617] = 5.59463241E+00;
  COFD[2618] = -5.10685806E-01;
  COFD[2619] = 2.21780225E-02;
  COFD[2620] = -1.46591988E+01;
  COFD[2621] = 3.33278784E+00;
  COFD[2622] = -2.27808884E-01;
  COFD[2623] = 1.03247543E-02;
  COFD[2624] = -1.97556261E+01;
  COFD[2625] = 4.55369444E+00;
  COFD[2626] = -3.87975150E-01;
  COFD[2627] = 1.73657784E-02;
  COFD[2628] = -1.97703707E+01;
  COFD[2629] = 5.05439215E+00;
  COFD[2630] = -4.47524613E-01;
  COFD[2631] = 1.97181397E-02;
  COFD[2632] = -1.71921522E+01;
  COFD[2633] = 4.20847168E+00;
  COFD[2634] = -3.43267883E-01;
  COFD[2635] = 1.54252580E-02;
  COFD[2636] = -1.99279897E+01;
  COFD[2637] = 4.98360158E+00;
  COFD[2638] = -4.38825780E-01;
  COFD[2639] = 1.93601206E-02;
  COFD[2640] = -2.11589253E+01;
  COFD[2641] = 5.38685618E+00;
  COFD[2642] = -4.88207385E-01;
  COFD[2643] = 2.13898131E-02;
  COFD[2644] = -2.11589253E+01;
  COFD[2645] = 5.38685618E+00;
  COFD[2646] = -4.88207385E-01;
  COFD[2647] = 2.13898131E-02;
  COFD[2648] = -1.24519374E+01;
  COFD[2649] = 2.82692805E+00;
  COFD[2650] = -1.62138652E-01;
  COFD[2651] = 7.47929495E-03;
  COFD[2652] = -1.94542200E+01;
  COFD[2653] = 4.90176377E+00;
  COFD[2654] = -4.28654088E-01;
  COFD[2655] = 1.89366950E-02;
  COFD[2656] = -1.60882025E+01;
  COFD[2657] = 3.73663964E+00;
  COFD[2658] = -2.82091747E-01;
  COFD[2659] = 1.27703717E-02;
  COFD[2660] = -2.20208641E+01;
  COFD[2661] = 5.63470135E+00;
  COFD[2662] = -5.14478143E-01;
  COFD[2663] = 2.22826045E-02;
  COFD[2664] = -1.87217148E+01;
  COFD[2665] = 4.67388141E+00;
  COFD[2666] = -4.00961748E-01;
  COFD[2667] = 1.78132254E-02;
  COFD[2668] = -2.22615149E+01;
  COFD[2669] = 5.66777991E+00;
  COFD[2670] = -5.16795849E-01;
  COFD[2671] = 2.22990514E-02;
  COFD[2672] = -1.72775133E+01;
  COFD[2673] = 4.24483918E+00;
  COFD[2674] = -3.48135608E-01;
  COFD[2675] = 1.56435370E-02;
  COFD[2676] = -1.63901688E+01;
  COFD[2677] = 3.86041291E+00;
  COFD[2678] = -2.98380064E-01;
  COFD[2679] = 1.34876205E-02;
  COFD[2680] = -1.49472487E+01;
  COFD[2681] = 3.46399647E+00;
  COFD[2682] = -2.45668465E-01;
  COFD[2683] = 1.11399884E-02;
  COFD[2684] = -1.49676178E+01;
  COFD[2685] = 3.46399647E+00;
  COFD[2686] = -2.45668465E-01;
  COFD[2687] = 1.11399884E-02;
  COFD[2688] = -1.63979829E+01;
  COFD[2689] = 3.86041291E+00;
  COFD[2690] = -2.98380064E-01;
  COFD[2691] = 1.34876205E-02;
  COFD[2692] = -2.11627170E+01;
  COFD[2693] = 5.64896383E+00;
  COFD[2694] = -5.08011587E-01;
  COFD[2695] = 2.16427657E-02;
  COFD[2696] = -1.64054470E+01;
  COFD[2697] = 3.86041291E+00;
  COFD[2698] = -2.98380064E-01;
  COFD[2699] = 1.34876205E-02;
  COFD[2700] = -1.55827475E+01;
  COFD[2701] = 4.25889159E+00;
  COFD[2702] = -3.50023998E-01;
  COFD[2703] = 1.57285900E-02;
  COFD[2704] = -1.72534176E+01;
  COFD[2705] = 4.24483918E+00;
  COFD[2706] = -3.48135608E-01;
  COFD[2707] = 1.56435370E-02;
  COFD[2708] = -1.72534176E+01;
  COFD[2709] = 4.24483918E+00;
  COFD[2710] = -3.48135608E-01;
  COFD[2711] = 1.56435370E-02;
  COFD[2712] = -2.15232991E+01;
  COFD[2713] = 5.66913715E+00;
  COFD[2714] = -5.16774023E-01;
  COFD[2715] = 2.22895896E-02;
  COFD[2716] = -2.15323122E+01;
  COFD[2717] = 5.66913715E+00;
  COFD[2718] = -5.16774023E-01;
  COFD[2719] = 2.22895896E-02;
  COFD[2720] = -2.10537017E+01;
  COFD[2721] = 5.50946662E+00;
  COFD[2722] = -5.00422014E-01;
  COFD[2723] = 2.17632945E-02;
  COFD[2724] = -1.93025471E+01;
  COFD[2725] = 4.86874488E+00;
  COFD[2726] = -4.24902800E-01;
  COFD[2727] = 1.87970659E-02;
  COFD[2728] = -1.87322419E+01;
  COFD[2729] = 4.67388141E+00;
  COFD[2730] = -4.00961748E-01;
  COFD[2731] = 1.78132254E-02;
  COFD[2732] = -1.94452266E+01;
  COFD[2733] = 4.90176377E+00;
  COFD[2734] = -4.28654088E-01;
  COFD[2735] = 1.89366950E-02;
  COFD[2736] = -1.73565458E+01;
  COFD[2737] = 4.31782710E+00;
  COFD[2738] = -3.57793798E-01;
  COFD[2739] = 1.60717745E-02;
  COFD[2740] = -2.13928517E+01;
  COFD[2741] = 5.57682097E+00;
  COFD[2742] = -5.08589054E-01;
  COFD[2743] = 2.20956285E-02;
  COFD[2744] = -2.13980282E+01;
  COFD[2745] = 5.57682097E+00;
  COFD[2746] = -5.08589054E-01;
  COFD[2747] = 2.20956285E-02;
  COFD[2748] = -1.96294252E+01;
  COFD[2749] = 4.90052813E+00;
  COFD[2750] = -4.28511355E-01;
  COFD[2751] = 1.89312580E-02;
  COFD[2752] = -1.99226246E+01;
  COFD[2753] = 4.98360158E+00;
  COFD[2754] = -4.38825780E-01;
  COFD[2755] = 1.93601206E-02;
  COFD[2756] = -2.20245345E+01;
  COFD[2757] = 5.63470135E+00;
  COFD[2758] = -5.14478143E-01;
  COFD[2759] = 2.22826045E-02;
  COFD[2760] = -2.11860957E+01;
  COFD[2761] = 5.38685618E+00;
  COFD[2762] = -4.88207385E-01;
  COFD[2763] = 2.13898131E-02;
  COFD[2764] = -2.20189264E+01;
  COFD[2765] = 5.63470135E+00;
  COFD[2766] = -5.14478143E-01;
  COFD[2767] = 2.22826045E-02;
  COFD[2768] = -2.22600584E+01;
  COFD[2769] = 5.66777991E+00;
  COFD[2770] = -5.16795849E-01;
  COFD[2771] = 2.22990514E-02;
  COFD[2772] = -2.20453675E+01;
  COFD[2773] = 5.63470135E+00;
  COFD[2774] = -5.14478143E-01;
  COFD[2775] = 2.22826045E-02;
  COFD[2776] = -2.23951225E+01;
  COFD[2777] = 5.66447764E+00;
  COFD[2778] = -5.08805506E-01;
  COFD[2779] = 2.16257683E-02;
  COFD[2780] = -2.23895495E+01;
  COFD[2781] = 5.66447764E+00;
  COFD[2782] = -5.08805506E-01;
  COFD[2783] = 2.16257683E-02;
  COFD[2784] = -1.60614584E+01;
  COFD[2785] = 3.72962835E+00;
  COFD[2786] = -2.81187017E-01;
  COFD[2787] = 1.27313717E-02;
  COFD[2788] = -2.23489854E+01;
  COFD[2789] = 5.26844723E+00;
  COFD[2790] = -4.30558385E-01;
  COFD[2791] = 1.70757975E-02;
  COFD[2792] = -1.90232196E+01;
  COFD[2793] = 4.24017605E+00;
  COFD[2794] = -2.62003557E-01;
  COFD[2795] = 8.27816665E-03;
  COFD[2796] = -2.07134339E+01;
  COFD[2797] = 5.25362242E+00;
  COFD[2798] = -4.28085831E-01;
  COFD[2799] = 1.69448077E-02;
  COFD[2800] = -1.97246304E+01;
  COFD[2801] = 4.41370094E+00;
  COFD[2802] = -2.89313133E-01;
  COFD[2803] = 9.66674118E-03;
  COFD[2804] = -1.79615597E+01;
  COFD[2805] = 3.48451904E+00;
  COFD[2806] = -1.43831594E-01;
  COFD[2807] = 2.32079598E-03;
  COFD[2808] = -1.79615597E+01;
  COFD[2809] = 3.48451904E+00;
  COFD[2810] = -1.43831594E-01;
  COFD[2811] = 2.32079598E-03;
  COFD[2812] = -1.79975170E+01;
  COFD[2813] = 5.00313903E+00;
  COFD[2814] = -4.41228726E-01;
  COFD[2815] = 1.94588671E-02;
  COFD[2816] = -1.97071715E+01;
  COFD[2817] = 4.53650344E+00;
  COFD[2818] = -3.09332864E-01;
  COFD[2819] = 1.07047264E-02;
  COFD[2820] = -2.14387421E+01;
  COFD[2821] = 5.69059069E+00;
  COFD[2822] = -5.08172820E-01;
  COFD[2823] = 2.14277961E-02;
  COFD[2824] = -1.39859525E+01;
  COFD[2825] = 1.55451537E+00;
  COFD[2826] = 1.48062755E-01;
  COFD[2827] = -1.20297011E-02;
  COFD[2828] = -2.03818235E+01;
  COFD[2829] = 4.95053951E+00;
  COFD[2830] = -3.77134666E-01;
  COFD[2831] = 1.42368958E-02;
  COFD[2832] = -1.53149885E+01;
  COFD[2833] = 2.14009360E+00;
  COFD[2834] = 5.93887776E-02;
  COFD[2835] = -7.65730317E-03;
  COFD[2836] = -2.12270291E+01;
  COFD[2837] = 5.58293886E+00;
  COFD[2838] = -4.85683839E-01;
  COFD[2839] = 2.00846811E-02;
  COFD[2840] = -2.13884324E+01;
  COFD[2841] = 5.65488061E+00;
  COFD[2842] = -4.99826791E-01;
  COFD[2843] = 2.09064205E-02;
  COFD[2844] = -2.02329152E+01;
  COFD[2845] = 5.53415157E+00;
  COFD[2846] = -5.03188882E-01;
  COFD[2847] = 2.18653015E-02;
  COFD[2848] = -2.02488625E+01;
  COFD[2849] = 5.53415157E+00;
  COFD[2850] = -5.03188882E-01;
  COFD[2851] = 2.18653015E-02;
  COFD[2852] = -2.11627170E+01;
  COFD[2853] = 5.64896383E+00;
  COFD[2854] = -5.08011587E-01;
  COFD[2855] = 2.16427657E-02;
  COFD[2856] = -9.22228540E+00;
  COFD[2857] = -2.96089007E-01;
  COFD[2858] = 4.26931760E-01;
  COFD[2859] = -2.52336569E-02;
  COFD[2860] = -2.11679764E+01;
  COFD[2861] = 5.64896383E+00;
  COFD[2862] = -5.08011587E-01;
  COFD[2863] = 2.16427657E-02;
  COFD[2864] = -1.95009685E+01;
  COFD[2865] = 5.57432264E+00;
  COFD[2866] = -4.84119394E-01;
  COFD[2867] = 1.99974393E-02;
  COFD[2868] = -2.12078177E+01;
  COFD[2869] = 5.58293886E+00;
  COFD[2870] = -4.85683839E-01;
  COFD[2871] = 2.00846811E-02;
  COFD[2872] = -2.12078177E+01;
  COFD[2873] = 5.58293886E+00;
  COFD[2874] = -4.85683839E-01;
  COFD[2875] = 2.00846811E-02;
  COFD[2876] = -1.46491914E+01;
  COFD[2877] = 2.16138313E+00;
  COFD[2878] = 5.73490661E-02;
  COFD[2879] = -7.60382925E-03;
  COFD[2880] = -1.46556624E+01;
  COFD[2881] = 2.16138313E+00;
  COFD[2882] = 5.73490661E-02;
  COFD[2883] = -7.60382925E-03;
  COFD[2884] = -1.36401212E+01;
  COFD[2885] = 1.65956064E+00;
  COFD[2886] = 1.31301475E-01;
  COFD[2887] = -1.10553278E-02;
  COFD[2888] = -1.87332554E+01;
  COFD[2889] = 4.08334106E+00;
  COFD[2890] = -2.37515720E-01;
  COFD[2891] = 7.03876946E-03;
  COFD[2892] = -2.03895028E+01;
  COFD[2893] = 4.95053951E+00;
  COFD[2894] = -3.77134666E-01;
  COFD[2895] = 1.42368958E-02;
  COFD[2896] = -1.97007161E+01;
  COFD[2897] = 4.53650344E+00;
  COFD[2898] = -3.09332864E-01;
  COFD[2899] = 1.07047264E-02;
  COFD[2900] = -2.08865822E+01;
  COFD[2901] = 5.52150832E+00;
  COFD[2902] = -4.74859017E-01;
  COFD[2903] = 1.94906311E-02;
  COFD[2904] = -1.60017321E+01;
  COFD[2905] = 2.71982952E+00;
  COFD[2906] = -2.72095575E-02;
  COFD[2907] = -3.44411288E-03;
  COFD[2908] = -1.60052570E+01;
  COFD[2909] = 2.71982952E+00;
  COFD[2910] = -2.72095575E-02;
  COFD[2911] = -3.44411288E-03;
  COFD[2912] = -1.98840081E+01;
  COFD[2913] = 4.53847594E+00;
  COFD[2914] = -3.09666566E-01;
  COFD[2915] = 1.07224007E-02;
  COFD[2916] = -1.97209654E+01;
  COFD[2917] = 4.41370094E+00;
  COFD[2918] = -2.89313133E-01;
  COFD[2919] = 9.66674118E-03;
  COFD[2920] = -1.39882652E+01;
  COFD[2921] = 1.55451537E+00;
  COFD[2922] = 1.48062755E-01;
  COFD[2923] = -1.20297011E-02;
  COFD[2924] = -1.79796526E+01;
  COFD[2925] = 3.48451904E+00;
  COFD[2926] = -1.43831594E-01;
  COFD[2927] = 2.32079598E-03;
  COFD[2928] = -1.39847291E+01;
  COFD[2929] = 1.55451537E+00;
  COFD[2930] = 1.48062755E-01;
  COFD[2931] = -1.20297011E-02;
  COFD[2932] = -1.53140849E+01;
  COFD[2933] = 2.14009360E+00;
  COFD[2934] = 5.93887776E-02;
  COFD[2935] = -7.65730317E-03;
  COFD[2936] = -1.40012720E+01;
  COFD[2937] = 1.55451537E+00;
  COFD[2938] = 1.48062755E-01;
  COFD[2939] = -1.20297011E-02;
  COFD[2940] = -1.21386689E+01;
  COFD[2941] = 6.98182394E-01;
  COFD[2942] = 2.70389011E-01;
  COFD[2943] = -1.76946284E-02;
  COFD[2944] = -1.21156577E+01;
  COFD[2945] = 6.90312644E-01;
  COFD[2946] = 2.71552173E-01;
  COFD[2947] = -1.77491467E-02;
  COFD[2948] = -2.14163493E+01;
  COFD[2949] = 5.69468569E+00;
  COFD[2950] = -5.09722690E-01;
  COFD[2951] = 2.15385637E-02;
  COFD[2952] = -1.97679839E+01;
  COFD[2953] = 4.55369444E+00;
  COFD[2954] = -3.87975150E-01;
  COFD[2955] = 1.73657784E-02;
  COFD[2956] = -1.97772254E+01;
  COFD[2957] = 5.05439215E+00;
  COFD[2958] = -4.47524613E-01;
  COFD[2959] = 1.97181397E-02;
  COFD[2960] = -1.71970223E+01;
  COFD[2961] = 4.20847168E+00;
  COFD[2962] = -3.43267883E-01;
  COFD[2963] = 1.54252580E-02;
  COFD[2964] = -1.99363635E+01;
  COFD[2965] = 4.98360158E+00;
  COFD[2966] = -4.38825780E-01;
  COFD[2967] = 1.93601206E-02;
  COFD[2968] = -2.11683428E+01;
  COFD[2969] = 5.38685618E+00;
  COFD[2970] = -4.88207385E-01;
  COFD[2971] = 2.13898131E-02;
  COFD[2972] = -2.11683428E+01;
  COFD[2973] = 5.38685618E+00;
  COFD[2974] = -4.88207385E-01;
  COFD[2975] = 2.13898131E-02;
  COFD[2976] = -1.24527911E+01;
  COFD[2977] = 2.82692805E+00;
  COFD[2978] = -1.62138652E-01;
  COFD[2979] = 7.47929495E-03;
  COFD[2980] = -1.94613342E+01;
  COFD[2981] = 4.90176377E+00;
  COFD[2982] = -4.28654088E-01;
  COFD[2983] = 1.89366950E-02;
  COFD[2984] = -1.60950513E+01;
  COFD[2985] = 3.73663964E+00;
  COFD[2986] = -2.82091747E-01;
  COFD[2987] = 1.27703717E-02;
  COFD[2988] = -2.20313904E+01;
  COFD[2989] = 5.63470135E+00;
  COFD[2990] = -5.14478143E-01;
  COFD[2991] = 2.22826045E-02;
  COFD[2992] = -1.87282922E+01;
  COFD[2993] = 4.67388141E+00;
  COFD[2994] = -4.00961748E-01;
  COFD[2995] = 1.78132254E-02;
  COFD[2996] = -2.22725452E+01;
  COFD[2997] = 5.66777991E+00;
  COFD[2998] = -5.16795849E-01;
  COFD[2999] = 2.22990514E-02;
  COFD[3000] = -1.72821723E+01;
  COFD[3001] = 4.24483918E+00;
  COFD[3002] = -3.48135608E-01;
  COFD[3003] = 1.56435370E-02;
  COFD[3004] = -1.63975163E+01;
  COFD[3005] = 3.86041291E+00;
  COFD[3006] = -2.98380064E-01;
  COFD[3007] = 1.34876205E-02;
  COFD[3008] = -1.49521098E+01;
  COFD[3009] = 3.46399647E+00;
  COFD[3010] = -2.45668465E-01;
  COFD[3011] = 1.11399884E-02;
  COFD[3012] = -1.49726820E+01;
  COFD[3013] = 3.46399647E+00;
  COFD[3014] = -2.45668465E-01;
  COFD[3015] = 1.11399884E-02;
  COFD[3016] = -1.64054470E+01;
  COFD[3017] = 3.86041291E+00;
  COFD[3018] = -2.98380064E-01;
  COFD[3019] = 1.34876205E-02;
  COFD[3020] = -2.11679764E+01;
  COFD[3021] = 5.64896383E+00;
  COFD[3022] = -5.08011587E-01;
  COFD[3023] = 2.16427657E-02;
  COFD[3024] = -1.64130243E+01;
  COFD[3025] = 3.86041291E+00;
  COFD[3026] = -2.98380064E-01;
  COFD[3027] = 1.34876205E-02;
  COFD[3028] = -1.55831868E+01;
  COFD[3029] = 4.25889159E+00;
  COFD[3030] = -3.50023998E-01;
  COFD[3031] = 1.57285900E-02;
  COFD[3032] = -1.72578564E+01;
  COFD[3033] = 4.24483918E+00;
  COFD[3034] = -3.48135608E-01;
  COFD[3035] = 1.56435370E-02;
  COFD[3036] = -1.72578564E+01;
  COFD[3037] = 4.24483918E+00;
  COFD[3038] = -3.48135608E-01;
  COFD[3039] = 1.56435370E-02;
  COFD[3040] = -2.15302800E+01;
  COFD[3041] = 5.66913715E+00;
  COFD[3042] = -5.16774023E-01;
  COFD[3043] = 2.22895896E-02;
  COFD[3044] = -2.15394209E+01;
  COFD[3045] = 5.66913715E+00;
  COFD[3046] = -5.16774023E-01;
  COFD[3047] = 2.22895896E-02;
  COFD[3048] = -2.10609344E+01;
  COFD[3049] = 5.50946662E+00;
  COFD[3050] = -5.00422014E-01;
  COFD[3051] = 2.17632945E-02;
  COFD[3052] = -1.93110868E+01;
  COFD[3053] = 4.86874488E+00;
  COFD[3054] = -4.24902800E-01;
  COFD[3055] = 1.87970659E-02;
  COFD[3056] = -1.87389602E+01;
  COFD[3057] = 4.67388141E+00;
  COFD[3058] = -4.00961748E-01;
  COFD[3059] = 1.78132254E-02;
  COFD[3060] = -1.94522132E+01;
  COFD[3061] = 4.90176377E+00;
  COFD[3062] = -4.28654088E-01;
  COFD[3063] = 1.89366950E-02;
  COFD[3064] = -1.73648256E+01;
  COFD[3065] = 4.31782710E+00;
  COFD[3066] = -3.57793798E-01;
  COFD[3067] = 1.60717745E-02;
  COFD[3068] = -2.14012217E+01;
  COFD[3069] = 5.57682097E+00;
  COFD[3070] = -5.08589054E-01;
  COFD[3071] = 2.20956285E-02;
  COFD[3072] = -2.14064860E+01;
  COFD[3073] = 5.57682097E+00;
  COFD[3074] = -5.08589054E-01;
  COFD[3075] = 2.20956285E-02;
  COFD[3076] = -1.96375212E+01;
  COFD[3077] = 4.90052813E+00;
  COFD[3078] = -4.28511355E-01;
  COFD[3079] = 1.89312580E-02;
  COFD[3080] = -1.99309084E+01;
  COFD[3081] = 4.98360158E+00;
  COFD[3082] = -4.38825780E-01;
  COFD[3083] = 1.93601206E-02;
  COFD[3084] = -2.20351392E+01;
  COFD[3085] = 5.63470135E+00;
  COFD[3086] = -5.14478143E-01;
  COFD[3087] = 2.22826045E-02;
  COFD[3088] = -2.11960258E+01;
  COFD[3089] = 5.38685618E+00;
  COFD[3090] = -4.88207385E-01;
  COFD[3091] = 2.13898131E-02;
  COFD[3092] = -2.20294115E+01;
  COFD[3093] = 5.63470135E+00;
  COFD[3094] = -5.14478143E-01;
  COFD[3095] = 2.22826045E-02;
  COFD[3096] = -2.22710563E+01;
  COFD[3097] = 5.66777991E+00;
  COFD[3098] = -5.16795849E-01;
  COFD[3099] = 2.22990514E-02;
  COFD[3100] = -2.20564284E+01;
  COFD[3101] = 5.63470135E+00;
  COFD[3102] = -5.14478143E-01;
  COFD[3103] = 2.22826045E-02;
  COFD[3104] = -2.24065282E+01;
  COFD[3105] = 5.66447764E+00;
  COFD[3106] = -5.08805506E-01;
  COFD[3107] = 2.16257683E-02;
  COFD[3108] = -2.24009815E+01;
  COFD[3109] = 5.66447764E+00;
  COFD[3110] = -5.08805506E-01;
  COFD[3111] = 2.16257683E-02;
  COFD[3112] = -1.60683077E+01;
  COFD[3113] = 3.72962835E+00;
  COFD[3114] = -2.81187017E-01;
  COFD[3115] = 1.27313717E-02;
  COFD[3116] = -1.87373197E+01;
  COFD[3117] = 4.84958928E+00;
  COFD[3118] = -4.22621869E-01;
  COFD[3119] = 1.87067121E-02;
  COFD[3120] = -1.91177523E+01;
  COFD[3121] = 5.45933834E+00;
  COFD[3122] = -4.96736684E-01;
  COFD[3123] = 2.17251306E-02;
  COFD[3124] = -1.66720297E+01;
  COFD[3125] = 4.63136373E+00;
  COFD[3126] = -3.97356633E-01;
  COFD[3127] = 1.77424240E-02;
  COFD[3128] = -1.92553728E+01;
  COFD[3129] = 5.39783798E+00;
  COFD[3130] = -4.89502414E-01;
  COFD[3131] = 2.14408287E-02;
  COFD[3132] = -2.01428617E+01;
  COFD[3133] = 5.65654333E+00;
  COFD[3134] = -5.16217584E-01;
  COFD[3135] = 2.23113761E-02;
  COFD[3136] = -2.01428617E+01;
  COFD[3137] = 5.65654333E+00;
  COFD[3138] = -5.16217584E-01;
  COFD[3139] = 2.23113761E-02;
  COFD[3140] = -1.19251455E+01;
  COFD[3141] = 3.00550766E+00;
  COFD[3142] = -1.84765984E-01;
  COFD[3143] = 8.43184890E-03;
  COFD[3144] = -1.88211497E+01;
  COFD[3145] = 5.31710153E+00;
  COFD[3146] = -4.79638614E-01;
  COFD[3147] = 2.10360613E-02;
  COFD[3148] = -1.51958271E+01;
  COFD[3149] = 4.08009081E+00;
  COFD[3150] = -3.25974206E-01;
  COFD[3151] = 1.46443746E-02;
  COFD[3152] = -2.05106259E+01;
  COFD[3153] = 5.69720134E+00;
  COFD[3154] = -5.11137553E-01;
  COFD[3155] = 2.16464526E-02;
  COFD[3156] = -1.80373598E+01;
  COFD[3157] = 5.06144525E+00;
  COFD[3158] = -4.48405432E-01;
  COFD[3159] = 1.97551196E-02;
  COFD[3160] = -2.06545761E+01;
  COFD[3161] = 5.68796184E+00;
  COFD[3162] = -5.07058830E-01;
  COFD[3163] = 2.13464896E-02;
  COFD[3164] = -1.67296679E+01;
  COFD[3165] = 4.64465126E+00;
  COFD[3166] = -3.98803383E-01;
  COFD[3167] = 1.77929328E-02;
  COFD[3168] = -1.55822809E+01;
  COFD[3169] = 4.25889159E+00;
  COFD[3170] = -3.50023998E-01;
  COFD[3171] = 1.57285900E-02;
  COFD[3172] = -1.42587302E+01;
  COFD[3173] = 3.86790216E+00;
  COFD[3174] = -2.99364050E-01;
  COFD[3175] = 1.35309049E-02;
  COFD[3176] = -1.42604897E+01;
  COFD[3177] = 3.86790216E+00;
  COFD[3178] = -2.99364050E-01;
  COFD[3179] = 1.35309049E-02;
  COFD[3180] = -1.55827475E+01;
  COFD[3181] = 4.25889159E+00;
  COFD[3182] = -3.50023998E-01;
  COFD[3183] = 1.57285900E-02;
  COFD[3184] = -1.95009685E+01;
  COFD[3185] = 5.57432264E+00;
  COFD[3186] = -4.84119394E-01;
  COFD[3187] = 1.99974393E-02;
  COFD[3188] = -1.55831868E+01;
  COFD[3189] = 4.25889159E+00;
  COFD[3190] = -3.50023998E-01;
  COFD[3191] = 1.57285900E-02;
  COFD[3192] = -1.57167238E+01;
  COFD[3193] = 4.64812949E+00;
  COFD[3194] = -3.99120489E-01;
  COFD[3195] = 1.78007073E-02;
  COFD[3196] = -1.67274154E+01;
  COFD[3197] = 4.64465126E+00;
  COFD[3198] = -3.98803383E-01;
  COFD[3199] = 1.77929328E-02;
  COFD[3200] = -1.67274154E+01;
  COFD[3201] = 4.64465126E+00;
  COFD[3202] = -3.98803383E-01;
  COFD[3203] = 1.77929328E-02;
  COFD[3204] = -2.00175537E+01;
  COFD[3205] = 5.68795121E+00;
  COFD[3206] = -5.06829829E-01;
  COFD[3207] = 2.13269478E-02;
  COFD[3208] = -2.00181175E+01;
  COFD[3209] = 5.68795121E+00;
  COFD[3210] = -5.06829829E-01;
  COFD[3211] = 2.13269478E-02;
  COFD[3212] = -1.98223345E+01;
  COFD[3213] = 5.65976805E+00;
  COFD[3214] = -5.10308906E-01;
  COFD[3215] = 2.17817532E-02;
  COFD[3216] = -1.84637937E+01;
  COFD[3217] = 5.24666770E+00;
  COFD[3218] = -4.70481585E-01;
  COFD[3219] = 2.06350051E-02;
  COFD[3220] = -1.80380548E+01;
  COFD[3221] = 5.06144525E+00;
  COFD[3222] = -4.48405432E-01;
  COFD[3223] = 1.97551196E-02;
  COFD[3224] = -1.88205875E+01;
  COFD[3225] = 5.31710153E+00;
  COFD[3226] = -4.79638614E-01;
  COFD[3227] = 2.10360613E-02;
  COFD[3228] = -1.63046017E+01;
  COFD[3229] = 4.65873028E+00;
  COFD[3230] = -3.99702456E-01;
  COFD[3231] = 1.77903438E-02;
  COFD[3232] = -1.99563295E+01;
  COFD[3233] = 5.65684578E+00;
  COFD[3234] = -5.08001806E-01;
  COFD[3235] = 2.15985135E-02;
  COFD[3236] = -1.99566037E+01;
  COFD[3237] = 5.65684578E+00;
  COFD[3238] = -5.08001806E-01;
  COFD[3239] = 2.15985135E-02;
  COFD[3240] = -1.89584270E+01;
  COFD[3241] = 5.31499124E+00;
  COFD[3242] = -4.79372108E-01;
  COFD[3243] = 2.10247388E-02;
  COFD[3244] = -1.92550858E+01;
  COFD[3245] = 5.39783798E+00;
  COFD[3246] = -4.89502414E-01;
  COFD[3247] = 2.14408287E-02;
  COFD[3248] = -2.05107828E+01;
  COFD[3249] = 5.69720134E+00;
  COFD[3250] = -5.11137553E-01;
  COFD[3251] = 2.16464526E-02;
  COFD[3252] = -2.01451883E+01;
  COFD[3253] = 5.65654333E+00;
  COFD[3254] = -5.16217584E-01;
  COFD[3255] = 2.23113761E-02;
  COFD[3256] = -2.05105426E+01;
  COFD[3257] = 5.69720134E+00;
  COFD[3258] = -5.11137553E-01;
  COFD[3259] = 2.16464526E-02;
  COFD[3260] = -2.06545163E+01;
  COFD[3261] = 5.68796184E+00;
  COFD[3262] = -5.07058830E-01;
  COFD[3263] = 2.13464896E-02;
  COFD[3264] = -2.05116526E+01;
  COFD[3265] = 5.69720134E+00;
  COFD[3266] = -5.11137553E-01;
  COFD[3267] = 2.16464526E-02;
  COFD[3268] = -2.04013157E+01;
  COFD[3269] = 5.51931290E+00;
  COFD[3270] = -4.74472824E-01;
  COFD[3271] = 1.94694645E-02;
  COFD[3272] = -2.03933979E+01;
  COFD[3273] = 5.51931290E+00;
  COFD[3274] = -4.74472824E-01;
  COFD[3275] = 1.94694645E-02;
  COFD[3276] = -1.51717004E+01;
  COFD[3277] = 4.07525938E+00;
  COFD[3278] = -3.25400860E-01;
  COFD[3279] = 1.46219057E-02;
  COFD[3280] = -2.02706692E+01;
  COFD[3281] = 4.84155965E+00;
  COFD[3282] = -4.21649019E-01;
  COFD[3283] = 1.86672992E-02;
  COFD[3284] = -2.07341257E+01;
  COFD[3285] = 5.45048622E+00;
  COFD[3286] = -4.95678069E-01;
  COFD[3287] = 2.16826855E-02;
  COFD[3288] = -1.82120869E+01;
  COFD[3289] = 4.62413676E+00;
  COFD[3290] = -3.96485100E-01;
  COFD[3291] = 1.77074617E-02;
  COFD[3292] = -2.08598585E+01;
  COFD[3293] = 5.38939502E+00;
  COFD[3294] = -4.88508342E-01;
  COFD[3295] = 2.14017409E-02;
  COFD[3296] = -2.17744516E+01;
  COFD[3297] = 5.65210943E+00;
  COFD[3298] = -5.15837732E-01;
  COFD[3299] = 2.23031110E-02;
  COFD[3300] = -2.17744516E+01;
  COFD[3301] = 5.65210943E+00;
  COFD[3302] = -5.15837732E-01;
  COFD[3303] = 2.23031110E-02;
  COFD[3304] = -1.30011110E+01;
  COFD[3305] = 3.00227472E+00;
  COFD[3306] = -1.84384037E-01;
  COFD[3307] = 8.41707179E-03;
  COFD[3308] = -2.04158859E+01;
  COFD[3309] = 5.30470298E+00;
  COFD[3310] = -4.78070128E-01;
  COFD[3311] = 2.09693013E-02;
  COFD[3312] = -1.68459946E+01;
  COFD[3313] = 4.07436246E+00;
  COFD[3314] = -3.25294692E-01;
  COFD[3315] = 1.46177587E-02;
  COFD[3316] = -2.21717646E+01;
  COFD[3317] = 5.69706859E+00;
  COFD[3318] = -5.11416131E-01;
  COFD[3319] = 2.16711595E-02;
  COFD[3320] = -1.96306433E+01;
  COFD[3321] = 5.05139863E+00;
  COFD[3322] = -4.47150410E-01;
  COFD[3323] = 1.97024129E-02;
  COFD[3324] = -2.23100498E+01;
  COFD[3325] = 5.68920173E+00;
  COFD[3326] = -5.07537130E-01;
  COFD[3327] = 2.13807918E-02;
  COFD[3328] = -1.82577755E+01;
  COFD[3329] = 4.63999331E+00;
  COFD[3330] = -3.98311828E-01;
  COFD[3331] = 1.77766109E-02;
  COFD[3332] = -1.72487420E+01;
  COFD[3333] = 4.24483918E+00;
  COFD[3334] = -3.48135608E-01;
  COFD[3335] = 1.56435370E-02;
  COFD[3336] = -1.58887299E+01;
  COFD[3337] = 3.85870007E+00;
  COFD[3338] = -2.98154723E-01;
  COFD[3339] = 1.34776935E-02;
  COFD[3340] = -1.59027695E+01;
  COFD[3341] = 3.85870007E+00;
  COFD[3342] = -2.98154723E-01;
  COFD[3343] = 1.34776935E-02;
  COFD[3344] = -1.72534176E+01;
  COFD[3345] = 4.24483918E+00;
  COFD[3346] = -3.48135608E-01;
  COFD[3347] = 1.56435370E-02;
  COFD[3348] = -2.12078177E+01;
  COFD[3349] = 5.58293886E+00;
  COFD[3350] = -4.85683839E-01;
  COFD[3351] = 2.00846811E-02;
  COFD[3352] = -1.72578564E+01;
  COFD[3353] = 4.24483918E+00;
  COFD[3354] = -3.48135608E-01;
  COFD[3355] = 1.56435370E-02;
  COFD[3356] = -1.67274154E+01;
  COFD[3357] = 4.64465126E+00;
  COFD[3358] = -3.98803383E-01;
  COFD[3359] = 1.77929328E-02;
  COFD[3360] = -1.82407273E+01;
  COFD[3361] = 4.63999331E+00;
  COFD[3362] = -3.98311828E-01;
  COFD[3363] = 1.77766109E-02;
  COFD[3364] = -1.82407273E+01;
  COFD[3365] = 4.63999331E+00;
  COFD[3366] = -3.98311828E-01;
  COFD[3367] = 1.77766109E-02;
  COFD[3368] = -2.16886304E+01;
  COFD[3369] = 5.68824628E+00;
  COFD[3370] = -5.07164081E-01;
  COFD[3371] = 2.13539742E-02;
  COFD[3372] = -2.16941304E+01;
  COFD[3373] = 5.68824628E+00;
  COFD[3374] = -5.07164081E-01;
  COFD[3375] = 2.13539742E-02;
  COFD[3376] = -2.15052392E+01;
  COFD[3377] = 5.66468469E+00;
  COFD[3378] = -5.11326179E-01;
  COFD[3379] = 2.18425146E-02;
  COFD[3380] = -2.01357952E+01;
  COFD[3381] = 5.22960509E+00;
  COFD[3382] = -4.68215587E-01;
  COFD[3383] = 2.05336694E-02;
  COFD[3384] = -1.96372104E+01;
  COFD[3385] = 5.05139863E+00;
  COFD[3386] = -4.47150410E-01;
  COFD[3387] = 1.97024129E-02;
  COFD[3388] = -2.04103996E+01;
  COFD[3389] = 5.30470298E+00;
  COFD[3390] = -4.78070128E-01;
  COFD[3391] = 2.09693013E-02;
  COFD[3392] = -1.81287300E+01;
  COFD[3393] = 4.65698092E+00;
  COFD[3394] = -3.99646718E-01;
  COFD[3395] = 1.77956180E-02;
  COFD[3396] = -2.16272927E+01;
  COFD[3397] = 5.64919890E+00;
  COFD[3398] = -5.07174967E-01;
  COFD[3399] = 2.15693228E-02;
  COFD[3400] = -2.16302308E+01;
  COFD[3401] = 5.64919890E+00;
  COFD[3402] = -5.07174967E-01;
  COFD[3403] = 2.15693228E-02;
  COFD[3404] = -2.05580410E+01;
  COFD[3405] = 5.30254126E+00;
  COFD[3406] = -4.77796012E-01;
  COFD[3407] = 2.09576046E-02;
  COFD[3408] = -2.08568002E+01;
  COFD[3409] = 5.38939502E+00;
  COFD[3410] = -4.88508342E-01;
  COFD[3411] = 2.14017409E-02;
  COFD[3412] = -2.21736424E+01;
  COFD[3413] = 5.69706859E+00;
  COFD[3414] = -5.11416131E-01;
  COFD[3415] = 2.16711595E-02;
  COFD[3416] = -2.17893428E+01;
  COFD[3417] = 5.65210943E+00;
  COFD[3418] = -5.15837732E-01;
  COFD[3419] = 2.23031110E-02;
  COFD[3420] = -2.21707705E+01;
  COFD[3421] = 5.69706859E+00;
  COFD[3422] = -5.11416131E-01;
  COFD[3423] = 2.16711595E-02;
  COFD[3424] = -2.23093197E+01;
  COFD[3425] = 5.68920173E+00;
  COFD[3426] = -5.07537130E-01;
  COFD[3427] = 2.13807918E-02;
  COFD[3428] = -2.21841730E+01;
  COFD[3429] = 5.69706859E+00;
  COFD[3430] = -5.11416131E-01;
  COFD[3431] = 2.16711595E-02;
  COFD[3432] = -2.20932596E+01;
  COFD[3433] = 5.52954770E+00;
  COFD[3434] = -4.76277229E-01;
  COFD[3435] = 1.95684485E-02;
  COFD[3436] = -2.20873570E+01;
  COFD[3437] = 5.52954770E+00;
  COFD[3438] = -4.76277229E-01;
  COFD[3439] = 1.95684485E-02;
  COFD[3440] = -1.68245138E+01;
  COFD[3441] = 4.06963018E+00;
  COFD[3442] = -3.24735969E-01;
  COFD[3443] = 1.45960083E-02;
  COFD[3444] = -2.02706692E+01;
  COFD[3445] = 4.84155965E+00;
  COFD[3446] = -4.21649019E-01;
  COFD[3447] = 1.86672992E-02;
  COFD[3448] = -2.07341257E+01;
  COFD[3449] = 5.45048622E+00;
  COFD[3450] = -4.95678069E-01;
  COFD[3451] = 2.16826855E-02;
  COFD[3452] = -1.82120869E+01;
  COFD[3453] = 4.62413676E+00;
  COFD[3454] = -3.96485100E-01;
  COFD[3455] = 1.77074617E-02;
  COFD[3456] = -2.08598585E+01;
  COFD[3457] = 5.38939502E+00;
  COFD[3458] = -4.88508342E-01;
  COFD[3459] = 2.14017409E-02;
  COFD[3460] = -2.17744516E+01;
  COFD[3461] = 5.65210943E+00;
  COFD[3462] = -5.15837732E-01;
  COFD[3463] = 2.23031110E-02;
  COFD[3464] = -2.17744516E+01;
  COFD[3465] = 5.65210943E+00;
  COFD[3466] = -5.15837732E-01;
  COFD[3467] = 2.23031110E-02;
  COFD[3468] = -1.30011110E+01;
  COFD[3469] = 3.00227472E+00;
  COFD[3470] = -1.84384037E-01;
  COFD[3471] = 8.41707179E-03;
  COFD[3472] = -2.04158859E+01;
  COFD[3473] = 5.30470298E+00;
  COFD[3474] = -4.78070128E-01;
  COFD[3475] = 2.09693013E-02;
  COFD[3476] = -1.68459946E+01;
  COFD[3477] = 4.07436246E+00;
  COFD[3478] = -3.25294692E-01;
  COFD[3479] = 1.46177587E-02;
  COFD[3480] = -2.21717646E+01;
  COFD[3481] = 5.69706859E+00;
  COFD[3482] = -5.11416131E-01;
  COFD[3483] = 2.16711595E-02;
  COFD[3484] = -1.96306433E+01;
  COFD[3485] = 5.05139863E+00;
  COFD[3486] = -4.47150410E-01;
  COFD[3487] = 1.97024129E-02;
  COFD[3488] = -2.23100498E+01;
  COFD[3489] = 5.68920173E+00;
  COFD[3490] = -5.07537130E-01;
  COFD[3491] = 2.13807918E-02;
  COFD[3492] = -1.82577755E+01;
  COFD[3493] = 4.63999331E+00;
  COFD[3494] = -3.98311828E-01;
  COFD[3495] = 1.77766109E-02;
  COFD[3496] = -1.72487420E+01;
  COFD[3497] = 4.24483918E+00;
  COFD[3498] = -3.48135608E-01;
  COFD[3499] = 1.56435370E-02;
  COFD[3500] = -1.58887299E+01;
  COFD[3501] = 3.85870007E+00;
  COFD[3502] = -2.98154723E-01;
  COFD[3503] = 1.34776935E-02;
  COFD[3504] = -1.59027695E+01;
  COFD[3505] = 3.85870007E+00;
  COFD[3506] = -2.98154723E-01;
  COFD[3507] = 1.34776935E-02;
  COFD[3508] = -1.72534176E+01;
  COFD[3509] = 4.24483918E+00;
  COFD[3510] = -3.48135608E-01;
  COFD[3511] = 1.56435370E-02;
  COFD[3512] = -2.12078177E+01;
  COFD[3513] = 5.58293886E+00;
  COFD[3514] = -4.85683839E-01;
  COFD[3515] = 2.00846811E-02;
  COFD[3516] = -1.72578564E+01;
  COFD[3517] = 4.24483918E+00;
  COFD[3518] = -3.48135608E-01;
  COFD[3519] = 1.56435370E-02;
  COFD[3520] = -1.67274154E+01;
  COFD[3521] = 4.64465126E+00;
  COFD[3522] = -3.98803383E-01;
  COFD[3523] = 1.77929328E-02;
  COFD[3524] = -1.82407273E+01;
  COFD[3525] = 4.63999331E+00;
  COFD[3526] = -3.98311828E-01;
  COFD[3527] = 1.77766109E-02;
  COFD[3528] = -1.82407273E+01;
  COFD[3529] = 4.63999331E+00;
  COFD[3530] = -3.98311828E-01;
  COFD[3531] = 1.77766109E-02;
  COFD[3532] = -2.16886304E+01;
  COFD[3533] = 5.68824628E+00;
  COFD[3534] = -5.07164081E-01;
  COFD[3535] = 2.13539742E-02;
  COFD[3536] = -2.16941304E+01;
  COFD[3537] = 5.68824628E+00;
  COFD[3538] = -5.07164081E-01;
  COFD[3539] = 2.13539742E-02;
  COFD[3540] = -2.15052392E+01;
  COFD[3541] = 5.66468469E+00;
  COFD[3542] = -5.11326179E-01;
  COFD[3543] = 2.18425146E-02;
  COFD[3544] = -2.01357952E+01;
  COFD[3545] = 5.22960509E+00;
  COFD[3546] = -4.68215587E-01;
  COFD[3547] = 2.05336694E-02;
  COFD[3548] = -1.96372104E+01;
  COFD[3549] = 5.05139863E+00;
  COFD[3550] = -4.47150410E-01;
  COFD[3551] = 1.97024129E-02;
  COFD[3552] = -2.04103996E+01;
  COFD[3553] = 5.30470298E+00;
  COFD[3554] = -4.78070128E-01;
  COFD[3555] = 2.09693013E-02;
  COFD[3556] = -1.81287300E+01;
  COFD[3557] = 4.65698092E+00;
  COFD[3558] = -3.99646718E-01;
  COFD[3559] = 1.77956180E-02;
  COFD[3560] = -2.16272927E+01;
  COFD[3561] = 5.64919890E+00;
  COFD[3562] = -5.07174967E-01;
  COFD[3563] = 2.15693228E-02;
  COFD[3564] = -2.16302308E+01;
  COFD[3565] = 5.64919890E+00;
  COFD[3566] = -5.07174967E-01;
  COFD[3567] = 2.15693228E-02;
  COFD[3568] = -2.05580410E+01;
  COFD[3569] = 5.30254126E+00;
  COFD[3570] = -4.77796012E-01;
  COFD[3571] = 2.09576046E-02;
  COFD[3572] = -2.08568002E+01;
  COFD[3573] = 5.38939502E+00;
  COFD[3574] = -4.88508342E-01;
  COFD[3575] = 2.14017409E-02;
  COFD[3576] = -2.21736424E+01;
  COFD[3577] = 5.69706859E+00;
  COFD[3578] = -5.11416131E-01;
  COFD[3579] = 2.16711595E-02;
  COFD[3580] = -2.17893428E+01;
  COFD[3581] = 5.65210943E+00;
  COFD[3582] = -5.15837732E-01;
  COFD[3583] = 2.23031110E-02;
  COFD[3584] = -2.21707705E+01;
  COFD[3585] = 5.69706859E+00;
  COFD[3586] = -5.11416131E-01;
  COFD[3587] = 2.16711595E-02;
  COFD[3588] = -2.23093197E+01;
  COFD[3589] = 5.68920173E+00;
  COFD[3590] = -5.07537130E-01;
  COFD[3591] = 2.13807918E-02;
  COFD[3592] = -2.21841730E+01;
  COFD[3593] = 5.69706859E+00;
  COFD[3594] = -5.11416131E-01;
  COFD[3595] = 2.16711595E-02;
  COFD[3596] = -2.20932596E+01;
  COFD[3597] = 5.52954770E+00;
  COFD[3598] = -4.76277229E-01;
  COFD[3599] = 1.95684485E-02;
  COFD[3600] = -2.20873570E+01;
  COFD[3601] = 5.52954770E+00;
  COFD[3602] = -4.76277229E-01;
  COFD[3603] = 1.95684485E-02;
  COFD[3604] = -1.68245138E+01;
  COFD[3605] = 4.06963018E+00;
  COFD[3606] = -3.24735969E-01;
  COFD[3607] = 1.45960083E-02;
  COFD[3608] = -2.30439861E+01;
  COFD[3609] = 5.47498589E+00;
  COFD[3610] = -4.66735757E-01;
  COFD[3611] = 1.90475911E-02;
  COFD[3612] = -2.00926090E+01;
  COFD[3613] = 4.58807289E+00;
  COFD[3614] = -3.18105074E-01;
  COFD[3615] = 1.11706107E-02;
  COFD[3616] = -2.17070813E+01;
  COFD[3617] = 5.69099359E+00;
  COFD[3618] = -5.08349503E-01;
  COFD[3619] = 2.14407762E-02;
  COFD[3620] = -2.07049935E+01;
  COFD[3621] = 4.72805055E+00;
  COFD[3622] = -3.40591321E-01;
  COFD[3623] = 1.23293721E-02;
  COFD[3624] = -1.91268351E+01;
  COFD[3625] = 3.86904236E+00;
  COFD[3626] = -2.04091431E-01;
  COFD[3627] = 5.35231270E-03;
  COFD[3628] = -1.91268351E+01;
  COFD[3629] = 3.86904236E+00;
  COFD[3630] = -2.04091431E-01;
  COFD[3631] = 5.35231270E-03;
  COFD[3632] = -1.70019113E+01;
  COFD[3633] = 4.54421325E+00;
  COFD[3634] = -3.86809376E-01;
  COFD[3635] = 1.73179271E-02;
  COFD[3636] = -2.06856911E+01;
  COFD[3637] = 4.84791744E+00;
  COFD[3638] = -3.60148227E-01;
  COFD[3639] = 1.33445806E-02;
  COFD[3640] = -2.13467342E+01;
  COFD[3641] = 5.62017718E+00;
  COFD[3642] = -5.13235471E-01;
  COFD[3643] = 2.22562169E-02;
  COFD[3644] = -1.75244815E+01;
  COFD[3645] = 3.03695857E+00;
  COFD[3646] = -7.53570650E-02;
  COFD[3647] = -1.06951881E-03;
  COFD[3648] = -2.12543007E+01;
  COFD[3649] = 5.21899155E+00;
  COFD[3650] = -4.22323327E-01;
  COFD[3651] = 1.66401604E-02;
  COFD[3652] = -1.70696319E+01;
  COFD[3653] = 2.76803494E+00;
  COFD[3654] = -3.45011618E-02;
  COFD[3655] = -3.08591460E-03;
  COFD[3656] = -2.17117551E+01;
  COFD[3657] = 5.68824628E+00;
  COFD[3658] = -5.07164081E-01;
  COFD[3659] = 2.13539742E-02;
  COFD[3660] = -2.15159838E+01;
  COFD[3661] = 5.66913715E+00;
  COFD[3662] = -5.16774023E-01;
  COFD[3663] = 2.22895896E-02;
  COFD[3664] = -2.03239968E+01;
  COFD[3665] = 5.43253571E+00;
  COFD[3666] = -4.93560962E-01;
  COFD[3667] = 2.15991994E-02;
  COFD[3668] = -2.03434739E+01;
  COFD[3669] = 5.43253571E+00;
  COFD[3670] = -4.93560962E-01;
  COFD[3671] = 2.15991994E-02;
  COFD[3672] = -2.15232991E+01;
  COFD[3673] = 5.66913715E+00;
  COFD[3674] = -5.16774023E-01;
  COFD[3675] = 2.22895896E-02;
  COFD[3676] = -1.46491914E+01;
  COFD[3677] = 2.16138313E+00;
  COFD[3678] = 5.73490661E-02;
  COFD[3679] = -7.60382925E-03;
  COFD[3680] = -2.15302800E+01;
  COFD[3681] = 5.66913715E+00;
  COFD[3682] = -5.16774023E-01;
  COFD[3683] = 2.22895896E-02;
  COFD[3684] = -2.00175537E+01;
  COFD[3685] = 5.68795121E+00;
  COFD[3686] = -5.06829829E-01;
  COFD[3687] = 2.13269478E-02;
  COFD[3688] = -2.16886304E+01;
  COFD[3689] = 5.68824628E+00;
  COFD[3690] = -5.07164081E-01;
  COFD[3691] = 2.13539742E-02;
  COFD[3692] = -2.16886304E+01;
  COFD[3693] = 5.68824628E+00;
  COFD[3694] = -5.07164081E-01;
  COFD[3695] = 2.13539742E-02;
  COFD[3696] = -1.63019576E+01;
  COFD[3697] = 2.74560847E+00;
  COFD[3698] = -3.11082858E-02;
  COFD[3699] = -3.25262689E-03;
  COFD[3700] = -1.63104215E+01;
  COFD[3701] = 2.74560847E+00;
  COFD[3702] = -3.11082858E-02;
  COFD[3703] = -3.25262689E-03;
  COFD[3704] = -1.77607606E+01;
  COFD[3705] = 3.42818294E+00;
  COFD[3706] = -1.35175998E-01;
  COFD[3707] = 1.89084109E-03;
  COFD[3708] = -2.07543339E+01;
  COFD[3709] = 4.91740304E+00;
  COFD[3710] = -3.71652145E-01;
  COFD[3711] = 1.39488879E-02;
  COFD[3712] = -2.12642202E+01;
  COFD[3713] = 5.21899155E+00;
  COFD[3714] = -4.22323327E-01;
  COFD[3715] = 1.66401604E-02;
  COFD[3716] = -2.06772461E+01;
  COFD[3717] = 4.84791744E+00;
  COFD[3718] = -3.60148227E-01;
  COFD[3719] = 1.33445806E-02;
  COFD[3720] = -2.16073289E+01;
  COFD[3721] = 5.67673350E+00;
  COFD[3722] = -5.03746041E-01;
  COFD[3723] = 2.11234732E-02;
  COFD[3724] = -1.75785054E+01;
  COFD[3725] = 3.26964480E+00;
  COFD[3726] = -1.10871639E-01;
  COFD[3727] = 6.85450093E-04;
  COFD[3728] = -1.75833101E+01;
  COFD[3729] = 3.26964480E+00;
  COFD[3730] = -1.10871639E-01;
  COFD[3731] = 6.85450093E-04;
  COFD[3732] = -2.08623648E+01;
  COFD[3733] = 4.85012404E+00;
  COFD[3734] = -3.60516881E-01;
  COFD[3735] = 1.33640233E-02;
  COFD[3736] = -2.07000103E+01;
  COFD[3737] = 4.72805055E+00;
  COFD[3738] = -3.40591321E-01;
  COFD[3739] = 1.23293721E-02;
  COFD[3740] = -1.75278274E+01;
  COFD[3741] = 3.03695857E+00;
  COFD[3742] = -7.53570650E-02;
  COFD[3743] = -1.06951881E-03;
  COFD[3744] = -1.91518503E+01;
  COFD[3745] = 3.86904236E+00;
  COFD[3746] = -2.04091431E-01;
  COFD[3747] = 5.35231270E-03;
  COFD[3748] = -1.75227141E+01;
  COFD[3749] = 3.03695857E+00;
  COFD[3750] = -7.53570650E-02;
  COFD[3751] = -1.06951881E-03;
  COFD[3752] = -1.70683091E+01;
  COFD[3753] = 2.76803494E+00;
  COFD[3754] = -3.45011618E-02;
  COFD[3755] = -3.08591460E-03;
  COFD[3756] = -1.75467772E+01;
  COFD[3757] = 3.03695857E+00;
  COFD[3758] = -7.53570650E-02;
  COFD[3759] = -1.06951881E-03;
  COFD[3760] = -1.54044125E+01;
  COFD[3761] = 1.98817703E+00;
  COFD[3762] = 8.32926956E-02;
  COFD[3763] = -8.87042615E-03;
  COFD[3764] = -1.53988294E+01;
  COFD[3765] = 1.98817703E+00;
  COFD[3766] = 8.32926956E-02;
  COFD[3767] = -8.87042615E-03;
  COFD[3768] = -2.13238353E+01;
  COFD[3769] = 5.61588044E+00;
  COFD[3770] = -5.12844998E-01;
  COFD[3771] = 2.22464175E-02;
  COFD[3772] = -2.30583179E+01;
  COFD[3773] = 5.47498589E+00;
  COFD[3774] = -4.66735757E-01;
  COFD[3775] = 1.90475911E-02;
  COFD[3776] = -2.01009288E+01;
  COFD[3777] = 4.58807289E+00;
  COFD[3778] = -3.18105074E-01;
  COFD[3779] = 1.11706107E-02;
  COFD[3780] = -2.17130934E+01;
  COFD[3781] = 5.69099359E+00;
  COFD[3782] = -5.08349503E-01;
  COFD[3783] = 2.14407762E-02;
  COFD[3784] = -2.07150283E+01;
  COFD[3785] = 4.72805055E+00;
  COFD[3786] = -3.40591321E-01;
  COFD[3787] = 1.23293721E-02;
  COFD[3788] = -1.91380229E+01;
  COFD[3789] = 3.86904236E+00;
  COFD[3790] = -2.04091431E-01;
  COFD[3791] = 5.35231270E-03;
  COFD[3792] = -1.91380229E+01;
  COFD[3793] = 3.86904236E+00;
  COFD[3794] = -2.04091431E-01;
  COFD[3795] = 5.35231270E-03;
  COFD[3796] = -1.70030029E+01;
  COFD[3797] = 4.54421325E+00;
  COFD[3798] = -3.86809376E-01;
  COFD[3799] = 1.73179271E-02;
  COFD[3800] = -2.06943071E+01;
  COFD[3801] = 4.84791744E+00;
  COFD[3802] = -3.60148227E-01;
  COFD[3803] = 1.33445806E-02;
  COFD[3804] = -2.13550473E+01;
  COFD[3805] = 5.62017718E+00;
  COFD[3806] = -5.13235471E-01;
  COFD[3807] = 2.22562169E-02;
  COFD[3808] = -1.75368726E+01;
  COFD[3809] = 3.03695857E+00;
  COFD[3810] = -7.53570650E-02;
  COFD[3811] = -1.06951881E-03;
  COFD[3812] = -2.12623028E+01;
  COFD[3813] = 5.21899155E+00;
  COFD[3814] = -4.22323327E-01;
  COFD[3815] = 1.66401604E-02;
  COFD[3816] = -1.70825629E+01;
  COFD[3817] = 2.76803494E+00;
  COFD[3818] = -3.45011618E-02;
  COFD[3819] = -3.08591460E-03;
  COFD[3820] = -2.17175170E+01;
  COFD[3821] = 5.68824628E+00;
  COFD[3822] = -5.07164081E-01;
  COFD[3823] = 2.13539742E-02;
  COFD[3824] = -2.15248648E+01;
  COFD[3825] = 5.66913715E+00;
  COFD[3826] = -5.16774023E-01;
  COFD[3827] = 2.22895896E-02;
  COFD[3828] = -2.03299982E+01;
  COFD[3829] = 5.43253571E+00;
  COFD[3830] = -4.93560962E-01;
  COFD[3831] = 2.15991994E-02;
  COFD[3832] = -2.03497152E+01;
  COFD[3833] = 5.43253571E+00;
  COFD[3834] = -4.93560962E-01;
  COFD[3835] = 2.15991994E-02;
  COFD[3836] = -2.15323122E+01;
  COFD[3837] = 5.66913715E+00;
  COFD[3838] = -5.16774023E-01;
  COFD[3839] = 2.22895896E-02;
  COFD[3840] = -1.46556624E+01;
  COFD[3841] = 2.16138313E+00;
  COFD[3842] = 5.73490661E-02;
  COFD[3843] = -7.60382925E-03;
  COFD[3844] = -2.15394209E+01;
  COFD[3845] = 5.66913715E+00;
  COFD[3846] = -5.16774023E-01;
  COFD[3847] = 2.22895896E-02;
  COFD[3848] = -2.00181175E+01;
  COFD[3849] = 5.68795121E+00;
  COFD[3850] = -5.06829829E-01;
  COFD[3851] = 2.13269478E-02;
  COFD[3852] = -2.16941304E+01;
  COFD[3853] = 5.68824628E+00;
  COFD[3854] = -5.07164081E-01;
  COFD[3855] = 2.13539742E-02;
  COFD[3856] = -2.16941304E+01;
  COFD[3857] = 5.68824628E+00;
  COFD[3858] = -5.07164081E-01;
  COFD[3859] = 2.13539742E-02;
  COFD[3860] = -1.63104215E+01;
  COFD[3861] = 2.74560847E+00;
  COFD[3862] = -3.11082858E-02;
  COFD[3863] = -3.25262689E-03;
  COFD[3864] = -1.63190312E+01;
  COFD[3865] = 2.74560847E+00;
  COFD[3866] = -3.11082858E-02;
  COFD[3867] = -3.25262689E-03;
  COFD[3868] = -1.77695112E+01;
  COFD[3869] = 3.42818294E+00;
  COFD[3870] = -1.35175998E-01;
  COFD[3871] = 1.89084109E-03;
  COFD[3872] = -2.07645532E+01;
  COFD[3873] = 4.91740304E+00;
  COFD[3874] = -3.71652145E-01;
  COFD[3875] = 1.39488879E-02;
  COFD[3876] = -2.12723840E+01;
  COFD[3877] = 5.21899155E+00;
  COFD[3878] = -4.22323327E-01;
  COFD[3879] = 1.66401604E-02;
  COFD[3880] = -2.06857165E+01;
  COFD[3881] = 4.84791744E+00;
  COFD[3882] = -3.60148227E-01;
  COFD[3883] = 1.33445806E-02;
  COFD[3884] = -2.16172587E+01;
  COFD[3885] = 5.67673350E+00;
  COFD[3886] = -5.03746041E-01;
  COFD[3887] = 2.11234732E-02;
  COFD[3888] = -1.75885358E+01;
  COFD[3889] = 3.26964480E+00;
  COFD[3890] = -1.10871639E-01;
  COFD[3891] = 6.85450093E-04;
  COFD[3892] = -1.75934384E+01;
  COFD[3893] = 3.26964480E+00;
  COFD[3894] = -1.10871639E-01;
  COFD[3895] = 6.85450093E-04;
  COFD[3896] = -2.08720892E+01;
  COFD[3897] = 4.85012404E+00;
  COFD[3898] = -3.60516881E-01;
  COFD[3899] = 1.33640233E-02;
  COFD[3900] = -2.07099445E+01;
  COFD[3901] = 4.72805055E+00;
  COFD[3902] = -3.40591321E-01;
  COFD[3903] = 1.23293721E-02;
  COFD[3904] = -1.75403029E+01;
  COFD[3905] = 3.03695857E+00;
  COFD[3906] = -7.53570650E-02;
  COFD[3907] = -1.06951881E-03;
  COFD[3908] = -1.91635972E+01;
  COFD[3909] = 3.86904236E+00;
  COFD[3910] = -2.04091431E-01;
  COFD[3911] = 5.35231270E-03;
  COFD[3912] = -1.75350610E+01;
  COFD[3913] = 3.03695857E+00;
  COFD[3914] = -7.53570650E-02;
  COFD[3915] = -1.06951881E-03;
  COFD[3916] = -1.70812055E+01;
  COFD[3917] = 2.76803494E+00;
  COFD[3918] = -3.45011618E-02;
  COFD[3919] = -3.08591460E-03;
  COFD[3920] = -1.75597409E+01;
  COFD[3921] = 3.03695857E+00;
  COFD[3922] = -7.53570650E-02;
  COFD[3923] = -1.06951881E-03;
  COFD[3924] = -1.54177428E+01;
  COFD[3925] = 1.98817703E+00;
  COFD[3926] = 8.32926956E-02;
  COFD[3927] = -8.87042615E-03;
  COFD[3928] = -1.54121875E+01;
  COFD[3929] = 1.98817703E+00;
  COFD[3930] = 8.32926956E-02;
  COFD[3931] = -8.87042615E-03;
  COFD[3932] = -2.13321490E+01;
  COFD[3933] = 5.61588044E+00;
  COFD[3934] = -5.12844998E-01;
  COFD[3935] = 2.22464175E-02;
  COFD[3936] = -2.33876210E+01;
  COFD[3937] = 5.68444793E+00;
  COFD[3938] = -5.05240496E-01;
  COFD[3939] = 2.12097583E-02;
  COFD[3940] = -2.09005024E+01;
  COFD[3941] = 4.99942155E+00;
  COFD[3942] = -3.85184256E-01;
  COFD[3943] = 1.46588915E-02;
  COFD[3944] = -2.16186569E+01;
  COFD[3945] = 5.67104725E+00;
  COFD[3946] = -5.09465602E-01;
  COFD[3947] = 2.16464253E-02;
  COFD[3948] = -2.13751818E+01;
  COFD[3949] = 5.07979658E+00;
  COFD[3950] = -3.99187658E-01;
  COFD[3951] = 1.54187526E-02;
  COFD[3952] = -2.03909198E+01;
  COFD[3953] = 4.47910824E+00;
  COFD[3954] = -2.99822681E-01;
  COFD[3955] = 1.02073242E-02;
  COFD[3956] = -2.03909198E+01;
  COFD[3957] = 4.47910824E+00;
  COFD[3958] = -2.99822681E-01;
  COFD[3959] = 1.02073242E-02;
  COFD[3960] = -1.67579904E+01;
  COFD[3961] = 4.43752546E+00;
  COFD[3962] = -3.73162303E-01;
  COFD[3963] = 1.67331145E-02;
  COFD[3964] = -2.13400199E+01;
  COFD[3965] = 5.19455335E+00;
  COFD[3966] = -4.18284064E-01;
  COFD[3967] = 1.64273864E-02;
  COFD[3968] = -2.10480365E+01;
  COFD[3969] = 5.50220431E+00;
  COFD[3970] = -4.99710237E-01;
  COFD[3971] = 2.17423321E-02;
  COFD[3972] = -1.84076624E+01;
  COFD[3973] = 3.44055898E+00;
  COFD[3974] = -1.37075422E-01;
  COFD[3975] = 1.98508013E-03;
  COFD[3976] = -2.17581213E+01;
  COFD[3977] = 5.49946039E+00;
  COFD[3978] = -4.70973967E-01;
  COFD[3979] = 1.92776036E-02;
  COFD[3980] = -1.84276935E+01;
  COFD[3981] = 3.40920978E+00;
  COFD[3982] = -1.33092795E-01;
  COFD[3983] = 1.81782995E-03;
  COFD[3984] = -2.15288760E+01;
  COFD[3985] = 5.66468469E+00;
  COFD[3986] = -5.11326179E-01;
  COFD[3987] = 2.18425146E-02;
  COFD[3988] = -2.13476599E+01;
  COFD[3989] = 5.61148666E+00;
  COFD[3990] = -5.12432696E-01;
  COFD[3991] = 2.22352591E-02;
  COFD[3992] = -1.96269774E+01;
  COFD[3993] = 5.16530963E+00;
  COFD[3994] = -4.60505851E-01;
  COFD[3995] = 2.02238960E-02;
  COFD[3996] = -1.96469242E+01;
  COFD[3997] = 5.16530963E+00;
  COFD[3998] = -4.60505851E-01;
  COFD[3999] = 2.02238960E-02;
  COFD[4000] = -2.10537017E+01;
  COFD[4001] = 5.50946662E+00;
  COFD[4002] = -5.00422014E-01;
  COFD[4003] = 2.17632945E-02;
  COFD[4004] = -1.36401212E+01;
  COFD[4005] = 1.65956064E+00;
  COFD[4006] = 1.31301475E-01;
  COFD[4007] = -1.10553278E-02;
  COFD[4008] = -2.10609344E+01;
  COFD[4009] = 5.50946662E+00;
  COFD[4010] = -5.00422014E-01;
  COFD[4011] = 2.17632945E-02;
  COFD[4012] = -1.98223345E+01;
  COFD[4013] = 5.65976805E+00;
  COFD[4014] = -5.10308906E-01;
  COFD[4015] = 2.17817532E-02;
  COFD[4016] = -2.15052392E+01;
  COFD[4017] = 5.66468469E+00;
  COFD[4018] = -5.11326179E-01;
  COFD[4019] = 2.18425146E-02;
  COFD[4020] = -2.15052392E+01;
  COFD[4021] = 5.66468469E+00;
  COFD[4022] = -5.11326179E-01;
  COFD[4023] = 2.18425146E-02;
  COFD[4024] = -1.77607606E+01;
  COFD[4025] = 3.42818294E+00;
  COFD[4026] = -1.35175998E-01;
  COFD[4027] = 1.89084109E-03;
  COFD[4028] = -1.77695112E+01;
  COFD[4029] = 3.42818294E+00;
  COFD[4030] = -1.35175998E-01;
  COFD[4031] = 1.89084109E-03;
  COFD[4032] = -1.70211995E+01;
  COFD[4033] = 3.10526505E+00;
  COFD[4034] = -9.07324147E-02;
  COFD[4035] = -1.30202751E-04;
  COFD[4036] = -2.11716278E+01;
  COFD[4037] = 5.12754974E+00;
  COFD[4038] = -4.07179194E-01;
  COFD[4039] = 1.58419017E-02;
  COFD[4040] = -2.17683585E+01;
  COFD[4041] = 5.49946039E+00;
  COFD[4042] = -4.70973967E-01;
  COFD[4043] = 1.92776036E-02;
  COFD[4044] = -2.13312887E+01;
  COFD[4045] = 5.19455335E+00;
  COFD[4046] = -4.18284064E-01;
  COFD[4047] = 1.64273864E-02;
  COFD[4048] = -2.14177694E+01;
  COFD[4049] = 5.64445226E+00;
  COFD[4050] = -5.06638242E-01;
  COFD[4051] = 2.15491854E-02;
  COFD[4052] = -1.86717880E+01;
  COFD[4053] = 3.79378841E+00;
  COFD[4054] = -1.92336769E-01;
  COFD[4055] = 4.75936498E-03;
  COFD[4056] = -1.86767857E+01;
  COFD[4057] = 3.79378841E+00;
  COFD[4058] = -1.92336769E-01;
  COFD[4059] = 4.75936498E-03;
  COFD[4060] = -2.15185995E+01;
  COFD[4061] = 5.19726931E+00;
  COFD[4062] = -4.18732190E-01;
  COFD[4063] = 1.64509613E-02;
  COFD[4064] = -2.13700003E+01;
  COFD[4065] = 5.07979658E+00;
  COFD[4066] = -3.99187658E-01;
  COFD[4067] = 1.54187526E-02;
  COFD[4068] = -1.84111754E+01;
  COFD[4069] = 3.44055898E+00;
  COFD[4070] = -1.37075422E-01;
  COFD[4071] = 1.98508013E-03;
  COFD[4072] = -2.04170306E+01;
  COFD[4073] = 4.47910824E+00;
  COFD[4074] = -2.99822681E-01;
  COFD[4075] = 1.02073242E-02;
  COFD[4076] = -1.84058074E+01;
  COFD[4077] = 3.44055898E+00;
  COFD[4078] = -1.37075422E-01;
  COFD[4079] = 1.98508013E-03;
  COFD[4080] = -1.84263021E+01;
  COFD[4081] = 3.40920978E+00;
  COFD[4082] = -1.33092795E-01;
  COFD[4083] = 1.81782995E-03;
  COFD[4084] = -1.84310932E+01;
  COFD[4085] = 3.44055898E+00;
  COFD[4086] = -1.37075422E-01;
  COFD[4087] = 1.98508013E-03;
  COFD[4088] = -1.59426115E+01;
  COFD[4089] = 2.25982618E+00;
  COFD[4090] = 3.81202526E-02;
  COFD[4091] = -6.47853230E-03;
  COFD[4092] = -1.59209463E+01;
  COFD[4093] = 2.25226697E+00;
  COFD[4094] = 3.92418178E-02;
  COFD[4095] = -6.53243367E-03;
  COFD[4096] = -2.10068356E+01;
  COFD[4097] = 5.49213673E+00;
  COFD[4098] = -4.98698498E-01;
  COFD[4099] = 2.17110028E-02;
  COFD[4100] = -2.26064841E+01;
  COFD[4101] = 5.48643918E+00;
  COFD[4102] = -4.98327363E-01;
  COFD[4103] = 2.17107588E-02;
  COFD[4104] = -2.20508891E+01;
  COFD[4105] = 5.69592279E+00;
  COFD[4106] = -5.10240070E-01;
  COFD[4107] = 2.15762020E-02;
  COFD[4108] = -2.00989387E+01;
  COFD[4109] = 5.20351263E+00;
  COFD[4110] = -4.65001962E-01;
  COFD[4111] = 2.04005867E-02;
  COFD[4112] = -2.23300848E+01;
  COFD[4113] = 5.68194587E+00;
  COFD[4114] = -5.10402599E-01;
  COFD[4115] = 2.16670698E-02;
  COFD[4116] = -2.23119992E+01;
  COFD[4117] = 5.50021686E+00;
  COFD[4118] = -4.71107238E-01;
  COFD[4119] = 1.92849078E-02;
  COFD[4120] = -2.23119992E+01;
  COFD[4121] = 5.50021686E+00;
  COFD[4122] = -4.71107238E-01;
  COFD[4123] = 1.92849078E-02;
  COFD[4124] = -1.44828240E+01;
  COFD[4125] = 3.56110932E+00;
  COFD[4126] = -2.58702659E-01;
  COFD[4127] = 1.17266885E-02;
  COFD[4128] = -2.19469232E+01;
  COFD[4129] = 5.64839278E+00;
  COFD[4130] = -5.07869816E-01;
  COFD[4131] = 2.16336719E-02;
  COFD[4132] = -1.90113079E+01;
  COFD[4133] = 4.76461849E+00;
  COFD[4134] = -4.12345773E-01;
  COFD[4135] = 1.82917938E-02;
  COFD[4136] = -2.16654806E+01;
  COFD[4137] = 5.06148364E+00;
  COFD[4138] = -3.95727634E-01;
  COFD[4139] = 1.52235677E-02;
  COFD[4140] = -2.16804439E+01;
  COFD[4141] = 5.64741106E+00;
  COFD[4142] = -5.15473555E-01;
  COFD[4143] = 2.22977945E-02;
  COFD[4144] = -2.15379038E+01;
  COFD[4145] = 4.92672935E+00;
  COFD[4146] = -3.73194449E-01;
  COFD[4147] = 1.40298739E-02;
  COFD[4148] = -2.01618838E+01;
  COFD[4149] = 5.22960509E+00;
  COFD[4150] = -4.68215587E-01;
  COFD[4151] = 2.05336694E-02;
  COFD[4152] = -1.92936265E+01;
  COFD[4153] = 4.86874488E+00;
  COFD[4154] = -4.24902800E-01;
  COFD[4155] = 1.87970659E-02;
  COFD[4156] = -1.80137966E+01;
  COFD[4157] = 4.57861932E+00;
  COFD[4158] = -3.90990906E-01;
  COFD[4159] = 1.74871172E-02;
  COFD[4160] = -1.80360169E+01;
  COFD[4161] = 4.57861932E+00;
  COFD[4162] = -3.90990906E-01;
  COFD[4163] = 1.74871172E-02;
  COFD[4164] = -1.93025471E+01;
  COFD[4165] = 4.86874488E+00;
  COFD[4166] = -4.24902800E-01;
  COFD[4167] = 1.87970659E-02;
  COFD[4168] = -1.87332554E+01;
  COFD[4169] = 4.08334106E+00;
  COFD[4170] = -2.37515720E-01;
  COFD[4171] = 7.03876946E-03;
  COFD[4172] = -1.93110868E+01;
  COFD[4173] = 4.86874488E+00;
  COFD[4174] = -4.24902800E-01;
  COFD[4175] = 1.87970659E-02;
  COFD[4176] = -1.84637937E+01;
  COFD[4177] = 5.24666770E+00;
  COFD[4178] = -4.70481585E-01;
  COFD[4179] = 2.06350051E-02;
  COFD[4180] = -2.01357952E+01;
  COFD[4181] = 5.22960509E+00;
  COFD[4182] = -4.68215587E-01;
  COFD[4183] = 2.05336694E-02;
  COFD[4184] = -2.01357952E+01;
  COFD[4185] = 5.22960509E+00;
  COFD[4186] = -4.68215587E-01;
  COFD[4187] = 2.05336694E-02;
  COFD[4188] = -2.07543339E+01;
  COFD[4189] = 4.91740304E+00;
  COFD[4190] = -3.71652145E-01;
  COFD[4191] = 1.39488879E-02;
  COFD[4192] = -2.07645532E+01;
  COFD[4193] = 4.91740304E+00;
  COFD[4194] = -3.71652145E-01;
  COFD[4195] = 1.39488879E-02;
  COFD[4196] = -2.11716278E+01;
  COFD[4197] = 5.12754974E+00;
  COFD[4198] = -4.07179194E-01;
  COFD[4199] = 1.58419017E-02;
  COFD[4200] = -2.19211183E+01;
  COFD[4201] = 5.66582199E+00;
  COFD[4202] = -5.11853099E-01;
  COFD[4203] = 2.18817980E-02;
  COFD[4204] = -2.16922911E+01;
  COFD[4205] = 5.64741106E+00;
  COFD[4206] = -5.15473555E-01;
  COFD[4207] = 2.22977945E-02;
  COFD[4208] = -2.19367252E+01;
  COFD[4209] = 5.64839278E+00;
  COFD[4210] = -5.07869816E-01;
  COFD[4211] = 2.16336719E-02;
  COFD[4212] = -2.03353785E+01;
  COFD[4213] = 5.31789903E+00;
  COFD[4214] = -4.79739278E-01;
  COFD[4215] = 2.10403358E-02;
  COFD[4216] = -2.13997280E+01;
  COFD[4217] = 5.16972284E+00;
  COFD[4218] = -4.14178667E-01;
  COFD[4219] = 1.62111661E-02;
  COFD[4220] = -2.14057526E+01;
  COFD[4221] = 5.16972284E+00;
  COFD[4222] = -4.14178667E-01;
  COFD[4223] = 1.62111661E-02;
  COFD[4224] = -2.21309037E+01;
  COFD[4225] = 5.64888199E+00;
  COFD[4226] = -5.07991267E-01;
  COFD[4227] = 2.16414623E-02;
  COFD[4228] = -2.23238510E+01;
  COFD[4229] = 5.68194587E+00;
  COFD[4230] = -5.10402599E-01;
  COFD[4231] = 2.16670698E-02;
  COFD[4232] = -2.16699372E+01;
  COFD[4233] = 5.06148364E+00;
  COFD[4234] = -3.95727634E-01;
  COFD[4235] = 1.52235677E-02;
  COFD[4236] = -2.23441976E+01;
  COFD[4237] = 5.50021686E+00;
  COFD[4238] = -4.71107238E-01;
  COFD[4239] = 1.92849078E-02;
  COFD[4240] = -2.16631307E+01;
  COFD[4241] = 5.06148364E+00;
  COFD[4242] = -3.95727634E-01;
  COFD[4243] = 1.52235677E-02;
  COFD[4244] = -2.15361194E+01;
  COFD[4245] = 4.92672935E+00;
  COFD[4246] = -3.73194449E-01;
  COFD[4247] = 1.40298739E-02;
  COFD[4248] = -2.16953680E+01;
  COFD[4249] = 5.06148364E+00;
  COFD[4250] = -3.95727634E-01;
  COFD[4251] = 1.52235677E-02;
  COFD[4252] = -2.06257735E+01;
  COFD[4253] = 4.43889601E+00;
  COFD[4254] = -2.93346493E-01;
  COFD[4255] = 9.87365393E-03;
  COFD[4256] = -2.06166794E+01;
  COFD[4257] = 4.43679748E+00;
  COFD[4258] = -2.93011707E-01;
  COFD[4259] = 9.85648974E-03;
  COFD[4260] = -1.89816912E+01;
  COFD[4261] = 4.75662930E+00;
  COFD[4262] = -4.11343764E-01;
  COFD[4263] = 1.82496227E-02;
  COFD[4264] = -2.20119849E+01;
  COFD[4265] = 5.34402519E+00;
  COFD[4266] = -4.83068822E-01;
  COFD[4267] = 2.11832962E-02;
  COFD[4268] = -2.18114262E+01;
  COFD[4269] = 5.66495194E+00;
  COFD[4270] = -5.12328464E-01;
  COFD[4271] = 2.19277949E-02;
  COFD[4272] = -1.95931916E+01;
  COFD[4273] = 5.02452773E+00;
  COFD[4274] = -4.43782411E-01;
  COFD[4275] = 1.95604414E-02;
  COFD[4276] = -2.21003257E+01;
  COFD[4277] = 5.66947709E+00;
  COFD[4278] = -5.15131199E-01;
  COFD[4279] = 2.21454794E-02;
  COFD[4280] = -2.24863224E+01;
  COFD[4281] = 5.67806029E+00;
  COFD[4282] = -5.03991163E-01;
  COFD[4283] = 2.11372864E-02;
  COFD[4284] = -2.24863224E+01;
  COFD[4285] = 5.67806029E+00;
  COFD[4286] = -5.03991163E-01;
  COFD[4287] = 2.11372864E-02;
  COFD[4288] = -1.40530650E+01;
  COFD[4289] = 3.35868034E+00;
  COFD[4290] = -2.31350436E-01;
  COFD[4291] = 1.04871016E-02;
  COFD[4292] = -2.18097254E+01;
  COFD[4293] = 5.66379176E+00;
  COFD[4294] = -5.16553812E-01;
  COFD[4295] = 2.23002301E-02;
  COFD[4296] = -1.85904245E+01;
  COFD[4297] = 4.63135891E+00;
  COFD[4298] = -3.97356061E-01;
  COFD[4299] = 1.77424015E-02;
  COFD[4300] = -2.20683535E+01;
  COFD[4301] = 5.34786767E+00;
  COFD[4302] = -4.44160169E-01;
  COFD[4303] = 1.78077063E-02;
  COFD[4304] = -2.11674199E+01;
  COFD[4305] = 5.48915410E+00;
  COFD[4306] = -4.98433602E-01;
  COFD[4307] = 2.17047430E-02;
  COFD[4308] = -2.19678419E+01;
  COFD[4309] = 5.23115443E+00;
  COFD[4310] = -4.24338954E-01;
  COFD[4311] = 1.67465343E-02;
  COFD[4312] = -1.96597861E+01;
  COFD[4313] = 5.05139863E+00;
  COFD[4314] = -4.47150410E-01;
  COFD[4315] = 1.97024129E-02;
  COFD[4316] = -1.87251978E+01;
  COFD[4317] = 4.67388141E+00;
  COFD[4318] = -4.00961748E-01;
  COFD[4319] = 1.78132254E-02;
  COFD[4320] = -1.74845920E+01;
  COFD[4321] = 4.37416294E+00;
  COFD[4322] = -3.65107627E-01;
  COFD[4323] = 1.63899597E-02;
  COFD[4324] = -1.75035677E+01;
  COFD[4325] = 4.37416294E+00;
  COFD[4326] = -3.65107627E-01;
  COFD[4327] = 1.63899597E-02;
  COFD[4328] = -1.87322419E+01;
  COFD[4329] = 4.67388141E+00;
  COFD[4330] = -4.00961748E-01;
  COFD[4331] = 1.78132254E-02;
  COFD[4332] = -2.03895028E+01;
  COFD[4333] = 4.95053951E+00;
  COFD[4334] = -3.77134666E-01;
  COFD[4335] = 1.42368958E-02;
  COFD[4336] = -1.87389602E+01;
  COFD[4337] = 4.67388141E+00;
  COFD[4338] = -4.00961748E-01;
  COFD[4339] = 1.78132254E-02;
  COFD[4340] = -1.80380548E+01;
  COFD[4341] = 5.06144525E+00;
  COFD[4342] = -4.48405432E-01;
  COFD[4343] = 1.97551196E-02;
  COFD[4344] = -1.96372104E+01;
  COFD[4345] = 5.05139863E+00;
  COFD[4346] = -4.47150410E-01;
  COFD[4347] = 1.97024129E-02;
  COFD[4348] = -1.96372104E+01;
  COFD[4349] = 5.05139863E+00;
  COFD[4350] = -4.47150410E-01;
  COFD[4351] = 1.97024129E-02;
  COFD[4352] = -2.12642202E+01;
  COFD[4353] = 5.21899155E+00;
  COFD[4354] = -4.22323327E-01;
  COFD[4355] = 1.66401604E-02;
  COFD[4356] = -2.12723840E+01;
  COFD[4357] = 5.21899155E+00;
  COFD[4358] = -4.22323327E-01;
  COFD[4359] = 1.66401604E-02;
  COFD[4360] = -2.17683585E+01;
  COFD[4361] = 5.49946039E+00;
  COFD[4362] = -4.70973967E-01;
  COFD[4363] = 1.92776036E-02;
  COFD[4364] = -2.16922911E+01;
  COFD[4365] = 5.64741106E+00;
  COFD[4366] = -5.15473555E-01;
  COFD[4367] = 2.22977945E-02;
  COFD[4368] = -2.11770056E+01;
  COFD[4369] = 5.48915410E+00;
  COFD[4370] = -4.98433602E-01;
  COFD[4371] = 2.17047430E-02;
  COFD[4372] = -2.18015801E+01;
  COFD[4373] = 5.66379176E+00;
  COFD[4374] = -5.16553812E-01;
  COFD[4375] = 2.23002301E-02;
  COFD[4376] = -1.96999510E+01;
  COFD[4377] = 5.09954424E+00;
  COFD[4378] = -4.52871032E-01;
  COFD[4379] = 1.99290563E-02;
  COFD[4380] = -2.17899111E+01;
  COFD[4381] = 5.42990885E+00;
  COFD[4382] = -4.58860891E-01;
  COFD[4383] = 1.86184915E-02;
  COFD[4384] = -2.17945162E+01;
  COFD[4385] = 5.42990885E+00;
  COFD[4386] = -4.58860891E-01;
  COFD[4387] = 1.86184915E-02;
  COFD[4388] = -2.19712700E+01;
  COFD[4389] = 5.66323135E+00;
  COFD[4390] = -5.16518069E-01;
  COFD[4391] = 2.23002455E-02;
  COFD[4392] = -2.20955476E+01;
  COFD[4393] = 5.66947709E+00;
  COFD[4394] = -5.15131199E-01;
  COFD[4395] = 2.21454794E-02;
  COFD[4396] = -2.20715300E+01;
  COFD[4397] = 5.34786767E+00;
  COFD[4398] = -4.44160169E-01;
  COFD[4399] = 1.78077063E-02;
  COFD[4400] = -2.25101565E+01;
  COFD[4401] = 5.67806029E+00;
  COFD[4402] = -5.03991163E-01;
  COFD[4403] = 2.11372864E-02;
  COFD[4404] = -2.20666752E+01;
  COFD[4405] = 5.34786767E+00;
  COFD[4406] = -4.44160169E-01;
  COFD[4407] = 1.78077063E-02;
  COFD[4408] = -2.19665885E+01;
  COFD[4409] = 5.23115443E+00;
  COFD[4410] = -4.24338954E-01;
  COFD[4411] = 1.67465343E-02;
  COFD[4412] = -2.20894997E+01;
  COFD[4413] = 5.34786767E+00;
  COFD[4414] = -4.44160169E-01;
  COFD[4415] = 1.78077063E-02;
  COFD[4416] = -2.13144730E+01;
  COFD[4417] = 4.87520005E+00;
  COFD[4418] = -3.64681670E-01;
  COFD[4419] = 1.35831766E-02;
  COFD[4420] = -2.13091860E+01;
  COFD[4421] = 4.87520005E+00;
  COFD[4422] = -3.64681670E-01;
  COFD[4423] = 1.35831766E-02;
  COFD[4424] = -1.85659740E+01;
  COFD[4425] = 4.62539600E+00;
  COFD[4426] = -3.96640913E-01;
  COFD[4427] = 1.77139115E-02;
  COFD[4428] = -2.25993052E+01;
  COFD[4429] = 5.51014294E+00;
  COFD[4430] = -5.00490863E-01;
  COFD[4431] = 2.17654712E-02;
  COFD[4432] = -2.21131401E+01;
  COFD[4433] = 5.69019961E+00;
  COFD[4434] = -5.07971611E-01;
  COFD[4435] = 2.14126561E-02;
  COFD[4436] = -2.03421339E+01;
  COFD[4437] = 5.26709856E+00;
  COFD[4438] = -4.73195490E-01;
  COFD[4439] = 2.07564226E-02;
  COFD[4440] = -2.24040838E+01;
  COFD[4441] = 5.69725388E+00;
  COFD[4442] = -5.11197970E-01;
  COFD[4443] = 2.16513648E-02;
  COFD[4444] = -2.22077955E+01;
  COFD[4445] = 5.44396600E+00;
  COFD[4446] = -4.61412551E-01;
  COFD[4447] = 1.87602923E-02;
  COFD[4448] = -2.22077955E+01;
  COFD[4449] = 5.44396600E+00;
  COFD[4450] = -4.61412551E-01;
  COFD[4451] = 1.87602923E-02;
  COFD[4452] = -1.47225366E+01;
  COFD[4453] = 3.59739586E+00;
  COFD[4454] = -2.63437939E-01;
  COFD[4455] = 1.19336668E-02;
  COFD[4456] = -2.20476032E+01;
  COFD[4457] = 5.66395629E+00;
  COFD[4458] = -5.08751142E-01;
  COFD[4459] = 2.16239527E-02;
  COFD[4460] = -1.91802135E+01;
  COFD[4461] = 4.80792873E+00;
  COFD[4462] = -4.17710332E-01;
  COFD[4463] = 1.85143704E-02;
  COFD[4464] = -2.15241510E+01;
  COFD[4465] = 4.99548160E+00;
  COFD[4466] = -3.84541130E-01;
  COFD[4467] = 1.46252961E-02;
  COFD[4468] = -2.17916534E+01;
  COFD[4469] = 5.66379176E+00;
  COFD[4470] = -5.16553812E-01;
  COFD[4471] = 2.23002301E-02;
  COFD[4472] = -2.13751384E+01;
  COFD[4473] = 4.85816818E+00;
  COFD[4474] = -3.61859198E-01;
  COFD[4475] = 1.34347998E-02;
  COFD[4476] = -2.04335360E+01;
  COFD[4477] = 5.30470298E+00;
  COFD[4478] = -4.78070128E-01;
  COFD[4479] = 2.09693013E-02;
  COFD[4480] = -1.94379054E+01;
  COFD[4481] = 4.90176377E+00;
  COFD[4482] = -4.28654088E-01;
  COFD[4483] = 1.89366950E-02;
  COFD[4484] = -1.82086768E+01;
  COFD[4485] = 4.61379381E+00;
  COFD[4486] = -3.95204189E-01;
  COFD[4487] = 1.76544311E-02;
  COFD[4488] = -1.82281646E+01;
  COFD[4489] = 4.61379381E+00;
  COFD[4490] = -3.95204189E-01;
  COFD[4491] = 1.76544311E-02;
  COFD[4492] = -1.94452266E+01;
  COFD[4493] = 4.90176377E+00;
  COFD[4494] = -4.28654088E-01;
  COFD[4495] = 1.89366950E-02;
  COFD[4496] = -1.97007161E+01;
  COFD[4497] = 4.53650344E+00;
  COFD[4498] = -3.09332864E-01;
  COFD[4499] = 1.07047264E-02;
  COFD[4500] = -1.94522132E+01;
  COFD[4501] = 4.90176377E+00;
  COFD[4502] = -4.28654088E-01;
  COFD[4503] = 1.89366950E-02;
  COFD[4504] = -1.88205875E+01;
  COFD[4505] = 5.31710153E+00;
  COFD[4506] = -4.79638614E-01;
  COFD[4507] = 2.10360613E-02;
  COFD[4508] = -2.04103996E+01;
  COFD[4509] = 5.30470298E+00;
  COFD[4510] = -4.78070128E-01;
  COFD[4511] = 2.09693013E-02;
  COFD[4512] = -2.04103996E+01;
  COFD[4513] = 5.30470298E+00;
  COFD[4514] = -4.78070128E-01;
  COFD[4515] = 2.09693013E-02;
  COFD[4516] = -2.06772461E+01;
  COFD[4517] = 4.84791744E+00;
  COFD[4518] = -3.60148227E-01;
  COFD[4519] = 1.33445806E-02;
  COFD[4520] = -2.06857165E+01;
  COFD[4521] = 4.84791744E+00;
  COFD[4522] = -3.60148227E-01;
  COFD[4523] = 1.33445806E-02;
  COFD[4524] = -2.13312887E+01;
  COFD[4525] = 5.19455335E+00;
  COFD[4526] = -4.18284064E-01;
  COFD[4527] = 1.64273864E-02;
  COFD[4528] = -2.19367252E+01;
  COFD[4529] = 5.64839278E+00;
  COFD[4530] = -5.07869816E-01;
  COFD[4531] = 2.16336719E-02;
  COFD[4532] = -2.18015801E+01;
  COFD[4533] = 5.66379176E+00;
  COFD[4534] = -5.16553812E-01;
  COFD[4535] = 2.23002301E-02;
  COFD[4536] = -2.20391517E+01;
  COFD[4537] = 5.66395629E+00;
  COFD[4538] = -5.08751142E-01;
  COFD[4539] = 2.16239527E-02;
  COFD[4540] = -2.05330702E+01;
  COFD[4541] = 5.36975831E+00;
  COFD[4542] = -4.86158770E-01;
  COFD[4543] = 2.13075589E-02;
  COFD[4544] = -2.12952938E+01;
  COFD[4545] = 5.09944835E+00;
  COFD[4546] = -4.02512129E-01;
  COFD[4547] = 1.55957509E-02;
  COFD[4548] = -2.13001028E+01;
  COFD[4549] = 5.09944835E+00;
  COFD[4550] = -4.02512129E-01;
  COFD[4551] = 1.55957509E-02;
  COFD[4552] = -2.22074832E+01;
  COFD[4553] = 5.66274856E+00;
  COFD[4554] = -5.08624885E-01;
  COFD[4555] = 2.16197194E-02;
  COFD[4556] = -2.23990961E+01;
  COFD[4557] = 5.69725388E+00;
  COFD[4558] = -5.11197970E-01;
  COFD[4559] = 2.16513648E-02;
  COFD[4560] = -2.15275006E+01;
  COFD[4561] = 4.99548160E+00;
  COFD[4562] = -3.84541130E-01;
  COFD[4563] = 1.46252961E-02;
  COFD[4564] = -2.22327669E+01;
  COFD[4565] = 5.44396600E+00;
  COFD[4566] = -4.61412551E-01;
  COFD[4567] = 1.87602923E-02;
  COFD[4568] = -2.15223817E+01;
  COFD[4569] = 4.99548160E+00;
  COFD[4570] = -3.84541130E-01;
  COFD[4571] = 1.46252961E-02;
  COFD[4572] = -2.13738141E+01;
  COFD[4573] = 4.85816818E+00;
  COFD[4574] = -3.61859198E-01;
  COFD[4575] = 1.34347998E-02;
  COFD[4576] = -2.15464719E+01;
  COFD[4577] = 4.99548160E+00;
  COFD[4578] = -3.84541130E-01;
  COFD[4579] = 1.46252961E-02;
  COFD[4580] = -2.06356245E+01;
  COFD[4581] = 4.46770471E+00;
  COFD[4582] = -2.97972198E-01;
  COFD[4583] = 1.01116412E-02;
  COFD[4584] = -2.06305236E+01;
  COFD[4585] = 4.46770471E+00;
  COFD[4586] = -2.97972198E-01;
  COFD[4587] = 1.01116412E-02;
  COFD[4588] = -1.91510723E+01;
  COFD[4589] = 4.79990484E+00;
  COFD[4590] = -4.16700940E-01;
  COFD[4591] = 1.84717181E-02;
  COFD[4592] = -2.06533479E+01;
  COFD[4593] = 4.88424197E+00;
  COFD[4594] = -4.26629983E-01;
  COFD[4595] = 1.88596381E-02;
  COFD[4596] = -2.07570447E+01;
  COFD[4597] = 5.48005861E+00;
  COFD[4598] = -4.98480661E-01;
  COFD[4599] = 2.17599701E-02;
  COFD[4600] = -1.81374322E+01;
  COFD[4601] = 4.65175838E+00;
  COFD[4602] = -3.99406516E-01;
  COFD[4603] = 1.78048569E-02;
  COFD[4604] = -2.10212507E+01;
  COFD[4605] = 5.43801380E+00;
  COFD[4606] = -4.94208208E-01;
  COFD[4607] = 2.16247862E-02;
  COFD[4608] = -2.19091341E+01;
  COFD[4609] = 5.66907490E+00;
  COFD[4610] = -5.16714859E-01;
  COFD[4611] = 2.22848049E-02;
  COFD[4612] = -2.19091341E+01;
  COFD[4613] = 5.66907490E+00;
  COFD[4614] = -5.16714859E-01;
  COFD[4615] = 2.22848049E-02;
  COFD[4616] = -1.26884864E+01;
  COFD[4617] = 3.02924860E+00;
  COFD[4618] = -1.87792147E-01;
  COFD[4619] = 8.56032464E-03;
  COFD[4620] = -2.05429790E+01;
  COFD[4621] = 5.36975831E+00;
  COFD[4622] = -4.86158770E-01;
  COFD[4623] = 2.13075589E-02;
  COFD[4624] = -1.69224336E+01;
  COFD[4625] = 4.14075383E+00;
  COFD[4626] = -3.34082549E-01;
  COFD[4627] = 1.50077204E-02;
  COFD[4628] = -2.22988493E+01;
  COFD[4629] = 5.69221061E+00;
  COFD[4630] = -5.08960069E-01;
  COFD[4631] = 2.14865997E-02;
  COFD[4632] = -1.96884189E+01;
  COFD[4633] = 5.09954424E+00;
  COFD[4634] = -4.52871032E-01;
  COFD[4635] = 1.99290563E-02;
  COFD[4636] = -2.24619148E+01;
  COFD[4637] = 5.68259060E+00;
  COFD[4638] = -5.04840893E-01;
  COFD[4639] = 2.11855526E-02;
  COFD[4640] = -1.81543569E+01;
  COFD[4641] = 4.65698092E+00;
  COFD[4642] = -3.99646718E-01;
  COFD[4643] = 1.77956180E-02;
  COFD[4644] = -1.73478922E+01;
  COFD[4645] = 4.31782710E+00;
  COFD[4646] = -3.57793798E-01;
  COFD[4647] = 1.60717745E-02;
  COFD[4648] = -1.57771847E+01;
  COFD[4649] = 3.90109718E+00;
  COFD[4650] = -3.03520599E-01;
  COFD[4651] = 1.37043856E-02;
  COFD[4652] = -1.57989735E+01;
  COFD[4653] = 3.90109718E+00;
  COFD[4654] = -3.03520599E-01;
  COFD[4655] = 1.37043856E-02;
  COFD[4656] = -1.73565458E+01;
  COFD[4657] = 4.31782710E+00;
  COFD[4658] = -3.57793798E-01;
  COFD[4659] = 1.60717745E-02;
  COFD[4660] = -2.08865822E+01;
  COFD[4661] = 5.52150832E+00;
  COFD[4662] = -4.74859017E-01;
  COFD[4663] = 1.94906311E-02;
  COFD[4664] = -1.73648256E+01;
  COFD[4665] = 4.31782710E+00;
  COFD[4666] = -3.57793798E-01;
  COFD[4667] = 1.60717745E-02;
  COFD[4668] = -1.63046017E+01;
  COFD[4669] = 4.65873028E+00;
  COFD[4670] = -3.99702456E-01;
  COFD[4671] = 1.77903438E-02;
  COFD[4672] = -1.81287300E+01;
  COFD[4673] = 4.65698092E+00;
  COFD[4674] = -3.99646718E-01;
  COFD[4675] = 1.77956180E-02;
  COFD[4676] = -1.81287300E+01;
  COFD[4677] = 4.65698092E+00;
  COFD[4678] = -3.99646718E-01;
  COFD[4679] = 1.77956180E-02;
  COFD[4680] = -2.16073289E+01;
  COFD[4681] = 5.67673350E+00;
  COFD[4682] = -5.03746041E-01;
  COFD[4683] = 2.11234732E-02;
  COFD[4684] = -2.16172587E+01;
  COFD[4685] = 5.67673350E+00;
  COFD[4686] = -5.03746041E-01;
  COFD[4687] = 2.11234732E-02;
  COFD[4688] = -2.14177694E+01;
  COFD[4689] = 5.64445226E+00;
  COFD[4690] = -5.06638242E-01;
  COFD[4691] = 2.15491854E-02;
  COFD[4692] = -2.03353785E+01;
  COFD[4693] = 5.31789903E+00;
  COFD[4694] = -4.79739278E-01;
  COFD[4695] = 2.10403358E-02;
  COFD[4696] = -1.96999510E+01;
  COFD[4697] = 5.09954424E+00;
  COFD[4698] = -4.52871032E-01;
  COFD[4699] = 1.99290563E-02;
  COFD[4700] = -2.05330702E+01;
  COFD[4701] = 5.36975831E+00;
  COFD[4702] = -4.86158770E-01;
  COFD[4703] = 2.13075589E-02;
  COFD[4704] = -1.80714096E+01;
  COFD[4705] = 4.67515425E+00;
  COFD[4706] = -4.01075572E-01;
  COFD[4707] = 1.78158572E-02;
  COFD[4708] = -2.17205928E+01;
  COFD[4709] = 5.68478244E+00;
  COFD[4710] = -5.10618103E-01;
  COFD[4711] = 2.16700292E-02;
  COFD[4712] = -2.17264098E+01;
  COFD[4713] = 5.68478244E+00;
  COFD[4714] = -5.10618103E-01;
  COFD[4715] = 2.16700292E-02;
  COFD[4716] = -2.07400708E+01;
  COFD[4717] = 5.36819730E+00;
  COFD[4718] = -4.85972562E-01;
  COFD[4719] = 2.13001313E-02;
  COFD[4720] = -2.10152294E+01;
  COFD[4721] = 5.43801380E+00;
  COFD[4722] = -4.94208208E-01;
  COFD[4723] = 2.16247862E-02;
  COFD[4724] = -2.23031072E+01;
  COFD[4725] = 5.69221061E+00;
  COFD[4726] = -5.08960069E-01;
  COFD[4727] = 2.14865997E-02;
  COFD[4728] = -2.19402178E+01;
  COFD[4729] = 5.66907490E+00;
  COFD[4730] = -5.16714859E-01;
  COFD[4731] = 2.22848049E-02;
  COFD[4732] = -2.22966034E+01;
  COFD[4733] = 5.69221061E+00;
  COFD[4734] = -5.08960069E-01;
  COFD[4735] = 2.14865997E-02;
  COFD[4736] = -2.24602138E+01;
  COFD[4737] = 5.68259060E+00;
  COFD[4738] = -5.04840893E-01;
  COFD[4739] = 2.11855526E-02;
  COFD[4740] = -2.23273712E+01;
  COFD[4741] = 5.69221061E+00;
  COFD[4742] = -5.08960069E-01;
  COFD[4743] = 2.14865997E-02;
  COFD[4744] = -2.21219581E+01;
  COFD[4745] = 5.46566865E+00;
  COFD[4746] = -4.65136849E-01;
  COFD[4747] = 1.89613252E-02;
  COFD[4748] = -2.21157791E+01;
  COFD[4749] = 5.46566865E+00;
  COFD[4750] = -4.65136849E-01;
  COFD[4751] = 1.89613252E-02;
  COFD[4752] = -1.68788995E+01;
  COFD[4753] = 4.12702806E+00;
  COFD[4754] = -3.32207230E-01;
  COFD[4755] = 1.49219062E-02;
  COFD[4756] = -2.34701649E+01;
  COFD[4757] = 5.62943629E+00;
  COFD[4758] = -4.95272887E-01;
  COFD[4759] = 2.06543955E-02;
  COFD[4760] = -2.08599325E+01;
  COFD[4761] = 4.90144316E+00;
  COFD[4762] = -3.69014218E-01;
  COFD[4763] = 1.38104338E-02;
  COFD[4764] = -2.16430338E+01;
  COFD[4765] = 5.64779714E+00;
  COFD[4766] = -5.07721971E-01;
  COFD[4767] = 2.16241891E-02;
  COFD[4768] = -2.14217431E+01;
  COFD[4769] = 5.01654907E+00;
  COFD[4770] = -3.87995080E-01;
  COFD[4771] = 1.48063744E-02;
  COFD[4772] = -2.03163280E+01;
  COFD[4773] = 4.36001963E+00;
  COFD[4774] = -2.80770646E-01;
  COFD[4775] = 9.22995126E-03;
  COFD[4776] = -2.03163280E+01;
  COFD[4777] = 4.36001963E+00;
  COFD[4778] = -2.80770646E-01;
  COFD[4779] = 9.22995126E-03;
  COFD[4780] = -1.66323736E+01;
  COFD[4781] = 4.36001181E+00;
  COFD[4782] = -3.63261725E-01;
  COFD[4783] = 1.63092312E-02;
  COFD[4784] = -2.13053031E+01;
  COFD[4785] = 5.09944835E+00;
  COFD[4786] = -4.02512129E-01;
  COFD[4787] = 1.55957509E-02;
  COFD[4788] = -2.11053659E+01;
  COFD[4789] = 5.48192321E+00;
  COFD[4790] = -4.98166647E-01;
  COFD[4791] = 2.17221333E-02;
  COFD[4792] = -1.87080864E+01;
  COFD[4793] = 3.50982702E+00;
  COFD[4794] = -1.47750833E-01;
  COFD[4795] = 2.51627764E-03;
  COFD[4796] = -2.17782694E+01;
  COFD[4797] = 5.42990885E+00;
  COFD[4798] = -4.58860891E-01;
  COFD[4799] = 1.86184915E-02;
  COFD[4800] = -1.83689025E+01;
  COFD[4801] = 3.29018405E+00;
  COFD[4802] = -1.14013582E-01;
  COFD[4803] = 8.41167937E-04;
  COFD[4804] = -2.16530812E+01;
  COFD[4805] = 5.64919890E+00;
  COFD[4806] = -5.07174967E-01;
  COFD[4807] = 2.15693228E-02;
  COFD[4808] = -2.13841054E+01;
  COFD[4809] = 5.57682097E+00;
  COFD[4810] = -5.08589054E-01;
  COFD[4811] = 2.20956285E-02;
  COFD[4812] = -1.99120381E+01;
  COFD[4813] = 5.21863561E+00;
  COFD[4814] = -4.66851910E-01;
  COFD[4815] = 2.04766146E-02;
  COFD[4816] = -1.99339778E+01;
  COFD[4817] = 5.21863561E+00;
  COFD[4818] = -4.66851910E-01;
  COFD[4819] = 2.04766146E-02;
  COFD[4820] = -2.13928517E+01;
  COFD[4821] = 5.57682097E+00;
  COFD[4822] = -5.08589054E-01;
  COFD[4823] = 2.20956285E-02;
  COFD[4824] = -1.60017321E+01;
  COFD[4825] = 2.71982952E+00;
  COFD[4826] = -2.72095575E-02;
  COFD[4827] = -3.44411288E-03;
  COFD[4828] = -2.14012217E+01;
  COFD[4829] = 5.57682097E+00;
  COFD[4830] = -5.08589054E-01;
  COFD[4831] = 2.20956285E-02;
  COFD[4832] = -1.99563295E+01;
  COFD[4833] = 5.65684578E+00;
  COFD[4834] = -5.08001806E-01;
  COFD[4835] = 2.15985135E-02;
  COFD[4836] = -2.16272927E+01;
  COFD[4837] = 5.64919890E+00;
  COFD[4838] = -5.07174967E-01;
  COFD[4839] = 2.15693228E-02;
  COFD[4840] = -2.16272927E+01;
  COFD[4841] = 5.64919890E+00;
  COFD[4842] = -5.07174967E-01;
  COFD[4843] = 2.15693228E-02;
  COFD[4844] = -1.75785054E+01;
  COFD[4845] = 3.26964480E+00;
  COFD[4846] = -1.10871639E-01;
  COFD[4847] = 6.85450093E-04;
  COFD[4848] = -1.75885358E+01;
  COFD[4849] = 3.26964480E+00;
  COFD[4850] = -1.10871639E-01;
  COFD[4851] = 6.85450093E-04;
  COFD[4852] = -1.86717880E+01;
  COFD[4853] = 3.79378841E+00;
  COFD[4854] = -1.92336769E-01;
  COFD[4855] = 4.75936498E-03;
  COFD[4856] = -2.13997280E+01;
  COFD[4857] = 5.16972284E+00;
  COFD[4858] = -4.14178667E-01;
  COFD[4859] = 1.62111661E-02;
  COFD[4860] = -2.17899111E+01;
  COFD[4861] = 5.42990885E+00;
  COFD[4862] = -4.58860891E-01;
  COFD[4863] = 1.86184915E-02;
  COFD[4864] = -2.12952938E+01;
  COFD[4865] = 5.09944835E+00;
  COFD[4866] = -4.02512129E-01;
  COFD[4867] = 1.55957509E-02;
  COFD[4868] = -2.17205928E+01;
  COFD[4869] = 5.68478244E+00;
  COFD[4870] = -5.10618103E-01;
  COFD[4871] = 2.16700292E-02;
  COFD[4872] = -1.86047487E+01;
  COFD[4873] = 3.68013508E+00;
  COFD[4874] = -1.74380426E-01;
  COFD[4875] = 3.85147554E-03;
  COFD[4876] = -1.86106376E+01;
  COFD[4877] = 3.68013508E+00;
  COFD[4878] = -1.74380426E-01;
  COFD[4879] = 3.85147554E-03;
  COFD[4880] = -2.14889715E+01;
  COFD[4881] = 5.10164697E+00;
  COFD[4882] = -4.02880791E-01;
  COFD[4883] = 1.56152795E-02;
  COFD[4884] = -2.14156482E+01;
  COFD[4885] = 5.01654907E+00;
  COFD[4886] = -3.87995080E-01;
  COFD[4887] = 1.48063744E-02;
  COFD[4888] = -1.87124126E+01;
  COFD[4889] = 3.50982702E+00;
  COFD[4890] = -1.47750833E-01;
  COFD[4891] = 2.51627764E-03;
  COFD[4892] = -2.03476793E+01;
  COFD[4893] = 4.36001963E+00;
  COFD[4894] = -2.80770646E-01;
  COFD[4895] = 9.22995126E-03;
  COFD[4896] = -1.87058047E+01;
  COFD[4897] = 3.50982702E+00;
  COFD[4898] = -1.47750833E-01;
  COFD[4899] = 2.51627764E-03;
  COFD[4900] = -1.83671729E+01;
  COFD[4901] = 3.29018405E+00;
  COFD[4902] = -1.14013582E-01;
  COFD[4903] = 8.41167937E-04;
  COFD[4904] = -1.87370773E+01;
  COFD[4905] = 3.50982702E+00;
  COFD[4906] = -1.47750833E-01;
  COFD[4907] = 2.51627764E-03;
  COFD[4908] = -1.69191496E+01;
  COFD[4909] = 2.59961196E+00;
  COFD[4910] = -8.79342036E-03;
  COFD[4911] = -4.35596363E-03;
  COFD[4912] = -1.69141623E+01;
  COFD[4913] = 2.59961196E+00;
  COFD[4914] = -8.79342036E-03;
  COFD[4915] = -4.35596363E-03;
  COFD[4916] = -2.10888364E+01;
  COFD[4917] = 5.48007439E+00;
  COFD[4918] = -4.98112485E-01;
  COFD[4919] = 2.17277651E-02;
  COFD[4920] = -2.34794523E+01;
  COFD[4921] = 5.62943629E+00;
  COFD[4922] = -4.95272887E-01;
  COFD[4923] = 2.06543955E-02;
  COFD[4924] = -2.08646410E+01;
  COFD[4925] = 4.90144316E+00;
  COFD[4926] = -3.69014218E-01;
  COFD[4927] = 1.38104338E-02;
  COFD[4928] = -2.16462785E+01;
  COFD[4929] = 5.64779714E+00;
  COFD[4930] = -5.07721971E-01;
  COFD[4931] = 2.16241891E-02;
  COFD[4932] = -2.14276351E+01;
  COFD[4933] = 5.01654907E+00;
  COFD[4934] = -3.87995080E-01;
  COFD[4935] = 1.48063744E-02;
  COFD[4936] = -2.03230669E+01;
  COFD[4937] = 4.36001963E+00;
  COFD[4938] = -2.80770646E-01;
  COFD[4939] = 9.22995126E-03;
  COFD[4940] = -2.03230669E+01;
  COFD[4941] = 4.36001963E+00;
  COFD[4942] = -2.80770646E-01;
  COFD[4943] = 9.22995126E-03;
  COFD[4944] = -1.66329097E+01;
  COFD[4945] = 4.36001181E+00;
  COFD[4946] = -3.63261725E-01;
  COFD[4947] = 1.63092312E-02;
  COFD[4948] = -2.13102098E+01;
  COFD[4949] = 5.09944835E+00;
  COFD[4950] = -4.02512129E-01;
  COFD[4951] = 1.55957509E-02;
  COFD[4952] = -2.11100699E+01;
  COFD[4953] = 5.48192321E+00;
  COFD[4954] = -4.98166647E-01;
  COFD[4955] = 2.17221333E-02;
  COFD[4956] = -1.87157571E+01;
  COFD[4957] = 3.50982702E+00;
  COFD[4958] = -1.47750833E-01;
  COFD[4959] = 2.51627764E-03;
  COFD[4960] = -2.17827680E+01;
  COFD[4961] = 5.42990885E+00;
  COFD[4962] = -4.58860891E-01;
  COFD[4963] = 1.86184915E-02;
  COFD[4964] = -1.83770083E+01;
  COFD[4965] = 3.29018405E+00;
  COFD[4966] = -1.14013582E-01;
  COFD[4967] = 8.41167937E-04;
  COFD[4968] = -2.16561753E+01;
  COFD[4969] = 5.64919890E+00;
  COFD[4970] = -5.07174967E-01;
  COFD[4971] = 2.15693228E-02;
  COFD[4972] = -2.13891916E+01;
  COFD[4973] = 5.57682097E+00;
  COFD[4974] = -5.08589054E-01;
  COFD[4975] = 2.20956285E-02;
  COFD[4976] = -1.99152763E+01;
  COFD[4977] = 5.21863561E+00;
  COFD[4978] = -4.66851910E-01;
  COFD[4979] = 2.04766146E-02;
  COFD[4980] = -1.99373618E+01;
  COFD[4981] = 5.21863561E+00;
  COFD[4982] = -4.66851910E-01;
  COFD[4983] = 2.04766146E-02;
  COFD[4984] = -2.13980282E+01;
  COFD[4985] = 5.57682097E+00;
  COFD[4986] = -5.08589054E-01;
  COFD[4987] = 2.20956285E-02;
  COFD[4988] = -1.60052570E+01;
  COFD[4989] = 2.71982952E+00;
  COFD[4990] = -2.72095575E-02;
  COFD[4991] = -3.44411288E-03;
  COFD[4992] = -2.14064860E+01;
  COFD[4993] = 5.57682097E+00;
  COFD[4994] = -5.08589054E-01;
  COFD[4995] = 2.20956285E-02;
  COFD[4996] = -1.99566037E+01;
  COFD[4997] = 5.65684578E+00;
  COFD[4998] = -5.08001806E-01;
  COFD[4999] = 2.15985135E-02;
  COFD[5000] = -2.16302308E+01;
  COFD[5001] = 5.64919890E+00;
  COFD[5002] = -5.07174967E-01;
  COFD[5003] = 2.15693228E-02;
  COFD[5004] = -2.16302308E+01;
  COFD[5005] = 5.64919890E+00;
  COFD[5006] = -5.07174967E-01;
  COFD[5007] = 2.15693228E-02;
  COFD[5008] = -1.75833101E+01;
  COFD[5009] = 3.26964480E+00;
  COFD[5010] = -1.10871639E-01;
  COFD[5011] = 6.85450093E-04;
  COFD[5012] = -1.75934384E+01;
  COFD[5013] = 3.26964480E+00;
  COFD[5014] = -1.10871639E-01;
  COFD[5015] = 6.85450093E-04;
  COFD[5016] = -1.86767857E+01;
  COFD[5017] = 3.79378841E+00;
  COFD[5018] = -1.92336769E-01;
  COFD[5019] = 4.75936498E-03;
  COFD[5020] = -2.14057526E+01;
  COFD[5021] = 5.16972284E+00;
  COFD[5022] = -4.14178667E-01;
  COFD[5023] = 1.62111661E-02;
  COFD[5024] = -2.17945162E+01;
  COFD[5025] = 5.42990885E+00;
  COFD[5026] = -4.58860891E-01;
  COFD[5027] = 1.86184915E-02;
  COFD[5028] = -2.13001028E+01;
  COFD[5029] = 5.09944835E+00;
  COFD[5030] = -4.02512129E-01;
  COFD[5031] = 1.55957509E-02;
  COFD[5032] = -2.17264098E+01;
  COFD[5033] = 5.68478244E+00;
  COFD[5034] = -5.10618103E-01;
  COFD[5035] = 2.16700292E-02;
  COFD[5036] = -1.86106376E+01;
  COFD[5037] = 3.68013508E+00;
  COFD[5038] = -1.74380426E-01;
  COFD[5039] = 3.85147554E-03;
  COFD[5040] = -1.86165967E+01;
  COFD[5041] = 3.68013508E+00;
  COFD[5042] = -1.74380426E-01;
  COFD[5043] = 3.85147554E-03;
  COFD[5044] = -2.14946428E+01;
  COFD[5045] = 5.10164697E+00;
  COFD[5046] = -4.02880791E-01;
  COFD[5047] = 1.56152795E-02;
  COFD[5048] = -2.14214683E+01;
  COFD[5049] = 5.01654907E+00;
  COFD[5050] = -3.87995080E-01;
  COFD[5051] = 1.48063744E-02;
  COFD[5052] = -1.87201505E+01;
  COFD[5053] = 3.50982702E+00;
  COFD[5054] = -1.47750833E-01;
  COFD[5055] = 2.51627764E-03;
  COFD[5056] = -2.03548448E+01;
  COFD[5057] = 4.36001963E+00;
  COFD[5058] = -2.80770646E-01;
  COFD[5059] = 9.22995126E-03;
  COFD[5060] = -1.87134403E+01;
  COFD[5061] = 3.50982702E+00;
  COFD[5062] = -1.47750833E-01;
  COFD[5063] = 2.51627764E-03;
  COFD[5064] = -1.83752505E+01;
  COFD[5065] = 3.29018405E+00;
  COFD[5066] = -1.14013582E-01;
  COFD[5067] = 8.41167937E-04;
  COFD[5068] = -1.87452097E+01;
  COFD[5069] = 3.50982702E+00;
  COFD[5070] = -1.47750833E-01;
  COFD[5071] = 2.51627764E-03;
  COFD[5072] = -1.69275842E+01;
  COFD[5073] = 2.59961196E+00;
  COFD[5074] = -8.79342036E-03;
  COFD[5075] = -4.35596363E-03;
  COFD[5076] = -1.69226200E+01;
  COFD[5077] = 2.59961196E+00;
  COFD[5078] = -8.79342036E-03;
  COFD[5079] = -4.35596363E-03;
  COFD[5080] = -2.10935409E+01;
  COFD[5081] = 5.48007439E+00;
  COFD[5082] = -4.98112485E-01;
  COFD[5083] = 2.17277651E-02;
  COFD[5084] = -2.27819450E+01;
  COFD[5085] = 5.50908317E+00;
  COFD[5086] = -5.00382955E-01;
  COFD[5087] = 2.17620583E-02;
  COFD[5088] = -2.22872895E+01;
  COFD[5089] = 5.69035599E+00;
  COFD[5090] = -5.08045645E-01;
  COFD[5091] = 2.14181606E-02;
  COFD[5092] = -2.04928200E+01;
  COFD[5093] = 5.26407420E+00;
  COFD[5094] = -4.72791546E-01;
  COFD[5095] = 2.07382489E-02;
  COFD[5096] = -2.25814161E+01;
  COFD[5097] = 5.69729375E+00;
  COFD[5098] = -5.11255096E-01;
  COFD[5099] = 2.16560632E-02;
  COFD[5100] = -2.23968206E+01;
  COFD[5101] = 5.44551229E+00;
  COFD[5102] = -4.61691222E-01;
  COFD[5103] = 1.87757502E-02;
  COFD[5104] = -2.23968206E+01;
  COFD[5105] = 5.44551229E+00;
  COFD[5106] = -4.61691222E-01;
  COFD[5107] = 1.87757502E-02;
  COFD[5108] = -1.48505617E+01;
  COFD[5109] = 3.59614134E+00;
  COFD[5110] = -2.63274609E-01;
  COFD[5111] = 1.19265426E-02;
  COFD[5112] = -2.22171868E+01;
  COFD[5113] = 5.66274856E+00;
  COFD[5114] = -5.08624885E-01;
  COFD[5115] = 2.16197194E-02;
  COFD[5116] = -1.93550571E+01;
  COFD[5117] = 4.80637892E+00;
  COFD[5118] = -4.17516720E-01;
  COFD[5119] = 1.85062434E-02;
  COFD[5120] = -2.17265278E+01;
  COFD[5121] = 4.99861193E+00;
  COFD[5122] = -3.85052101E-01;
  COFD[5123] = 1.46519879E-02;
  COFD[5124] = -2.19599621E+01;
  COFD[5125] = 5.66323135E+00;
  COFD[5126] = -5.16518069E-01;
  COFD[5127] = 2.23002455E-02;
  COFD[5128] = -2.15771044E+01;
  COFD[5129] = 4.86045752E+00;
  COFD[5130] = -3.62240800E-01;
  COFD[5131] = 1.34549132E-02;
  COFD[5132] = -2.05833341E+01;
  COFD[5133] = 5.30254126E+00;
  COFD[5134] = -4.77796012E-01;
  COFD[5135] = 2.09576046E-02;
  COFD[5136] = -1.96209604E+01;
  COFD[5137] = 4.90052813E+00;
  COFD[5138] = -4.28511355E-01;
  COFD[5139] = 1.89312580E-02;
  COFD[5140] = -1.83782241E+01;
  COFD[5141] = 4.61237034E+00;
  COFD[5142] = -3.95027652E-01;
  COFD[5143] = 1.76471131E-02;
  COFD[5144] = -1.83997019E+01;
  COFD[5145] = 4.61237034E+00;
  COFD[5146] = -3.95027652E-01;
  COFD[5147] = 1.76471131E-02;
  COFD[5148] = -1.96294252E+01;
  COFD[5149] = 4.90052813E+00;
  COFD[5150] = -4.28511355E-01;
  COFD[5151] = 1.89312580E-02;
  COFD[5152] = -1.98840081E+01;
  COFD[5153] = 4.53847594E+00;
  COFD[5154] = -3.09666566E-01;
  COFD[5155] = 1.07224007E-02;
  COFD[5156] = -1.96375212E+01;
  COFD[5157] = 4.90052813E+00;
  COFD[5158] = -4.28511355E-01;
  COFD[5159] = 1.89312580E-02;
  COFD[5160] = -1.89584270E+01;
  COFD[5161] = 5.31499124E+00;
  COFD[5162] = -4.79372108E-01;
  COFD[5163] = 2.10247388E-02;
  COFD[5164] = -2.05580410E+01;
  COFD[5165] = 5.30254126E+00;
  COFD[5166] = -4.77796012E-01;
  COFD[5167] = 2.09576046E-02;
  COFD[5168] = -2.05580410E+01;
  COFD[5169] = 5.30254126E+00;
  COFD[5170] = -4.77796012E-01;
  COFD[5171] = 2.09576046E-02;
  COFD[5172] = -2.08623648E+01;
  COFD[5173] = 4.85012404E+00;
  COFD[5174] = -3.60516881E-01;
  COFD[5175] = 1.33640233E-02;
  COFD[5176] = -2.08720892E+01;
  COFD[5177] = 4.85012404E+00;
  COFD[5178] = -3.60516881E-01;
  COFD[5179] = 1.33640233E-02;
  COFD[5180] = -2.15185995E+01;
  COFD[5181] = 5.19726931E+00;
  COFD[5182] = -4.18732190E-01;
  COFD[5183] = 1.64509613E-02;
  COFD[5184] = -2.21309037E+01;
  COFD[5185] = 5.64888199E+00;
  COFD[5186] = -5.07991267E-01;
  COFD[5187] = 2.16414623E-02;
  COFD[5188] = -2.19712700E+01;
  COFD[5189] = 5.66323135E+00;
  COFD[5190] = -5.16518069E-01;
  COFD[5191] = 2.23002455E-02;
  COFD[5192] = -2.22074832E+01;
  COFD[5193] = 5.66274856E+00;
  COFD[5194] = -5.08624885E-01;
  COFD[5195] = 2.16197194E-02;
  COFD[5196] = -2.07400708E+01;
  COFD[5197] = 5.36819730E+00;
  COFD[5198] = -4.85972562E-01;
  COFD[5199] = 2.13001313E-02;
  COFD[5200] = -2.14889715E+01;
  COFD[5201] = 5.10164697E+00;
  COFD[5202] = -4.02880791E-01;
  COFD[5203] = 1.56152795E-02;
  COFD[5204] = -2.14946428E+01;
  COFD[5205] = 5.10164697E+00;
  COFD[5206] = -4.02880791E-01;
  COFD[5207] = 1.56152795E-02;
  COFD[5208] = -2.23815574E+01;
  COFD[5209] = 5.66153021E+00;
  COFD[5210] = -5.08497079E-01;
  COFD[5211] = 2.16154111E-02;
  COFD[5212] = -2.25755439E+01;
  COFD[5213] = 5.69729375E+00;
  COFD[5214] = -5.11255096E-01;
  COFD[5215] = 2.16560632E-02;
  COFD[5216] = -2.17306487E+01;
  COFD[5217] = 4.99861193E+00;
  COFD[5218] = -3.85052101E-01;
  COFD[5219] = 1.46519879E-02;
  COFD[5220] = -2.24267907E+01;
  COFD[5221] = 5.44551229E+00;
  COFD[5222] = -4.61691222E-01;
  COFD[5223] = 1.87757502E-02;
  COFD[5224] = -2.17243538E+01;
  COFD[5225] = 4.99861193E+00;
  COFD[5226] = -3.85052101E-01;
  COFD[5227] = 1.46519879E-02;
  COFD[5228] = -2.15754608E+01;
  COFD[5229] = 4.86045752E+00;
  COFD[5230] = -3.62240800E-01;
  COFD[5231] = 1.34549132E-02;
  COFD[5232] = -2.17541101E+01;
  COFD[5233] = 4.99861193E+00;
  COFD[5234] = -3.85052101E-01;
  COFD[5235] = 1.46519879E-02;
  COFD[5236] = -2.08441978E+01;
  COFD[5237] = 4.47055940E+00;
  COFD[5238] = -2.98434085E-01;
  COFD[5239] = 1.01355015E-02;
  COFD[5240] = -2.08396295E+01;
  COFD[5241] = 4.47055940E+00;
  COFD[5242] = -2.98434085E-01;
  COFD[5243] = 1.01355015E-02;
  COFD[5244] = -1.93262186E+01;
  COFD[5245] = 4.79832015E+00;
  COFD[5246] = -4.16503776E-01;
  COFD[5247] = 1.84634981E-02;
  COFD[5248] = -2.30720788E+01;
  COFD[5249] = 5.59360310E+00;
  COFD[5250] = -5.10572093E-01;
  COFD[5251] = 2.21739087E-02;
  COFD[5252] = -2.23631160E+01;
  COFD[5253] = 5.67323480E+00;
  COFD[5254] = -5.03108721E-01;
  COFD[5255] = 2.10878525E-02;
  COFD[5256] = -2.08256118E+01;
  COFD[5257] = 5.36559371E+00;
  COFD[5258] = -4.85661513E-01;
  COFD[5259] = 2.12877010E-02;
  COFD[5260] = -2.26759538E+01;
  COFD[5261] = 5.68951631E+00;
  COFD[5262] = -5.07668098E-01;
  COFD[5263] = 2.13903212E-02;
  COFD[5264] = -2.23439611E+01;
  COFD[5265] = 5.37198708E+00;
  COFD[5266] = -4.48528740E-01;
  COFD[5267] = 1.80499807E-02;
  COFD[5268] = -2.23439611E+01;
  COFD[5269] = 5.37198708E+00;
  COFD[5270] = -4.48528740E-01;
  COFD[5271] = 1.80499807E-02;
  COFD[5272] = -1.50999718E+01;
  COFD[5273] = 3.67029147E+00;
  COFD[5274] = -2.73138589E-01;
  COFD[5275] = 1.23661438E-02;
  COFD[5276] = -2.24090094E+01;
  COFD[5277] = 5.69725388E+00;
  COFD[5278] = -5.11197970E-01;
  COFD[5279] = 2.16513648E-02;
  COFD[5280] = -1.95941169E+01;
  COFD[5281] = 4.86773881E+00;
  COFD[5282] = -4.24796060E-01;
  COFD[5283] = 1.87934811E-02;
  COFD[5284] = -2.15595993E+01;
  COFD[5285] = 4.87393197E+00;
  COFD[5286] = -3.64472579E-01;
  COFD[5287] = 1.35722107E-02;
  COFD[5288] = -2.20840106E+01;
  COFD[5289] = 5.66947709E+00;
  COFD[5290] = -5.15131199E-01;
  COFD[5291] = 2.21454794E-02;
  COFD[5292] = -2.14221700E+01;
  COFD[5293] = 4.74312020E+00;
  COFD[5294] = -3.42998475E-01;
  COFD[5295] = 1.24528839E-02;
  COFD[5296] = -2.08824342E+01;
  COFD[5297] = 5.38939502E+00;
  COFD[5298] = -4.88508342E-01;
  COFD[5299] = 2.14017409E-02;
  COFD[5300] = -1.99139669E+01;
  COFD[5301] = 4.98360158E+00;
  COFD[5302] = -4.38825780E-01;
  COFD[5303] = 1.93601206E-02;
  COFD[5304] = -1.85732857E+01;
  COFD[5305] = 4.65440100E+00;
  COFD[5306] = -3.99617849E-01;
  COFD[5307] = 1.78081611E-02;
  COFD[5308] = -1.85950812E+01;
  COFD[5309] = 4.65440100E+00;
  COFD[5310] = -3.99617849E-01;
  COFD[5311] = 1.78081611E-02;
  COFD[5312] = -1.99226246E+01;
  COFD[5313] = 4.98360158E+00;
  COFD[5314] = -4.38825780E-01;
  COFD[5315] = 1.93601206E-02;
  COFD[5316] = -1.97209654E+01;
  COFD[5317] = 4.41370094E+00;
  COFD[5318] = -2.89313133E-01;
  COFD[5319] = 9.66674118E-03;
  COFD[5320] = -1.99309084E+01;
  COFD[5321] = 4.98360158E+00;
  COFD[5322] = -4.38825780E-01;
  COFD[5323] = 1.93601206E-02;
  COFD[5324] = -1.92550858E+01;
  COFD[5325] = 5.39783798E+00;
  COFD[5326] = -4.89502414E-01;
  COFD[5327] = 2.14408287E-02;
  COFD[5328] = -2.08568002E+01;
  COFD[5329] = 5.38939502E+00;
  COFD[5330] = -4.88508342E-01;
  COFD[5331] = 2.14017409E-02;
  COFD[5332] = -2.08568002E+01;
  COFD[5333] = 5.38939502E+00;
  COFD[5334] = -4.88508342E-01;
  COFD[5335] = 2.14017409E-02;
  COFD[5336] = -2.07000103E+01;
  COFD[5337] = 4.72805055E+00;
  COFD[5338] = -3.40591321E-01;
  COFD[5339] = 1.23293721E-02;
  COFD[5340] = -2.07099445E+01;
  COFD[5341] = 4.72805055E+00;
  COFD[5342] = -3.40591321E-01;
  COFD[5343] = 1.23293721E-02;
  COFD[5344] = -2.13700003E+01;
  COFD[5345] = 5.07979658E+00;
  COFD[5346] = -3.99187658E-01;
  COFD[5347] = 1.54187526E-02;
  COFD[5348] = -2.23238510E+01;
  COFD[5349] = 5.68194587E+00;
  COFD[5350] = -5.10402599E-01;
  COFD[5351] = 2.16670698E-02;
  COFD[5352] = -2.20955476E+01;
  COFD[5353] = 5.66947709E+00;
  COFD[5354] = -5.15131199E-01;
  COFD[5355] = 2.21454794E-02;
  COFD[5356] = -2.23990961E+01;
  COFD[5357] = 5.69725388E+00;
  COFD[5358] = -5.11197970E-01;
  COFD[5359] = 2.16513648E-02;
  COFD[5360] = -2.10152294E+01;
  COFD[5361] = 5.43801380E+00;
  COFD[5362] = -4.94208208E-01;
  COFD[5363] = 2.16247862E-02;
  COFD[5364] = -2.14156482E+01;
  COFD[5365] = 5.01654907E+00;
  COFD[5366] = -3.87995080E-01;
  COFD[5367] = 1.48063744E-02;
  COFD[5368] = -2.14214683E+01;
  COFD[5369] = 5.01654907E+00;
  COFD[5370] = -3.87995080E-01;
  COFD[5371] = 1.48063744E-02;
  COFD[5372] = -2.25755439E+01;
  COFD[5373] = 5.69729375E+00;
  COFD[5374] = -5.11255096E-01;
  COFD[5375] = 2.16560632E-02;
  COFD[5376] = -2.26699292E+01;
  COFD[5377] = 5.68951631E+00;
  COFD[5378] = -5.07668098E-01;
  COFD[5379] = 2.13903212E-02;
  COFD[5380] = -2.15638602E+01;
  COFD[5381] = 4.87393197E+00;
  COFD[5382] = -3.64472579E-01;
  COFD[5383] = 1.35722107E-02;
  COFD[5384] = -2.23748094E+01;
  COFD[5385] = 5.37198708E+00;
  COFD[5386] = -4.48528740E-01;
  COFD[5387] = 1.80499807E-02;
  COFD[5388] = -2.15573518E+01;
  COFD[5389] = 4.87393197E+00;
  COFD[5390] = -3.64472579E-01;
  COFD[5391] = 1.35722107E-02;
  COFD[5392] = -2.14204678E+01;
  COFD[5393] = 4.74312020E+00;
  COFD[5394] = -3.42998475E-01;
  COFD[5395] = 1.24528839E-02;
  COFD[5396] = -2.15881418E+01;
  COFD[5397] = 4.87393197E+00;
  COFD[5398] = -3.64472579E-01;
  COFD[5399] = 1.35722107E-02;
  COFD[5400] = -2.05680631E+01;
  COFD[5401] = 4.29837248E+00;
  COFD[5402] = -2.71107161E-01;
  COFD[5403] = 8.73928648E-03;
  COFD[5404] = -2.05636669E+01;
  COFD[5405] = 4.29837248E+00;
  COFD[5406] = -2.71107161E-01;
  COFD[5407] = 8.73928648E-03;
  COFD[5408] = -1.95693646E+01;
  COFD[5409] = 4.86151358E+00;
  COFD[5410] = -4.24066143E-01;
  COFD[5411] = 1.87651483E-02;
  COFD[5412] = -2.38424489E+01;
  COFD[5413] = 5.58077369E+00;
  COFD[5414] = -4.85290481E-01;
  COFD[5415] = 2.00627377E-02;
  COFD[5416] = -2.10445380E+01;
  COFD[5417] = 4.77480735E+00;
  COFD[5418] = -3.48088937E-01;
  COFD[5419] = 1.27148736E-02;
  COFD[5420] = -2.21791800E+01;
  COFD[5421] = 5.68744998E+00;
  COFD[5422] = -5.10793511E-01;
  COFD[5423] = 2.16704352E-02;
  COFD[5424] = -2.15718402E+01;
  COFD[5425] = 4.87393197E+00;
  COFD[5426] = -3.64472579E-01;
  COFD[5427] = 1.35722107E-02;
  COFD[5428] = -2.02571074E+01;
  COFD[5429] = 4.11843264E+00;
  COFD[5430] = -2.42988196E-01;
  COFD[5431] = 7.31555013E-03;
  COFD[5432] = -2.02571074E+01;
  COFD[5433] = 4.11843264E+00;
  COFD[5434] = -2.42988196E-01;
  COFD[5435] = 7.31555013E-03;
  COFD[5436] = -1.72187320E+01;
  COFD[5437] = 4.44378938E+00;
  COFD[5438] = -3.73963936E-01;
  COFD[5439] = 1.67675483E-02;
  COFD[5440] = -2.15399525E+01;
  COFD[5441] = 4.99548160E+00;
  COFD[5442] = -3.84541130E-01;
  COFD[5443] = 1.46252961E-02;
  COFD[5444] = -2.16908674E+01;
  COFD[5445] = 5.52912323E+00;
  COFD[5446] = -5.02611621E-01;
  COFD[5447] = 2.18432892E-02;
  COFD[5448] = -1.87071695E+01;
  COFD[5449] = 3.28867876E+00;
  COFD[5450] = -1.13783324E-01;
  COFD[5451] = 8.29764378E-04;
  COFD[5452] = -2.20572657E+01;
  COFD[5453] = 5.34786767E+00;
  COFD[5454] = -4.44160169E-01;
  COFD[5455] = 1.78077063E-02;
  COFD[5456] = -1.83289117E+01;
  COFD[5457] = 3.05109646E+00;
  COFD[5458] = -7.75253866E-02;
  COFD[5459] = -9.62211004E-04;
  COFD[5460] = -2.22030140E+01;
  COFD[5461] = 5.69706859E+00;
  COFD[5462] = -5.11416131E-01;
  COFD[5463] = 2.16711595E-02;
  COFD[5464] = -2.20135031E+01;
  COFD[5465] = 5.63470135E+00;
  COFD[5466] = -5.14478143E-01;
  COFD[5467] = 2.22826045E-02;
  COFD[5468] = -2.06785569E+01;
  COFD[5469] = 5.34618044E+00;
  COFD[5470] = -4.83331563E-01;
  COFD[5471] = 2.11940573E-02;
  COFD[5472] = -2.07038883E+01;
  COFD[5473] = 5.34618044E+00;
  COFD[5474] = -4.83331563E-01;
  COFD[5475] = 2.11940573E-02;
  COFD[5476] = -2.20245345E+01;
  COFD[5477] = 5.63470135E+00;
  COFD[5478] = -5.14478143E-01;
  COFD[5479] = 2.22826045E-02;
  COFD[5480] = -1.39882652E+01;
  COFD[5481] = 1.55451537E+00;
  COFD[5482] = 1.48062755E-01;
  COFD[5483] = -1.20297011E-02;
  COFD[5484] = -2.20351392E+01;
  COFD[5485] = 5.63470135E+00;
  COFD[5486] = -5.14478143E-01;
  COFD[5487] = 2.22826045E-02;
  COFD[5488] = -2.05107828E+01;
  COFD[5489] = 5.69720134E+00;
  COFD[5490] = -5.11137553E-01;
  COFD[5491] = 2.16464526E-02;
  COFD[5492] = -2.21736424E+01;
  COFD[5493] = 5.69706859E+00;
  COFD[5494] = -5.11416131E-01;
  COFD[5495] = 2.16711595E-02;
  COFD[5496] = -2.21736424E+01;
  COFD[5497] = 5.69706859E+00;
  COFD[5498] = -5.11416131E-01;
  COFD[5499] = 2.16711595E-02;
  COFD[5500] = -1.75278274E+01;
  COFD[5501] = 3.03695857E+00;
  COFD[5502] = -7.53570650E-02;
  COFD[5503] = -1.06951881E-03;
  COFD[5504] = -1.75403029E+01;
  COFD[5505] = 3.03695857E+00;
  COFD[5506] = -7.53570650E-02;
  COFD[5507] = -1.06951881E-03;
  COFD[5508] = -1.84111754E+01;
  COFD[5509] = 3.44055898E+00;
  COFD[5510] = -1.37075422E-01;
  COFD[5511] = 1.98508013E-03;
  COFD[5512] = -2.16699372E+01;
  COFD[5513] = 5.06148364E+00;
  COFD[5514] = -3.95727634E-01;
  COFD[5515] = 1.52235677E-02;
  COFD[5516] = -2.20715300E+01;
  COFD[5517] = 5.34786767E+00;
  COFD[5518] = -4.44160169E-01;
  COFD[5519] = 1.78077063E-02;
  COFD[5520] = -2.15275006E+01;
  COFD[5521] = 4.99548160E+00;
  COFD[5522] = -3.84541130E-01;
  COFD[5523] = 1.46252961E-02;
  COFD[5524] = -2.23031072E+01;
  COFD[5525] = 5.69221061E+00;
  COFD[5526] = -5.08960069E-01;
  COFD[5527] = 2.14865997E-02;
  COFD[5528] = -1.87124126E+01;
  COFD[5529] = 3.50982702E+00;
  COFD[5530] = -1.47750833E-01;
  COFD[5531] = 2.51627764E-03;
  COFD[5532] = -1.87201505E+01;
  COFD[5533] = 3.50982702E+00;
  COFD[5534] = -1.47750833E-01;
  COFD[5535] = 2.51627764E-03;
  COFD[5536] = -2.17306487E+01;
  COFD[5537] = 4.99861193E+00;
  COFD[5538] = -3.85052101E-01;
  COFD[5539] = 1.46519879E-02;
  COFD[5540] = -2.15638602E+01;
  COFD[5541] = 4.87393197E+00;
  COFD[5542] = -3.64472579E-01;
  COFD[5543] = 1.35722107E-02;
  COFD[5544] = -1.87134413E+01;
  COFD[5545] = 3.28867876E+00;
  COFD[5546] = -1.13783324E-01;
  COFD[5547] = 8.29764378E-04;
  COFD[5548] = -2.03002058E+01;
  COFD[5549] = 4.11843264E+00;
  COFD[5550] = -2.42988196E-01;
  COFD[5551] = 7.31555013E-03;
  COFD[5552] = -1.87038714E+01;
  COFD[5553] = 3.28867876E+00;
  COFD[5554] = -1.13783324E-01;
  COFD[5555] = 8.29764378E-04;
  COFD[5556] = -1.83263467E+01;
  COFD[5557] = 3.05109646E+00;
  COFD[5558] = -7.75253866E-02;
  COFD[5559] = -9.62211004E-04;
  COFD[5560] = -1.87496813E+01;
  COFD[5561] = 3.28867876E+00;
  COFD[5562] = -1.13783324E-01;
  COFD[5563] = 8.29764378E-04;
  COFD[5564] = -1.63553945E+01;
  COFD[5565] = 2.10881121E+00;
  COFD[5566] = 6.52480731E-02;
  COFD[5567] = -7.99020731E-03;
  COFD[5568] = -1.63448367E+01;
  COFD[5569] = 2.10546851E+00;
  COFD[5570] = 6.57487483E-02;
  COFD[5571] = -8.01461150E-03;
  COFD[5572] = -2.16636927E+01;
  COFD[5573] = 5.52209451E+00;
  COFD[5574] = -5.01800802E-01;
  COFD[5575] = 2.18122017E-02;
  COFD[5576] = -2.36836133E+01;
  COFD[5577] = 5.66015033E+00;
  COFD[5578] = -5.08351812E-01;
  COFD[5579] = 2.16104873E-02;
  COFD[5580] = -2.19219536E+01;
  COFD[5581] = 5.29777789E+00;
  COFD[5582] = -4.35476842E-01;
  COFD[5583] = 1.73373342E-02;
  COFD[5584] = -2.17930266E+01;
  COFD[5585] = 5.64206578E+00;
  COFD[5586] = -5.15104753E-01;
  COFD[5587] = 2.22957422E-02;
  COFD[5588] = -2.23822073E+01;
  COFD[5589] = 5.37198708E+00;
  COFD[5590] = -4.48528740E-01;
  COFD[5591] = 1.80499807E-02;
  COFD[5592] = -2.15438557E+01;
  COFD[5593] = 4.82380626E+00;
  COFD[5594] = -3.56106499E-01;
  COFD[5595] = 1.31315966E-02;
  COFD[5596] = -2.15438557E+01;
  COFD[5597] = 4.82380626E+00;
  COFD[5598] = -3.56106499E-01;
  COFD[5599] = 1.31315966E-02;
  COFD[5600] = -1.61212798E+01;
  COFD[5601] = 4.03479307E+00;
  COFD[5602] = -3.20399233E-01;
  COFD[5603] = 1.44157782E-02;
  COFD[5604] = -2.22444909E+01;
  COFD[5605] = 5.44396600E+00;
  COFD[5606] = -4.61412551E-01;
  COFD[5607] = 1.87602923E-02;
  COFD[5608] = -2.07372608E+01;
  COFD[5609] = 5.22471147E+00;
  COFD[5610] = -4.67607197E-01;
  COFD[5611] = 2.05082142E-02;
  COFD[5612] = -2.02945780E+01;
  COFD[5613] = 4.11843264E+00;
  COFD[5614] = -2.42988196E-01;
  COFD[5615] = 7.31555013E-03;
  COFD[5616] = -2.24966654E+01;
  COFD[5617] = 5.67806029E+00;
  COFD[5618] = -5.03991163E-01;
  COFD[5619] = 2.11372864E-02;
  COFD[5620] = -1.99347931E+01;
  COFD[5621] = 3.88632523E+00;
  COFD[5622] = -2.06802738E-01;
  COFD[5623] = 5.48944874E-03;
  COFD[5624] = -2.18177115E+01;
  COFD[5625] = 5.65210943E+00;
  COFD[5626] = -5.15837732E-01;
  COFD[5627] = 2.23031110E-02;
  COFD[5628] = -2.11757519E+01;
  COFD[5629] = 5.38685618E+00;
  COFD[5630] = -4.88207385E-01;
  COFD[5631] = 2.13898131E-02;
  COFD[5632] = -1.96043740E+01;
  COFD[5633] = 4.97734997E+00;
  COFD[5634] = -4.38018636E-01;
  COFD[5635] = 1.93251310E-02;
  COFD[5636] = -1.96287467E+01;
  COFD[5637] = 4.97734997E+00;
  COFD[5638] = -4.38018636E-01;
  COFD[5639] = 1.93251310E-02;
  COFD[5640] = -2.11860957E+01;
  COFD[5641] = 5.38685618E+00;
  COFD[5642] = -4.88207385E-01;
  COFD[5643] = 2.13898131E-02;
  COFD[5644] = -1.79796526E+01;
  COFD[5645] = 3.48451904E+00;
  COFD[5646] = -1.43831594E-01;
  COFD[5647] = 2.32079598E-03;
  COFD[5648] = -2.11960258E+01;
  COFD[5649] = 5.38685618E+00;
  COFD[5650] = -4.88207385E-01;
  COFD[5651] = 2.13898131E-02;
  COFD[5652] = -2.01451883E+01;
  COFD[5653] = 5.65654333E+00;
  COFD[5654] = -5.16217584E-01;
  COFD[5655] = 2.23113761E-02;
  COFD[5656] = -2.17893428E+01;
  COFD[5657] = 5.65210943E+00;
  COFD[5658] = -5.15837732E-01;
  COFD[5659] = 2.23031110E-02;
  COFD[5660] = -2.17893428E+01;
  COFD[5661] = 5.65210943E+00;
  COFD[5662] = -5.15837732E-01;
  COFD[5663] = 2.23031110E-02;
  COFD[5664] = -1.91518503E+01;
  COFD[5665] = 3.86904236E+00;
  COFD[5666] = -2.04091431E-01;
  COFD[5667] = 5.35231270E-03;
  COFD[5668] = -1.91635972E+01;
  COFD[5669] = 3.86904236E+00;
  COFD[5670] = -2.04091431E-01;
  COFD[5671] = 5.35231270E-03;
  COFD[5672] = -2.04170306E+01;
  COFD[5673] = 4.47910824E+00;
  COFD[5674] = -2.99822681E-01;
  COFD[5675] = 1.02073242E-02;
  COFD[5676] = -2.23441976E+01;
  COFD[5677] = 5.50021686E+00;
  COFD[5678] = -4.71107238E-01;
  COFD[5679] = 1.92849078E-02;
  COFD[5680] = -2.25101565E+01;
  COFD[5681] = 5.67806029E+00;
  COFD[5682] = -5.03991163E-01;
  COFD[5683] = 2.11372864E-02;
  COFD[5684] = -2.22327669E+01;
  COFD[5685] = 5.44396600E+00;
  COFD[5686] = -4.61412551E-01;
  COFD[5687] = 1.87602923E-02;
  COFD[5688] = -2.19402178E+01;
  COFD[5689] = 5.66907490E+00;
  COFD[5690] = -5.16714859E-01;
  COFD[5691] = 2.22848049E-02;
  COFD[5692] = -2.03476793E+01;
  COFD[5693] = 4.36001963E+00;
  COFD[5694] = -2.80770646E-01;
  COFD[5695] = 9.22995126E-03;
  COFD[5696] = -2.03548448E+01;
  COFD[5697] = 4.36001963E+00;
  COFD[5698] = -2.80770646E-01;
  COFD[5699] = 9.22995126E-03;
  COFD[5700] = -2.24267907E+01;
  COFD[5701] = 5.44551229E+00;
  COFD[5702] = -4.61691222E-01;
  COFD[5703] = 1.87757502E-02;
  COFD[5704] = -2.23748094E+01;
  COFD[5705] = 5.37198708E+00;
  COFD[5706] = -4.48528740E-01;
  COFD[5707] = 1.80499807E-02;
  COFD[5708] = -2.03002058E+01;
  COFD[5709] = 4.11843264E+00;
  COFD[5710] = -2.42988196E-01;
  COFD[5711] = 7.31555013E-03;
  COFD[5712] = -2.15831487E+01;
  COFD[5713] = 4.82380626E+00;
  COFD[5714] = -3.56106499E-01;
  COFD[5715] = 1.31315966E-02;
  COFD[5716] = -2.02916157E+01;
  COFD[5717] = 4.11843264E+00;
  COFD[5718] = -2.42988196E-01;
  COFD[5719] = 7.31555013E-03;
  COFD[5720] = -1.99325088E+01;
  COFD[5721] = 3.88632523E+00;
  COFD[5722] = -2.06802738E-01;
  COFD[5723] = 5.48944874E-03;
  COFD[5724] = -2.03325798E+01;
  COFD[5725] = 4.11843264E+00;
  COFD[5726] = -2.42988196E-01;
  COFD[5727] = 7.31555013E-03;
  COFD[5728] = -1.88819495E+01;
  COFD[5729] = 3.36066148E+00;
  COFD[5730] = -1.24815434E-01;
  COFD[5731] = 1.37670619E-03;
  COFD[5732] = -1.88781431E+01;
  COFD[5733] = 3.36066148E+00;
  COFD[5734] = -1.24815434E-01;
  COFD[5735] = 1.37670619E-03;
  COFD[5736] = -2.07066590E+01;
  COFD[5737] = 5.21598228E+00;
  COFD[5738] = -4.66522092E-01;
  COFD[5739] = 2.04628158E-02;
  COFD[5740] = -2.38298868E+01;
  COFD[5741] = 5.58077369E+00;
  COFD[5742] = -4.85290481E-01;
  COFD[5743] = 2.00627377E-02;
  COFD[5744] = -2.10395499E+01;
  COFD[5745] = 4.77480735E+00;
  COFD[5746] = -3.48088937E-01;
  COFD[5747] = 1.27148736E-02;
  COFD[5748] = -2.21759654E+01;
  COFD[5749] = 5.68744998E+00;
  COFD[5750] = -5.10793511E-01;
  COFD[5751] = 2.16704352E-02;
  COFD[5752] = -2.15652279E+01;
  COFD[5753] = 4.87393197E+00;
  COFD[5754] = -3.64472579E-01;
  COFD[5755] = 1.35722107E-02;
  COFD[5756] = -2.02492092E+01;
  COFD[5757] = 4.11843264E+00;
  COFD[5758] = -2.42988196E-01;
  COFD[5759] = 7.31555013E-03;
  COFD[5760] = -2.02492092E+01;
  COFD[5761] = 4.11843264E+00;
  COFD[5762] = -2.42988196E-01;
  COFD[5763] = 7.31555013E-03;
  COFD[5764] = -1.72182578E+01;
  COFD[5765] = 4.44378938E+00;
  COFD[5766] = -3.73963936E-01;
  COFD[5767] = 1.67675483E-02;
  COFD[5768] = -2.15347051E+01;
  COFD[5769] = 4.99548160E+00;
  COFD[5770] = -3.84541130E-01;
  COFD[5771] = 1.46252961E-02;
  COFD[5772] = -2.16858850E+01;
  COFD[5773] = 5.52912323E+00;
  COFD[5774] = -5.02611621E-01;
  COFD[5775] = 2.18432892E-02;
  COFD[5776] = -1.86977178E+01;
  COFD[5777] = 3.28867876E+00;
  COFD[5778] = -1.13783324E-01;
  COFD[5779] = 8.29764378E-04;
  COFD[5780] = -2.20525468E+01;
  COFD[5781] = 5.34786767E+00;
  COFD[5782] = -4.44160169E-01;
  COFD[5783] = 1.78077063E-02;
  COFD[5784] = -1.83186788E+01;
  COFD[5785] = 3.05109646E+00;
  COFD[5786] = -7.75253866E-02;
  COFD[5787] = -9.62211004E-04;
  COFD[5788] = -2.21999689E+01;
  COFD[5789] = 5.69706859E+00;
  COFD[5790] = -5.11416131E-01;
  COFD[5791] = 2.16711595E-02;
  COFD[5792] = -2.20080166E+01;
  COFD[5793] = 5.63470135E+00;
  COFD[5794] = -5.14478143E-01;
  COFD[5795] = 2.22826045E-02;
  COFD[5796] = -2.06753496E+01;
  COFD[5797] = 5.34618044E+00;
  COFD[5798] = -4.83331563E-01;
  COFD[5799] = 2.11940573E-02;
  COFD[5800] = -2.07005149E+01;
  COFD[5801] = 5.34618044E+00;
  COFD[5802] = -4.83331563E-01;
  COFD[5803] = 2.11940573E-02;
  COFD[5804] = -2.20189264E+01;
  COFD[5805] = 5.63470135E+00;
  COFD[5806] = -5.14478143E-01;
  COFD[5807] = 2.22826045E-02;
  COFD[5808] = -1.39847291E+01;
  COFD[5809] = 1.55451537E+00;
  COFD[5810] = 1.48062755E-01;
  COFD[5811] = -1.20297011E-02;
  COFD[5812] = -2.20294115E+01;
  COFD[5813] = 5.63470135E+00;
  COFD[5814] = -5.14478143E-01;
  COFD[5815] = 2.22826045E-02;
  COFD[5816] = -2.05105426E+01;
  COFD[5817] = 5.69720134E+00;
  COFD[5818] = -5.11137553E-01;
  COFD[5819] = 2.16464526E-02;
  COFD[5820] = -2.21707705E+01;
  COFD[5821] = 5.69706859E+00;
  COFD[5822] = -5.11416131E-01;
  COFD[5823] = 2.16711595E-02;
  COFD[5824] = -2.21707705E+01;
  COFD[5825] = 5.69706859E+00;
  COFD[5826] = -5.11416131E-01;
  COFD[5827] = 2.16711595E-02;
  COFD[5828] = -1.75227141E+01;
  COFD[5829] = 3.03695857E+00;
  COFD[5830] = -7.53570650E-02;
  COFD[5831] = -1.06951881E-03;
  COFD[5832] = -1.75350610E+01;
  COFD[5833] = 3.03695857E+00;
  COFD[5834] = -7.53570650E-02;
  COFD[5835] = -1.06951881E-03;
  COFD[5836] = -1.84058074E+01;
  COFD[5837] = 3.44055898E+00;
  COFD[5838] = -1.37075422E-01;
  COFD[5839] = 1.98508013E-03;
  COFD[5840] = -2.16631307E+01;
  COFD[5841] = 5.06148364E+00;
  COFD[5842] = -3.95727634E-01;
  COFD[5843] = 1.52235677E-02;
  COFD[5844] = -2.20666752E+01;
  COFD[5845] = 5.34786767E+00;
  COFD[5846] = -4.44160169E-01;
  COFD[5847] = 1.78077063E-02;
  COFD[5848] = -2.15223817E+01;
  COFD[5849] = 4.99548160E+00;
  COFD[5850] = -3.84541130E-01;
  COFD[5851] = 1.46252961E-02;
  COFD[5852] = -2.22966034E+01;
  COFD[5853] = 5.69221061E+00;
  COFD[5854] = -5.08960069E-01;
  COFD[5855] = 2.14865997E-02;
  COFD[5856] = -1.87058047E+01;
  COFD[5857] = 3.50982702E+00;
  COFD[5858] = -1.47750833E-01;
  COFD[5859] = 2.51627764E-03;
  COFD[5860] = -1.87134403E+01;
  COFD[5861] = 3.50982702E+00;
  COFD[5862] = -1.47750833E-01;
  COFD[5863] = 2.51627764E-03;
  COFD[5864] = -2.17243538E+01;
  COFD[5865] = 4.99861193E+00;
  COFD[5866] = -3.85052101E-01;
  COFD[5867] = 1.46519879E-02;
  COFD[5868] = -2.15573518E+01;
  COFD[5869] = 4.87393197E+00;
  COFD[5870] = -3.64472579E-01;
  COFD[5871] = 1.35722107E-02;
  COFD[5872] = -1.87038714E+01;
  COFD[5873] = 3.28867876E+00;
  COFD[5874] = -1.13783324E-01;
  COFD[5875] = 8.29764378E-04;
  COFD[5876] = -2.02916157E+01;
  COFD[5877] = 4.11843264E+00;
  COFD[5878] = -2.42988196E-01;
  COFD[5879] = 7.31555013E-03;
  COFD[5880] = -1.86944813E+01;
  COFD[5881] = 3.28867876E+00;
  COFD[5882] = -1.13783324E-01;
  COFD[5883] = 8.29764378E-04;
  COFD[5884] = -1.83161656E+01;
  COFD[5885] = 3.05109646E+00;
  COFD[5886] = -7.75253866E-02;
  COFD[5887] = -9.62211004E-04;
  COFD[5888] = -1.87393994E+01;
  COFD[5889] = 3.28867876E+00;
  COFD[5890] = -1.13783324E-01;
  COFD[5891] = 8.29764378E-04;
  COFD[5892] = -1.63445452E+01;
  COFD[5893] = 2.10881121E+00;
  COFD[5894] = 6.52480731E-02;
  COFD[5895] = -7.99020731E-03;
  COFD[5896] = -1.63339431E+01;
  COFD[5897] = 2.10546851E+00;
  COFD[5898] = 6.57487483E-02;
  COFD[5899] = -8.01461150E-03;
  COFD[5900] = -2.16587098E+01;
  COFD[5901] = 5.52209451E+00;
  COFD[5902] = -5.01800802E-01;
  COFD[5903] = 2.18122017E-02;
  COFD[5904] = -2.37800587E+01;
  COFD[5905] = 5.48425494E+00;
  COFD[5906] = -4.68327600E-01;
  COFD[5907] = 1.91335179E-02;
  COFD[5908] = -2.08070517E+01;
  COFD[5909] = 4.60022609E+00;
  COFD[5910] = -3.20098606E-01;
  COFD[5911] = 1.12745986E-02;
  COFD[5912] = -2.23448475E+01;
  COFD[5913] = 5.69153566E+00;
  COFD[5914] = -5.08605460E-01;
  COFD[5915] = 2.14598086E-02;
  COFD[5916] = -2.14287927E+01;
  COFD[5917] = 4.74312020E+00;
  COFD[5918] = -3.42998475E-01;
  COFD[5919] = 1.24528839E-02;
  COFD[5920] = -1.98871102E+01;
  COFD[5921] = 3.88632523E+00;
  COFD[5922] = -2.06802738E-01;
  COFD[5923] = 5.48944874E-03;
  COFD[5924] = -1.98871102E+01;
  COFD[5925] = 3.88632523E+00;
  COFD[5926] = -2.06802738E-01;
  COFD[5927] = 5.48944874E-03;
  COFD[5928] = -1.75697641E+01;
  COFD[5929] = 4.54000784E+00;
  COFD[5930] = -3.86295602E-01;
  COFD[5931] = 1.72969843E-02;
  COFD[5932] = -2.13866866E+01;
  COFD[5933] = 4.85816818E+00;
  COFD[5934] = -3.61859198E-01;
  COFD[5935] = 1.34347998E-02;
  COFD[5936] = -2.20474308E+01;
  COFD[5937] = 5.61717340E+00;
  COFD[5938] = -5.12963928E-01;
  COFD[5939] = 2.22494915E-02;
  COFD[5940] = -1.83196729E+01;
  COFD[5941] = 3.05109646E+00;
  COFD[5942] = -7.75253866E-02;
  COFD[5943] = -9.62211004E-04;
  COFD[5944] = -2.19518805E+01;
  COFD[5945] = 5.23115443E+00;
  COFD[5946] = -4.24338954E-01;
  COFD[5947] = 1.67465343E-02;
  COFD[5948] = -1.78799696E+01;
  COFD[5949] = 2.78750377E+00;
  COFD[5950] = -3.75661727E-02;
  COFD[5951] = -2.93067908E-03;
  COFD[5952] = -2.23392482E+01;
  COFD[5953] = 5.68920173E+00;
  COFD[5954] = -5.07537130E-01;
  COFD[5955] = 2.13807918E-02;
  COFD[5956] = -2.22510016E+01;
  COFD[5957] = 5.66831709E+00;
  COFD[5958] = -5.16826635E-01;
  COFD[5959] = 2.22987354E-02;
  COFD[5960] = -2.10130665E+01;
  COFD[5961] = 5.42577327E+00;
  COFD[5962] = -4.92756280E-01;
  COFD[5963] = 2.15671078E-02;
  COFD[5964] = -2.10389335E+01;
  COFD[5965] = 5.42577327E+00;
  COFD[5966] = -4.92756280E-01;
  COFD[5967] = 2.15671078E-02;
  COFD[5968] = -2.22600584E+01;
  COFD[5969] = 5.66777991E+00;
  COFD[5970] = -5.16795849E-01;
  COFD[5971] = 2.22990514E-02;
  COFD[5972] = -1.53140849E+01;
  COFD[5973] = 2.14009360E+00;
  COFD[5974] = 5.93887776E-02;
  COFD[5975] = -7.65730317E-03;
  COFD[5976] = -2.22710563E+01;
  COFD[5977] = 5.66777991E+00;
  COFD[5978] = -5.16795849E-01;
  COFD[5979] = 2.22990514E-02;
  COFD[5980] = -2.06545163E+01;
  COFD[5981] = 5.68796184E+00;
  COFD[5982] = -5.07058830E-01;
  COFD[5983] = 2.13464896E-02;
  COFD[5984] = -2.23093197E+01;
  COFD[5985] = 5.68920173E+00;
  COFD[5986] = -5.07537130E-01;
  COFD[5987] = 2.13807918E-02;
  COFD[5988] = -2.23093197E+01;
  COFD[5989] = 5.68920173E+00;
  COFD[5990] = -5.07537130E-01;
  COFD[5991] = 2.13807918E-02;
  COFD[5992] = -1.70683091E+01;
  COFD[5993] = 2.76803494E+00;
  COFD[5994] = -3.45011618E-02;
  COFD[5995] = -3.08591460E-03;
  COFD[5996] = -1.70812055E+01;
  COFD[5997] = 2.76803494E+00;
  COFD[5998] = -3.45011618E-02;
  COFD[5999] = -3.08591460E-03;
  COFD[6000] = -1.84263021E+01;
  COFD[6001] = 3.40920978E+00;
  COFD[6002] = -1.33092795E-01;
  COFD[6003] = 1.81782995E-03;
  COFD[6004] = -2.15361194E+01;
  COFD[6005] = 4.92672935E+00;
  COFD[6006] = -3.73194449E-01;
  COFD[6007] = 1.40298739E-02;
  COFD[6008] = -2.19665885E+01;
  COFD[6009] = 5.23115443E+00;
  COFD[6010] = -4.24338954E-01;
  COFD[6011] = 1.67465343E-02;
  COFD[6012] = -2.13738141E+01;
  COFD[6013] = 4.85816818E+00;
  COFD[6014] = -3.61859198E-01;
  COFD[6015] = 1.34347998E-02;
  COFD[6016] = -2.24602138E+01;
  COFD[6017] = 5.68259060E+00;
  COFD[6018] = -5.04840893E-01;
  COFD[6019] = 2.11855526E-02;
  COFD[6020] = -1.83671729E+01;
  COFD[6021] = 3.29018405E+00;
  COFD[6022] = -1.14013582E-01;
  COFD[6023] = 8.41167937E-04;
  COFD[6024] = -1.83752505E+01;
  COFD[6025] = 3.29018405E+00;
  COFD[6026] = -1.14013582E-01;
  COFD[6027] = 8.41167937E-04;
  COFD[6028] = -2.15754608E+01;
  COFD[6029] = 4.86045752E+00;
  COFD[6030] = -3.62240800E-01;
  COFD[6031] = 1.34549132E-02;
  COFD[6032] = -2.14204678E+01;
  COFD[6033] = 4.74312020E+00;
  COFD[6034] = -3.42998475E-01;
  COFD[6035] = 1.24528839E-02;
  COFD[6036] = -1.83263467E+01;
  COFD[6037] = 3.05109646E+00;
  COFD[6038] = -7.75253866E-02;
  COFD[6039] = -9.62211004E-04;
  COFD[6040] = -1.99325088E+01;
  COFD[6041] = 3.88632523E+00;
  COFD[6042] = -2.06802738E-01;
  COFD[6043] = 5.48944874E-03;
  COFD[6044] = -1.83161656E+01;
  COFD[6045] = 3.05109646E+00;
  COFD[6046] = -7.75253866E-02;
  COFD[6047] = -9.62211004E-04;
  COFD[6048] = -1.78772271E+01;
  COFD[6049] = 2.78750377E+00;
  COFD[6050] = -3.75661727E-02;
  COFD[6051] = -2.93067908E-03;
  COFD[6052] = -1.83650176E+01;
  COFD[6053] = 3.05109646E+00;
  COFD[6054] = -7.75253866E-02;
  COFD[6055] = -9.62211004E-04;
  COFD[6056] = -1.61994974E+01;
  COFD[6057] = 1.99426236E+00;
  COFD[6058] = 8.16671779E-02;
  COFD[6059] = -8.76234636E-03;
  COFD[6060] = -1.61957230E+01;
  COFD[6061] = 1.99402574E+00;
  COFD[6062] = 8.16970869E-02;
  COFD[6063] = -8.76358100E-03;
  COFD[6064] = -2.20257163E+01;
  COFD[6065] = 5.61263501E+00;
  COFD[6066] = -5.12541597E-01;
  COFD[6067] = 2.22382754E-02;
  COFD[6068] = -2.38907333E+01;
  COFD[6069] = 5.58077369E+00;
  COFD[6070] = -4.85290481E-01;
  COFD[6071] = 2.00627377E-02;
  COFD[6072] = -2.10630129E+01;
  COFD[6073] = 4.77480735E+00;
  COFD[6074] = -3.48088937E-01;
  COFD[6075] = 1.27148736E-02;
  COFD[6076] = -2.21909866E+01;
  COFD[6077] = 5.68744998E+00;
  COFD[6078] = -5.10793511E-01;
  COFD[6079] = 2.16704352E-02;
  COFD[6080] = -2.15965223E+01;
  COFD[6081] = 4.87393197E+00;
  COFD[6082] = -3.64472579E-01;
  COFD[6083] = 1.35722107E-02;
  COFD[6084] = -2.02867736E+01;
  COFD[6085] = 4.11843264E+00;
  COFD[6086] = -2.42988196E-01;
  COFD[6087] = 7.31555013E-03;
  COFD[6088] = -2.02867736E+01;
  COFD[6089] = 4.11843264E+00;
  COFD[6090] = -2.42988196E-01;
  COFD[6091] = 7.31555013E-03;
  COFD[6092] = -1.72204518E+01;
  COFD[6093] = 4.44378938E+00;
  COFD[6094] = -3.73963936E-01;
  COFD[6095] = 1.67675483E-02;
  COFD[6096] = -2.15594116E+01;
  COFD[6097] = 4.99548160E+00;
  COFD[6098] = -3.84541130E-01;
  COFD[6099] = 1.46252961E-02;
  COFD[6100] = -2.17093204E+01;
  COFD[6101] = 5.52912323E+00;
  COFD[6102] = -5.02611621E-01;
  COFD[6103] = 2.18432892E-02;
  COFD[6104] = -1.87429412E+01;
  COFD[6105] = 3.28867876E+00;
  COFD[6106] = -1.13783324E-01;
  COFD[6107] = 8.29764378E-04;
  COFD[6108] = -2.20747210E+01;
  COFD[6109] = 5.34786767E+00;
  COFD[6110] = -4.44160169E-01;
  COFD[6111] = 1.78077063E-02;
  COFD[6112] = -1.83677895E+01;
  COFD[6113] = 3.05109646E+00;
  COFD[6114] = -7.75253866E-02;
  COFD[6115] = -9.62211004E-04;
  COFD[6116] = -2.22141889E+01;
  COFD[6117] = 5.69706859E+00;
  COFD[6118] = -5.11416131E-01;
  COFD[6119] = 2.16711595E-02;
  COFD[6120] = -2.20338721E+01;
  COFD[6121] = 5.63470135E+00;
  COFD[6122] = -5.14478143E-01;
  COFD[6123] = 2.22826045E-02;
  COFD[6124] = -2.06903362E+01;
  COFD[6125] = 5.34618044E+00;
  COFD[6126] = -4.83331563E-01;
  COFD[6127] = 2.11940573E-02;
  COFD[6128] = -2.07162873E+01;
  COFD[6129] = 5.34618044E+00;
  COFD[6130] = -4.83331563E-01;
  COFD[6131] = 2.11940573E-02;
  COFD[6132] = -2.20453675E+01;
  COFD[6133] = 5.63470135E+00;
  COFD[6134] = -5.14478143E-01;
  COFD[6135] = 2.22826045E-02;
  COFD[6136] = -1.40012720E+01;
  COFD[6137] = 1.55451537E+00;
  COFD[6138] = 1.48062755E-01;
  COFD[6139] = -1.20297011E-02;
  COFD[6140] = -2.20564284E+01;
  COFD[6141] = 5.63470135E+00;
  COFD[6142] = -5.14478143E-01;
  COFD[6143] = 2.22826045E-02;
  COFD[6144] = -2.05116526E+01;
  COFD[6145] = 5.69720134E+00;
  COFD[6146] = -5.11137553E-01;
  COFD[6147] = 2.16464526E-02;
  COFD[6148] = -2.21841730E+01;
  COFD[6149] = 5.69706859E+00;
  COFD[6150] = -5.11416131E-01;
  COFD[6151] = 2.16711595E-02;
  COFD[6152] = -2.21841730E+01;
  COFD[6153] = 5.69706859E+00;
  COFD[6154] = -5.11416131E-01;
  COFD[6155] = 2.16711595E-02;
  COFD[6156] = -1.75467772E+01;
  COFD[6157] = 3.03695857E+00;
  COFD[6158] = -7.53570650E-02;
  COFD[6159] = -1.06951881E-03;
  COFD[6160] = -1.75597409E+01;
  COFD[6161] = 3.03695857E+00;
  COFD[6162] = -7.53570650E-02;
  COFD[6163] = -1.06951881E-03;
  COFD[6164] = -1.84310932E+01;
  COFD[6165] = 3.44055898E+00;
  COFD[6166] = -1.37075422E-01;
  COFD[6167] = 1.98508013E-03;
  COFD[6168] = -2.16953680E+01;
  COFD[6169] = 5.06148364E+00;
  COFD[6170] = -3.95727634E-01;
  COFD[6171] = 1.52235677E-02;
  COFD[6172] = -2.20894997E+01;
  COFD[6173] = 5.34786767E+00;
  COFD[6174] = -4.44160169E-01;
  COFD[6175] = 1.78077063E-02;
  COFD[6176] = -2.15464719E+01;
  COFD[6177] = 4.99548160E+00;
  COFD[6178] = -3.84541130E-01;
  COFD[6179] = 1.46252961E-02;
  COFD[6180] = -2.23273712E+01;
  COFD[6181] = 5.69221061E+00;
  COFD[6182] = -5.08960069E-01;
  COFD[6183] = 2.14865997E-02;
  COFD[6184] = -1.87370773E+01;
  COFD[6185] = 3.50982702E+00;
  COFD[6186] = -1.47750833E-01;
  COFD[6187] = 2.51627764E-03;
  COFD[6188] = -1.87452097E+01;
  COFD[6189] = 3.50982702E+00;
  COFD[6190] = -1.47750833E-01;
  COFD[6191] = 2.51627764E-03;
  COFD[6192] = -2.17541101E+01;
  COFD[6193] = 4.99861193E+00;
  COFD[6194] = -3.85052101E-01;
  COFD[6195] = 1.46519879E-02;
  COFD[6196] = -2.15881418E+01;
  COFD[6197] = 4.87393197E+00;
  COFD[6198] = -3.64472579E-01;
  COFD[6199] = 1.35722107E-02;
  COFD[6200] = -1.87496813E+01;
  COFD[6201] = 3.28867876E+00;
  COFD[6202] = -1.13783324E-01;
  COFD[6203] = 8.29764378E-04;
  COFD[6204] = -2.03325798E+01;
  COFD[6205] = 4.11843264E+00;
  COFD[6206] = -2.42988196E-01;
  COFD[6207] = 7.31555013E-03;
  COFD[6208] = -1.87393994E+01;
  COFD[6209] = 3.28867876E+00;
  COFD[6210] = -1.13783324E-01;
  COFD[6211] = 8.29764378E-04;
  COFD[6212] = -1.83650176E+01;
  COFD[6213] = 3.05109646E+00;
  COFD[6214] = -7.75253866E-02;
  COFD[6215] = -9.62211004E-04;
  COFD[6216] = -1.87887547E+01;
  COFD[6217] = 3.28867876E+00;
  COFD[6218] = -1.13783324E-01;
  COFD[6219] = 8.29764378E-04;
  COFD[6220] = -1.63967402E+01;
  COFD[6221] = 2.10881121E+00;
  COFD[6222] = 6.52480731E-02;
  COFD[6223] = -7.99020731E-03;
  COFD[6224] = -1.63863602E+01;
  COFD[6225] = 2.10546851E+00;
  COFD[6226] = 6.57487483E-02;
  COFD[6227] = -8.01461150E-03;
  COFD[6228] = -2.16821478E+01;
  COFD[6229] = 5.52209451E+00;
  COFD[6230] = -5.01800802E-01;
  COFD[6231] = 2.18122017E-02;
  COFD[6232] = -2.33126061E+01;
  COFD[6233] = 5.19165128E+00;
  COFD[6234] = -4.17805039E-01;
  COFD[6235] = 1.64021805E-02;
  COFD[6236] = -1.98299119E+01;
  COFD[6237] = 4.10460882E+00;
  COFD[6238] = -2.40832572E-01;
  COFD[6239] = 7.20652667E-03;
  COFD[6240] = -2.20439152E+01;
  COFD[6241] = 5.46766507E+00;
  COFD[6242] = -4.65479341E-01;
  COFD[6243] = 1.89797999E-02;
  COFD[6244] = -2.05767500E+01;
  COFD[6245] = 4.29837248E+00;
  COFD[6246] = -2.71107161E-01;
  COFD[6247] = 8.73928648E-03;
  COFD[6248] = -1.88340377E+01;
  COFD[6249] = 3.36066148E+00;
  COFD[6250] = -1.24815434E-01;
  COFD[6251] = 1.37670619E-03;
  COFD[6252] = -1.88340377E+01;
  COFD[6253] = 3.36066148E+00;
  COFD[6254] = -1.24815434E-01;
  COFD[6255] = 1.37670619E-03;
  COFD[6256] = -1.82334086E+01;
  COFD[6257] = 4.77926962E+00;
  COFD[6258] = -4.14167458E-01;
  COFD[6259] = 1.83677046E-02;
  COFD[6260] = -2.06489306E+01;
  COFD[6261] = 4.46770471E+00;
  COFD[6262] = -2.97972198E-01;
  COFD[6263] = 1.01116412E-02;
  COFD[6264] = -2.23108326E+01;
  COFD[6265] = 5.64849872E+00;
  COFD[6266] = -5.07896114E-01;
  COFD[6267] = 2.16353587E-02;
  COFD[6268] = -1.63482811E+01;
  COFD[6269] = 2.10881121E+00;
  COFD[6270] = 6.52480731E-02;
  COFD[6271] = -7.99020731E-03;
  COFD[6272] = -2.12993100E+01;
  COFD[6273] = 4.87520005E+00;
  COFD[6274] = -3.64681670E-01;
  COFD[6275] = 1.35831766E-02;
  COFD[6276] = -1.62024358E+01;
  COFD[6277] = 1.99426236E+00;
  COFD[6278] = 8.16671779E-02;
  COFD[6279] = -8.76234636E-03;
  COFD[6280] = -2.21237456E+01;
  COFD[6281] = 5.52954770E+00;
  COFD[6282] = -4.76277229E-01;
  COFD[6283] = 1.95684485E-02;
  COFD[6284] = -2.25117049E+01;
  COFD[6285] = 5.69733828E+00;
  COFD[6286] = -5.11355652E-01;
  COFD[6287] = 2.16644742E-02;
  COFD[6288] = -2.15111421E+01;
  COFD[6289] = 5.59463241E+00;
  COFD[6290] = -5.10685806E-01;
  COFD[6291] = 2.21780225E-02;
  COFD[6292] = -2.15375474E+01;
  COFD[6293] = 5.59463241E+00;
  COFD[6294] = -5.10685806E-01;
  COFD[6295] = 2.21780225E-02;
  COFD[6296] = -2.23951225E+01;
  COFD[6297] = 5.66447764E+00;
  COFD[6298] = -5.08805506E-01;
  COFD[6299] = 2.16257683E-02;
  COFD[6300] = -1.21386689E+01;
  COFD[6301] = 6.98182394E-01;
  COFD[6302] = 2.70389011E-01;
  COFD[6303] = -1.76946284E-02;
  COFD[6304] = -2.24065282E+01;
  COFD[6305] = 5.66447764E+00;
  COFD[6306] = -5.08805506E-01;
  COFD[6307] = 2.16257683E-02;
  COFD[6308] = -2.04013157E+01;
  COFD[6309] = 5.51931290E+00;
  COFD[6310] = -4.74472824E-01;
  COFD[6311] = 1.94694645E-02;
  COFD[6312] = -2.20932596E+01;
  COFD[6313] = 5.52954770E+00;
  COFD[6314] = -4.76277229E-01;
  COFD[6315] = 1.95684485E-02;
  COFD[6316] = -2.20932596E+01;
  COFD[6317] = 5.52954770E+00;
  COFD[6318] = -4.76277229E-01;
  COFD[6319] = 1.95684485E-02;
  COFD[6320] = -1.54044125E+01;
  COFD[6321] = 1.98817703E+00;
  COFD[6322] = 8.32926956E-02;
  COFD[6323] = -8.87042615E-03;
  COFD[6324] = -1.54177428E+01;
  COFD[6325] = 1.98817703E+00;
  COFD[6326] = 8.32926956E-02;
  COFD[6327] = -8.87042615E-03;
  COFD[6328] = -1.59426115E+01;
  COFD[6329] = 2.25982618E+00;
  COFD[6330] = 3.81202526E-02;
  COFD[6331] = -6.47853230E-03;
  COFD[6332] = -2.06257735E+01;
  COFD[6333] = 4.43889601E+00;
  COFD[6334] = -2.93346493E-01;
  COFD[6335] = 9.87365393E-03;
  COFD[6336] = -2.13144730E+01;
  COFD[6337] = 4.87520005E+00;
  COFD[6338] = -3.64681670E-01;
  COFD[6339] = 1.35831766E-02;
  COFD[6340] = -2.06356245E+01;
  COFD[6341] = 4.46770471E+00;
  COFD[6342] = -2.97972198E-01;
  COFD[6343] = 1.01116412E-02;
  COFD[6344] = -2.21219581E+01;
  COFD[6345] = 5.46566865E+00;
  COFD[6346] = -4.65136849E-01;
  COFD[6347] = 1.89613252E-02;
  COFD[6348] = -1.69191496E+01;
  COFD[6349] = 2.59961196E+00;
  COFD[6350] = -8.79342036E-03;
  COFD[6351] = -4.35596363E-03;
  COFD[6352] = -1.69275842E+01;
  COFD[6353] = 2.59961196E+00;
  COFD[6354] = -8.79342036E-03;
  COFD[6355] = -4.35596363E-03;
  COFD[6356] = -2.08441978E+01;
  COFD[6357] = 4.47055940E+00;
  COFD[6358] = -2.98434085E-01;
  COFD[6359] = 1.01355015E-02;
  COFD[6360] = -2.05680631E+01;
  COFD[6361] = 4.29837248E+00;
  COFD[6362] = -2.71107161E-01;
  COFD[6363] = 8.73928648E-03;
  COFD[6364] = -1.63553945E+01;
  COFD[6365] = 2.10881121E+00;
  COFD[6366] = 6.52480731E-02;
  COFD[6367] = -7.99020731E-03;
  COFD[6368] = -1.88819495E+01;
  COFD[6369] = 3.36066148E+00;
  COFD[6370] = -1.24815434E-01;
  COFD[6371] = 1.37670619E-03;
  COFD[6372] = -1.63445452E+01;
  COFD[6373] = 2.10881121E+00;
  COFD[6374] = 6.52480731E-02;
  COFD[6375] = -7.99020731E-03;
  COFD[6376] = -1.61994974E+01;
  COFD[6377] = 1.99426236E+00;
  COFD[6378] = 8.16671779E-02;
  COFD[6379] = -8.76234636E-03;
  COFD[6380] = -1.63967402E+01;
  COFD[6381] = 2.10881121E+00;
  COFD[6382] = 6.52480731E-02;
  COFD[6383] = -7.99020731E-03;
  COFD[6384] = -1.35810210E+01;
  COFD[6385] = 8.01711201E-01;
  COFD[6386] = 2.55854144E-01;
  COFD[6387] = -1.70716260E-02;
  COFD[6388] = -1.35703711E+01;
  COFD[6389] = 7.98360220E-01;
  COFD[6390] = 2.56323401E-01;
  COFD[6391] = -1.70927764E-02;
  COFD[6392] = -2.23067180E+01;
  COFD[6393] = 5.65366747E+00;
  COFD[6394] = -5.09074105E-01;
  COFD[6395] = 2.17086411E-02;
  COFD[6396] = -2.33114627E+01;
  COFD[6397] = 5.19165128E+00;
  COFD[6398] = -4.17805039E-01;
  COFD[6399] = 1.64021805E-02;
  COFD[6400] = -1.98245682E+01;
  COFD[6401] = 4.10460882E+00;
  COFD[6402] = -2.40832572E-01;
  COFD[6403] = 7.20652667E-03;
  COFD[6404] = -2.20353558E+01;
  COFD[6405] = 5.46603508E+00;
  COFD[6406] = -4.65199707E-01;
  COFD[6407] = 1.89647157E-02;
  COFD[6408] = -2.05723773E+01;
  COFD[6409] = 4.29837248E+00;
  COFD[6410] = -2.71107161E-01;
  COFD[6411] = 8.73928648E-03;
  COFD[6412] = -1.88300652E+01;
  COFD[6413] = 3.36066148E+00;
  COFD[6414] = -1.24815434E-01;
  COFD[6415] = 1.37670619E-03;
  COFD[6416] = -1.88300652E+01;
  COFD[6417] = 3.36066148E+00;
  COFD[6418] = -1.24815434E-01;
  COFD[6419] = 1.37670619E-03;
  COFD[6420] = -1.82304427E+01;
  COFD[6421] = 4.78069184E+00;
  COFD[6422] = -4.14340969E-01;
  COFD[6423] = 1.83747757E-02;
  COFD[6424] = -2.06438575E+01;
  COFD[6425] = 4.46770471E+00;
  COFD[6426] = -2.97972198E-01;
  COFD[6427] = 1.01116412E-02;
  COFD[6428] = -2.23053293E+01;
  COFD[6429] = 5.64811803E+00;
  COFD[6430] = -5.07801617E-01;
  COFD[6431] = 2.16292975E-02;
  COFD[6432] = -1.63376941E+01;
  COFD[6433] = 2.10546851E+00;
  COFD[6434] = 6.57487483E-02;
  COFD[6435] = -8.01461150E-03;
  COFD[6436] = -2.12939940E+01;
  COFD[6437] = 4.87520005E+00;
  COFD[6438] = -3.64681670E-01;
  COFD[6439] = 1.35831766E-02;
  COFD[6440] = -1.61986745E+01;
  COFD[6441] = 1.99402574E+00;
  COFD[6442] = 8.16970869E-02;
  COFD[6443] = -8.76358100E-03;
  COFD[6444] = -2.21178782E+01;
  COFD[6445] = 5.52954770E+00;
  COFD[6446] = -4.76277229E-01;
  COFD[6447] = 1.95684485E-02;
  COFD[6448] = -2.25069594E+01;
  COFD[6449] = 5.69732523E+00;
  COFD[6450] = -5.11316920E-01;
  COFD[6451] = 2.16612121E-02;
  COFD[6452] = -2.15044839E+01;
  COFD[6453] = 5.59463241E+00;
  COFD[6454] = -5.10685806E-01;
  COFD[6455] = 2.21780225E-02;
  COFD[6456] = -2.15309233E+01;
  COFD[6457] = 5.59463241E+00;
  COFD[6458] = -5.10685806E-01;
  COFD[6459] = 2.21780225E-02;
  COFD[6460] = -2.23895495E+01;
  COFD[6461] = 5.66447764E+00;
  COFD[6462] = -5.08805506E-01;
  COFD[6463] = 2.16257683E-02;
  COFD[6464] = -1.21156577E+01;
  COFD[6465] = 6.90312644E-01;
  COFD[6466] = 2.71552173E-01;
  COFD[6467] = -1.77491467E-02;
  COFD[6468] = -2.24009815E+01;
  COFD[6469] = 5.66447764E+00;
  COFD[6470] = -5.08805506E-01;
  COFD[6471] = 2.16257683E-02;
  COFD[6472] = -2.03933979E+01;
  COFD[6473] = 5.51931290E+00;
  COFD[6474] = -4.74472824E-01;
  COFD[6475] = 1.94694645E-02;
  COFD[6476] = -2.20873570E+01;
  COFD[6477] = 5.52954770E+00;
  COFD[6478] = -4.76277229E-01;
  COFD[6479] = 1.95684485E-02;
  COFD[6480] = -2.20873570E+01;
  COFD[6481] = 5.52954770E+00;
  COFD[6482] = -4.76277229E-01;
  COFD[6483] = 1.95684485E-02;
  COFD[6484] = -1.53988294E+01;
  COFD[6485] = 1.98817703E+00;
  COFD[6486] = 8.32926956E-02;
  COFD[6487] = -8.87042615E-03;
  COFD[6488] = -1.54121875E+01;
  COFD[6489] = 1.98817703E+00;
  COFD[6490] = 8.32926956E-02;
  COFD[6491] = -8.87042615E-03;
  COFD[6492] = -1.59209463E+01;
  COFD[6493] = 2.25226697E+00;
  COFD[6494] = 3.92418178E-02;
  COFD[6495] = -6.53243367E-03;
  COFD[6496] = -2.06166794E+01;
  COFD[6497] = 4.43679748E+00;
  COFD[6498] = -2.93011707E-01;
  COFD[6499] = 9.85648974E-03;
  COFD[6500] = -2.13091860E+01;
  COFD[6501] = 4.87520005E+00;
  COFD[6502] = -3.64681670E-01;
  COFD[6503] = 1.35831766E-02;
  COFD[6504] = -2.06305236E+01;
  COFD[6505] = 4.46770471E+00;
  COFD[6506] = -2.97972198E-01;
  COFD[6507] = 1.01116412E-02;
  COFD[6508] = -2.21157791E+01;
  COFD[6509] = 5.46566865E+00;
  COFD[6510] = -4.65136849E-01;
  COFD[6511] = 1.89613252E-02;
  COFD[6512] = -1.69141623E+01;
  COFD[6513] = 2.59961196E+00;
  COFD[6514] = -8.79342036E-03;
  COFD[6515] = -4.35596363E-03;
  COFD[6516] = -1.69226200E+01;
  COFD[6517] = 2.59961196E+00;
  COFD[6518] = -8.79342036E-03;
  COFD[6519] = -4.35596363E-03;
  COFD[6520] = -2.08396295E+01;
  COFD[6521] = 4.47055940E+00;
  COFD[6522] = -2.98434085E-01;
  COFD[6523] = 1.01355015E-02;
  COFD[6524] = -2.05636669E+01;
  COFD[6525] = 4.29837248E+00;
  COFD[6526] = -2.71107161E-01;
  COFD[6527] = 8.73928648E-03;
  COFD[6528] = -1.63448367E+01;
  COFD[6529] = 2.10546851E+00;
  COFD[6530] = 6.57487483E-02;
  COFD[6531] = -8.01461150E-03;
  COFD[6532] = -1.88781431E+01;
  COFD[6533] = 3.36066148E+00;
  COFD[6534] = -1.24815434E-01;
  COFD[6535] = 1.37670619E-03;
  COFD[6536] = -1.63339431E+01;
  COFD[6537] = 2.10546851E+00;
  COFD[6538] = 6.57487483E-02;
  COFD[6539] = -8.01461150E-03;
  COFD[6540] = -1.61957230E+01;
  COFD[6541] = 1.99402574E+00;
  COFD[6542] = 8.16970869E-02;
  COFD[6543] = -8.76358100E-03;
  COFD[6544] = -1.63863602E+01;
  COFD[6545] = 2.10546851E+00;
  COFD[6546] = 6.57487483E-02;
  COFD[6547] = -8.01461150E-03;
  COFD[6548] = -1.35703711E+01;
  COFD[6549] = 7.98360220E-01;
  COFD[6550] = 2.56323401E-01;
  COFD[6551] = -1.70927764E-02;
  COFD[6552] = -1.35596478E+01;
  COFD[6553] = 7.94972722E-01;
  COFD[6554] = 2.56798266E-01;
  COFD[6555] = -1.71141952E-02;
  COFD[6556] = -2.23006688E+01;
  COFD[6557] = 5.65307531E+00;
  COFD[6558] = -5.08950053E-01;
  COFD[6559] = 2.17011813E-02;
  COFD[6560] = -1.93515315E+01;
  COFD[6561] = 4.41939237E+00;
  COFD[6562] = -3.70853119E-01;
  COFD[6563] = 1.66344814E-02;
  COFD[6564] = -1.93843092E+01;
  COFD[6565] = 4.91244566E+00;
  COFD[6566] = -4.29874687E-01;
  COFD[6567] = 1.89825217E-02;
  COFD[6568] = -1.68011884E+01;
  COFD[6569] = 4.05042859E+00;
  COFD[6570] = -3.22319395E-01;
  COFD[6571] = 1.44942745E-02;
  COFD[6572] = -1.95742449E+01;
  COFD[6573] = 4.86151358E+00;
  COFD[6574] = -4.24066143E-01;
  COFD[6575] = 1.87651483E-02;
  COFD[6576] = -2.06822165E+01;
  COFD[6577] = 5.21598228E+00;
  COFD[6578] = -4.66522092E-01;
  COFD[6579] = 2.04628158E-02;
  COFD[6580] = -2.06822165E+01;
  COFD[6581] = 5.21598228E+00;
  COFD[6582] = -4.66522092E-01;
  COFD[6583] = 2.04628158E-02;
  COFD[6584] = -1.22379946E+01;
  COFD[6585] = 2.72351269E+00;
  COFD[6586] = -1.47956351E-01;
  COFD[6587] = 6.82984550E-03;
  COFD[6588] = -1.91593673E+01;
  COFD[6589] = 4.79990484E+00;
  COFD[6590] = -4.16700940E-01;
  COFD[6591] = 1.84717181E-02;
  COFD[6592] = -1.57330387E+01;
  COFD[6593] = 3.59522642E+00;
  COFD[6594] = -2.63155485E-01;
  COFD[6595] = 1.19213463E-02;
  COFD[6596] = -2.16604323E+01;
  COFD[6597] = 5.52209451E+00;
  COFD[6598] = -5.01800802E-01;
  COFD[6599] = 2.18122017E-02;
  COFD[6600] = -1.85562214E+01;
  COFD[6601] = 4.62539600E+00;
  COFD[6602] = -3.96640913E-01;
  COFD[6603] = 1.77139115E-02;
  COFD[6604] = -2.20270040E+01;
  COFD[6605] = 5.61263501E+00;
  COFD[6606] = -5.12541597E-01;
  COFD[6607] = 2.22382754E-02;
  COFD[6608] = -1.68473654E+01;
  COFD[6609] = 4.06963018E+00;
  COFD[6610] = -3.24735969E-01;
  COFD[6611] = 1.45960083E-02;
  COFD[6612] = -1.60542790E+01;
  COFD[6613] = 3.72962835E+00;
  COFD[6614] = -2.81187017E-01;
  COFD[6615] = 1.27313717E-02;
  COFD[6616] = -1.46399714E+01;
  COFD[6617] = 3.33278784E+00;
  COFD[6618] = -2.27808884E-01;
  COFD[6619] = 1.03247543E-02;
  COFD[6620] = -1.46591988E+01;
  COFD[6621] = 3.33278784E+00;
  COFD[6622] = -2.27808884E-01;
  COFD[6623] = 1.03247543E-02;
  COFD[6624] = -1.60614584E+01;
  COFD[6625] = 3.72962835E+00;
  COFD[6626] = -2.81187017E-01;
  COFD[6627] = 1.27313717E-02;
  COFD[6628] = -2.14163493E+01;
  COFD[6629] = 5.69468569E+00;
  COFD[6630] = -5.09722690E-01;
  COFD[6631] = 2.15385637E-02;
  COFD[6632] = -1.60683077E+01;
  COFD[6633] = 3.72962835E+00;
  COFD[6634] = -2.81187017E-01;
  COFD[6635] = 1.27313717E-02;
  COFD[6636] = -1.51717004E+01;
  COFD[6637] = 4.07525938E+00;
  COFD[6638] = -3.25400860E-01;
  COFD[6639] = 1.46219057E-02;
  COFD[6640] = -1.68245138E+01;
  COFD[6641] = 4.06963018E+00;
  COFD[6642] = -3.24735969E-01;
  COFD[6643] = 1.45960083E-02;
  COFD[6644] = -1.68245138E+01;
  COFD[6645] = 4.06963018E+00;
  COFD[6646] = -3.24735969E-01;
  COFD[6647] = 1.45960083E-02;
  COFD[6648] = -2.13238353E+01;
  COFD[6649] = 5.61588044E+00;
  COFD[6650] = -5.12844998E-01;
  COFD[6651] = 2.22464175E-02;
  COFD[6652] = -2.13321490E+01;
  COFD[6653] = 5.61588044E+00;
  COFD[6654] = -5.12844998E-01;
  COFD[6655] = 2.22464175E-02;
  COFD[6656] = -2.10068356E+01;
  COFD[6657] = 5.49213673E+00;
  COFD[6658] = -4.98698498E-01;
  COFD[6659] = 2.17110028E-02;
  COFD[6660] = -1.89816912E+01;
  COFD[6661] = 4.75662930E+00;
  COFD[6662] = -4.11343764E-01;
  COFD[6663] = 1.82496227E-02;
  COFD[6664] = -1.85659740E+01;
  COFD[6665] = 4.62539600E+00;
  COFD[6666] = -3.96640913E-01;
  COFD[6667] = 1.77139115E-02;
  COFD[6668] = -1.91510723E+01;
  COFD[6669] = 4.79990484E+00;
  COFD[6670] = -4.16700940E-01;
  COFD[6671] = 1.84717181E-02;
  COFD[6672] = -1.68788995E+01;
  COFD[6673] = 4.12702806E+00;
  COFD[6674] = -3.32207230E-01;
  COFD[6675] = 1.49219062E-02;
  COFD[6676] = -2.10888364E+01;
  COFD[6677] = 5.48007439E+00;
  COFD[6678] = -4.98112485E-01;
  COFD[6679] = 2.17277651E-02;
  COFD[6680] = -2.10935409E+01;
  COFD[6681] = 5.48007439E+00;
  COFD[6682] = -4.98112485E-01;
  COFD[6683] = 2.17277651E-02;
  COFD[6684] = -1.93262186E+01;
  COFD[6685] = 4.79832015E+00;
  COFD[6686] = -4.16503776E-01;
  COFD[6687] = 1.84634981E-02;
  COFD[6688] = -1.95693646E+01;
  COFD[6689] = 4.86151358E+00;
  COFD[6690] = -4.24066143E-01;
  COFD[6691] = 1.87651483E-02;
  COFD[6692] = -2.16636927E+01;
  COFD[6693] = 5.52209451E+00;
  COFD[6694] = -5.01800802E-01;
  COFD[6695] = 2.18122017E-02;
  COFD[6696] = -2.07066590E+01;
  COFD[6697] = 5.21598228E+00;
  COFD[6698] = -4.66522092E-01;
  COFD[6699] = 2.04628158E-02;
  COFD[6700] = -2.16587098E+01;
  COFD[6701] = 5.52209451E+00;
  COFD[6702] = -5.01800802E-01;
  COFD[6703] = 2.18122017E-02;
  COFD[6704] = -2.20257163E+01;
  COFD[6705] = 5.61263501E+00;
  COFD[6706] = -5.12541597E-01;
  COFD[6707] = 2.22382754E-02;
  COFD[6708] = -2.16821478E+01;
  COFD[6709] = 5.52209451E+00;
  COFD[6710] = -5.01800802E-01;
  COFD[6711] = 2.18122017E-02;
  COFD[6712] = -2.23067180E+01;
  COFD[6713] = 5.65366747E+00;
  COFD[6714] = -5.09074105E-01;
  COFD[6715] = 2.17086411E-02;
  COFD[6716] = -2.23006688E+01;
  COFD[6717] = 5.65307531E+00;
  COFD[6718] = -5.08950053E-01;
  COFD[6719] = 2.17011813E-02;
  COFD[6720] = -1.57088312E+01;
  COFD[6721] = 3.58908491E+00;
  COFD[6722] = -2.62355672E-01;
  COFD[6723] = 1.18864473E-02;
}

// List of specs with small weight, dim NLITE
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKTDIF(int* KTDIF)
{
  KTDIF[0] = 6;
  KTDIF[1] = 19;
}

// Poly fits for thermal diff ratios, dim NO*NLITE*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFTD(amrex::Real* COFTD)
{
  COFTD[0] = 2.88673291E-01;
  COFTD[1] = 6.39989997E-04;
  COFTD[2] = -5.06504154E-07;
  COFTD[3] = 1.24719527E-10;
  COFTD[4] = 1.50671946E-01;
  COFTD[5] = 7.77714628E-04;
  COFTD[6] = -5.80231351E-07;
  COFTD[7] = 1.37266493E-10;
  COFTD[8] = 2.73973268E-01;
  COFTD[9] = 4.13478236E-04;
  COFTD[10] = -3.38225208E-07;
  COFTD[11] = 8.53309006E-11;
  COFTD[12] = 1.70860005E-01;
  COFTD[13] = 7.92659552E-04;
  COFTD[14] = -5.95124800E-07;
  COFTD[15] = 1.41369716E-10;
  COFTD[16] = 1.00135572E-01;
  COFTD[17] = 9.42145411E-04;
  COFTD[18] = -6.82682828E-07;
  COFTD[19] = 1.58526510E-10;
  COFTD[20] = 1.00135572E-01;
  COFTD[21] = 9.42145411E-04;
  COFTD[22] = -6.82682828E-07;
  COFTD[23] = 1.58526510E-10;
  COFTD[24] = 0.00000000E+00;
  COFTD[25] = 0.00000000E+00;
  COFTD[26] = 0.00000000E+00;
  COFTD[27] = 0.00000000E+00;
  COFTD[28] = 1.77780802E-01;
  COFTD[29] = 7.37834670E-04;
  COFTD[30] = -5.57826552E-07;
  COFTD[31] = 1.33116530E-10;
  COFTD[32] = 3.75275416E-01;
  COFTD[33] = 2.92301937E-04;
  COFTD[34] = -2.54974118E-07;
  COFTD[35] = 6.77581308E-11;
  COFTD[36] = 3.33950113E-02;
  COFTD[37] = 1.06569738E-03;
  COFTD[38] = -7.47944111E-07;
  COFTD[39] = 1.70284766E-10;
  COFTD[40] = 2.17485318E-01;
  COFTD[41] = 6.37783270E-04;
  COFTD[42] = -4.93899053E-07;
  COFTD[43] = 1.19780645E-10;
  COFTD[44] = 1.68229668E-02;
  COFTD[45] = 1.09714156E-03;
  COFTD[46] = -7.63898826E-07;
  COFTD[47] = 1.73073672E-10;
  COFTD[48] = 2.65993391E-01;
  COFTD[49] = 4.14035264E-04;
  COFTD[50] = -3.37741506E-07;
  COFTD[51] = 8.50298841E-11;
  COFTD[52] = 3.65574893E-01;
  COFTD[53] = 3.39114035E-04;
  COFTD[54] = -2.90565787E-07;
  COFTD[55] = 7.60595575E-11;
  COFTD[56] = 3.66599164E-01;
  COFTD[57] = 1.83133456E-04;
  COFTD[58] = -1.67760224E-07;
  COFTD[59] = 4.65669946E-11;
  COFTD[60] = 3.72200520E-01;
  COFTD[61] = 1.85931595E-04;
  COFTD[62] = -1.70323472E-07;
  COFTD[63] = 4.72785028E-11;
  COFTD[64] = 3.66989891E-01;
  COFTD[65] = 3.40426613E-04;
  COFTD[66] = -2.91690454E-07;
  COFTD[67] = 7.63539544E-11;
  COFTD[68] = -7.38835413E-02;
  COFTD[69] = 1.01288758E-03;
  COFTD[70] = -6.67484942E-07;
  COFTD[71] = 1.46290033E-10;
  COFTD[72] = 3.68325715E-01;
  COFTD[73] = 3.41665749E-04;
  COFTD[74] = -2.92752192E-07;
  COFTD[75] = 7.66318789E-11;
  COFTD[76] = -1.15570296E-01;
  COFTD[77] = -1.82012403E-04;
  COFTD[78] = 1.48317762E-07;
  COFTD[79] = -3.73110256E-11;
  COFTD[80] = 2.60817458E-01;
  COFTD[81] = 4.05978602E-04;
  COFTD[82] = -3.31169434E-07;
  COFTD[83] = 8.33752978E-11;
  COFTD[84] = 2.60817458E-01;
  COFTD[85] = 4.05978602E-04;
  COFTD[86] = -3.31169434E-07;
  COFTD[87] = 8.33752978E-11;
  COFTD[88] = 1.44182053E-02;
  COFTD[89] = 9.98472156E-04;
  COFTD[90] = -6.94879688E-07;
  COFTD[91] = 1.57392262E-10;
  COFTD[92] = 1.44859346E-02;
  COFTD[93] = 1.00316246E-03;
  COFTD[94] = -6.98143875E-07;
  COFTD[95] = 1.58131610E-10;
  COFTD[96] = 3.20307990E-02;
  COFTD[97] = 9.83642170E-04;
  COFTD[98] = -6.90763562E-07;
  COFTD[99] = 1.57323362E-10;
  COFTD[100] = 1.93821916E-01;
  COFTD[101] = 7.54167510E-04;
  COFTD[102] = -5.72570774E-07;
  COFTD[103] = 1.37015250E-10;
  COFTD[104] = 2.18751442E-01;
  COFTD[105] = 6.41496223E-04;
  COFTD[106] = -4.96774363E-07;
  COFTD[107] = 1.20477967E-10;
  COFTD[108] = 1.76952062E-01;
  COFTD[109] = 7.34395194E-04;
  COFTD[110] = -5.55226199E-07;
  COFTD[111] = 1.32495996E-10;
  COFTD[112] = 3.06808321E-01;
  COFTD[113] = 5.11664058E-04;
  COFTD[114] = -4.14832681E-07;
  COFTD[115] = 1.03959555E-10;
  COFTD[116] = 4.77527113E-02;
  COFTD[117] = 9.96881852E-04;
  COFTD[118] = -7.05105452E-07;
  COFTD[119] = 1.61298019E-10;
  COFTD[120] = 4.78603306E-02;
  COFTD[121] = 9.99128505E-04;
  COFTD[122] = -7.06694534E-07;
  COFTD[123] = 1.61661533E-10;
  COFTD[124] = 1.83663988E-01;
  COFTD[125] = 7.60485043E-04;
  COFTD[126] = -5.75036466E-07;
  COFTD[127] = 1.37236889E-10;
  COFTD[128] = 1.70457760E-01;
  COFTD[129] = 7.90793446E-04;
  COFTD[130] = -5.93723737E-07;
  COFTD[131] = 1.41036899E-10;
  COFTD[132] = 3.34375106E-02;
  COFTD[133] = 1.06705362E-03;
  COFTD[134] = -7.48895964E-07;
  COFTD[135] = 1.70501474E-10;
  COFTD[136] = 1.01135104E-01;
  COFTD[137] = 9.51549711E-04;
  COFTD[138] = -6.89497225E-07;
  COFTD[139] = 1.60108889E-10;
  COFTD[140] = 3.33724693E-02;
  COFTD[141] = 1.06497803E-03;
  COFTD[142] = -7.47439241E-07;
  COFTD[143] = 1.70169822E-10;
  COFTD[144] = 1.68148224E-02;
  COFTD[145] = 1.09661041E-03;
  COFTD[146] = -7.63529003E-07;
  COFTD[147] = 1.72989882E-10;
  COFTD[148] = 3.36738693E-02;
  COFTD[149] = 1.07459626E-03;
  COFTD[150] = -7.54189660E-07;
  COFTD[151] = 1.71706693E-10;
  COFTD[152] = -4.59170033E-02;
  COFTD[153] = 1.17908173E-03;
  COFTD[154] = -7.95729053E-07;
  COFTD[155] = 1.76914340E-10;
  COFTD[156] = -4.62194860E-02;
  COFTD[157] = 1.17981741E-03;
  COFTD[158] = -7.96106270E-07;
  COFTD[159] = 1.76982235E-10;
  COFTD[160] = 3.76300857E-01;
  COFTD[161] = 2.89716506E-04;
  COFTD[162] = -2.53025596E-07;
  COFTD[163] = 6.73103796E-11;
  COFTD[164] = -6.25039387E-02;
  COFTD[165] = 1.22522340E-03;
  COFTD[166] = -8.20272093E-07;
  COFTD[167] = 1.81493618E-10;
  COFTD[168] = -1.55165990E-01;
  COFTD[169] = 1.21987604E-03;
  COFTD[170] = -7.66117811E-07;
  COFTD[171] = 1.63080259E-10;
  COFTD[172] = -4.18893806E-03;
  COFTD[173] = 1.03620787E-03;
  COFTD[174] = -7.14052620E-07;
  COFTD[175] = 1.60768013E-10;
  COFTD[176] = -1.49045581E-01;
  COFTD[177] = 1.24644955E-03;
  COFTD[178] = -7.88869589E-07;
  COFTD[179] = 1.68716831E-10;
  COFTD[180] = -2.03160421E-01;
  COFTD[181] = 1.26295642E-03;
  COFTD[182] = -7.62789171E-07;
  COFTD[183] = 1.58483481E-10;
  COFTD[184] = -2.03160421E-01;
  COFTD[185] = 1.26295642E-03;
  COFTD[186] = -7.62789171E-07;
  COFTD[187] = 1.58483481E-10;
  COFTD[188] = 1.15570296E-01;
  COFTD[189] = 1.82012403E-04;
  COFTD[190] = -1.48317762E-07;
  COFTD[191] = 3.73110256E-11;
  COFTD[192] = -1.35269382E-01;
  COFTD[193] = 1.21827699E-03;
  COFTD[194] = -7.77411735E-07;
  COFTD[195] = 1.67101255E-10;
  COFTD[196] = 8.79254190E-02;
  COFTD[197] = 9.61645502E-04;
  COFTD[198] = -6.92836629E-07;
  COFTD[199] = 1.60309645E-10;
  COFTD[200] = -2.42096783E-01;
  COFTD[201] = 1.24219973E-03;
  COFTD[202] = -7.13362649E-07;
  COFTD[203] = 1.43465117E-10;
  COFTD[204] = -9.49027405E-02;
  COFTD[205] = 1.18112918E-03;
  COFTD[206] = -7.73895853E-07;
  COFTD[207] = 1.69025753E-10;
  COFTD[208] = -2.50201626E-01;
  COFTD[209] = 1.23382238E-03;
  COFTD[210] = -6.98860116E-07;
  COFTD[211] = 1.39259018E-10;
  COFTD[212] = -8.35092968E-03;
  COFTD[213] = 1.03269855E-03;
  COFTD[214] = -7.10026786E-07;
  COFTD[215] = 1.59642853E-10;
  COFTD[216] = 6.52819318E-02;
  COFTD[217] = 1.00664633E-03;
  COFTD[218] = -7.17369475E-07;
  COFTD[219] = 1.64863150E-10;
  COFTD[220] = 1.33057181E-01;
  COFTD[221] = 8.27852352E-04;
  COFTD[222] = -6.11356852E-07;
  COFTD[223] = 1.43680475E-10;
  COFTD[224] = 1.34058390E-01;
  COFTD[225] = 8.34081649E-04;
  COFTD[226] = -6.15957098E-07;
  COFTD[227] = 1.44761620E-10;
  COFTD[228] = 6.54077851E-02;
  COFTD[229] = 1.00858699E-03;
  COFTD[230] = -7.18752451E-07;
  COFTD[231] = 1.65180980E-10;
  COFTD[232] = -2.41001157E-01;
  COFTD[233] = 1.09298402E-03;
  COFTD[234] = -5.98082581E-07;
  COFTD[235] = 1.16371915E-10;
  COFTD[236] = 6.55263939E-02;
  COFTD[237] = 1.01041593E-03;
  COFTD[238] = -7.20055818E-07;
  COFTD[239] = 1.65480515E-10;
  COFTD[240] = 0.00000000E+00;
  COFTD[241] = 0.00000000E+00;
  COFTD[242] = 0.00000000E+00;
  COFTD[243] = 0.00000000E+00;
  COFTD[244] = -8.27046270E-03;
  COFTD[245] = 1.02274779E-03;
  COFTD[246] = -7.03185187E-07;
  COFTD[247] = 1.58104583E-10;
  COFTD[248] = -8.27046270E-03;
  COFTD[249] = 1.02274779E-03;
  COFTD[250] = -7.03185187E-07;
  COFTD[251] = 1.58104583E-10;
  COFTD[252] = -2.39117184E-01;
  COFTD[253] = 1.17527138E-03;
  COFTD[254] = -6.64888138E-07;
  COFTD[255] = 1.32380983E-10;
  COFTD[256] = -2.39676183E-01;
  COFTD[257] = 1.17801889E-03;
  COFTD[258] = -6.66442488E-07;
  COFTD[259] = 1.32690458E-10;
  COFTD[260] = -2.19544943E-01;
  COFTD[261] = 1.21173480E-03;
  COFTD[262] = -7.11288578E-07;
  COFTD[263] = 1.45118168E-10;
  COFTD[264] = -1.31307141E-01;
  COFTD[265] = 1.24103075E-03;
  COFTD[266] = -7.95769778E-07;
  COFTD[267] = 1.71549845E-10;
  COFTD[268] = -9.51773871E-02;
  COFTD[269] = 1.18454735E-03;
  COFTD[270] = -7.76135491E-07;
  COFTD[271] = 1.69514910E-10;
  COFTD[272] = -1.34954830E-01;
  COFTD[273] = 1.21544405E-03;
  COFTD[274] = -7.75603964E-07;
  COFTD[275] = 1.66712682E-10;
  COFTD[276] = -1.92660137E-02;
  COFTD[277] = 1.13681573E-03;
  COFTD[278] = -7.77643229E-07;
  COFTD[279] = 1.74308373E-10;
  COFTD[280] = -2.29083461E-01;
  COFTD[281] = 1.22601186E-03;
  COFTD[282] = -7.13382013E-07;
  COFTD[283] = 1.44716613E-10;
  COFTD[284] = -2.29341021E-01;
  COFTD[285] = 1.22739027E-03;
  COFTD[286] = -7.14184073E-07;
  COFTD[287] = 1.44879319E-10;
  COFTD[288] = -1.37133513E-01;
  COFTD[289] = 1.23712107E-03;
  COFTD[290] = -7.89573267E-07;
  COFTD[291] = 1.69733170E-10;
  COFTD[292] = -1.48870343E-01;
  COFTD[293] = 1.24498406E-03;
  COFTD[294] = -7.87942089E-07;
  COFTD[295] = 1.68518465E-10;
  COFTD[296] = -2.42250708E-01;
  COFTD[297] = 1.24298952E-03;
  COFTD[298] = -7.13816205E-07;
  COFTD[299] = 1.43556332E-10;
  COFTD[300] = -2.04171003E-01;
  COFTD[301] = 1.26923876E-03;
  COFTD[302] = -7.66583518E-07;
  COFTD[303] = 1.59271826E-10;
  COFTD[304] = -2.42015101E-01;
  COFTD[305] = 1.24178062E-03;
  COFTD[306] = -7.13121966E-07;
  COFTD[307] = 1.43416713E-10;
  COFTD[308] = -2.50141077E-01;
  COFTD[309] = 1.23352379E-03;
  COFTD[310] = -6.98690989E-07;
  COFTD[311] = 1.39225317E-10;
  COFTD[312] = -2.43105042E-01;
  COFTD[313] = 1.24737312E-03;
  COFTD[314] = -7.16333588E-07;
  COFTD[315] = 1.44062606E-10;
  COFTD[316] = -2.67163441E-01;
  COFTD[317] = 1.18847427E-03;
  COFTD[318] = -6.44364315E-07;
  COFTD[319] = 1.24557801E-10;
  COFTD[320] = -2.67212118E-01;
  COFTD[321] = 1.18869081E-03;
  COFTD[322] = -6.44481718E-07;
  COFTD[323] = 1.24580496E-10;
  COFTD[324] = 8.94248926E-02;
  COFTD[325] = 9.59272316E-04;
  COFTD[326] = -6.91613109E-07;
  COFTD[327] = 1.60096781E-10;
}

// compute the critical parameters for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_CRITPARAMS(
  amrex::Real* Tci, amrex::Real* ai, amrex::Real* bi, amrex::Real* acentric_i)
{

  amrex::Real EPS[41];
  amrex::Real SIG[41];
  amrex::Real wt[41];
  amrex::Real Rcst = 83.144598; // in bar [CGS] !
  amrex::Real avogadro = 6.02214199e23;
  amrex::Real boltzmann = 1.3806503e-16; // we work in CGS

  egtransetEPS(EPS);
  egtransetSIG(SIG);
  get_mw(wt);

  // species 0: POSF10325
  Tci[0] = 1.316 * EPS[0];
  ai[0] = (5.55 * avogadro * avogadro * EPS[0] * boltzmann * 1e-24 * SIG[0] *
           SIG[0] * SIG[0]) /
          (wt[0] * wt[0]);
  bi[0] = 0.855 * avogadro * 1e-24 * SIG[0] * SIG[0] * SIG[0] / (wt[0]);
  acentric_i[0] = 0.0;

  // species 1: C2H4
  // Imported from NIST
  Tci[1] = 282.340000;
  ai[1] = 1e6 * 0.42748 * Rcst * Rcst * Tci[1] * Tci[1] /
          (28.054000 * 28.054000 * 50.410000);
  bi[1] = 0.08664 * Rcst * Tci[1] / (28.054000 * 50.410000);
  acentric_i[1] = 0.087000;

  // species 2: CH4
  // Imported from NIST
  Tci[2] = 190.560000;
  ai[2] = 1e6 * 0.42748 * Rcst * Rcst * Tci[2] * Tci[2] /
          (16.043030 * 16.043030 * 45.990000);
  bi[2] = 0.08664 * Rcst * Tci[2] / (16.043030 * 45.990000);
  acentric_i[2] = 0.011000;

  // species 3: C3H6
  Tci[3] = 1.316 * EPS[3];
  ai[3] = (5.55 * avogadro * avogadro * EPS[3] * boltzmann * 1e-24 * SIG[3] *
           SIG[3] * SIG[3]) /
          (wt[3] * wt[3]);
  bi[3] = 0.855 * avogadro * 1e-24 * SIG[3] * SIG[3] * SIG[3] / (wt[3]);
  acentric_i[3] = 0.0;

  // species 4: iC4H8
  Tci[4] = 1.316 * EPS[4];
  ai[4] = (5.55 * avogadro * avogadro * EPS[4] * boltzmann * 1e-24 * SIG[4] *
           SIG[4] * SIG[4]) /
          (wt[4] * wt[4]);
  bi[4] = 0.855 * avogadro * 1e-24 * SIG[4] * SIG[4] * SIG[4] / (wt[4]);
  acentric_i[4] = 0.0;

  // species 5: C4H81
  Tci[5] = 1.316 * EPS[5];
  ai[5] = (5.55 * avogadro * avogadro * EPS[5] * boltzmann * 1e-24 * SIG[5] *
           SIG[5] * SIG[5]) /
          (wt[5] * wt[5]);
  bi[5] = 0.855 * avogadro * 1e-24 * SIG[5] * SIG[5] * SIG[5] / (wt[5]);
  acentric_i[5] = 0.0;

  // species 6: H2
  // Imported from NIST
  Tci[6] = 33.145000;
  ai[6] = 1e6 * 0.42748 * Rcst * Rcst * Tci[6] * Tci[6] /
          (2.015880 * 2.015880 * 12.964000);
  bi[6] = 0.08664 * Rcst * Tci[6] / (2.015880 * 12.964000);
  acentric_i[6] = -0.219000;

  // species 7: C2H6
  // Imported from NIST
  Tci[7] = 305.320000;
  ai[7] = 1e6 * 0.42748 * Rcst * Rcst * Tci[7] * Tci[7] /
          (30.070120 * 30.070120 * 48.720000);
  bi[7] = 0.08664 * Rcst * Tci[7] / (30.070120 * 48.720000);
  acentric_i[7] = 0.099000;

  // species 8: CO
  // Imported from NIST
  Tci[8] = 132.850000;
  ai[8] = 1e6 * 0.42748 * Rcst * Rcst * Tci[8] * Tci[8] /
          (28.010000 * 28.010000 * 34.940000);
  bi[8] = 0.08664 * Rcst * Tci[8] / (28.010000 * 34.940000);
  acentric_i[8] = 0.045000;

  // species 9: C6H6
  Tci[9] = 1.316 * EPS[9];
  ai[9] = (5.55 * avogadro * avogadro * EPS[9] * boltzmann * 1e-24 * SIG[9] *
           SIG[9] * SIG[9]) /
          (wt[9] * wt[9]);
  bi[9] = 0.855 * avogadro * 1e-24 * SIG[9] * SIG[9] * SIG[9] / (wt[9]);
  acentric_i[9] = 0.0;

  // species 10: C2H2
  // Imported from NIST
  Tci[10] = 308.300000;
  ai[10] = 1e6 * 0.42748 * Rcst * Rcst * Tci[10] * Tci[10] /
           (26.038000 * 26.038000 * 61.140000);
  bi[10] = 0.08664 * Rcst * Tci[10] / (26.038000 * 61.140000);
  acentric_i[10] = 0.189000;

  // species 11: C6H5CH3
  Tci[11] = 1.316 * EPS[11];
  ai[11] = (5.55 * avogadro * avogadro * EPS[11] * boltzmann * 1e-24 * SIG[11] *
            SIG[11] * SIG[11]) /
           (wt[11] * wt[11]);
  bi[11] = 0.855 * avogadro * 1e-24 * SIG[11] * SIG[11] * SIG[11] / (wt[11]);
  acentric_i[11] = 0.0;

  // species 12: CH3
  Tci[12] = 1.316 * EPS[12];
  ai[12] = (5.55 * avogadro * avogadro * EPS[12] * boltzmann * 1e-24 * SIG[12] *
            SIG[12] * SIG[12]) /
           (wt[12] * wt[12]);
  bi[12] = 0.855 * avogadro * 1e-24 * SIG[12] * SIG[12] * SIG[12] / (wt[12]);
  acentric_i[12] = 0.0;

  // species 13: O2
  // Imported from NIST
  Tci[13] = 154.581000;
  ai[13] = 1e6 * 0.42748 * Rcst * Rcst * Tci[13] * Tci[13] /
           (31.998800 * 31.998800 * 50.430466);
  bi[13] = 0.08664 * Rcst * Tci[13] / (31.998800 * 50.430466);
  acentric_i[13] = 0.022200;

  // species 14: O
  Tci[14] = 1.316 * EPS[14];
  ai[14] = (5.55 * avogadro * avogadro * EPS[14] * boltzmann * 1e-24 * SIG[14] *
            SIG[14] * SIG[14]) /
           (wt[14] * wt[14]);
  bi[14] = 0.855 * avogadro * 1e-24 * SIG[14] * SIG[14] * SIG[14] / (wt[14]);
  acentric_i[14] = 0.0;

  // species 15: OH
  Tci[15] = 1.316 * EPS[15];
  ai[15] = (5.55 * avogadro * avogadro * EPS[15] * boltzmann * 1e-24 * SIG[15] *
            SIG[15] * SIG[15]) /
           (wt[15] * wt[15]);
  bi[15] = 0.855 * avogadro * 1e-24 * SIG[15] * SIG[15] * SIG[15] / (wt[15]);
  acentric_i[15] = 0.0;

  // species 16: HO2
  Tci[16] = 1.316 * EPS[16];
  ai[16] = (5.55 * avogadro * avogadro * EPS[16] * boltzmann * 1e-24 * SIG[16] *
            SIG[16] * SIG[16]) /
           (wt[16] * wt[16]);
  bi[16] = 0.855 * avogadro * 1e-24 * SIG[16] * SIG[16] * SIG[16] / (wt[16]);
  acentric_i[16] = 0.0;

  // species 17: H2O
  // Imported from NIST
  Tci[17] = 647.096000;
  ai[17] = 1e6 * 0.42748 * Rcst * Rcst * Tci[17] * Tci[17] /
           (18.015340 * 18.015340 * 220.640000);
  bi[17] = 0.08664 * Rcst * Tci[17] / (18.015340 * 220.640000);
  acentric_i[17] = 0.344300;

  // species 18: H2O2
  Tci[18] = 1.316 * EPS[18];
  ai[18] = (5.55 * avogadro * avogadro * EPS[18] * boltzmann * 1e-24 * SIG[18] *
            SIG[18] * SIG[18]) /
           (wt[18] * wt[18]);
  bi[18] = 0.855 * avogadro * 1e-24 * SIG[18] * SIG[18] * SIG[18] / (wt[18]);
  acentric_i[18] = 0.0;

  // species 19: H
  Tci[19] = 1.316 * EPS[19];
  ai[19] = (5.55 * avogadro * avogadro * EPS[19] * boltzmann * 1e-24 * SIG[19] *
            SIG[19] * SIG[19]) /
           (wt[19] * wt[19]);
  bi[19] = 0.855 * avogadro * 1e-24 * SIG[19] * SIG[19] * SIG[19] / (wt[19]);
  acentric_i[19] = 0.0;

  // species 20: CH2
  Tci[20] = 1.316 * EPS[20];
  ai[20] = (5.55 * avogadro * avogadro * EPS[20] * boltzmann * 1e-24 * SIG[20] *
            SIG[20] * SIG[20]) /
           (wt[20] * wt[20]);
  bi[20] = 0.855 * avogadro * 1e-24 * SIG[20] * SIG[20] * SIG[20] / (wt[20]);
  acentric_i[20] = 0.0;

  // species 21: CH2*
  Tci[21] = 1.316 * EPS[21];
  ai[21] = (5.55 * avogadro * avogadro * EPS[21] * boltzmann * 1e-24 * SIG[21] *
            SIG[21] * SIG[21]) /
           (wt[21] * wt[21]);
  bi[21] = 0.855 * avogadro * 1e-24 * SIG[21] * SIG[21] * SIG[21] / (wt[21]);
  acentric_i[21] = 0.0;

  // species 22: HCO
  Tci[22] = 1.316 * EPS[22];
  ai[22] = (5.55 * avogadro * avogadro * EPS[22] * boltzmann * 1e-24 * SIG[22] *
            SIG[22] * SIG[22]) /
           (wt[22] * wt[22]);
  bi[22] = 0.855 * avogadro * 1e-24 * SIG[22] * SIG[22] * SIG[22] / (wt[22]);
  acentric_i[22] = 0.0;

  // species 23: CH2O
  Tci[23] = 1.316 * EPS[23];
  ai[23] = (5.55 * avogadro * avogadro * EPS[23] * boltzmann * 1e-24 * SIG[23] *
            SIG[23] * SIG[23]) /
           (wt[23] * wt[23]);
  bi[23] = 0.855 * avogadro * 1e-24 * SIG[23] * SIG[23] * SIG[23] / (wt[23]);
  acentric_i[23] = 0.0;

  // species 24: CH3O
  Tci[24] = 1.316 * EPS[24];
  ai[24] = (5.55 * avogadro * avogadro * EPS[24] * boltzmann * 1e-24 * SIG[24] *
            SIG[24] * SIG[24]) /
           (wt[24] * wt[24]);
  bi[24] = 0.855 * avogadro * 1e-24 * SIG[24] * SIG[24] * SIG[24] / (wt[24]);
  acentric_i[24] = 0.0;

  // species 25: CO2
  // Imported from NIST
  Tci[25] = 304.120000;
  ai[25] = 1e6 * 0.42748 * Rcst * Rcst * Tci[25] * Tci[25] /
           (44.009950 * 44.009950 * 73.740000);
  bi[25] = 0.08664 * Rcst * Tci[25] / (44.009950 * 73.740000);
  acentric_i[25] = 0.225000;

  // species 26: C2H3
  Tci[26] = 1.316 * EPS[26];
  ai[26] = (5.55 * avogadro * avogadro * EPS[26] * boltzmann * 1e-24 * SIG[26] *
            SIG[26] * SIG[26]) /
           (wt[26] * wt[26]);
  bi[26] = 0.855 * avogadro * 1e-24 * SIG[26] * SIG[26] * SIG[26] / (wt[26]);
  acentric_i[26] = 0.0;

  // species 27: C2H5
  Tci[27] = 1.316 * EPS[27];
  ai[27] = (5.55 * avogadro * avogadro * EPS[27] * boltzmann * 1e-24 * SIG[27] *
            SIG[27] * SIG[27]) /
           (wt[27] * wt[27]);
  bi[27] = 0.855 * avogadro * 1e-24 * SIG[27] * SIG[27] * SIG[27] / (wt[27]);
  acentric_i[27] = 0.0;

  // species 28: HCCO
  Tci[28] = 1.316 * EPS[28];
  ai[28] = (5.55 * avogadro * avogadro * EPS[28] * boltzmann * 1e-24 * SIG[28] *
            SIG[28] * SIG[28]) /
           (wt[28] * wt[28]);
  bi[28] = 0.855 * avogadro * 1e-24 * SIG[28] * SIG[28] * SIG[28] / (wt[28]);
  acentric_i[28] = 0.0;

  // species 29: CH2CO
  Tci[29] = 1.316 * EPS[29];
  ai[29] = (5.55 * avogadro * avogadro * EPS[29] * boltzmann * 1e-24 * SIG[29] *
            SIG[29] * SIG[29]) /
           (wt[29] * wt[29]);
  bi[29] = 0.855 * avogadro * 1e-24 * SIG[29] * SIG[29] * SIG[29] / (wt[29]);
  acentric_i[29] = 0.0;

  // species 30: CH2CHO
  Tci[30] = 1.316 * EPS[30];
  ai[30] = (5.55 * avogadro * avogadro * EPS[30] * boltzmann * 1e-24 * SIG[30] *
            SIG[30] * SIG[30]) /
           (wt[30] * wt[30]);
  bi[30] = 0.855 * avogadro * 1e-24 * SIG[30] * SIG[30] * SIG[30] / (wt[30]);
  acentric_i[30] = 0.0;

  // species 31: C3H3
  Tci[31] = 1.316 * EPS[31];
  ai[31] = (5.55 * avogadro * avogadro * EPS[31] * boltzmann * 1e-24 * SIG[31] *
            SIG[31] * SIG[31]) /
           (wt[31] * wt[31]);
  bi[31] = 0.855 * avogadro * 1e-24 * SIG[31] * SIG[31] * SIG[31] / (wt[31]);
  acentric_i[31] = 0.0;

  // species 32: aC3H5
  Tci[32] = 1.316 * EPS[32];
  ai[32] = (5.55 * avogadro * avogadro * EPS[32] * boltzmann * 1e-24 * SIG[32] *
            SIG[32] * SIG[32]) /
           (wt[32] * wt[32]);
  bi[32] = 0.855 * avogadro * 1e-24 * SIG[32] * SIG[32] * SIG[32] / (wt[32]);
  acentric_i[32] = 0.0;

  // species 33: C5H4O
  Tci[33] = 1.316 * EPS[33];
  ai[33] = (5.55 * avogadro * avogadro * EPS[33] * boltzmann * 1e-24 * SIG[33] *
            SIG[33] * SIG[33]) /
           (wt[33] * wt[33]);
  bi[33] = 0.855 * avogadro * 1e-24 * SIG[33] * SIG[33] * SIG[33] / (wt[33]);
  acentric_i[33] = 0.0;

  // species 34: C5H5
  Tci[34] = 1.316 * EPS[34];
  ai[34] = (5.55 * avogadro * avogadro * EPS[34] * boltzmann * 1e-24 * SIG[34] *
            SIG[34] * SIG[34]) /
           (wt[34] * wt[34]);
  bi[34] = 0.855 * avogadro * 1e-24 * SIG[34] * SIG[34] * SIG[34] / (wt[34]);
  acentric_i[34] = 0.0;

  // species 35: C6H5
  Tci[35] = 1.316 * EPS[35];
  ai[35] = (5.55 * avogadro * avogadro * EPS[35] * boltzmann * 1e-24 * SIG[35] *
            SIG[35] * SIG[35]) /
           (wt[35] * wt[35]);
  bi[35] = 0.855 * avogadro * 1e-24 * SIG[35] * SIG[35] * SIG[35] / (wt[35]);
  acentric_i[35] = 0.0;

  // species 36: C6H5CH2
  Tci[36] = 1.316 * EPS[36];
  ai[36] = (5.55 * avogadro * avogadro * EPS[36] * boltzmann * 1e-24 * SIG[36] *
            SIG[36] * SIG[36]) /
           (wt[36] * wt[36]);
  bi[36] = 0.855 * avogadro * 1e-24 * SIG[36] * SIG[36] * SIG[36] / (wt[36]);
  acentric_i[36] = 0.0;

  // species 37: C6H5O
  Tci[37] = 1.316 * EPS[37];
  ai[37] = (5.55 * avogadro * avogadro * EPS[37] * boltzmann * 1e-24 * SIG[37] *
            SIG[37] * SIG[37]) /
           (wt[37] * wt[37]);
  bi[37] = 0.855 * avogadro * 1e-24 * SIG[37] * SIG[37] * SIG[37] / (wt[37]);
  acentric_i[37] = 0.0;

  // species 38: C6H5CO
  Tci[38] = 1.316 * EPS[38];
  ai[38] = (5.55 * avogadro * avogadro * EPS[38] * boltzmann * 1e-24 * SIG[38] *
            SIG[38] * SIG[38]) /
           (wt[38] * wt[38]);
  bi[38] = 0.855 * avogadro * 1e-24 * SIG[38] * SIG[38] * SIG[38] / (wt[38]);
  acentric_i[38] = 0.0;

  // species 39: C6H5CHO
  Tci[39] = 1.316 * EPS[39];
  ai[39] = (5.55 * avogadro * avogadro * EPS[39] * boltzmann * 1e-24 * SIG[39] *
            SIG[39] * SIG[39]) /
           (wt[39] * wt[39]);
  bi[39] = 0.855 * avogadro * 1e-24 * SIG[39] * SIG[39] * SIG[39] / (wt[39]);
  acentric_i[39] = 0.0;

  // species 40: N2
  // Imported from NIST
  Tci[40] = 126.192000;
  ai[40] = 1e6 * 0.42748 * Rcst * Rcst * Tci[40] * Tci[40] /
           (28.013400 * 28.013400 * 33.958000);
  bi[40] = 0.08664 * Rcst * Tci[40] / (28.013400 * 33.958000);
  acentric_i[40] = 0.037200;
}

// compute the critical parameter quantities for each species for SRK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_CRITPARAMS_SRK(
  amrex::Real* sqrtOneOverTc,
  amrex::Real* sqrtAsti,
  amrex::Real* Bi,
  amrex::Real* Fomega)
{

  // species 0: POSF10325
  // Computed from Lennard-Jones
  sqrtOneOverTc[0] = 6.5402682478301e-02;
  sqrtAsti[0] = 4.2865154585193e+04;
  Bi[0] = 2.9570027693584e+00;
  Fomega[0] = 4.8508000000000e-01;

  // species 1: C2H4
  // Imported from NIST
  sqrtOneOverTc[1] = 5.9513267432530e-02;
  sqrtAsti[1] = 7.7056842134487e+04;
  Bi[1] = 1.4381805192666e+00;
  Fomega[1] = 6.1893034120300e-01;

  // species 2: CH4
  // Imported from NIST
  sqrtOneOverTc[2] = 7.2440948474968e-02;
  sqrtAsti[2] = 9.5215046085708e+04;
  Bi[2] = 1.8605203320660e+00;
  Fomega[2] = 5.0213035482700e-01;

  // species 3: C3H6
  // Computed from Lennard-Jones
  sqrtOneOverTc[3] = 5.3367780663448e-02;
  sqrtAsti[3] = 7.1953475180922e+04;
  Bi[3] = 1.5130114815887e+00;
  Fomega[3] = 4.8508000000000e-01;

  // species 4: iC4H8
  // Computed from Lennard-Jones
  sqrtOneOverTc[4] = 4.6135788482041e-02;
  sqrtAsti[4] = 6.6105873722398e+04;
  Bi[4] = 1.2725507770503e+00;
  Fomega[4] = 4.8508000000000e-01;

  // species 5: C4H81
  // Computed from Lennard-Jones
  sqrtOneOverTc[5] = 4.6135788482041e-02;
  sqrtAsti[5] = 6.6105873722398e+04;
  Bi[5] = 1.2725507770503e+00;
  Fomega[5] = 4.8508000000000e-01;

  // species 6: H2
  // Imported from NIST
  sqrtOneOverTc[6] = 1.7369646834812e-01;
  sqrtAsti[6] = 2.4824229305911e+05;
  Bi[6] = 9.1362254169923e+00;
  Fomega[6] = 1.3798618890700e-01;

  // species 7: C2H6
  // Imported from NIST
  sqrtOneOverTc[7] = 5.7229819101749e-02;
  sqrtAsti[7] = 7.9078494187583e+04;
  Bi[7] = 1.5012924285481e+00;
  Fomega[7] = 6.3721234098700e-01;

  // species 8: CO
  // Imported from NIST
  sqrtOneOverTc[8] = 8.6759935530451e-02;
  sqrtAsti[8] = 4.3619324712923e+04;
  Bi[8] = 9.7786303823350e-01;
  Fomega[8] = 5.5459948367500e-01;

  // species 9: C6H6
  // Computed from Lennard-Jones
  sqrtOneOverTc[9] = 4.0433282083300e-02;
  sqrtAsti[9] = 5.5979242684102e+04;
  Bi[9] = 9.7578748676763e-01;
  Fomega[9] = 4.8508000000000e-01;

  // species 10: C2H2
  // Imported from NIST
  sqrtOneOverTc[10] = 5.6952558345025e-02;
  sqrtAsti[10] = 8.2318059295808e+04;
  Bi[10] = 1.3950602011188e+00;
  Fomega[10] = 7.7293553202700e-01;

  // species 11: C6H5CH3
  // Computed from Lennard-Jones
  sqrtOneOverTc[11] = 3.9168585794863e-02;
  sqrtAsti[11] = 5.4505844727925e+04;
  Bi[11] = 1.0240217749472e+00;
  Fomega[11] = 4.8508000000000e-01;

  // species 12: CH3
  // Computed from Lennard-Jones
  sqrtOneOverTc[12] = 7.2642504557751e-02;
  sqrtAsti[12] = 9.8558148656101e+04;
  Bi[12] = 1.8791630452967e+00;
  Fomega[12] = 4.8508000000000e-01;

  // species 13: O2
  // Imported from NIST
  sqrtOneOverTc[13] = 8.0430717653241e-02;
  sqrtAsti[13] = 3.6980081924740e+04;
  Bi[13] = 6.9005216444999e-01;
  Fomega[13] = 5.1945301904908e-01;

  // species 14: O
  // Computed from Lennard-Jones
  sqrtOneOverTc[14] = 9.7460146948181e-02;
  sqrtAsti[14] = 4.2500156012386e+04;
  Bi[14] = 6.6930234851885e-01;
  Fomega[14] = 4.8508000000000e-01;

  // species 15: OH
  // Computed from Lennard-Jones
  sqrtOneOverTc[15] = 9.7460146948181e-02;
  sqrtAsti[15] = 3.9981183985545e+04;
  Bi[15] = 6.2963299076575e-01;
  Fomega[15] = 4.8508000000000e-01;

  // species 16: HO2
  // Computed from Lennard-Jones
  sqrtOneOverTc[16] = 8.4114315417892e-02;
  sqrtAsti[16] = 3.3657825710980e+04;
  Bi[16] = 6.4505861132042e-01;
  Fomega[16] = 4.8508000000000e-01;

  // species 17: H2O
  // Imported from NIST
  sqrtOneOverTc[17] = 3.9311140369715e-02;
  sqrtAsti[17] = 1.3145468419592e+05;
  Bi[17] = 1.1727204136223e+00;
  Fomega[17] = 1.0013577274636e+00;

  // species 18: H2O2
  // Computed from Lennard-Jones
  sqrtOneOverTc[18] = 8.4114315417892e-02;
  sqrtAsti[18] = 3.2660380884830e+04;
  Bi[18] = 6.2594239211036e-01;
  Fomega[18] = 4.8508000000000e-01;

  // species 19: H
  // Computed from Lennard-Jones
  sqrtOneOverTc[19] = 7.2391579785311e-02;
  sqrtAsti[19] = 5.8451221185793e+05;
  Bi[19] = 4.4006634563410e+00;
  Fomega[19] = 4.8508000000000e-01;

  // species 20: CH2
  // Computed from Lennard-Jones
  sqrtOneOverTc[20] = 7.2642504557751e-02;
  sqrtAsti[20] = 1.0564067619908e+05;
  Bi[20] = 2.0142023516102e+00;
  Fomega[20] = 4.8508000000000e-01;

  // species 21: CH2*
  // Computed from Lennard-Jones
  sqrtOneOverTc[21] = 7.2642504557751e-02;
  sqrtAsti[21] = 1.0564067619908e+05;
  Bi[21] = 2.0142023516102e+00;
  Fomega[21] = 4.8508000000000e-01;

  // species 22: HCO
  // Computed from Lennard-Jones
  sqrtOneOverTc[22] = 3.9062261583604e-02;
  sqrtAsti[22] = 8.7202351509582e+04;
  Bi[22] = 8.2098075206475e-01;
  Fomega[22] = 4.8508000000000e-01;

  // species 23: CH2O
  // Computed from Lennard-Jones
  sqrtOneOverTc[23] = 3.9062261583604e-02;
  sqrtAsti[23] = 8.4274889632487e+04;
  Bi[23] = 7.9341968505345e-01;
  Fomega[23] = 4.8508000000000e-01;

  // species 24: CH3O
  // Computed from Lennard-Jones
  sqrtOneOverTc[24] = 4.2687825036676e-02;
  sqrtAsti[24] = 7.7751566794340e+04;
  Bi[24] = 8.3360142526260e-01;
  Fomega[24] = 4.8508000000000e-01;

  // species 25: CO2
  // Imported from NIST
  sqrtOneOverTc[25] = 5.7342616962522e-02;
  sqrtAsti[25] = 4.3745610142919e+04;
  Bi[25] = 6.7506167841745e-01;
  Fomega[25] = 8.2653709187500e-01;

  // species 26: C2H3
  // Computed from Lennard-Jones
  sqrtOneOverTc[26] = 6.0297445312864e-02;
  sqrtAsti[26] = 7.3975040719223e+04;
  Bi[26] = 1.3120960627055e+00;
  Fomega[26] = 4.8508000000000e-01;

  // species 27: C2H5
  // Computed from Lennard-Jones
  sqrtOneOverTc[27] = 5.4879915006830e-02;
  sqrtAsti[27] = 8.1297663542693e+04;
  Bi[27] = 1.4105965766665e+00;
  Fomega[27] = 4.8508000000000e-01;

  // species 28: HCCO
  // Computed from Lennard-Jones
  sqrtOneOverTc[28] = 7.1174827921716e-02;
  sqrtAsti[28] = 1.9669985462832e+04;
  Bi[28] = 1.9608582502049e-01;
  Fomega[28] = 4.8508000000000e-01;

  // species 29: CH2CO
  // Computed from Lennard-Jones
  sqrtOneOverTc[29] = 4.1747340173827e-02;
  sqrtAsti[29] = 6.5499293944176e+04;
  Bi[29] = 7.6640249759188e-01;
  Fomega[29] = 4.8508000000000e-01;

  // species 30: CH2CHO
  // Computed from Lennard-Jones
  sqrtOneOverTc[30] = 4.1747340173827e-02;
  sqrtAsti[30] = 6.3965473795593e+04;
  Bi[30] = 7.4845537905146e-01;
  Fomega[30] = 4.8508000000000e-01;

  // species 31: C3H3
  // Computed from Lennard-Jones
  sqrtOneOverTc[31] = 5.4912571906481e-02;
  sqrtAsti[31] = 7.0364101467487e+04;
  Bi[31] = 1.4218018738211e+00;
  Fomega[31] = 4.8508000000000e-01;

  // species 32: aC3H5
  // Computed from Lennard-Jones
  sqrtOneOverTc[32] = 5.3367780663448e-02;
  sqrtAsti[32] = 7.3719333603301e+04;
  Bi[32] = 1.5501433096373e+00;
  Fomega[32] = 4.8508000000000e-01;

  // species 33: C5H4O
  // Computed from Lennard-Jones
  sqrtOneOverTc[33] = 4.0433282083300e-02;
  sqrtAsti[33] = 5.4600836138975e+04;
  Bi[33] = 9.5176015460089e-01;
  Fomega[33] = 4.8508000000000e-01;

  // species 34: C5H5
  // Computed from Lennard-Jones
  sqrtOneOverTc[34] = 4.6135788482041e-02;
  sqrtAsti[34] = 5.7045375707276e+04;
  Bi[34] = 1.0994076477915e+00;
  Fomega[34] = 4.8508000000000e-01;

  // species 35: C6H5
  // Computed from Lennard-Jones
  sqrtOneOverTc[35] = 4.0433282083300e-02;
  sqrtAsti[35] = 5.6711054431898e+04;
  Bi[35] = 9.8854387131179e-01;
  Fomega[35] = 4.8508000000000e-01;

  // species 36: C6H5CH2
  // Computed from Lennard-Jones
  sqrtOneOverTc[36] = 3.9168585794863e-02;
  sqrtAsti[36] = 5.5108720650870e+04;
  Bi[36] = 1.0353482313257e+00;
  Fomega[36] = 4.8508000000000e-01;

  // species 37: C6H5O
  // Computed from Lennard-Jones
  sqrtOneOverTc[37] = 4.0433282083300e-02;
  sqrtAsti[37] = 4.6965926244841e+04;
  Bi[37] = 8.1867422524426e-01;
  Fomega[37] = 4.8508000000000e-01;

  // species 38: C6H5CO
  // Computed from Lennard-Jones
  sqrtOneOverTc[38] = 3.5796841491917e-02;
  sqrtAsti[38] = 4.9812906535387e+04;
  Bi[38] = 8.1496010304449e-01;
  Fomega[38] = 4.8508000000000e-01;

  // species 39: C6H5CHO
  // Computed from Lennard-Jones
  sqrtOneOverTc[39] = 3.5796841491917e-02;
  sqrtAsti[39] = 4.8936629453525e+04;
  Bi[39] = 7.9408222342350e-01;
  Fomega[39] = 4.8508000000000e-01;

  // species 40: N2
  // Imported from NIST
  sqrtOneOverTc[40] = 8.9019282240563e-02;
  sqrtAsti[40] = 4.2022983929562e+04;
  Bi[40] = 9.5560052221563e-01;
  Fomega[40] = 5.4259343186608e-01;
}

// gauss-jordan solver external routine
// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort("sgjsolve not implemented, choose a different solver ");
}

// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve_simplified(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort(
    "sgjsolve_simplified not implemented, choose a different solver ");
}

#endif
